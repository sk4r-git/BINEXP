# 22 "src/parser/lexer.mll"
 
open Parser

let keywords = [
  "as"            , AS;
  "modu"          , MODU;
  "mods"          , MODS;
  "and"           , AND ;
  "or"            , OR  ;
  "xor"           , XOR ;
  "not"           , NOT ;
  "lshift"        , LSHIFT  ;
  "rshiftu"       , RSHIFTU ;
  "rshifts"       , RSHIFTS ;
  "lrotate"       , LROTATE ;
  "rrotate"       , RROTATE ;
  "goto"          , GOTO ;
  "extu"          , EXTU ;
  "exts"          , EXTS ;
  "call"          , CALLFLAG ;
  "ret"           , RETURNFLAG ;
  "true"          , TRUE ;
  "false"         , FALSE ;
  "if"            , IF ;
  "else"          , ELSE ;
  "then"          , THEN ;
  "stop"          , STOP ;
  "assert"        , ASSERT ;
  "assume"        , ASSUME ;
  "nondet"        , NONDET ;
  "var"           , VAR;
  "from"          , FROM;
  "file"          , FILE;
  "from_file"     , FROMFILE;
  (* "big"           , BIG ; *)
  (* "little"        , LITTLE; *)
  "flag"          , FLAG;
  "temporary"     , TEMPORARY;
  "register"      , REGISTER;
  "entry_point"   , ENTRYPOINT;
  (* "endianness"    , ENDIANNESS; *)
  "unimplemented" , UNIMPLEMENTED;
  "undefined"     , UNDEFINED;
  "cut"           , CUT;
  "enum"          , ENUMERATE;
  "enumerate"     , ENUMERATE;
  "reach"         , REACH;
  "alternative"   , ALTERNATIVE;
  "consequent"    , CONSEQUENT;
  "alternate"     , ALTERNATE;
  "uncontrolled"  , UNCONTROLLED;
  "min"           , MIN;
  "max"           , MAX;
  "BSwp"          , BSWAP;
]

let keyword_tbl =
  let h = Hashtbl.create (List.length keywords) in
  List.iter (fun (k, v) -> Hashtbl.add h k v) keywords;
  h

let kwd_or_ident name =
  match Hashtbl.find keyword_tbl name with
  | terminal -> terminal
  | exception Not_found -> IDENT name


# 70 "src/parser/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\195\255\196\255\197\255\001\000\007\000\078\000\088\000\
    \026\000\163\000\221\000\112\000\048\001\123\001\046\000\211\255\
    \213\255\058\000\024\000\103\000\224\255\035\000\228\255\229\255\
    \230\255\231\255\232\255\242\255\243\255\093\000\108\000\027\001\
    \109\000\040\000\096\000\254\255\255\255\221\255\250\255\251\255\
    \216\255\248\255\249\255\233\255\234\255\044\000\045\000\246\255\
    \247\255\235\255\236\255\088\000\096\000\220\255\237\255\238\255\
    \056\000\241\255\245\255\239\255\240\255\089\000\087\000\110\000\
    \210\255\110\000\105\000\115\000\209\255\212\255\219\255\225\255\
    \226\255\222\255\215\255\214\255\069\000\070\000\065\000\068\000\
    \062\000\089\000\073\000\076\000\083\000\079\000\074\000\208\255\
    \091\000\092\000\092\000\205\255\198\001\017\002\204\255\077\001\
    \152\001\088\002\147\000\092\002\157\000\163\002\186\002\161\000\
    \217\000";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\060\000\057\000\056\000\056\000\
    \060\000\052\000\060\000\060\000\052\000\052\000\060\000\255\255\
    \255\255\041\000\040\000\032\000\255\255\028\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\011\000\037\000\038\000\
    \006\000\003\000\002\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\019\000\008\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\048\000\049\000\255\255\255\255\
    \255\255\255\255\255\255\053\000\255\255\255\255\054\000\055\000\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\104\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\096\000\255\255\255\255\255\255\000\000\
    \000\000\255\255\255\255\255\255\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\096\000\
    \096\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \104\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\003\000\003\000\000\000\005\000\000\000\000\000\
    \005\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\015\000\011\000\004\000\000\000\008\000\017\000\005\000\
    \024\000\023\000\033\000\035\000\020\000\034\000\019\000\032\000\
    \007\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\029\000\028\000\030\000\027\000\031\000\098\000\
    \036\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\012\000\009\000\009\000\009\000\013\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\022\000\014\000\021\000\016\000\010\000\
    \075\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\026\000\018\000\025\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\094\000\077\000\074\000\073\000\072\000\069\000\
    \071\000\053\000\070\000\038\000\040\000\039\000\037\000\049\000\
    \047\000\050\000\048\000\076\000\065\000\061\000\062\000\063\000\
    \058\000\056\000\057\000\059\000\064\000\060\000\095\000\066\000\
    \067\000\068\000\051\000\088\000\078\000\079\000\080\000\081\000\
    \082\000\083\000\100\000\084\000\085\000\086\000\087\000\089\000\
    \052\000\090\000\091\000\099\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\103\000\103\000\000\000\
    \101\000\103\000\103\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\000\000\000\000\054\000\
    \041\000\055\000\042\000\003\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\000\000\000\000\
    \002\000\255\255\009\000\000\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \000\000\000\000\000\000\000\000\097\000\000\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \045\000\046\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\093\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\255\255\000\000\000\000\043\000\009\000\
    \044\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\000\000\000\000\000\000\
    \000\000\000\000\094\000\000\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\092\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\095\000\000\000\
    \000\000\255\255\009\000\000\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\000\000\000\000\000\000\000\000\009\000\000\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\000\000\000\000\000\000\000\000\
    \009\000\000\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\000\000\000\000\
    \255\255\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\000\000\000\000\000\000\000\000\097\000\
    \000\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\000\000\000\000\000\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\004\000\255\255\000\000\255\255\255\255\
    \005\000\255\255\255\255\255\255\005\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\008\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\011\000\014\000\018\000\019\000\021\000\029\000\
    \021\000\030\000\029\000\033\000\032\000\033\000\034\000\045\000\
    \046\000\045\000\046\000\014\000\051\000\052\000\061\000\062\000\
    \030\000\030\000\030\000\056\000\063\000\056\000\011\000\065\000\
    \066\000\067\000\030\000\076\000\077\000\078\000\079\000\080\000\
    \081\000\082\000\007\000\083\000\084\000\085\000\086\000\088\000\
    \030\000\089\000\090\000\098\000\098\000\098\000\098\000\098\000\
    \098\000\098\000\098\000\098\000\098\000\100\000\100\000\255\255\
    \007\000\103\000\103\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\255\255\255\255\030\000\
    \032\000\030\000\032\000\104\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\255\255\255\255\
    \000\000\004\000\009\000\255\255\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \255\255\255\255\255\255\255\255\010\000\255\255\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \031\000\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\255\255\255\255\255\255\255\255\255\255\095\000\
    \011\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\095\000\255\255\255\255\031\000\012\000\
    \031\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\255\255\255\255\255\255\
    \255\255\255\255\096\000\255\255\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\096\000\255\255\
    \255\255\104\000\013\000\255\255\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\255\255\255\255\255\255\255\255\092\000\255\255\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\255\255\255\255\095\000\255\255\255\255\
    \255\255\255\255\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\255\255\255\255\255\255\255\255\
    \093\000\255\255\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\255\255\255\255\
    \096\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\255\255\255\255\255\255\255\255\097\000\
    \255\255\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\101\000\101\000\101\000\101\000\101\000\
    \101\000\101\000\101\000\101\000\101\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\101\000\101\000\101\000\101\000\
    \101\000\101\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\102\000\102\000\102\000\102\000\102\000\
    \102\000\255\255\255\255\255\255\101\000\101\000\101\000\101\000\
    \101\000\101\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\102\000\102\000\102\000\102\000\102\000\
    \102\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 99 "src/parser/lexer.mll"
                    ( AT )
# 380 "src/parser/lexer.ml"

  | 1 ->
# 100 "src/parser/lexer.mll"
                    ( PLUS )
# 385 "src/parser/lexer.ml"

  | 2 ->
# 101 "src/parser/lexer.mll"
                    ( MINUS )
# 390 "src/parser/lexer.ml"

  | 3 ->
# 102 "src/parser/lexer.mll"
                    ( STAR )
# 395 "src/parser/lexer.ml"

  | 4 ->
# 103 "src/parser/lexer.mll"
                        ( STAR_U )
# 400 "src/parser/lexer.ml"

  | 5 ->
# 104 "src/parser/lexer.mll"
                    ( STAR_S )
# 405 "src/parser/lexer.ml"

  | 6 ->
# 105 "src/parser/lexer.mll"
                       ( SLASH_U )
# 410 "src/parser/lexer.ml"

  | 7 ->
# 106 "src/parser/lexer.mll"
                    ( SLASH_S )
# 415 "src/parser/lexer.ml"

  | 8 ->
# 108 "src/parser/lexer.mll"
                        ( RSHIFTU )
# 420 "src/parser/lexer.ml"

  | 9 ->
# 109 "src/parser/lexer.mll"
                    ( RSHIFTS )
# 425 "src/parser/lexer.ml"

  | 10 ->
# 110 "src/parser/lexer.mll"
                    ( LSHIFT )
# 430 "src/parser/lexer.ml"

  | 11 ->
# 111 "src/parser/lexer.mll"
                    ( COLON )
# 435 "src/parser/lexer.ml"

  | 12 ->
# 112 "src/parser/lexer.mll"
                    ( SEMICOLON )
# 440 "src/parser/lexer.ml"

  | 13 ->
# 113 "src/parser/lexer.mll"
                    ( EQUAL )
# 445 "src/parser/lexer.ml"

  | 14 ->
# 114 "src/parser/lexer.mll"
                    ( NEQ )
# 450 "src/parser/lexer.ml"

  | 15 ->
# 115 "src/parser/lexer.mll"
                        ( LEU )
# 455 "src/parser/lexer.ml"

  | 16 ->
# 116 "src/parser/lexer.mll"
                    ( LES )
# 460 "src/parser/lexer.ml"

  | 17 ->
# 117 "src/parser/lexer.mll"
                    ( LTU )
# 465 "src/parser/lexer.ml"

  | 18 ->
# 118 "src/parser/lexer.mll"
                    ( LTS )
# 470 "src/parser/lexer.ml"

  | 19 ->
# 119 "src/parser/lexer.mll"
                        ( GEU )
# 475 "src/parser/lexer.ml"

  | 20 ->
# 120 "src/parser/lexer.mll"
                    ( GES )
# 480 "src/parser/lexer.ml"

  | 21 ->
# 121 "src/parser/lexer.mll"
                    ( GTU )
# 485 "src/parser/lexer.ml"

  | 22 ->
# 122 "src/parser/lexer.mll"
                    ( GTS )
# 490 "src/parser/lexer.ml"

  | 23 ->
# 123 "src/parser/lexer.mll"
                    ( LBRACE )
# 495 "src/parser/lexer.ml"

  | 24 ->
# 124 "src/parser/lexer.mll"
                    ( RBRACE )
# 500 "src/parser/lexer.ml"

  | 25 ->
# 125 "src/parser/lexer.mll"
                    ( LPAR )
# 505 "src/parser/lexer.ml"

  | 26 ->
# 126 "src/parser/lexer.mll"
                    ( RPAR )
# 510 "src/parser/lexer.ml"

  | 27 ->
# 127 "src/parser/lexer.mll"
                    ( LBRACKET )
# 515 "src/parser/lexer.ml"

  | 28 ->
# 128 "src/parser/lexer.mll"
                    ( RBRACKET )
# 520 "src/parser/lexer.ml"

  | 29 ->
# 129 "src/parser/lexer.mll"
                    ( RBRACKETS )
# 525 "src/parser/lexer.ml"

  | 30 ->
# 130 "src/parser/lexer.mll"
                    ( RBRACKETU )
# 530 "src/parser/lexer.ml"

  | 31 ->
# 131 "src/parser/lexer.mll"
                    ( COMMA )
# 535 "src/parser/lexer.ml"

  | 32 ->
# 132 "src/parser/lexer.mll"
                    ( DOT )
# 540 "src/parser/lexer.ml"

  | 33 ->
# 133 "src/parser/lexer.mll"
                    ( DOTDOT )
# 545 "src/parser/lexer.ml"

  | 34 ->
# 134 "src/parser/lexer.mll"
                    ( ARROW )
# 550 "src/parser/lexer.ml"

  | 35 ->
# 135 "src/parser/lexer.mll"
                    ( ARROWINV )
# 555 "src/parser/lexer.ml"

  | 36 ->
# 136 "src/parser/lexer.mll"
                    ( ASSIGN )
# 560 "src/parser/lexer.ml"

  | 37 ->
# 137 "src/parser/lexer.mll"
                    ( INFER )
# 565 "src/parser/lexer.ml"

  | 38 ->
# 138 "src/parser/lexer.mll"
                    ( SUPER )
# 570 "src/parser/lexer.ml"

  | 39 ->
# 139 "src/parser/lexer.mll"
                    ( ANNOT )
# 575 "src/parser/lexer.ml"

  | 40 ->
# 141 "src/parser/lexer.mll"
                    ( OR )
# 580 "src/parser/lexer.ml"

  | 41 ->
# 143 "src/parser/lexer.mll"
                    ( AND )
# 585 "src/parser/lexer.ml"

  | 42 ->
# 144 "src/parser/lexer.mll"
                    ( XOR )
# 590 "src/parser/lexer.ml"

  | 43 ->
# 145 "src/parser/lexer.mll"
                     ( CONCAT )
# 595 "src/parser/lexer.ml"

  | 44 ->
# 146 "src/parser/lexer.mll"
                    ( NOT )
# 600 "src/parser/lexer.ml"

  | 45 ->
# 147 "src/parser/lexer.mll"
                    ( TEMPTAG )
# 605 "src/parser/lexer.ml"

  | 46 ->
# 148 "src/parser/lexer.mll"
                    ( FLAGTAG )
# 610 "src/parser/lexer.ml"

  | 47 ->
# 149 "src/parser/lexer.mll"
                    ( ENTRYPOINT )
# 615 "src/parser/lexer.ml"

  | 48 ->
# 151 "src/parser/lexer.mll"
                    ( SOK )
# 620 "src/parser/lexer.ml"

  | 49 ->
# 152 "src/parser/lexer.mll"
                    ( SKO )
# 625 "src/parser/lexer.ml"

  | 50 ->
# 153 "src/parser/lexer.mll"
                    ( UNDEF )
# 630 "src/parser/lexer.ml"

  | 51 ->
let
# 154 "src/parser/lexer.mll"
                                       st
# 636 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 155 "src/parser/lexer.mll"
                    ( STRING st )
# 640 "src/parser/lexer.ml"

  | 52 ->
let
# 156 "src/parser/lexer.mll"
             s
# 646 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 156 "src/parser/lexer.mll"
                    ( kwd_or_ident s )
# 650 "src/parser/lexer.ml"

  | 53 ->
let
# 157 "src/parser/lexer.mll"
                      s
# 656 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 157 "src/parser/lexer.mll"
                        ( TMP s )
# 660 "src/parser/lexer.ml"

  | 54 ->
let
# 158 "src/parser/lexer.mll"
           s
# 666 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 158 "src/parser/lexer.mll"
                    ( HEXA s )
# 670 "src/parser/lexer.ml"

  | 55 ->
let
# 159 "src/parser/lexer.mll"
           s
# 676 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 159 "src/parser/lexer.mll"
                    ( BIN s )
# 680 "src/parser/lexer.ml"

  | 56 ->
let
# 160 "src/parser/lexer.mll"
              s
# 686 "src/parser/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 160 "src/parser/lexer.mll"
                    ( INT s )
# 690 "src/parser/lexer.ml"

  | 57 ->
# 161 "src/parser/lexer.mll"
                    ( token lexbuf )
# 695 "src/parser/lexer.ml"

  | 58 ->
# 163 "src/parser/lexer.mll"
                    ( Lexing.new_line lexbuf; token lexbuf )
# 700 "src/parser/lexer.ml"

  | 59 ->
# 164 "src/parser/lexer.mll"
                    ( EOF )
# 705 "src/parser/lexer.ml"

  | 60 ->
# 166 "src/parser/lexer.mll"
      (
        let open Lexing in
        let line = (lexeme_start_p lexbuf).pos_lnum in
        let msg =
          Format.asprintf "Unkown lexeme %s at line %d" (lexeme lexbuf) line in
        failwith msg )
# 715 "src/parser/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

