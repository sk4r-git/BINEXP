target is malloc
no problem to load ghidra
sinks are rien pour l'instant

entry point = 0x3590
nb_ver = 10275 and nb_edges = 11660
0x10c000 -> jnz 0x0010c042
0x10a001 -> mov rdi,rax
0x104001 -> add rax,rdx
0x10c002 -> cmp qword ptr [rbp + -0x78],0x0
0x106002 -> add rax,rdx
0x10a004 -> call 0x0010d6ce
0x108004 -> mov edx,0x180
0x104004 -> movzx eax,byte ptr [rax]
0x106005 -> mov rdx,qword ptr [rax + 0x8]
0x10c007 -> jz 0x0010c014
0x104007 -> mov byte ptr [rbp + -0x1b5],al
0x10c009 -> mov rax,qword ptr [rbp + -0x78]
0x10a009 -> mov rdx,rax
0x108009 -> mov esi,0x242
0x106009 -> mov rax,qword ptr [rax]
0x10a00c -> mov rax,qword ptr [rbp + -0x20]
0x10600c -> mov qword ptr [rbp + -0x20],rax
0x10c00d -> mov eax,dword ptr [rax + 0x8]
0x10400d -> cmp byte ptr [rbp + -0x1b5],0x6b
0x10800e -> mov rdi,rax
0x10c010 -> test eax,eax
0x10a010 -> mov qword ptr [rax + 0x10],rdx
0x106010 -> mov qword ptr [rbp + -0x18],rdx
0x108011 -> mov eax,0x0
0x10c012 -> jnz 0x0010c042
0x10c014 -> mov rax,qword ptr [rbp + -0x80]
0x10a014 -> mov rax,qword ptr [rbp + -0x20]
0x106014 -> mov rax,qword ptr [rbp + -0x18]
0x104014 -> jz 0x00104031
0x108016 -> call open64
0x104016 -> cmp byte ptr [rbp + -0x1b5],0x4b
0x10c018 -> test rax,rax
0x10a018 -> mov eax,dword ptr [rax + 0x4]
0x106018 -> cmp qword ptr [rbp + -0x50],rax
0x10c01b -> jz 0x0010c038
0x10a01b -> mov edi,eax
0x10801b -> mov edx,eax
0x10601c -> jle 0x00106029
0x10c01d -> lea rdx,[0x10f428]
0x10a01d -> call ntohl
0x10801d -> mov rax,qword ptr [rbp + -0x28]
0x10401d -> jz 0x00104031
0x10601e -> mov eax,dword ptr [rbp + -0x2c]
0x10401f -> cmp byte ptr [rbp + -0x1b5],0x6d
0x108021 -> mov dword ptr [rax + 0xf0],edx
0x106021 -> add eax,0x1
0x10a022 -> mov edx,eax
0x10c024 -> mov esi,0x20
0x10a024 -> mov rax,qword ptr [rbp + -0x20]
0x106024 -> mov dword ptr [rbp + -0x34],eax
0x104026 -> jz 0x00104031
0x108027 -> mov rax,qword ptr [rbp + -0x28]
0x106027 -> jmp 0x0010604c
0x10a028 -> mov dword ptr [rax + 0x4],edx
0x104028 -> cmp byte ptr [rbp + -0x1b5],0x4d
0x10c029 -> mov edi,0x0
0x106029 -> mov rax,qword ptr [rbp + -0x18]
0x10a02b -> mov rax,qword ptr [rbp + -0x20]
0x10802b -> mov eax,dword ptr [rax + 0xf0]
0x10602d -> cmp qword ptr [rbp + -0x50],rax
0x10c02e -> mov eax,0x0
0x10a02f -> mov eax,dword ptr [rax + 0x18]
0x10402f -> jnz 0x00104045
0x108031 -> test eax,eax
0x106031 -> jge 0x0010603e
0x104031 -> mov rdx,qword ptr [0x003111a0]
0x10a032 -> mov edi,eax
0x10c033 -> call g_log
0x108033 -> jns 0x00108041
0x106033 -> mov eax,dword ptr [rbp + -0x2c]
0x10a034 -> call ntohl
0x108035 -> lea rdi,[0x10e830]
0x106036 -> sub eax,0x1
0x10c038 -> mov edi,0x1
0x104038 -> mov rax,qword ptr [rbp + -0x188]
0x10a039 -> mov edx,eax
0x106039 -> mov dword ptr [rbp + -0x30],eax
0x10a03b -> mov rax,qword ptr [rbp + -0x20]
0x10803c -> call 0x0010d638
0x10603c -> jmp 0x0010604c
0x10c03d -> call exit
0x10603e -> mov eax,dword ptr [rbp + -0x2c]
0x10a03f -> mov dword ptr [rax + 0x18],edx
0x10403f -> add rax,rdx
0x108041 -> mov rax,qword ptr [rbp + -0x28]
0x106041 -> mov dword ptr [rbp + -0x30],eax
0x10c042 -> mov eax,dword ptr [0x003111e4]
0x10a042 -> mov rax,qword ptr [rbp + -0x20]
0x104042 -> mov byte ptr [rax],0x0
0x106044 -> mov eax,dword ptr [rbp + -0x30]
0x108045 -> mov rax,qword ptr [rax]
0x104045 -> mov rax,qword ptr [0x003111a0]
0x10a046 -> mov ebx,dword ptr [rax]
0x106047 -> mov dword ptr [rbp + -0x34],eax
0x10c048 -> test eax,eax
0x10a048 -> mov edi,0x25609513
0x108048 -> shr rax,0xc
0x10c04a -> jnz 0x0010c056
0x10604a -> jmp 0x00106054
0x10c04c -> mov eax,0x0
0x10804c -> mov esi,0x4
0x10604c -> mov eax,dword ptr [rbp + -0x34]
0x10404c -> mov rdi,rax
0x10a04d -> call htonl
0x10604f -> cmp eax,dword ptr [rbp + -0x30]
0x10404f -> call atoll
0x10c051 -> call 0x0010bbf7
0x108051 -> mov rdi,rax
0x10a052 -> cmp ebx,eax
0x106052 -> jle 0x00105fdd
0x10a054 -> jz 0x0010a062
0x108054 -> call calloc
0x106054 -> cmp dword ptr [rbp + -0x30],0x0
0x104054 -> mov qword ptr [rbp + -0x1a0],rax
0x10c056 -> mov eax,dword ptr [rbp + -0x24]
0x10a056 -> lea rdi,[0x10ed60]
0x106058 -> jns 0x00106079
0x10c059 -> mov r8d,0x0
0x108059 -> mov rdx,rax
0x10605a -> lea rcx,[0x10f498]
0x10405b -> movsx eax,byte ptr [rbp + -0x1b5]
0x10805c -> mov rax,qword ptr [rbp + -0x28]
0x10a05d -> call 0x0010d638
0x10c05f -> mov ecx,0x0
0x108060 -> mov qword ptr [rax + 0xf8],rdx
0x106061 -> mov edx,0x484
0x10a062 -> mov rdx,qword ptr [rbp + -0x20]
0x104062 -> cmp eax,0x4d
0x10c064 -> mov edx,eax
0x104065 -> jz 0x0010407d
0x10c066 -> mov esi,0x0
0x10a066 -> mov rax,qword ptr [rbp + -0x28]
0x106066 -> lea rsi,[0x10d8f4]
0x108067 -> mov rax,qword ptr [rbp + -0x28]
0x104067 -> cmp eax,0x4d
0x10a06a -> mov rsi,rdx
0x10406a -> jg 0x00104073
0x10c06b -> lea rdi,[0x109c87]
0x10806b -> mov rax,qword ptr [rax + 0xf8]
0x10406c -> cmp eax,0x4b
0x10a06d -> mov rdi,rax
0x10606d -> lea rdi,[0x10e519]
0x10406f -> jz 0x00104085
0x10a070 -> call 0x0010948c
0x104071 -> jmp 0x0010408d
0x10c072 -> call g_thread_pool_new
0x108072 -> test rax,rax
0x104073 -> cmp eax,0x6b
0x106074 -> call __assert_fail
0x10a075 -> mov qword ptr [rbp + -0x18],rax
0x108075 -> jnz 0x00108083
0x104076 -> jz 0x00104085
0x10c077 -> mov qword ptr [0x00311388],rax
0x108077 -> lea rdi,[0x10e850]
0x104078 -> cmp eax,0x6d
0x10a079 -> mov rax,qword ptr [rbp + -0x20]
0x106079 -> mov rax,qword ptr [rbp + -0x28]
0x10407b -> jnz 0x0010408d
0x10a07d -> mov eax,dword ptr [rax + 0x4]
0x10607d -> mov rax,qword ptr [rax]
0x10407d -> shl qword ptr [rbp + -0x1a0],0xa
0x10c07e -> mov edi,dword ptr [rbp + -0x28]
0x10807e -> call 0x0010d638
0x10a080 -> movzx eax,ax
0x106080 -> mov edx,dword ptr [rbp + -0x30]
0x10c081 -> mov rcx,qword ptr [rbp + -0x50]
0x10a083 -> cmp eax,0x1
0x108083 -> mov qword ptr [rbp + -0x18],0x0
0x106083 -> movsxd rdx,edx
0x10c085 -> mov rdx,qword ptr [rbp + -0x58]
0x104085 -> shl qword ptr [rbp + -0x1a0],0xa
0x10a086 -> jnz 0x0010a11c
0x106086 -> shl rdx,0x4
0x10c089 -> mov rsi,qword ptr [rbp + -0x60]
0x10608a -> add rax,rdx
0x10808b -> jmp 0x001080ae
0x10a08c -> mov rax,qword ptr [rbp + -0x28]
0x10c08d -> mov rax,qword ptr [rbp + -0x78]
0x10808d -> mov rax,qword ptr [rbp + -0x28]
0x10608d -> mov rdx,qword ptr [rax + 0x8]
0x10408d -> mov rdx,qword ptr [rbp + -0x1a0]
0x10a090 -> mov rax,qword ptr [rax + 0xe0]
0x10c091 -> mov r8d,edi
0x108091 -> mov rax,qword ptr [rax + 0xf8]
0x106091 -> mov rax,qword ptr [rax]
0x10c094 -> mov rdi,rax
0x106094 -> mov qword ptr [rbp + -0x20],rax
0x104094 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c097 -> call 0x0010b901
0x10a097 -> mov eax,dword ptr [rax + 0x20]
0x108098 -> mov rdx,qword ptr [rbp + -0x18]
0x106098 -> mov qword ptr [rbp + -0x18],rdx
0x10a09a -> and eax,0x8000
0x10409b -> mov qword ptr [rax + 0x8],rdx
0x10c09c -> mov rdx,qword ptr [rbp + -0x68]
0x10809c -> shl rdx,0x2
0x10609c -> mov edx,dword ptr [rbp + -0x20]
0x10a09f -> test eax,eax
0x10609f -> mov rax,qword ptr [rbp + -0x58]
0x10409f -> jmp 0x001040a2
0x10c0a0 -> mov rax,qword ptr [rbp + -0x70]
0x1080a0 -> add rax,rdx
0x10a0a1 -> jz 0x0010a0fc
0x1040a1 -> nop
0x1040a2 -> jmp 0x00104206
0x10a0a3 -> mov rax,qword ptr [rbp + -0x20]
0x1080a3 -> mov dword ptr [rax],0xffffffff
0x1060a3 -> mov dword ptr [rax],edx
0x10c0a4 -> mov rsi,rdx
0x1060a5 -> mov rax,qword ptr [rbp + -0x18]
0x10c0a7 -> mov rdi,rax
0x10a0a7 -> mov eax,dword ptr [rax + 0x18]
0x1040a7 -> mov rax,qword ptr [rbp + -0x1a8]
0x1080a9 -> add qword ptr [rbp + -0x18],0x1
0x1060a9 -> mov rdx,qword ptr [rbp + -0x50]
0x10c0aa -> call 0x0010bcbb
0x10a0aa -> cmp eax,0x100000
0x1060ad -> sub rdx,rax
0x1080ae -> mov rax,qword ptr [rbp + -0x28]
0x1040ae -> mov eax,dword ptr [rax + 0x20]
0x10c0af -> mov rax,qword ptr [rbp + -0x58]
0x10a0af -> ja 0x0010a0fc
0x1060b0 -> mov rax,qword ptr [rbp + -0x60]
0x10a0b1 -> mov rax,qword ptr [rbp + -0x18]
0x1040b1 -> or eax,0x1
0x1080b2 -> mov rax,qword ptr [rax]
0x10c0b3 -> test rax,rax
0x1060b4 -> mov qword ptr [rax],rdx
0x1040b4 -> mov edx,eax
0x10a0b5 -> mov eax,dword ptr [rax + 0x14]
0x1080b5 -> shr rax,0xc
0x10c0b6 -> jz 0x0010c0db
0x1040b6 -> mov rax,qword ptr [rbp + -0x1a8]
0x1060b7 -> mov rax,qword ptr [rbp + -0x68]
0x10c0b8 -> mov rax,qword ptr [rbp + -0x58]
0x10a0b8 -> test eax,eax
0x1080b9 -> mov rdx,rax
0x10a0ba -> jle 0x0010a0fc
0x1060bb -> mov qword ptr [rax],0x0
0x10c0bc -> lea rsi,[0x10f449]
0x10a0bc -> mov rax,qword ptr [rbp + -0x28]
0x1080bc -> mov rax,qword ptr [rbp + -0x18]
0x1040bd -> mov dword ptr [rax + 0x20],edx
0x10a0c0 -> mov rax,qword ptr [rax + 0x130]
0x1080c0 -> cmp rdx,rax
0x1040c0 -> jmp 0x00104206
0x1060c2 -> mov eax,dword ptr [rbp + -0x30]
0x10c0c3 -> mov rdi,rax
0x1080c3 -> ja 0x0010808d
0x1080c5 -> mov eax,0x1
0x1060c5 -> add eax,0x1
0x1040c5 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c0c6 -> call strcmp
0x10a0c7 -> test rax,rax
0x1060c8 -> mov edx,eax
0x10a0ca -> jnz 0x0010a0fc
0x1080ca -> leave
0x1060ca -> mov rax,qword ptr [rbp + -0x28]
0x10c0cb -> test eax,eax
0x1080cb -> ret
0x10a0cc -> mov rax,qword ptr [rbp + -0x20]
0x1080cc -> push rbp
0x1040cc -> mov eax,dword ptr [rax + 0x20]
0x10c0cd -> jnz 0x0010c0db
0x1080cd -> mov rbp,rsp
0x1060ce -> mov eax,dword ptr [rax + 0x8]
0x10c0cf -> lea rdi,[0x10f44b]
0x1040cf -> or eax,0x2
0x10a0d0 -> mov eax,dword ptr [rax + 0x18]
0x1080d0 -> sub rsp,0xc0
0x1060d1 -> cmp edx,eax
0x1040d2 -> mov edx,eax
0x10a0d3 -> mov ecx,eax
0x1060d3 -> jnc 0x0010610e
0x1040d4 -> mov rax,qword ptr [rbp + -0x1a8]
0x10a0d5 -> mov rax,qword ptr [rbp + -0x18]
0x1060d5 -> mov rax,qword ptr [rbp + -0x28]
0x10c0d6 -> call 0x0010d638
0x1080d7 -> mov qword ptr [rbp + -0xa8],rdi
0x10a0d9 -> mov edx,dword ptr [rax + 0x14]
0x1060d9 -> mov rax,qword ptr [rax]
0x10c0db -> lea rdx,[rbp + -0x70]
0x1040db -> mov dword ptr [rax + 0x20],edx
0x10a0dc -> mov rax,qword ptr [rbp + -0x28]
0x1060dc -> mov edx,dword ptr [rbp + -0x30]
0x1080de -> mov qword ptr [rbp + -0xb0],rsi
0x1040de -> jmp 0x00104206
0x10c0df -> mov rax,qword ptr [rbp + -0x78]
0x1060df -> movsxd rdx,edx
0x10a0e0 -> mov eax,dword ptr [rax + 0xd8]
0x1060e2 -> add rdx,0x1
0x10c0e3 -> mov rsi,rdx
0x1040e3 -> mov byte ptr [rbp + -0x1b6],0x1
0x1080e5 -> mov eax,edx
0x10c0e6 -> mov rdi,rax
0x10a0e6 -> mov r8,rcx
0x1060e6 -> shl rdx,0x4
0x1080e7 -> mov byte ptr [rbp + -0xb4],al
0x10c0e9 -> call 0x0010a9a0
0x10a0e9 -> mov ecx,0x0
0x1060ea -> add rax,rdx
0x1040ea -> mov rax,qword ptr [0x003111a0]
0x1080ed -> mov rax,qword ptr fs:[0x28]
0x1060ed -> mov rdx,qword ptr [rax + 0x8]
0x10c0ee -> push rbp
0x10a0ee -> mov esi,0x0
0x10c0ef -> mov rbp,rsp
0x1060f1 -> mov rax,qword ptr [rax]
0x1040f1 -> mov rdi,rax
0x10c0f2 -> push r14
0x10a0f3 -> mov edi,eax
0x10c0f4 -> push r13
0x1060f4 -> mov qword ptr [rbp + -0x10],rax
0x1040f4 -> call g_strdup
0x10a0f5 -> call 0x00103ab2
0x10c0f6 -> push r12
0x1080f6 -> mov qword ptr [rbp + -0x8],rax
0x10c0f8 -> push rbx
0x1060f8 -> mov qword ptr [rbp + -0x8],rdx
0x10c0f9 -> sub rsp,0xd0
0x1040f9 -> mov qword ptr [rbp + -0x198],rax
0x10a0fa -> jmp 0x0010a11c
0x1080fa -> xor eax,eax
0x10a0fc -> mov rax,qword ptr [rbp + -0x20]
0x1080fc -> mov rax,qword ptr [rbp + -0xa8]
0x1060fc -> mov rax,qword ptr [rbp + -0x8]
0x10c100 -> mov qword ptr [rbp + -0xc8],rdi
0x10a100 -> mov eax,dword ptr [rax + 0x18]
0x106100 -> sub rax,qword ptr [rbp + -0x50]
0x104100 -> jmp 0x00104206
0x10a103 -> mov edx,eax
0x108103 -> mov rax,qword ptr [rax]
0x106104 -> mov rdx,rax
0x10a105 -> mov rax,qword ptr [rbp + -0x18]
0x104105 -> mov rax,qword ptr [0x003111a0]
0x108106 -> mov rdi,rax
0x10c107 -> mov qword ptr [rbp + -0xd0],rsi
0x106107 -> mov rax,qword ptr [rbp + -0x68]
0x10a109 -> mov rcx,qword ptr [rax + 0x18]
0x108109 -> call 0x0010d6ce
0x10610b -> mov qword ptr [rax],rdx
0x10410c -> mov edx,0x100
0x10a10d -> mov rax,qword ptr [rbp + -0x28]
0x10c10e -> mov qword ptr [rbp + -0xd8],rdx
0x10810e -> mov qword ptr [rbp + -0x98],rax
0x10610e -> mov eax,0x0
0x10a111 -> mov rsi,rcx
0x104111 -> mov rsi,rax
0x106113 -> leave
0x10a114 -> mov rdi,rax
0x106114 -> ret
0x104114 -> lea rdi,[0x311280]
0x10c115 -> mov rax,qword ptr fs:[0x28]
0x108115 -> mov word ptr [rbp + -0x9a],0x41
0x106115 -> push rbp
0x106116 -> mov rbp,rsp
0x10a117 -> call 0x001036fe
0x106119 -> sub rsp,0x60
0x10411b -> call strncpy
0x10a11c -> mov rax,qword ptr [rbp + -0x20]
0x10611d -> mov qword ptr [rbp + -0x38],rdi
0x10c11e -> mov qword ptr [rbp + -0x28],rax
0x10811e -> lea rcx,[rbp + -0x98]
0x10a120 -> mov eax,dword ptr [rax + 0x4]
0x104120 -> mov byte ptr [0x0031137f],0x0
0x106121 -> mov qword ptr [rbp + -0x40],rsi
0x10c122 -> xor eax,eax
0x10a123 -> cmp eax,0x2
0x10c124 -> mov rax,rsp
0x108125 -> mov rax,qword ptr [rbp + -0xa8]
0x106125 -> mov qword ptr [rbp + -0x48],rdx
0x10a126 -> jnz 0x0010a13b
0x10c127 -> mov r12,rax
0x104127 -> jmp 0x00104206
0x10a128 -> mov rax,qword ptr [rbp + -0x28]
0x106129 -> mov qword ptr [rbp + -0x50],rcx
0x10c12a -> mov rax,qword ptr [rbp + -0xc8]
0x10a12c -> mov rdi,rax
0x10812c -> mov edx,0x8
0x10412c -> mov rax,qword ptr [rbp + -0x1a8]
0x10612d -> mov dword ptr [rbp + -0x54],r8d
0x10a12f -> call 0x001039c1
0x10c131 -> mov rdi,rax
0x108131 -> mov rsi,rcx
0x106131 -> mov rax,qword ptr fs:[0x28]
0x104133 -> mov eax,dword ptr [rax + 0x20]
0x10c134 -> call strlen
0x10a134 -> mov eax,0x0
0x108134 -> mov rdi,rax
0x104136 -> or eax,0x4
0x108137 -> call 0x00103891
0x10c139 -> add rax,0x1
0x10a139 -> jmp 0x0010a15b
0x104139 -> mov edx,eax
0x10613a -> mov qword ptr [rbp + -0x8],rax
0x10a13b -> mov rax,qword ptr [0x00311388]
0x10413b -> mov rax,qword ptr [rbp + -0x1a8]
0x10813c -> mov rax,qword ptr [rbp + -0xb0]
0x10c13d -> mov rdx,rax
0x10613e -> xor eax,eax
0x10c140 -> sub rdx,0x1
0x106140 -> lea rdi,[rbp + -0x18]
0x10a142 -> mov rcx,qword ptr [rbp + -0x18]
0x104142 -> mov dword ptr [rax + 0x20],edx
0x108143 -> mov eax,dword ptr [rax + 0x20]
0x10c144 -> mov qword ptr [rbp + -0x90],rdx
0x106144 -> lea rcx,[rbp + -0x20]
0x104145 -> jmp 0x00104206
0x10a146 -> mov edx,0x0
0x108146 -> and eax,0x1
0x106148 -> lea rdx,[rbp + -0x24]
0x108149 -> test eax,eax
0x10414a -> mov dword ptr [0x003111e4],0x1
0x10c14b -> mov qword ptr [rbp + -0xf0],rax
0x10a14b -> mov rsi,rcx
0x10814b -> jz 0x0010815e
0x10614c -> mov rsi,qword ptr [rbp + -0x38]
0x10814d -> movzx eax,word ptr [rbp + -0x9a]
0x10a14e -> mov rdi,rax
0x106150 -> mov rax,qword ptr [rbp + -0x50]
0x10a151 -> call g_thread_pool_push
0x10c152 -> mov qword ptr [rbp + -0xe8],0x0
0x108154 -> or eax,0x2
0x106154 -> mov r8,rdi
0x104154 -> jmp 0x00104206
0x10a156 -> jmp 0x00109fa2
0x108157 -> mov word ptr [rbp + -0x9a],ax
0x106157 -> mov rdi,rax
0x104159 -> mov rax,qword ptr [0x00311270]
0x10615a -> call 0x00105ebd
0x10a15b -> add rsp,0x28
0x10c15d -> mov r13,rax
0x10815e -> mov rax,qword ptr [rbp + -0xb0]
0x10a15f -> pop rbx
0x10615f -> test eax,eax
0x10c160 -> mov r14d,0x0
0x10a160 -> pop rbp
0x104160 -> mov rdi,rax
0x10a161 -> ret
0x106161 -> jz 0x0010616f
0x10a162 -> push rbp
0x10a163 -> mov rbp,rsp
0x106163 -> mov rax,-0x1
0x104163 -> call g_free
0x108165 -> mov eax,dword ptr [rax + 0x20]
0x10c166 -> mov edx,0x10
0x10a166 -> sub rsp,0x10
0x108168 -> and eax,0x80
0x104168 -> mov rax,qword ptr [0x003111a0]
0x10a16a -> mov qword ptr [rbp + -0x8],rdi
0x10616a -> jmp 0x001061fa
0x10c16b -> sub rdx,0x1
0x10816d -> test eax,eax
0x10a16e -> mov rax,qword ptr [rbp + -0x8]
0x10c16f -> add rax,rdx
0x10816f -> jz 0x00108182
0x10616f -> mov rax,qword ptr [rbp + -0x18]
0x10416f -> mov rdi,rax
0x108171 -> movzx eax,word ptr [rbp + -0x9a]
0x10c172 -> mov ebx,0x10
0x10a172 -> mov rdi,rax
0x104172 -> call g_strdup
0x106173 -> test rax,rax
0x10a175 -> call g_free
0x106176 -> jz 0x0010618a
0x10c177 -> mov edx,0x0
0x104177 -> mov qword ptr [0x00311270],rax
0x108178 -> or eax,0x4
0x106178 -> mov rax,qword ptr [rbp + -0x18]
0x10a17a -> nop
0x10a17b -> leave
0x10817b -> mov word ptr [rbp + -0x9a],ax
0x10c17c -> div rbx
0x10a17c -> ret
0x10617c -> cmp qword ptr [rbp + -0x48],rax
0x10a17d -> push rbp
0x10a17e -> mov rbp,rsp
0x10417e -> jmp 0x00104206
0x10c17f -> imul rax,rax,0x10
0x106180 -> jbe 0x0010618a
0x10a181 -> sub rsp,0x140
0x108182 -> mov rax,qword ptr [rbp + -0xb0]
0x106182 -> mov rax,qword ptr [rbp + -0x18]
0x10c183 -> sub rsp,rax
0x104183 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c186 -> mov rax,rsp
0x106186 -> mov qword ptr [rbp + -0x48],rax
0x10a188 -> mov qword ptr [rbp + -0x138],rdi
0x10c189 -> add rax,0x0
0x108189 -> mov eax,dword ptr [rax + 0x20]
0x10618a -> mov rcx,qword ptr [rbp + -0x20]
0x10418a -> mov rax,qword ptr [rax + 0x18]
0x10818c -> and eax,0x100
0x10c18d -> mov qword ptr [rbp + -0x88],rax
0x10618e -> mov eax,dword ptr [rbp + -0x24]
0x10418e -> mov rdi,rax
0x10a18f -> mov rax,qword ptr fs:[0x28]
0x108191 -> test eax,eax
0x106191 -> mov rdx,qword ptr [rbp + -0x48]
0x104191 -> call g_free
0x108193 -> jz 0x001081a6
0x10c194 -> mov rax,qword ptr [rbp + -0xd0]
0x108195 -> movzx eax,word ptr [rbp + -0x9a]
0x106195 -> mov rsi,qword ptr [rbp + -0x40]
0x104196 -> mov rax,qword ptr [0x003111a0]
0x10a198 -> mov qword ptr [rbp + -0x8],rax
0x106199 -> mov edi,eax
0x10c19b -> movzx eax,word ptr [rax]
0x10619b -> call pwrite64
0x10a19c -> xor eax,eax
0x10819c -> or eax,0x8
0x10419d -> mov rdi,rax
0x10c19e -> cmp ax,0x2
0x10a19e -> lea rax,[rbp + -0x110]
0x10819f -> mov word ptr [rbp + -0x9a],ax
0x1061a0 -> mov qword ptr [rbp + -0x10],rax
0x1041a0 -> call g_strdup
0x10c1a2 -> jnz 0x0010c1ab
0x10c1a4 -> mov eax,0x4
0x1061a4 -> mov rax,qword ptr [rbp + -0x50]
0x10a1a5 -> mov rdi,rax
0x1041a5 -> mov rdx,rax
0x1081a6 -> mov rax,qword ptr [rbp + -0xb0]
0x10a1a8 -> call sigemptyset
0x1061a8 -> mov rax,qword ptr [rax + 0xe0]
0x1041a8 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c1a9 -> jmp 0x0010c1b0
0x10c1ab -> mov eax,0x10
0x10a1ad -> lea rax,[rbp + -0x110]
0x1081ad -> mov eax,dword ptr [rax + 0x20]
0x1061af -> mov eax,dword ptr [rax + 0x20]
0x1041af -> mov qword ptr [rax + 0x18],rdx
0x10c1b0 -> mov dword ptr [rbp + -0xb0],eax
0x1081b0 -> and eax,0x200
0x1061b2 -> and eax,0x40
0x1041b3 -> jmp 0x00104206
0x10a1b4 -> mov esi,0x11
0x1081b5 -> test eax,eax
0x1061b5 -> test eax,eax
0x1041b5 -> mov rax,qword ptr [0x003111a0]
0x10c1b6 -> mov qword ptr [rbp + -0x40],0x0
0x1081b7 -> jz 0x001081ca
0x1061b7 -> jz 0x001061c5
0x10a1b9 -> mov rdi,rax
0x1081b9 -> movzx eax,word ptr [rbp + -0x9a]
0x1061b9 -> mov eax,dword ptr [rbp + -0x24]
0x10a1bc -> call sigaddset
0x1061bc -> mov edi,eax
0x1041bc -> mov edx,0x0
0x10c1be -> mov qword ptr [rbp + -0x38],0x0
0x1061be -> call fsync
0x1081c0 -> or eax,0x10
0x10a1c1 -> lea rax,[rbp + -0x110]
0x1041c1 -> mov esi,0x0
0x1081c3 -> mov word ptr [rbp + -0x9a],ax
0x1061c3 -> jmp 0x001061d5
0x1061c5 -> cmp dword ptr [rbp + -0x54],0x0
0x10c1c6 -> mov byte ptr [rbp + -0x36],0xff
0x1041c6 -> mov rdi,rax
0x10a1c8 -> mov esi,0xf
0x1061c9 -> jz 0x001061d5
0x1041c9 -> call strtol
0x10c1ca -> mov byte ptr [rbp + -0x35],0xff
0x1081ca -> mov rax,qword ptr [rbp + -0xb0]
0x1061cb -> mov eax,dword ptr [rbp + -0x24]
0x10a1cd -> mov rdi,rax
0x10c1ce -> mov rax,qword ptr [rbp + -0x88]
0x1061ce -> mov edi,eax
0x1041ce -> mov edx,eax
0x10a1d0 -> call sigaddset
0x1061d0 -> call fdatasync
0x1041d0 -> mov rax,qword ptr [rbp + -0x1a8]
0x1081d1 -> mov eax,dword ptr [rax + 0x20]
0x1081d4 -> and eax,0x800
0x10c1d5 -> mov rdx,qword ptr [rbp + -0xc8]
0x10a1d5 -> lea rdx,[rbp + -0x90]
0x1061d5 -> mov rax,qword ptr [rbp + -0x50]
0x1041d7 -> mov dword ptr [rax + 0x48],edx
0x1081d9 -> test eax,eax
0x1061d9 -> mov rax,qword ptr [rax + 0xe0]
0x1041da -> jmp 0x00104206
0x1081db -> jz 0x001081ee
0x10c1dc -> mov rsi,rdx
0x10a1dc -> lea rax,[rbp + -0x110]
0x1041dc -> lea rdi,[0x10d980]
0x1081dd -> movzx eax,word ptr [rbp + -0x9a]
0x10c1df -> mov rdi,rax
0x1061e0 -> mov eax,dword ptr [rax + 0x20]
0x10c1e2 -> call strcpy
0x10a1e3 -> mov rsi,rax
0x1061e3 -> and eax,0x2000
0x1041e3 -> call puts
0x1081e4 -> or eax,0x20
0x10a1e6 -> mov edi,0x0
0x10c1e7 -> lea rax,[rbp + -0x70]
0x1081e7 -> mov word ptr [rbp + -0x9a],ax
0x1061e8 -> test eax,eax
0x1041e8 -> mov edi,0x0
0x1061ea -> jz 0x001061f6
0x10c1eb -> mov edx,0x30
0x10a1eb -> call sigprocmask
0x1061ec -> mov eax,dword ptr [rbp + -0x24]
0x1041ed -> call exit
0x1081ee -> mov rax,qword ptr [rbp + -0xb0]
0x1061ef -> mov edi,eax
0x10c1f0 -> mov esi,0x0
0x10a1f0 -> lea rax,[rbp + -0x118]
0x1061f1 -> call close
0x1041f2 -> mov eax,0x0
0x10c1f5 -> mov rdi,rax
0x1081f5 -> mov eax,dword ptr [rax + 0x20]
0x1061f6 -> mov rax,qword ptr [rbp + -0x10]
0x10a1f7 -> mov rcx,rax
0x1041f7 -> call 0x00103b19
0x10c1f8 -> call memset
0x1081f8 -> and eax,0x4
0x10a1fa -> mov edx,0x0
0x1061fa -> mov rdx,qword ptr [rbp + -0x8]
0x1081fb -> test eax,eax
0x1041fc -> mov edi,0x1
0x10c1fd -> mov dword ptr [rbp + -0x6c],0x0
0x1081fd -> jnz 0x00108210
0x1061fe -> xor rdx,qword ptr fs:[0x28]
0x10a1ff -> mov esi,0x1
0x1081ff -> movzx eax,word ptr [rbp + -0x9a]
0x104201 -> call exit
0x10c204 -> mov dword ptr [rbp + -0x70],0x4
0x10a204 -> mov edi,0x1
0x108206 -> or ah,0x1
0x104206 -> lea rcx,[rbp + -0x1b4]
0x106207 -> jz 0x0010620e
0x10a209 -> call socketpair
0x108209 -> mov word ptr [rbp + -0x9a],ax
0x106209 -> call __stack_chk_fail
0x10c20b -> mov rax,qword ptr [rbp + -0x88]
0x10420d -> lea rdx,[rbp + -0x180]
0x10a20e -> call fork
0x10620e -> leave
0x10620f -> ret
0x108210 -> movzx eax,word ptr [rbp + -0x9a]
0x106210 -> push rbp
0x106211 -> mov rbp,rsp
0x10c212 -> mov esi,0x2f
0x10a213 -> mov dword ptr [rbp + -0x124],eax
0x106214 -> sub rsp,0x40
0x104214 -> mov rsi,qword ptr [rbp + -0x1d0]
0x10c217 -> mov rdi,rax
0x108217 -> movzx eax,ax
0x106218 -> mov qword ptr [rbp + -0x18],rdi
0x10a219 -> cmp dword ptr [rbp + -0x124],0x0
0x10c21a -> call strchr
0x10821a -> mov edi,eax
0x10421b -> mov eax,dword ptr [rbp + -0x1c4]
0x10821c -> call htons
0x10621c -> mov qword ptr [rbp + -0x20],rsi
0x10c21f -> mov qword ptr [rbp + -0x80],rax
0x10a220 -> jns 0x0010a26d
0x106220 -> mov qword ptr [rbp + -0x28],rdx
0x108221 -> mov word ptr [rbp + -0x9a],ax
0x104221 -> mov r8,rcx
0x10a222 -> call __errno_location
0x10c223 -> cmp qword ptr [rbp + -0x80],0x0
0x106224 -> mov qword ptr [rbp + -0x30],rcx
0x104224 -> mov rcx,rdx
0x10a227 -> mov eax,dword ptr [rax]
0x104227 -> lea rdx,[0x10defe]
0x10c228 -> jz 0x0010c254
0x108228 -> lea rcx,[rbp + -0x9a]
0x106228 -> mov dword ptr [rbp + -0x34],r8d
0x10a229 -> mov edi,eax
0x10c22a -> mov rax,qword ptr [rbp + -0x80]
0x10a22b -> call strerror
0x10622c -> mov qword ptr [rbp + -0x8],0x0
0x10c22e -> mov byte ptr [rax],0x0
0x10422e -> mov edi,eax
0x10822f -> mov rax,qword ptr [rbp + -0xa8]
0x10a230 -> mov rcx,rax
0x104230 -> call getopt_long
0x10c231 -> add qword ptr [rbp + -0x80],0x1
0x10a233 -> lea rdx,[0x10ed82]
0x106234 -> jmp 0x0010624e
0x104235 -> mov dword ptr [rbp + -0x1ac],eax
0x10c236 -> mov rax,qword ptr [rbp + -0x80]
0x108236 -> mov edx,0x2
0x106236 -> mov rax,qword ptr [rbp + -0x8]
0x10c23a -> mov edx,0xa
0x10a23a -> mov esi,0x20
0x10623a -> add qword ptr [rbp + -0x18],rax
0x10823b -> mov rsi,rcx
0x10423b -> cmp dword ptr [rbp + -0x1ac],0x0
0x10823e -> mov rdi,rax
0x10623e -> mov rax,qword ptr [rbp + -0x8]
0x10c23f -> mov esi,0x0
0x10a23f -> mov edi,0x0
0x108241 -> call 0x00103891
0x106242 -> add qword ptr [rbp + -0x20],rax
0x104242 -> jns 0x00103d64
0x10c244 -> mov rdi,rax
0x10a244 -> mov eax,0x0
0x108246 -> mov eax,dword ptr [0x003111e0]
0x106246 -> mov rax,qword ptr [rbp + -0x8]
0x10c247 -> call strtol
0x104248 -> cmp dword ptr [rbp + -0x1b0],0x1
0x10a249 -> call g_log
0x10624a -> sub qword ptr [rbp + -0x28],rax
0x10c24c -> mov dword ptr [rbp + -0xb8],eax
0x10824c -> and eax,0x4
0x10a24e -> mov eax,dword ptr [rbp + -0x118]
0x10624e -> cmp qword ptr [rbp + -0x28],0x0
0x10824f -> test eax,eax
0x10424f -> jg 0x00104269
0x108251 -> jnz 0x00108293
0x104251 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c252 -> jmp 0x0010c263
0x108253 -> cmp byte ptr [rbp + -0xb4],0x0
0x106253 -> jz 0x0010627e
0x10c254 -> mov eax,dword ptr [rbp + -0xb0]
0x10a254 -> mov edi,eax
0x106255 -> mov edi,dword ptr [rbp + -0x34]
0x10a256 -> call close
0x106258 -> mov rcx,qword ptr [rbp + -0x30]
0x104258 -> mov rdi,rax
0x10c25a -> shl eax,0x3
0x10825a -> jz 0x00108293
0x10a25b -> mov eax,dword ptr [rbp + -0x114]
0x10425b -> call 0x0010cd58
0x10825c -> lea rax,[rbp + -0x90]
0x10625c -> mov rdx,qword ptr [rbp + -0x28]
0x10c25d -> mov dword ptr [rbp + -0xb8],eax
0x106260 -> mov rsi,qword ptr [rbp + -0x20]
0x104260 -> mov qword ptr [rbp + -0x1a8],rax
0x10a261 -> mov edi,eax
0x10c263 -> mov rax,qword ptr [rbp + -0x88]
0x10a263 -> call close
0x108263 -> mov edx,0x80
0x106264 -> mov rax,qword ptr [rbp + -0x18]
0x104267 -> jmp 0x0010427b
0x10a268 -> jmp 0x0010a32c
0x108268 -> mov esi,0x0
0x106268 -> mov r8d,edi
0x104269 -> mov rax,qword ptr [rbp + -0x1a8]
0x10c26a -> lea rcx,[rbp + -0xa8]
0x10626b -> mov rdi,rax
0x10a26d -> cmp dword ptr [rbp + -0x124],0x0
0x10826d -> mov rdi,rax
0x10626e -> call 0x00106115
0x108270 -> call memset
0x104270 -> lea rdx,[0x10deb5]
0x10c271 -> lea rdx,[rbp + -0x70]
0x106273 -> mov qword ptr [rbp + -0x8],rax
0x10a274 -> jle 0x0010a2d4
0x10c275 -> mov esi,0x0
0x108275 -> lea rcx,[rbp + -0x90]
0x10a276 -> mov edi,0x4
0x106277 -> cmp qword ptr [rbp + -0x8],0x0
0x104277 -> mov qword ptr [rax + 0x40],rdx
0x10c27a -> mov rdi,rax
0x10a27b -> call g_malloc
0x10427b -> cmp byte ptr [rbp + -0x1b6],0x0
0x10827c -> mov rax,qword ptr [rbp + -0xa8]
0x10627c -> jg 0x00106236
0x10c27d -> call getaddrinfo
0x10627e -> cmp qword ptr [rbp + -0x8],0x0
0x10a280 -> mov qword ptr [rbp + -0x120],rax
0x10c282 -> mov dword ptr [rbp + -0xac],eax
0x104282 -> jz 0x001042cc
0x108283 -> mov edx,0x7c
0x106283 -> js 0x0010628c
0x104284 -> cmp qword ptr [rbp + -0x1a8],0x0
0x106285 -> cmp qword ptr [rbp + -0x28],0x0
0x10a287 -> mov rax,qword ptr [rbp + -0x120]
0x10c288 -> cmp dword ptr [rbp + -0xac],0x0
0x108288 -> mov rsi,rcx
0x10628a -> jz 0x00106293
0x10828b -> mov rdi,rax
0x10628c -> mov eax,0x1
0x10428c -> jnz 0x001042b3
0x10a28e -> mov edx,dword ptr [rbp + -0x124]
0x10828e -> call 0x00103891
0x10428e -> lea rdx,[0x10df10]
0x10c28f -> jz 0x0010c2dc
0x10c291 -> mov eax,dword ptr [rbp + -0xac]
0x106291 -> jmp 0x00106298
0x108293 -> nop
0x106293 -> mov eax,0x0
0x10a294 -> mov dword ptr [rax],edx
0x108294 -> mov rax,qword ptr [rbp + -0x8]
0x104295 -> mov esi,0x8
0x10a296 -> mov edx,dword ptr [rbp + -0x114]
0x10c297 -> mov edi,eax
0x108298 -> xor rax,qword ptr fs:[0x28]
0x106298 -> leave
0x10c299 -> call gai_strerror
0x106299 -> ret
0x10629a -> push rbp
0x10429a -> mov edi,0x0
0x10629b -> mov rbp,rsp
0x10a29c -> mov rax,qword ptr [rbp + -0x138]
0x10c29e -> mov rbx,rax
0x10629e -> sub rsp,0x50
0x10429f -> mov eax,0x0
0x10c2a1 -> lea rdi,[0x10f4f0]
0x1082a1 -> jz 0x001082a8
0x1062a2 -> mov qword ptr [rbp + -0x38],rdi
0x10a2a3 -> mov dword ptr [rax],edx
0x1082a3 -> call __stack_chk_fail
0x1042a4 -> call g_log
0x10a2a5 -> mov eax,dword ptr [rbp + -0x118]
0x1062a6 -> mov qword ptr [rbp + -0x40],rsi
0x10c2a8 -> call g_quark_from_static_string
0x1082a8 -> leave
0x1082a9 -> ret
0x1042a9 -> mov edi,0x1
0x1082aa -> push rbp
0x1062aa -> mov qword ptr [rbp + -0x48],rdx
0x10a2ab -> mov edi,eax
0x1082ab -> mov rbp,rsp
0x10c2ad -> mov esi,eax
0x10a2ad -> call close
0x1082ae -> sub rsp,0x20
0x1062ae -> mov qword ptr [rbp + -0x50],rcx
0x1042ae -> call exit
0x10c2af -> mov rax,qword ptr [rbp + -0xd8]
0x10a2b2 -> mov rax,qword ptr [0x00311380]
0x1082b2 -> mov qword ptr [rbp + -0x18],rdi
0x1062b2 -> mov rax,qword ptr fs:[0x28]
0x1042b3 -> mov rdx,qword ptr [rbp + -0x198]
0x10c2b6 -> mov r8,rbx
0x1082b6 -> mov qword ptr [rbp + -0x20],rsi
0x10c2b9 -> lea rcx,[0x10f508]
0x10a2b9 -> mov rdx,qword ptr [rbp + -0x120]
0x1082ba -> mov rax,qword ptr fs:[0x28]
0x1042ba -> mov rax,qword ptr [rbp + -0x1a8]
0x1062bb -> mov qword ptr [rbp + -0x8],rax
0x1062bf -> xor eax,eax
0x10c2c0 -> mov edx,0xd
0x10a2c0 -> mov rcx,qword ptr [rbp + -0x120]
0x1062c1 -> lea rdi,[rbp + -0x18]
0x1042c1 -> mov rsi,rdx
0x1082c3 -> mov qword ptr [rbp + -0x8],rax
0x1042c4 -> mov rdi,rax
0x10c2c5 -> mov rdi,rax
0x1062c5 -> lea rcx,[rbp + -0x20]
0x10a2c7 -> mov rsi,rcx
0x1082c7 -> xor eax,eax
0x1042c7 -> call 0x00103b6d
0x10c2c8 -> mov eax,0x0
0x1082c9 -> mov rax,qword ptr [rbp + -0x20]
0x1062c9 -> lea rdx,[rbp + -0x24]
0x10a2ca -> mov rdi,rax
0x1042cc -> mov rax,qword ptr [rbp + -0x1a8]
0x10c2cd -> call g_set_error
0x10a2cd -> call g_hash_table_insert
0x1082cd -> mov rdi,rax
0x1062cd -> mov rsi,qword ptr [rbp + -0x38]
0x1082d0 -> call 0x0010cd17
0x1062d1 -> mov rax,qword ptr [rbp + -0x50]
0x10c2d2 -> mov eax,0x0
0x10a2d2 -> jmp 0x0010a32c
0x1042d3 -> mov rbx,qword ptr [rbp + -0x18]
0x10a2d4 -> mov edx,dword ptr [rbp + -0x118]
0x1082d5 -> mov rdx,rax
0x1062d5 -> mov r8,rdi
0x10c2d7 -> jmp 0x0010c515
0x1042d7 -> xor rbx,qword ptr fs:[0x28]
0x1082d8 -> mov rax,qword ptr [rbp + -0x18]
0x1062d8 -> mov rdi,rax
0x10a2da -> mov rax,qword ptr [rbp + -0x138]
0x1062db -> call 0x00105ebd
0x10c2dc -> mov rax,qword ptr [rbp + -0xa8]
0x1082dc -> mov qword ptr [rax + 0xe0],rdx
0x1062e0 -> test eax,eax
0x1042e0 -> jz 0x001042e7
0x10a2e1 -> mov dword ptr [rax],edx
0x1062e2 -> jz 0x001062ed
0x1042e2 -> call __stack_chk_fail
0x10c2e3 -> mov qword ptr [rbp + -0x78],rax
0x10a2e3 -> mov eax,dword ptr [rbp + -0x114]
0x1082e3 -> mov rax,qword ptr [rbp + -0x18]
0x1062e4 -> mov rax,-0x1
0x10c2e7 -> jmp 0x0010c4f4
0x1082e7 -> mov rcx,0x7fffffffffffffff
0x1042e7 -> add rsp,0x1d8
0x10a2e9 -> mov edi,eax
0x10a2eb -> call close
0x1062eb -> jmp 0x00106347
0x10c2ec -> mov rax,qword ptr [rbp + -0xd0]
0x1062ed -> mov rax,qword ptr [rbp + -0x18]
0x1042ee -> pop rbx
0x1042ef -> pop rbp
0x10a2f0 -> mov esi,0x0
0x1042f0 -> ret
0x1082f1 -> mov qword ptr [rax],rcx
0x1062f1 -> test rax,rax
0x1042f1 -> push rbp
0x1042f2 -> mov rbp,rsp
0x10c2f3 -> movzx eax,word ptr [rax]
0x1082f4 -> mov rax,qword ptr [rbp + -0x18]
0x1062f4 -> jz 0x00106308
0x10a2f5 -> mov edi,0x11
0x1042f5 -> push rbx
0x10c2f6 -> cmp ax,0x2
0x1062f6 -> mov rax,qword ptr [rbp + -0x18]
0x1042f6 -> sub rsp,0xf8
0x1082f8 -> mov dword ptr [rax + 0x100],0xffffffff
0x10c2fa -> jz 0x0010c32b
0x10a2fa -> call signal
0x1062fa -> cmp qword ptr [rbp + -0x48],rax
0x10c2fc -> mov rax,qword ptr [rbp + -0xd0]
0x1042fd -> mov qword ptr [rbp + -0xe8],rdi
0x1062fe -> jbe 0x00106308
0x10a2ff -> mov esi,0x0
0x106300 -> mov rax,qword ptr [rbp + -0x18]
0x108302 -> mov rax,qword ptr [rbp + -0x18]
0x10c303 -> movzx eax,word ptr [rax]
0x10a304 -> mov edi,0xf
0x106304 -> mov qword ptr [rbp + -0x48],rax
0x104304 -> mov qword ptr [rbp + -0xf0],rsi
0x10c306 -> cmp ax,0xa
0x108306 -> add rax,0x108
0x106308 -> mov rcx,qword ptr [rbp + -0x20]
0x10a309 -> call signal
0x10c30a -> jz 0x0010c32b
0x10430b -> mov qword ptr [rbp + -0xf8],rdx
0x10c30c -> lea rcx,[0x10f630]
0x10830c -> mov esi,0x0
0x10630c -> mov eax,dword ptr [rbp + -0x24]
0x10a30e -> mov esi,0x0
0x10630f -> mov rdx,qword ptr [rbp + -0x48]
0x108311 -> mov rdi,rax
0x104312 -> mov rax,qword ptr fs:[0x28]
0x10c313 -> mov edx,0x3e
0x10a313 -> mov edi,0x1
0x106313 -> mov rsi,qword ptr [rbp + -0x40]
0x108314 -> call pthread_mutex_init
0x106317 -> mov edi,eax
0x10c318 -> lea rsi,[0x10f529]
0x10a318 -> call signal
0x108319 -> test eax,eax
0x106319 -> call pread64
0x10831b -> jz 0x00108342
0x10431b -> mov qword ptr [rbp + -0x18],rax
0x10a31d -> lea rax,[rbp + -0x90]
0x10831d -> lea rdx,[0x10e86a]
0x10631e -> mov qword ptr [rbp + -0x10],rax
0x10c31f -> lea rdi,[0x10f538]
0x10431f -> xor eax,eax
0x104321 -> mov rax,qword ptr [rbp + -0xe8]
0x106322 -> mov rax,qword ptr [rbp + -0x50]
0x10a324 -> mov rdi,rax
0x108324 -> mov esi,0x20
0x10c326 -> call __assert_fail
0x106326 -> mov rax,qword ptr [rax + 0xe0]
0x10a327 -> call sigemptyset
0x104328 -> mov rdi,rax
0x108329 -> mov edi,0x0
0x10c32b -> mov byte ptr [rbp + -0xb9],0x0
0x10432b -> call opendir
0x10a32c -> lea rax,[rbp + -0x90]
0x10632d -> mov eax,dword ptr [rax + 0x20]
0x10832e -> mov eax,0x0
0x106330 -> and eax,0x2000
0x104330 -> mov qword ptr [rbp + -0xd0],rax
0x10c332 -> mov eax,dword ptr [rbp + -0xb8]
0x10a333 -> mov edx,0x0
0x108333 -> call g_log
0x106335 -> test eax,eax
0x106337 -> jz 0x00106343
0x104337 -> mov qword ptr [rbp + -0xd8],0x0
0x10c338 -> mov dword ptr [rbp + -0xb4],eax
0x10a338 -> mov rsi,rax
0x108338 -> mov eax,0x0
0x106339 -> mov eax,dword ptr [rbp + -0x24]
0x10a33b -> mov edi,0x2
0x10633c -> mov edi,eax
0x10833d -> jmp 0x00108679
0x10c33e -> mov rax,qword ptr [rbp + -0xa8]
0x10633e -> call close
0x10a340 -> call sigprocmask
0x108342 -> mov rax,qword ptr [rbp + -0x18]
0x104342 -> cmp qword ptr [rbp + -0xd0],0x0
0x106343 -> mov rax,qword ptr [rbp + -0x10]
0x10c345 -> mov edx,dword ptr [rax + 0x4]
0x10a345 -> mov eax,dword ptr [rbp + -0x124]
0x108346 -> add rax,0xa0
0x106347 -> mov rdi,qword ptr [rbp + -0x8]
0x10c348 -> mov rax,qword ptr [rbp + -0xd0]
0x10434a -> jnz 0x00104398
0x10a34b -> mov rcx,qword ptr [rbp + -0x8]
0x10634b -> xor rdi,qword ptr fs:[0x28]
0x10834c -> mov esi,0x0
0x10434c -> call __errno_location
0x10c34f -> movzx eax,word ptr [rax]
0x10a34f -> xor rcx,qword ptr fs:[0x28]
0x108351 -> mov rdi,rax
0x104351 -> mov eax,dword ptr [rax]
0x10c352 -> movzx eax,ax
0x104353 -> mov edi,eax
0x108354 -> call pthread_rwlock_init
0x106354 -> jz 0x0010635b
0x10c355 -> cmp edx,eax
0x104355 -> call strerror
0x106356 -> call __stack_chk_fail
0x10c357 -> jnz 0x0010c3d0
0x10a358 -> jz 0x0010a35f
0x10c359 -> mov rax,qword ptr [rbp + -0xd0]
0x108359 -> test eax,eax
0x10a35a -> call __stack_chk_fail
0x10435a -> mov rbx,rax
0x10835b -> jz 0x00108382
0x10635b -> leave
0x10635c -> ret
0x10835d -> lea rdx,[0x10e888]
0x10635d -> push rbp
0x10435d -> lea rdi,[0x10dfd9]
0x10635e -> mov rbp,rsp
0x10a35f -> leave
0x10c360 -> movzx eax,word ptr [rax]
0x10a360 -> ret
0x10a361 -> push rbp
0x106361 -> sub rsp,0x30
0x10a362 -> mov rbp,rsp
0x10c363 -> movzx eax,ax
0x108364 -> mov esi,0x20
0x104364 -> call g_quark_from_static_string
0x10a365 -> sub rsp,0xb0
0x106365 -> mov qword ptr [rbp + -0x18],rdi
0x10c366 -> cmp eax,0x2
0x10c369 -> jz 0x0010c375
0x108369 -> mov edi,0x0
0x106369 -> mov qword ptr [rbp + -0x20],rsi
0x104369 -> mov esi,eax
0x10c36b -> cmp eax,0xa
0x10436b -> mov rax,qword ptr [rbp + -0xf8]
0x10a36c -> mov dword ptr [rbp + -0xa4],edi
0x10636d -> mov qword ptr [rbp + -0x28],rdx
0x10c36e -> jz 0x0010c3a2
0x10836e -> mov eax,0x0
0x10c370 -> jmp 0x0010c455
0x106371 -> mov qword ptr [rbp + -0x30],rcx
0x10a372 -> mov rax,qword ptr fs:[0x28]
0x104372 -> mov r8,rbx
0x108373 -> call g_log
0x10c375 -> mov rax,qword ptr [rbp + -0xd0]
0x106375 -> mov qword ptr [rbp + -0x8],0x0
0x104375 -> lea rcx,[0x10dff0]
0x108378 -> mov eax,0x0
0x10a37b -> mov qword ptr [rbp + -0x8],rax
0x10c37c -> add rax,0x4
0x10437c -> mov edx,0x7
0x10837d -> jmp 0x00108679
0x10637d -> jmp 0x00106397
0x10a37f -> xor eax,eax
0x10637f -> mov rax,qword ptr [rbp + -0x8]
0x10c380 -> mov qword ptr [rbp + -0xa0],rax
0x10a381 -> mov dword ptr [rbp + -0x98],0x80
0x104381 -> mov rdi,rax
0x108382 -> mov eax,dword ptr [0x003111e4]
0x106383 -> add qword ptr [rbp + -0x18],rax
0x104384 -> mov eax,0x0
0x10c387 -> mov rax,qword ptr [rbp + -0xa8]
0x106387 -> mov rax,qword ptr [rbp + -0x8]
0x108388 -> test eax,eax
0x104389 -> call g_set_error
0x10838a -> jz 0x00108392
0x10a38b -> lea rax,[rbp + -0x90]
0x10638b -> add qword ptr [rbp + -0x20],rax
0x10838c -> mov byte ptr [rbp + -0xd],0x59
0x10c38e -> mov rax,qword ptr [rax + 0x18]
0x10438e -> mov eax,0x0
0x10638f -> mov rax,qword ptr [rbp + -0x8]
0x108390 -> jmp 0x0010840f
0x10c392 -> add rax,0x4
0x10a392 -> mov rcx,rax
0x108392 -> mov rax,qword ptr [rbp + -0x18]
0x106393 -> sub qword ptr [rbp + -0x28],rax
0x104393 -> jmp 0x00104606
0x10a395 -> lea rdx,[rbp + -0x98]
0x10c396 -> mov qword ptr [rbp + -0x98],rax
0x108396 -> mov rax,qword ptr [rax + 0xe0]
0x106397 -> cmp qword ptr [rbp + -0x28],0x0
0x104398 -> call __errno_location
0x10a39c -> mov eax,dword ptr [rbp + -0xa4]
0x10639c -> jz 0x001063c1
0x10c39d -> jmp 0x0010c455
0x10839d -> mov rax,qword ptr [rax + 0x40]
0x10439d -> mov dword ptr [rax],0x0
0x10639e -> mov rcx,qword ptr [rbp + -0x30]
0x1083a1 -> mov rdi,rax
0x10c3a2 -> mov rax,qword ptr [rbp + -0xd0]
0x10a3a2 -> mov rsi,rcx
0x1063a2 -> mov rdx,qword ptr [rbp + -0x28]
0x1043a3 -> jmp 0x00104549
0x1083a4 -> call strlen
0x10a3a5 -> mov edi,eax
0x1063a6 -> mov rsi,qword ptr [rbp + -0x20]
0x10a3a7 -> call accept
0x1043a8 -> call __errno_location
0x10c3a9 -> add rax,0x8
0x1083a9 -> mov dword ptr [rbp + -0xc],eax
0x1063aa -> mov rax,qword ptr [rbp + -0x18]
0x10a3ac -> mov dword ptr [rbp + -0x94],eax
0x1083ac -> mov eax,dword ptr [0x00311390]
0x10c3ad -> mov qword ptr [rbp + -0xa0],rax
0x1043ad -> mov eax,dword ptr [rax]
0x1063ae -> mov rdi,rax
0x1043af -> mov dword ptr [rbp + -0xdc],eax
0x1063b1 -> call 0x0010629a
0x10a3b2 -> cmp dword ptr [rbp + -0x94],0x0
0x1083b2 -> lea rcx,[rbp + -0xc]
0x10c3b4 -> mov rax,qword ptr [rbp + -0xa8]
0x1043b5 -> mov rax,qword ptr [rbp + -0xc8]
0x1083b6 -> mov edx,0x4
0x1063b6 -> mov qword ptr [rbp + -0x8],rax
0x10a3b9 -> jns 0x0010a3c7
0x1063ba -> cmp qword ptr [rbp + -0x8],0x0
0x10c3bb -> mov rax,qword ptr [rax + 0x18]
0x10a3bb -> lea rdi,[0x10ed98]
0x1083bb -> mov rsi,rcx
0x1043bc -> lea rcx,[rax + 0x13]
0x1083be -> mov edi,eax
0x10c3bf -> add rax,0x8
0x1063bf -> jg 0x0010637f
0x1083c0 -> call 0x0010d7a5
0x1043c0 -> mov rax,qword ptr [rbp + -0xe8]
0x1063c1 -> cmp qword ptr [rbp + -0x8],0x0
0x10a3c2 -> call 0x0010d3ef
0x10c3c3 -> mov qword ptr [rbp + -0x98],rax
0x1083c5 -> mov eax,dword ptr [rbp + -0xc]
0x1063c6 -> js 0x001063cf
0x10a3c7 -> mov eax,dword ptr [rbp + -0x94]
0x1043c7 -> mov edx,0x0
0x1083c8 -> mov edx,eax
0x1063c8 -> cmp qword ptr [rbp + -0x28],0x0
0x10c3ca -> nop
0x1083ca -> mov rax,qword ptr [rbp + -0x18]
0x10c3cb -> jmp 0x0010c455
0x1043cc -> mov rsi,rcx
0x10a3cd -> mov rsi,qword ptr [rbp + -0x8]
0x1063cd -> jz 0x001063d6
0x1083ce -> mov rax,qword ptr [rax + 0xe0]
0x1063cf -> mov eax,0x1
0x1043cf -> mov rdi,rax
0x10c3d0 -> mov rax,qword ptr [rbp + -0xd0]
0x10a3d1 -> xor rsi,qword ptr fs:[0x28]
0x1043d2 -> mov eax,0x0
0x1063d4 -> jmp 0x001063db
0x1083d5 -> mov rcx,qword ptr [rax + 0x40]
0x1063d6 -> mov eax,0x0
0x10c3d7 -> movzx eax,word ptr [rax]
0x1043d7 -> call g_build_filename
0x1083d9 -> mov eax,dword ptr [0x00311390]
0x10c3da -> movzx eax,ax
0x10a3da -> jz 0x0010a3e1
0x1063db -> leave
0x10a3dc -> call __stack_chk_fail
0x1063dc -> ret
0x1043dc -> mov qword ptr [rbp + -0xc0],rax
0x10c3dd -> cmp eax,0x2
0x1063dd -> push rbp
0x1063de -> mov rbp,rsp
0x1083df -> mov rsi,rcx
0x10c3e0 -> jz 0x0010c3e9
0x10a3e1 -> leave
0x1063e1 -> sub rsp,0x60
0x10c3e2 -> cmp eax,0xa
0x10a3e2 -> ret
0x1083e2 -> mov edi,eax
0x10a3e3 -> push rbp
0x1043e3 -> mov rax,qword ptr [rbp + -0xc8]
0x10a3e4 -> mov rbp,rsp
0x1083e4 -> call 0x0010d7a5
0x10c3e5 -> jz 0x0010c423
0x1063e5 -> mov dword ptr [rbp + -0x34],edi
0x10c3e7 -> jmp 0x0010c455
0x10a3e7 -> sub rsp,0x40
0x1063e8 -> mov qword ptr [rbp + -0x40],rsi
0x10c3e9 -> mov rax,qword ptr [rbp + -0xd0]
0x1083e9 -> mov eax,dword ptr [0x00311390]
0x1043ea -> movzx eax,byte ptr [rax + 0x12]
0x10a3eb -> mov qword ptr [rbp + -0x28],rdi
0x1063ec -> mov qword ptr [rbp + -0x48],rdx
0x1043ee -> movzx eax,al
0x10a3ef -> mov dword ptr [rbp + -0x2c],esi
0x1083ef -> lea rcx,[rbp + -0xd]
0x10c3f0 -> add rax,0x4
0x1063f0 -> mov qword ptr [rbp + -0x50],rcx
0x1043f1 -> test eax,eax
0x10a3f2 -> mov qword ptr [rbp + -0x38],rdx
0x1083f3 -> mov edx,0x1
0x1043f3 -> jz 0x001043ff
0x10c3f4 -> mov eax,dword ptr [rax]
0x1063f4 -> mov dword ptr [rbp + -0x38],r8d
0x1043f5 -> cmp eax,0x8
0x10c3f6 -> mov dword ptr [rbp + -0x34],eax
0x10a3f6 -> mov qword ptr [rbp + -0x8],0x0
0x1083f8 -> mov rsi,rcx
0x1063f8 -> mov dword ptr [rbp + -0x54],r9d
0x1043f8 -> jz 0x00104443
0x10c3f9 -> lea rax,[rbp + -0x40]
0x1043fa -> jmp 0x0010453a
0x1083fb -> mov edi,eax
0x1063fc -> mov rax,qword ptr fs:[0x28]
0x10c3fd -> mov qword ptr [rbp + -0xa0],rax
0x1083fd -> call 0x0010d718
0x10a3fe -> mov eax,dword ptr [rbp + -0x2c]
0x1043ff -> lea rdx,[rbp + -0xb0]
0x10a401 -> mov edi,eax
0x108402 -> mov eax,dword ptr [0x00311390]
0x10a403 -> call 0x0010a361
0x10c404 -> mov rax,qword ptr [rbp + -0xa8]
0x106405 -> mov qword ptr [rbp + -0x8],rax
0x104406 -> mov rax,qword ptr [rbp + -0xc0]
0x10a408 -> mov dword ptr [rbp + -0x18],eax
0x108408 -> mov edi,eax
0x106409 -> xor eax,eax
0x10840a -> call close
0x10c40b -> mov rax,qword ptr [rax + 0x18]
0x10a40b -> cmp dword ptr [rbp + -0x18],0x0
0x10640b -> lea rdi,[rbp + -0x18]
0x10440d -> mov rsi,rdx
0x10c40f -> add rax,0x8
0x10a40f -> js 0x0010a655
0x10840f -> movzx eax,byte ptr [rbp + -0xd]
0x10640f -> lea rcx,[rbp + -0x20]
0x104410 -> mov rdi,rax
0x10c413 -> mov qword ptr [rbp + -0x98],rax
0x108413 -> movsx eax,al
0x106413 -> lea rdx,[rbp + -0x24]
0x104413 -> call 0x0010d8a0
0x10a415 -> mov eax,dword ptr [0x003111e4]
0x108416 -> cmp eax,0x4e
0x106417 -> mov rsi,qword ptr [rbp + -0x40]
0x104418 -> test eax,eax
0x108419 -> jz 0x00108422
0x10c41a -> add dword ptr [rbp + -0xb4],0x60
0x10441a -> jz 0x0010442d
0x10a41b -> test eax,eax
0x10841b -> cmp eax,0x58
0x10641b -> mov rax,qword ptr [rbp + -0x50]
0x10441c -> lea rdi,[0x10e010]
0x10a41d -> jnz 0x0010a4a4
0x10841e -> jz 0x00108447
0x10641f -> mov r8,rdi
0x108420 -> jmp 0x0010846c
0x10c421 -> jmp 0x0010c455
0x108422 -> lea rdx,[0x10e8a8]
0x106422 -> mov rdi,rax
0x10c423 -> mov rax,qword ptr [rbp + -0xd0]
0x10a423 -> lea rdi,[0x311390]
0x104423 -> call perror
0x106425 -> call 0x00105ebd
0x104428 -> jmp 0x001045bd
0x108429 -> mov esi,0x20
0x10c42a -> add rax,0x8
0x10a42a -> call 0x0010a17d
0x10642a -> test eax,eax
0x10642c -> jz 0x00106438
0x10442d -> mov eax,dword ptr [rbp + -0x98]
0x10c42e -> mov qword ptr [rbp + -0xa0],rax
0x10842e -> mov edi,0x0
0x10642e -> mov eax,0xffffffff
0x10a42f -> mov dword ptr [rbp + -0x14],eax
0x10a432 -> cmp dword ptr [rbp + -0x14],0x0
0x108433 -> mov eax,0x0
0x106433 -> jmp 0x001064ff
0x104433 -> and eax,0xf000
0x10c435 -> mov rax,qword ptr [rbp + -0xa8]
0x10a436 -> jz 0x0010a4a4
0x10a438 -> cmp dword ptr [rbp + -0x14],0x0
0x108438 -> call g_log
0x106438 -> mov rax,qword ptr [rbp + -0x18]
0x104438 -> cmp eax,0x8000
0x10c43c -> mov rax,qword ptr [rax + 0x18]
0x10a43c -> jle 0x0010a474
0x10643c -> test rax,rax
0x10843d -> mov eax,0x0
0x10443d -> jnz 0x00104536
0x10a43e -> lea rdx,[0x10edbf]
0x10643f -> jz 0x00106453
0x10c440 -> add rax,0x4
0x106441 -> mov rax,qword ptr [rbp + -0x18]
0x108442 -> jmp 0x00108679
0x104443 -> mov rax,qword ptr [rbp + -0xc8]
0x10c444 -> mov eax,dword ptr [rax]
0x10a445 -> mov esi,0x20
0x106445 -> cmp qword ptr [rbp + -0x48],rax
0x10c446 -> mov dword ptr [rbp + -0x34],eax
0x108447 -> lea rdx,[0x10e8d8]
0x10c449 -> lea rax,[rbp + -0x40]
0x106449 -> jbe 0x00106453
0x10a44a -> mov edi,0x0
0x10444a -> lea rbx,[rax + 0x13]
0x10644b -> mov rax,qword ptr [rbp + -0x18]
0x10c44d -> mov qword ptr [rbp + -0x98],rax
0x10844e -> mov esi,0x20
0x10444e -> mov rax,qword ptr [rbp + -0xc8]
0x10a44f -> mov eax,0x0
0x10644f -> mov qword ptr [rbp + -0x48],rax
0x108453 -> mov edi,0x0
0x106453 -> cmp dword ptr [rbp + -0x38],0x0
0x10c454 -> nop
0x10a454 -> call g_log
0x10c455 -> jmp 0x0010c486
0x104455 -> add rax,0x13
0x10c457 -> mov rax,qword ptr [rbp + -0xa0]
0x106457 -> jnz 0x00106482
0x108458 -> mov eax,0x0
0x10a459 -> mov rax,qword ptr [0x00311260]
0x106459 -> mov eax,dword ptr [rbp + -0x24]
0x104459 -> mov rdi,rax
0x10645c -> mov rcx,qword ptr [rbp + -0x48]
0x10445c -> call strlen
0x10845d -> call g_log
0x10c45e -> movzx edx,byte ptr [rax]
0x10a460 -> mov edx,0x1
0x106460 -> mov edx,dword ptr [rbp + -0x34]
0x10c461 -> mov rax,qword ptr [rbp + -0x98]
0x104461 -> sub rax,0x5
0x108462 -> mov eax,0x0
0x106463 -> lea rsi,[rbp + -0x20]
0x10a465 -> lea rsi,[0x311390]
0x104465 -> add rax,rbx
0x108467 -> jmp 0x00108679
0x106467 -> mov r9d,0x1
0x10c468 -> movzx eax,byte ptr [rax]
0x104468 -> lea rsi,[0x10e015]
0x10c46b -> cmp dl,al
0x10a46c -> mov rdi,rax
0x10846c -> mov rax,qword ptr [rbp + -0x18]
0x10c46d -> jnz 0x0010c4de
0x10646d -> mov r8,rcx
0x10c46f -> add qword ptr [rbp + -0xa0],0x1
0x10a46f -> call g_array_append_vals
0x10446f -> mov rdi,rax
0x108470 -> mov eax,dword ptr [rax + 0xd8]
0x106470 -> mov ecx,0x0
0x104472 -> call strcmp
0x10a474 -> cmp dword ptr [rbp + -0x14],0x0
0x106475 -> mov edi,eax
0x108476 -> mov rdx,qword ptr [rbp + -0x18]
0x10c477 -> add qword ptr [rbp + -0x98],0x1
0x106477 -> call splice
0x104477 -> test eax,eax
0x10a478 -> jns 0x0010a495
0x104479 -> jnz 0x00104539
0x10a47a -> lea rdx,[0x10edd8]
0x10847a -> mov rsi,rdx
0x10647c -> mov qword ptr [rbp + -0x10],rax
0x10847d -> mov edi,eax
0x10c47f -> sub dword ptr [rbp + -0xb4],0x8
0x10847f -> call 0x00106fae
0x10447f -> mov rdx,qword ptr [rbp + -0xf8]
0x106480 -> jmp 0x001064da
0x10a481 -> mov esi,0x20
0x106482 -> mov edx,dword ptr [rbp + -0x24]
0x108484 -> test eax,eax
0x106485 -> mov rsi,qword ptr [rbp + -0x48]
0x10c486 -> cmp dword ptr [rbp + -0xb4],0x7
0x10a486 -> mov edi,0x0
0x108486 -> jz 0x001084ad
0x104486 -> mov rsi,qword ptr [rbp + -0xf0]
0x108488 -> lea rdx,[0x10e906]
0x106489 -> lea rcx,[rbp + -0x20]
0x10a48b -> mov eax,0x0
0x10c48d -> jg 0x0010c457
0x10648d -> mov eax,dword ptr [rbp + -0x34]
0x10448d -> mov rax,qword ptr [rbp + -0xc0]
0x10c48f -> cmp dword ptr [rbp + -0xb4],0x0
0x10848f -> mov esi,0x20
0x10a490 -> call g_log
0x106490 -> mov r9d,0x1
0x108494 -> mov edi,0x0
0x104494 -> mov rcx,rdx
0x10a495 -> mov eax,dword ptr [rbp + -0x18]
0x10c496 -> jz 0x0010c4cb
0x106496 -> mov r8,rsi
0x104497 -> mov edx,0x0
0x10c498 -> mov eax,dword ptr [rbp + -0xb4]
0x10a498 -> mov edi,eax
0x108499 -> mov eax,0x0
0x106499 -> mov esi,0x0
0x10a49a -> call close
0x10449c -> mov rdi,rax
0x10c49e -> mov edi,eax
0x10849e -> call g_log
0x10649e -> mov edi,eax
0x10a49f -> jmp 0x0010a656
0x10449f -> call 0x00104624
0x10c4a0 -> call 0x0010c539
0x1064a0 -> call splice
0x1084a3 -> mov eax,0x0
0x10a4a4 -> mov eax,dword ptr [rbp + -0x18]
0x1044a4 -> mov qword ptr [rbp + -0xb8],rax
0x10c4a5 -> mov byte ptr [rbp + -0xb9],al
0x1064a5 -> mov qword ptr [rbp + -0x10],rax
0x10a4a7 -> mov edx,0x0
0x1084a8 -> jmp 0x00108679
0x1064a9 -> mov rax,qword ptr [rbp + -0x50]
0x10c4ab -> mov rax,qword ptr [rbp + -0xa0]
0x1044ab -> call __errno_location
0x10a4ac -> mov esi,0x3
0x1084ad -> mov rax,qword ptr [rbp + -0x18]
0x1064ad -> mov rax,qword ptr [rax + 0xe0]
0x1044b0 -> mov rdx,rax
0x10a4b1 -> mov edi,eax
0x1084b1 -> mov rdi,rax
0x10c4b2 -> movzx edx,byte ptr [rax]
0x10a4b3 -> mov eax,0x0
0x1044b3 -> mov eax,dword ptr [rbp + -0xdc]
0x1084b4 -> call 0x0010c58a
0x1064b4 -> mov eax,dword ptr [rax + 0x20]
0x10c4b5 -> mov rax,qword ptr [rbp + -0x98]
0x1064b7 -> and eax,0x40
0x10a4b8 -> call fcntl
0x1084b9 -> test eax,eax
0x1044b9 -> mov dword ptr [rdx],eax
0x1064ba -> test eax,eax
0x1084bb -> jnz 0x001084ed
0x1044bb -> mov rax,qword ptr [rbp + -0xf8]
0x10c4bc -> movzx eax,byte ptr [rax]
0x1064bc -> jz 0x001064ca
0x10a4bd -> mov dword ptr [rbp + -0x10],eax
0x1084bd -> mov rax,qword ptr [rbp + -0x18]
0x1064be -> mov eax,dword ptr [rbp + -0x24]
0x10c4bf -> xor eax,edx
0x10a4c0 -> cmp dword ptr [rbp + -0x10],-0x1
0x10c4c1 -> and al,byte ptr [rbp + -0xb9]
0x1084c1 -> mov rax,qword ptr [rax + 0x8]
0x1064c1 -> mov edi,eax
0x1044c2 -> mov rax,qword ptr [rax]
0x1064c3 -> call fsync
0x10a4c4 -> jnz 0x0010a4e6
0x1084c5 -> mov rcx,rax
0x1044c5 -> test rax,rax
0x10a4c6 -> lea rdx,[0x10edf8]
0x10c4c7 -> test al,al
0x1084c8 -> lea rdx,[0x10e920]
0x1064c8 -> jmp 0x001064da
0x1044c8 -> jnz 0x001045bc
0x10c4c9 -> jnz 0x0010c4e1
0x1064ca -> cmp dword ptr [rbp + -0x54],0x0
0x10c4cb -> mov rax,qword ptr [rbp + -0x78]
0x10a4cd -> mov esi,0x20
0x1064ce -> jz 0x001064da
0x1044ce -> cmp qword ptr [rbp + -0xd8],0x0
0x10c4cf -> mov rdi,rax
0x1084cf -> mov esi,0x20
0x1064d0 -> mov eax,dword ptr [rbp + -0x24]
0x10c4d2 -> call freeaddrinfo
0x10a4d2 -> mov edi,0x0
0x1064d3 -> mov edi,eax
0x1084d4 -> mov edi,0x0
0x1064d5 -> call fdatasync
0x1044d6 -> jnz 0x001044f3
0x10c4d7 -> mov eax,0x1
0x10a4d7 -> mov eax,0x0
0x1044d8 -> mov edx,0x8
0x1084d9 -> mov eax,0x0
0x1064da -> mov rax,qword ptr [rbp + -0x50]
0x10c4dc -> jmp 0x0010c515
0x10a4dc -> call g_log
0x1044dd -> mov esi,0x1
0x10c4de -> nop
0x1084de -> call g_log
0x1064de -> mov rax,qword ptr [rax + 0xe0]
0x10c4df -> jmp 0x0010c4e2
0x10c4e1 -> nop
0x10a4e1 -> jmp 0x0010a62b
0x10c4e2 -> mov rax,qword ptr [rbp + -0xa8]
0x1044e2 -> mov edi,0x0
0x1084e3 -> mov eax,0x0
0x1064e5 -> mov eax,dword ptr [rax + 0x20]
0x10a4e6 -> mov eax,dword ptr [rbp + -0x10]
0x1044e7 -> call g_array_new
0x1084e8 -> jmp 0x00108679
0x1064e8 -> and eax,0x2000
0x10c4e9 -> mov rax,qword ptr [rax + 0x28]
0x10a4e9 -> and ah,0xf7
0x10a4ec -> mov dword ptr [rbp + -0xc],eax
0x1044ec -> mov qword ptr [rbp + -0xd8],rax
0x10c4ed -> mov qword ptr [rbp + -0xa8],rax
0x1084ed -> mov rax,qword ptr [rbp + -0x18]
0x1064ed -> test eax,eax
0x10a4ef -> mov eax,dword ptr [rbp + -0xc]
0x1064ef -> jz 0x001064fb
0x1084f1 -> mov rax,qword ptr [rax + 0xe0]
0x1064f1 -> mov eax,dword ptr [rbp + -0x24]
0x10a4f2 -> cmp eax,dword ptr [rbp + -0x10]
0x1044f3 -> mov rax,qword ptr [rbp + -0xb8]
0x10c4f4 -> mov rax,qword ptr [rbp + -0xa8]
0x1064f4 -> mov edi,eax
0x10a4f5 -> jz 0x0010a533
0x1064f6 -> call close
0x10a4f7 -> mov edx,dword ptr [rbp + -0xc]
0x1084f8 -> mov rax,qword ptr [rax + 0x50]
0x10a4fa -> mov eax,dword ptr [rbp + -0x18]
0x1044fa -> mov edx,dword ptr [rax + 0x8]
0x10c4fb -> test rax,rax
0x1064fb -> mov rax,qword ptr [rbp + -0x10]
0x1084fc -> test rax,rax
0x10a4fd -> mov esi,0x4
0x1044fd -> mov rax,qword ptr [rbp + -0xb8]
0x10c4fe -> jnz 0x0010c2ec
0x1084ff -> jz 0x0010857e
0x1064ff -> mov rdi,qword ptr [rbp + -0x8]
0x108501 -> mov rax,qword ptr [rbp + -0x18]
0x10a502 -> mov edi,eax
0x106503 -> xor rdi,qword ptr fs:[0x28]
0x10c504 -> mov rax,qword ptr [rbp + -0x78]
0x10a504 -> mov eax,0x0
0x104504 -> mov rcx,qword ptr [rax]
0x108505 -> mov eax,dword ptr [rax + 0x100]
0x104507 -> mov rax,qword ptr [rbp + -0xd8]
0x10c508 -> mov rdi,rax
0x10a509 -> call fcntl
0x10c50b -> call freeaddrinfo
0x10850b -> cmp eax,-0x1
0x10650c -> jz 0x00106513
0x10a50e -> cmp eax,-0x1
0x10850e -> jnz 0x0010857e
0x10650e -> call __stack_chk_fail
0x10450e -> mov rsi,rcx
0x10c510 -> mov eax,0x0
0x108510 -> mov rax,qword ptr [rbp + -0x18]
0x10a511 -> jnz 0x0010a533
0x104511 -> mov rdi,rax
0x10a513 -> lea rdx,[0x10ee18]
0x106513 -> leave
0x108514 -> mov rax,qword ptr [rax + 0xe0]
0x106514 -> ret
0x104514 -> call g_array_append_vals
0x10c515 -> mov rsp,r12
0x106515 -> push rbp
0x106516 -> mov rbp,rsp
0x10c518 -> mov rbx,qword ptr [rbp + -0x28]
0x106519 -> sub rsp,0x40
0x104519 -> mov qword ptr [rbp + -0xd8],rax
0x10a51a -> mov esi,0x20
0x10851b -> mov rax,qword ptr [rax + 0x50]
0x10c51c -> xor rbx,qword ptr fs:[0x28]
0x10651d -> mov dword ptr [rbp + -0x14],edi
0x10a51f -> mov edi,0x0
0x10851f -> mov edx,0x180
0x106520 -> mov qword ptr [rbp + -0x20],rsi
0x104520 -> mov rax,qword ptr [rbp + -0xb8]
0x10a524 -> mov eax,0x0
0x108524 -> mov esi,0x41
0x106524 -> mov qword ptr [rbp + -0x28],rdx
0x10c525 -> jz 0x0010c52c
0x10c527 -> call __stack_chk_fail
0x104527 -> mov esi,0x1
0x106528 -> mov qword ptr [rbp + -0x30],rcx
0x10a529 -> call g_log
0x108529 -> mov rdi,rax
0x10c52c -> lea rsp,[rbp + -0x20]
0x10852c -> mov eax,0x0
0x10652c -> mov dword ptr [rbp + -0x18],r8d
0x10452c -> mov rdi,rax
0x10a52e -> jmp 0x0010a62b
0x10452f -> call g_array_free
0x10c530 -> pop rbx
0x106530 -> mov dword ptr [rbp + -0x34],r9d
0x10c531 -> pop r12
0x108531 -> call open64
0x10c533 -> pop r13
0x10a533 -> mov rdx,qword ptr [rbp + -0x38]
0x106534 -> jmp 0x00106546
0x104534 -> jmp 0x0010453a
0x10c535 -> pop r14
0x108536 -> mov edx,eax
0x106536 -> mov rax,qword ptr [rbp + -0x8]
0x104536 -> nop
0x10c537 -> pop rbp
0x10a537 -> mov rcx,qword ptr [rbp + -0x28]
0x104537 -> jmp 0x0010453a
0x10c538 -> ret
0x108538 -> mov rax,qword ptr [rbp + -0x18]
0x10c539 -> push rbp
0x104539 -> nop
0x10c53a -> mov rbp,rsp
0x10653a -> add qword ptr [rbp + -0x20],rax
0x10453a -> mov rax,qword ptr [rbp + -0xc0]
0x10a53b -> mov eax,dword ptr [rbp + -0x18]
0x10853c -> mov dword ptr [rax + 0x100],edx
0x10c53d -> mov dword ptr [rbp + -0x14],edi
0x10a53e -> mov rsi,rcx
0x10653e -> mov rax,qword ptr [rbp + -0x8]
0x10c540 -> cmp dword ptr [rbp + -0x14],0x7
0x10a541 -> mov edi,eax
0x104541 -> mov rdi,rax
0x108542 -> mov rax,qword ptr [rbp + -0x18]
0x106542 -> sub qword ptr [rbp + -0x28],rax
0x10a543 -> call 0x00108f5a
0x10c544 -> jle 0x0010c54d
0x104544 -> call g_free
0x10c546 -> mov eax,0xffffffff
0x108546 -> mov eax,dword ptr [rax + 0x100]
0x106546 -> cmp qword ptr [rbp + -0x28],0x0
0x10a548 -> mov qword ptr [rbp + -0x8],rax
0x104549 -> mov rax,qword ptr [rbp + -0xd0]
0x10c54b -> jmp 0x0010c588
0x10654b -> jz 0x0010657d
0x10a54c -> cmp qword ptr [rbp + -0x8],0x0
0x10854c -> cmp eax,-0x1
0x10c54d -> mov byte ptr [rbp + -0x5],0x0
0x10654d -> mov r8d,dword ptr [rbp + -0x34]
0x10854f -> jnz 0x0010857e
0x104550 -> mov rdi,rax
0x10c551 -> mov dword ptr [rbp + -0x4],0x7
0x10a551 -> jnz 0x0010a573
0x108551 -> mov rax,qword ptr [rbp + -0x18]
0x106551 -> mov edi,dword ptr [rbp + -0x18]
0x10a553 -> lea rdx,[0x10ee40]
0x104553 -> call readdir64
0x106554 -> mov rcx,qword ptr [rbp + -0x30]
0x108555 -> mov rax,qword ptr [rax + 0xe0]
0x10c558 -> jmp 0x0010c577
0x106558 -> mov rdx,qword ptr [rbp + -0x28]
0x104558 -> mov qword ptr [rbp + -0xc8],rax
0x10c55a -> mov eax,dword ptr [rbp + -0x4]
0x10a55a -> mov esi,0x20
0x10855c -> mov rax,qword ptr [rax + 0x50]
0x10655c -> mov rsi,qword ptr [rbp + -0x20]
0x10c55d -> mov edx,0x1
0x10a55f -> mov edi,0x0
0x10455f -> cmp qword ptr [rbp + -0xc8],0x0
0x108560 -> mov rcx,rax
0x106560 -> mov eax,dword ptr [rbp + -0x14]
0x10c562 -> mov ecx,eax
0x108563 -> lea rdx,[0x10e948]
0x106563 -> mov r9d,r8d
0x10c564 -> shl edx,cl
0x10a564 -> mov eax,0x0
0x10c566 -> mov eax,edx
0x106566 -> mov r8d,edi
0x104567 -> jnz 0x001043a8
0x10c568 -> mov edx,eax
0x10a569 -> call g_log
0x106569 -> mov edi,eax
0x10c56a -> movzx eax,byte ptr [rbp + -0x5]
0x10856a -> mov esi,0x20
0x10656b -> call 0x001063dd
0x10456d -> call __errno_location
0x10c56e -> or eax,edx
0x10a56e -> jmp 0x0010a62b
0x10856f -> mov edi,0x0
0x10c570 -> mov byte ptr [rbp + -0x5],al
0x106570 -> cdqe
0x106572 -> mov qword ptr [rbp + -0x8],rax
0x104572 -> mov eax,dword ptr [rax]
0x10c573 -> sub dword ptr [rbp + -0x4],0x1
0x10a573 -> mov eax,dword ptr [0x003111e4]
0x108574 -> mov eax,0x0
0x104574 -> test eax,eax
0x106576 -> cmp qword ptr [rbp + -0x8],0x0
0x104576 -> jz 0x001045e6
0x10c577 -> mov edx,dword ptr [rbp + -0x4]
0x104578 -> call __errno_location
0x10a579 -> test eax,eax
0x108579 -> call g_log
0x10c57a -> mov eax,dword ptr [rbp + -0x14]
0x10a57b -> jnz 0x0010a5fa
0x10657b -> jg 0x00106536
0x10c57d -> add eax,edx
0x10a57d -> mov rax,qword ptr [0x00311380]
0x10657d -> cmp qword ptr [rbp + -0x8],0x0
0x10457d -> mov eax,dword ptr [rax]
0x10857e -> mov rax,qword ptr [rbp + -0x18]
0x10c57f -> cmp eax,0x7
0x10457f -> mov edi,eax
0x104581 -> call strerror
0x10c582 -> jg 0x0010c55a
0x108582 -> mov rdx,qword ptr [rax + 0x90]
0x106582 -> js 0x0010658b
0x10c584 -> movzx eax,byte ptr [rbp + -0x5]
0x10a584 -> mov rdi,rax
0x106584 -> cmp qword ptr [rbp + -0x28],0x0
0x104586 -> mov rbx,rax
0x10a587 -> call g_hash_table_destroy
0x10c588 -> pop rbp
0x10c589 -> ret
0x108589 -> mov rax,qword ptr [rbp + -0x18]
0x106589 -> jz 0x00106592
0x104589 -> lea rdi,[0x10dfd9]
0x10c58a -> push rbp
0x10c58b -> mov rbp,rsp
0x10658b -> mov eax,0x1
0x10a58c -> mov qword ptr [0x00311380],0x0
0x10858d -> mov rax,qword ptr [rax + 0xe0]
0x10c58e -> sub rsp,0x140
0x106590 -> jmp 0x00106597
0x104590 -> call g_quark_from_static_string
0x106592 -> mov eax,0x0
0x108594 -> mov rax,qword ptr [rax + 0x30]
0x10c595 -> mov qword ptr [rbp + -0x138],rdi
0x104595 -> mov esi,eax
0x10a597 -> mov dword ptr [rbp + -0x1c],0x0
0x106597 -> leave
0x104597 -> mov rax,qword ptr [rbp + -0xf8]
0x108598 -> mov rsi,rdx
0x106598 -> ret
0x106599 -> push rbp
0x10659a -> mov rbp,rsp
0x10859b -> mov rdi,rax
0x10c59c -> mov rax,qword ptr fs:[0x28]
0x10659d -> sub rsp,0x50
0x10a59e -> jmp 0x0010a5c4
0x10859e -> call 0x0010395c
0x10459e -> mov r8,rbx
0x10a5a0 -> mov rax,qword ptr [0x00311268]
0x1065a1 -> mov qword ptr [rbp + -0x38],rdi
0x1045a1 -> lea rcx,[0x10e020]
0x1085a3 -> test eax,eax
0x10c5a5 -> mov qword ptr [rbp + -0x8],rax
0x1085a5 -> jz 0x001085d7
0x1065a5 -> mov qword ptr [rbp + -0x40],rsi
0x10a5a7 -> mov rax,qword ptr [rax]
0x1085a7 -> mov rax,qword ptr [rbp + -0x18]
0x1045a8 -> mov edx,0x8
0x10c5a9 -> xor eax,eax
0x1065a9 -> mov qword ptr [rbp + -0x48],rdx
0x10a5aa -> mov edx,dword ptr [rbp + -0x1c]
0x10c5ab -> mov rax,qword ptr [rbp + -0x138]
0x1085ab -> mov rax,qword ptr [rax + 0x8]
0x10a5ad -> movsxd rdx,edx
0x1065ad -> mov qword ptr [rbp + -0x50],rcx
0x1045ad -> mov rdi,rax
0x1085af -> mov rcx,rax
0x10a5b0 -> shl rdx,0x2
0x1045b0 -> mov eax,0x0
0x1065b1 -> mov rax,qword ptr [rbp + -0x50]
0x10c5b2 -> mov rax,qword ptr [rax + 0xe0]
0x1085b2 -> lea rdx,[0x10e980]
0x10a5b4 -> add rax,rdx
0x1065b5 -> mov rax,qword ptr [rax + 0xe0]
0x1045b5 -> call g_set_error
0x10a5b7 -> mov eax,dword ptr [rax]
0x10c5b9 -> mov rax,qword ptr [rax + 0x18]
0x10a5b9 -> mov edi,eax
0x1085b9 -> mov esi,0x20
0x1045ba -> jmp 0x001045bd
0x10a5bb -> call close
0x1065bc -> mov eax,dword ptr [rax + 0x20]
0x1045bc -> nop
0x10c5bd -> test rax,rax
0x1045bd -> cmp qword ptr [rbp + -0xd8],0x0
0x1085be -> mov edi,0x0
0x1065bf -> and eax,0x4
0x10c5c0 -> jnz 0x0010c5e7
0x10a5c0 -> add dword ptr [rbp + -0x1c],0x1
0x10c5c2 -> lea rdx,[0x10f578]
0x1065c2 -> test eax,eax
0x1085c3 -> mov eax,0x0
0x10a5c4 -> mov rax,qword ptr [0x00311268]
0x1065c4 -> jnz 0x0010660a
0x1045c5 -> jz 0x001045db
0x1065c6 -> mov rax,qword ptr [rbp + -0x50]
0x1045c7 -> mov rax,qword ptr [rbp + -0xd8]
0x1085c8 -> call g_log
0x10c5c9 -> mov esi,0x20
0x1065ca -> mov rax,qword ptr [rax + 0xe0]
0x10a5cb -> mov edx,dword ptr [rax + 0x8]
0x1085cd -> mov eax,0x0
0x10c5ce -> mov edi,0x0
0x10a5ce -> mov eax,dword ptr [rbp + -0x1c]
0x1045ce -> mov esi,0x1
0x10a5d1 -> cmp edx,eax
0x1065d1 -> mov eax,dword ptr [rax + 0x20]
0x1085d2 -> jmp 0x00108679
0x10c5d3 -> mov eax,0x0
0x10a5d3 -> ja 0x0010a5a0
0x1045d3 -> mov rdi,rax
0x1065d4 -> and eax,0x10000
0x10a5d5 -> mov rax,qword ptr [0x00311268]
0x1045d6 -> call g_array_free
0x1085d7 -> mov rax,qword ptr [rbp + -0x18]
0x10c5d8 -> call g_log
0x1065d9 -> test eax,eax
0x1085db -> lea rdx,[0x103a77]
0x1065db -> jz 0x001065ed
0x1045db -> mov qword ptr [rbp + -0xd8],0x0
0x10a5dc -> mov esi,0x1
0x10c5dd -> mov eax,0x1
0x1065dd -> mov rax,qword ptr [rbp + -0x50]
0x10a5e1 -> mov rdi,rax
0x1065e1 -> mov rax,qword ptr [rax + 0x98]
0x10c5e2 -> jmp 0x0010c7cd
0x1085e2 -> mov qword ptr [rax + 0x148],rdx
0x10a5e4 -> call g_array_free
0x1045e6 -> cmp qword ptr [rbp + -0xd0],0x0
0x10c5e7 -> mov rax,qword ptr [rbp + -0x138]
0x1065e8 -> test rax,rax
0x10a5e9 -> mov rax,qword ptr [rbp + -0x28]
0x1085e9 -> mov rax,qword ptr [rbp + -0x18]
0x1065eb -> jz 0x0010660a
0x10a5ed -> mov esi,0x0
0x1085ed -> mov rdi,rax
0x1065ed -> mov rcx,qword ptr [rbp + -0x50]
0x10c5ee -> mov rax,qword ptr [rax + 0xe0]
0x1045ee -> jz 0x001045ff
0x1085f0 -> call 0x001079e6
0x1045f0 -> mov rax,qword ptr [rbp + -0xd0]
0x1065f1 -> mov rdx,qword ptr [rbp + -0x48]
0x10a5f2 -> mov rdi,rax
0x10c5f5 -> mov rax,qword ptr [rax + 0x18]
0x10a5f5 -> call g_array_free
0x1085f5 -> xor eax,0x1
0x1065f5 -> mov rsi,qword ptr [rbp + -0x40]
0x1045f7 -> mov rdi,rax
0x1085f8 -> test al,al
0x10c5f9 -> lea rsi,[0x10f5a0]
0x1065f9 -> mov rax,qword ptr [rbp + -0x38]
0x10a5fa -> lea rdx,[0x10ee62]
0x1085fa -> jz 0x00108603
0x1045fa -> call closedir
0x1085fc -> mov eax,0x0
0x1065fd -> mov rdi,rax
0x1045ff -> mov rax,qword ptr [rbp + -0xd8]
0x10c600 -> mov rdi,rax
0x106600 -> call 0x0010635d
0x10a601 -> mov esi,0x20
0x108601 -> jmp 0x00108679
0x10c603 -> call fopen64
0x108603 -> mov rax,qword ptr [rbp + -0x18]
0x106605 -> jmp 0x001067ef
0x10a606 -> mov edi,0x0
0x104606 -> mov rbx,qword ptr [rbp + -0x18]
0x108607 -> mov rax,qword ptr [rax + 0xe0]
0x10c608 -> mov qword ptr [rbp + -0x118],rax
0x10660a -> mov rax,qword ptr [rbp + -0x38]
0x10460a -> xor rbx,qword ptr fs:[0x28]
0x10a60b -> mov eax,0x0
0x10860e -> mov eax,dword ptr [rax + 0x20]
0x10660e -> lea rdx,[rax + 0xfff]
0x10c60f -> cmp qword ptr [rbp + -0x118],0x0
0x10a610 -> call g_log
0x108611 -> and eax,0x4
0x104613 -> jz 0x0010461a
0x108614 -> test eax,eax
0x10a615 -> mov rax,qword ptr [rbp + -0x8]
0x106615 -> test rax,rax
0x104615 -> call __stack_chk_fail
0x108616 -> jz 0x00108632
0x10c617 -> jnz 0x0010c795
0x108618 -> mov rax,qword ptr [rbp + -0x18]
0x106618 -> cmovs rax,rdx
0x10a619 -> mov rdi,rax
0x10461a -> add rsp,0xf8
0x10a61c -> call 0x00109f95
0x10861c -> mov rdi,rax
0x10661c -> sar rax,0xc
0x10c61d -> call __errno_location
0x10861f -> call 0x00107f01
0x106620 -> mov qword ptr [rbp + -0x28],rax
0x10a621 -> mov edi,0x0
0x104621 -> pop rbx
0x10c622 -> mov eax,dword ptr [rax]
0x104622 -> pop rbp
0x104623 -> ret
0x10c624 -> mov edi,eax
0x108624 -> xor eax,0x1
0x106624 -> mov rdx,qword ptr [rbp + -0x38]
0x104624 -> push rbp
0x104625 -> mov rbp,rsp
0x10c626 -> call strerror
0x10a626 -> call exit
0x108627 -> test al,al
0x106628 -> mov rax,qword ptr [rbp + -0x48]
0x104628 -> push r13
0x108629 -> jz 0x00108632
0x10462a -> push r12
0x10c62b -> mov rdx,rax
0x10a62b -> mov eax,dword ptr [rbp + -0x18]
0x10862b -> mov eax,0x0
0x10662c -> add rax,rdx
0x10462c -> push rbx
0x10462d -> sub rsp,0x688
0x10c62e -> mov rax,qword ptr [rbp + -0x138]
0x10a62e -> mov edi,eax
0x10662f -> sub rax,0x1
0x10a630 -> call close
0x108630 -> jmp 0x00108679
0x108632 -> mov rax,qword ptr [rbp + -0x18]
0x106633 -> shr rax,0xc
0x104634 -> mov qword ptr [rbp + -0x688],rdi
0x10c635 -> mov rax,qword ptr [rax + 0xe0]
0x10a635 -> mov rax,qword ptr [rbp + -0x8]
0x108636 -> mov rax,qword ptr [rax + 0xe0]
0x106637 -> mov qword ptr [rbp + -0x20],rax
0x10a639 -> mov rdi,rax
0x10663b -> mov rax,qword ptr [rbp + -0x28]
0x10463b -> mov qword ptr [rbp + -0x690],rsi
0x10c63c -> mov rax,qword ptr [rax + 0x18]
0x10a63c -> call g_free
0x10863d -> mov eax,dword ptr [rax + 0x20]
0x10663f -> mov qword ptr [rbp + -0x30],rax
0x10c640 -> mov r8,rdx
0x108640 -> and eax,0x10000
0x10a641 -> mov eax,dword ptr [0x003111e4]
0x104642 -> mov eax,edx
0x10c643 -> mov rcx,rax
0x106643 -> jmp 0x001067aa
0x104644 -> mov qword ptr [rbp + -0x6a0],rcx
0x108645 -> test eax,eax
0x10c646 -> lea rdx,[0x10f5a8]
0x10a647 -> test eax,eax
0x108647 -> jz 0x00108663
0x106648 -> mov rax,qword ptr [rbp + -0x30]
0x10a649 -> jnz 0x0010a656
0x108649 -> mov rax,qword ptr [rbp + -0x18]
0x10a64b -> mov edi,0x1
0x10464b -> mov byte ptr [rbp + -0x694],al
0x10664c -> shl rax,0xc
0x10c64d -> mov esi,0x20
0x10864d -> mov rdi,rax
0x10a650 -> call exit
0x108650 -> call 0x00107f01
0x106650 -> mov qword ptr [rbp + -0x18],rax
0x104651 -> mov rax,qword ptr fs:[0x28]
0x10c652 -> mov edi,0x0
0x106654 -> mov rax,qword ptr [rbp + -0x38]
0x10a655 -> nop
0x108655 -> xor eax,0x1
0x10a656 -> leave
0x10c657 -> mov eax,0x0
0x10a657 -> ret
0x10a658 -> push rbp
0x108658 -> test al,al
0x106658 -> sub rax,qword ptr [rbp + -0x18]
0x10a659 -> mov rbp,rsp
0x10865a -> jz 0x00108663
0x10465a -> mov qword ptr [rbp + -0x28],rax
0x10c65c -> call g_log
0x10a65c -> sub rsp,0x40
0x10865c -> mov eax,0x0
0x10665c -> mov qword ptr [rbp + -0x10],rax
0x10465e -> xor eax,eax
0x10a660 -> mov qword ptr [rbp + -0x38],rdi
0x106660 -> mov eax,0x1000
0x104660 -> lea rax,[0x10e048]
0x10c661 -> mov eax,0x1
0x108661 -> jmp 0x00108679
0x108663 -> mov rax,qword ptr [rbp + -0x18]
0x10a664 -> mov dword ptr [rbp + -0x3c],esi
0x106665 -> sub rax,qword ptr [rbp + -0x10]
0x10c666 -> jmp 0x0010c7cd
0x10a667 -> mov rax,qword ptr fs:[0x28]
0x108667 -> mov eax,dword ptr [rax + 0xd8]
0x104667 -> mov qword ptr [rbp + -0x630],rax
0x106669 -> test rax,rax
0x10c66b -> lea rax,[rbp + -0x110]
0x10666c -> jle 0x0010667d
0x10866d -> mov edi,eax
0x10666e -> mov eax,0x1000
0x10466e -> lea rax,[0x10e070]
0x10866f -> call 0x0010d38f
0x10a670 -> mov qword ptr [rbp + -0x8],rax
0x10c672 -> mov esi,0x23
0x106673 -> sub rax,qword ptr [rbp + -0x10]
0x10a674 -> xor eax,eax
0x108674 -> mov eax,0x1
0x104675 -> mov qword ptr [rbp + -0x628],rax
0x10a676 -> mov dword ptr [rbp + -0x20],0x0
0x10c677 -> mov rdi,rax
0x106677 -> cmp qword ptr [rbp + -0x48],rax
0x108679 -> mov rcx,qword ptr [rbp + -0x8]
0x10c67a -> call strchr
0x10667b -> jc 0x0010668e
0x10467c -> mov qword ptr [rbp + -0x668],0x0
0x10a67d -> jmp 0x0010a6cb
0x10867d -> xor rcx,qword ptr fs:[0x28]
0x10667d -> mov rax,qword ptr [rbp + -0x10]
0x10c67f -> mov qword ptr [rbp + -0x128],rax
0x10a67f -> lea rcx,[rbp + -0x28]
0x106681 -> mov edx,0x1000
0x10a683 -> mov eax,dword ptr [rbp + -0x3c]
0x10c686 -> cmp qword ptr [rbp + -0x128],0x0
0x10a686 -> mov edx,0x4
0x108686 -> jz 0x0010868d
0x106686 -> sub rdx,rax
0x104687 -> mov qword ptr [rbp + -0x660],0x0
0x108688 -> call __stack_chk_fail
0x106689 -> mov rax,rdx
0x10a68b -> mov rsi,rcx
0x10668c -> jmp 0x00106692
0x10868d -> leave
0x10c68e -> jz 0x0010c69a
0x10a68e -> mov edi,eax
0x10868e -> ret
0x10668e -> mov rax,qword ptr [rbp + -0x48]
0x10868f -> push rbp
0x10c690 -> mov rax,qword ptr [rbp + -0x128]
0x10a690 -> call read
0x108690 -> mov rbp,rsp
0x106692 -> mov qword ptr [rbp + -0x8],rax
0x104692 -> lea rax,[0x10e0a1]
0x108693 -> sub rsp,0x40
0x10a695 -> mov dword ptr [rbp + -0x1c],eax
0x106696 -> mov rax,qword ptr [rbp + -0x50]
0x10c697 -> mov byte ptr [rax],0x0
0x108697 -> mov qword ptr [rbp + -0x28],rdi
0x10a698 -> mov eax,dword ptr [rbp + -0x1c]
0x104699 -> mov qword ptr [rbp + -0x350],rax
0x10c69a -> lea rax,[rbp + -0x110]
0x10669a -> mov rax,qword ptr [rax + 0xe0]
0x10a69b -> cmp eax,-0x1
0x10869b -> mov dword ptr [rbp + -0x2c],esi
0x10a69e -> jz 0x0010a6ae
0x10869e -> mov qword ptr [rbp + -0x38],rdx
0x10a6a0 -> test eax,eax
0x1046a0 -> mov dword ptr [rbp + -0x348],0x1
0x10c6a1 -> mov qword ptr [rbp + -0x128],rax
0x1066a1 -> mov eax,dword ptr [rax + 0x20]
0x10a6a2 -> jnz 0x0010a6c4
0x1086a2 -> mov dword ptr [rbp + -0x30],ecx
0x10a6a4 -> mov eax,0xffffffff
0x1066a4 -> and eax,0x4
0x1086a5 -> mov rax,qword ptr fs:[0x28]
0x1066a7 -> test eax,eax
0x10c6a8 -> jmp 0x0010c6b2
0x10a6a9 -> jmp 0x0010a7e9
0x1066a9 -> jnz 0x001066bd
0x10c6aa -> add qword ptr [rbp + -0x128],0x1
0x1046aa -> mov dword ptr [rbp + -0x344],0x2
0x1066ab -> mov rax,qword ptr [rbp + -0x50]
0x10a6ae -> lea rdi,[0x10ee78]
0x1086ae -> mov qword ptr [rbp + -0x8],rax
0x1066af -> add rax,0xa0
0x10c6b2 -> mov rax,qword ptr [rbp + -0x128]
0x1086b2 -> xor eax,eax
0x1086b4 -> lea rcx,[rbp + -0x20]
0x1046b4 -> lea rax,[rbp + -0x5a0]
0x10a6b5 -> call 0x0010d3ef
0x1066b5 -> mov rdi,rax
0x1086b8 -> mov rax,qword ptr [rbp + -0x28]
0x1066b8 -> call pthread_rwlock_rdlock
0x10c6b9 -> movzx eax,byte ptr [rax]
0x10a6ba -> mov eax,0xffffffff
0x1046bb -> mov qword ptr [rbp + -0x340],rax
0x10c6bc -> test al,al
0x1086bc -> mov edx,0x4
0x1066bd -> mov rax,qword ptr [rbp + -0x50]
0x10c6be -> jz 0x0010c6eb
0x10a6bf -> jmp 0x0010a7e9
0x10c6c0 -> call __ctype_b_loc
0x1086c1 -> mov rsi,rcx
0x1066c1 -> mov rax,qword ptr [rax + 0xf8]
0x1046c2 -> mov dword ptr [rbp + -0x338],0x0
0x10a6c4 -> mov eax,dword ptr [rbp + -0x1c]
0x1086c4 -> mov rdi,rax
0x10c6c5 -> mov rdx,qword ptr [rax]
0x10a6c7 -> add dword ptr [rbp + -0x20],eax
0x1086c7 -> call 0x001036fe
0x10c6c8 -> mov rax,qword ptr [rbp + -0x128]
0x1066c8 -> mov rdx,qword ptr [rbp + -0x30]
0x10a6ca -> nop
0x10a6cb -> mov eax,dword ptr [rbp + -0x20]
0x1086cc -> mov eax,dword ptr [rbp + -0x20]
0x1066cc -> shl rdx,0x2
0x1046cc -> lea rax,[0x10e0ac]
0x10a6ce -> cmp eax,0x3
0x10c6cf -> movzx eax,byte ptr [rax]
0x1086cf -> mov edi,eax
0x1066d0 -> add rax,rdx
0x10a6d1 -> jbe 0x0010a67f
0x1086d1 -> call ntohl
0x10c6d2 -> movsx rax,al
0x10a6d3 -> mov eax,dword ptr [rbp + -0x28]
0x1066d3 -> mov eax,dword ptr [rax]
0x1046d3 -> mov qword ptr [rbp + -0x330],rax
0x1066d5 -> cmp eax,-0x1
0x10c6d6 -> add rax,rax
0x10a6d6 -> add eax,0x1
0x1086d6 -> mov dword ptr [rbp + -0x20],eax
0x1066d8 -> jz 0x00106723
0x10c6d9 -> add rax,rdx
0x10a6d9 -> mov eax,eax
0x1086d9 -> mov eax,dword ptr [rbp + -0x20]
0x1066da -> mov rax,qword ptr [rbp + -0x50]
0x1046da -> mov dword ptr [rbp + -0x328],0x0
0x10a6db -> mov rdi,rax
0x10c6dc -> movzx eax,word ptr [rax]
0x1086dc -> test eax,eax
0x10a6de -> call g_malloc0
0x1086de -> jz 0x0010871d
0x1066de -> mov rax,qword ptr [rax + 0xf8]
0x10c6df -> movzx eax,ax
0x1086e0 -> mov eax,dword ptr [rbp + -0x20]
0x10c6e2 -> and eax,0x2000
0x10a6e3 -> mov qword ptr [rbp + -0x18],rax
0x1086e3 -> add eax,0x1
0x1046e4 -> mov dword ptr [rbp + -0x324],0x2
0x1066e5 -> mov rdx,qword ptr [rbp + -0x30]
0x1086e6 -> mov eax,eax
0x10c6e7 -> test eax,eax
0x10a6e7 -> mov eax,dword ptr [rbp + -0x28]
0x1086e8 -> mov rdi,rax
0x10c6e9 -> jnz 0x0010c6aa
0x1066e9 -> shl rdx,0x2
0x10a6ea -> mov edx,eax
0x10c6eb -> mov rax,qword ptr [rbp + -0x128]
0x1086eb -> call malloc
0x10a6ec -> mov rcx,qword ptr [rbp + -0x18]
0x1066ed -> add rax,rdx
0x1046ee -> lea rax,[rbp + -0x5a0]
0x10a6f0 -> mov eax,dword ptr [rbp + -0x3c]
0x1086f0 -> mov qword ptr [rbp + -0x18],rax
0x1066f0 -> mov eax,dword ptr [rax]
0x10c6f2 -> movzx eax,byte ptr [rax]
0x1066f2 -> shl eax,0xc
0x10a6f3 -> mov rsi,rcx
0x1086f4 -> mov eax,dword ptr [rbp + -0x20]
0x10c6f5 -> test al,al
0x1066f5 -> mov edx,eax
0x1046f5 -> add rax,0x18
0x10a6f6 -> mov edi,eax
0x10c6f7 -> jnz 0x0010c6fe
0x1086f7 -> mov edx,eax
0x1066f7 -> mov rax,qword ptr [rbp + -0x10]
0x10a6f8 -> call 0x0010d718
0x10c6f9 -> jmp 0x0010c795
0x1086f9 -> mov rax,qword ptr [rbp + -0x18]
0x1046f9 -> mov qword ptr [rbp + -0x320],rax
0x1066fb -> lea rcx,[rdx + rax*0x1]
0x10a6fd -> mov eax,dword ptr [rbp + -0x28]
0x1086fd -> add rax,rdx
0x10c6fe -> mov rax,qword ptr [rbp + -0x128]
0x1066ff -> mov rdx,qword ptr [rbp + -0x8]
0x10a700 -> mov edx,eax
0x108700 -> mov byte ptr [rax],0x0
0x104700 -> mov dword ptr [rbp + -0x318],0x0
0x10a702 -> mov rax,qword ptr [rbp + -0x18]
0x108703 -> mov eax,dword ptr [rbp + -0x20]
0x106703 -> mov rax,qword ptr [rbp + -0x50]
0x10c705 -> mov qword ptr [rbp + -0x120],rax
0x10a706 -> add rax,rdx
0x108706 -> mov edx,eax
0x106707 -> mov eax,dword ptr [rax + 0xf0]
0x108708 -> mov rcx,qword ptr [rbp + -0x18]
0x10a709 -> mov byte ptr [rax],0x0
0x10470a -> lea rax,[0x10e0b5]
0x10c70c -> jmp 0x0010c716
0x10a70c -> mov dword ptr [rbp + -0x24],0x0
0x10870c -> mov rax,qword ptr [rbp + -0x28]
0x10670d -> mov rsi,qword ptr [rbp + -0x40]
0x10c70e -> add qword ptr [rbp + -0x120],0x1
0x108710 -> mov rsi,rcx
0x106711 -> mov edi,eax
0x104711 -> mov qword ptr [rbp + -0x310],rax
0x10a713 -> jmp 0x0010a7b0
0x108713 -> mov rdi,rax
0x106713 -> call pread64
0x10c716 -> mov rax,qword ptr [rbp + -0x120]
0x108716 -> call 0x001036fe
0x10a718 -> mov rax,qword ptr [rbp + -0x38]
0x106718 -> cmp qword ptr [rbp + -0x8],rax
0x104718 -> mov dword ptr [rbp + -0x308],0x0
0x10871b -> jmp 0x0010872d
0x10a71c -> mov rax,qword ptr [rax]
0x10671c -> jz 0x00106766
0x10c71d -> movzx eax,byte ptr [rax]
0x10871d -> lea rdi,[0x10deb5]
0x10671e -> jmp 0x001067c3
0x10a71f -> mov edx,dword ptr [rbp + -0x24]
0x10c720 -> test al,al
0x10c722 -> jz 0x0010c74f
0x10a722 -> movsxd rdx,edx
0x104722 -> mov dword ptr [rbp + -0x304],0x1
0x106723 -> mov rax,qword ptr [rbp + -0x50]
0x10c724 -> call __ctype_b_loc
0x108724 -> call strdup
0x10a725 -> shl rdx,0x3
0x106727 -> mov rax,qword ptr [rax + 0xe0]
0x10c729 -> mov rdx,qword ptr [rax]
0x10a729 -> add rax,rdx
0x108729 -> mov qword ptr [rbp + -0x18],rax
0x10c72c -> mov rax,qword ptr [rbp + -0x120]
0x10a72c -> mov rax,qword ptr [rax]
0x10472c -> lea rax,[rbp + -0x5a0]
0x10872d -> mov dword ptr [rbp + -0x1c],0x0
0x10672e -> mov eax,dword ptr [rax + 0x20]
0x10a72f -> mov qword ptr [rbp + -0x10],rax
0x106731 -> and eax,0x10000
0x10c733 -> movzx eax,byte ptr [rax]
0x10a733 -> mov rax,qword ptr [rbp + -0x10]
0x104733 -> add rax,0x8
0x108734 -> jmp 0x001087ec
0x10c736 -> movsx rax,al
0x106736 -> test eax,eax
0x10a737 -> mov rax,qword ptr [rax + 0x40]
0x104737 -> mov qword ptr [rbp + -0x300],rax
0x106738 -> jz 0x0010674a
0x108739 -> mov rax,qword ptr [rbp + -0x38]
0x10c73a -> add rax,rax
0x10673a -> mov rax,qword ptr [rbp + -0x50]
0x10a73b -> mov rdx,qword ptr [rbp + -0x18]
0x10c73d -> add rax,rdx
0x10873d -> mov rax,qword ptr [rax]
0x10673e -> mov rax,qword ptr [rax + 0x98]
0x10473e -> mov dword ptr [rbp + -0x2f8],0x0
0x10a73f -> mov rsi,rdx
0x10c740 -> movzx eax,word ptr [rax]
0x108740 -> mov edx,dword ptr [rbp + -0x1c]
0x10a742 -> mov rdi,rax
0x10c743 -> movzx eax,ax
0x108743 -> movsxd rdx,edx
0x10a745 -> call strcmp
0x106745 -> test rax,rax
0x10c746 -> and eax,0x2000
0x108746 -> shl rdx,0x3
0x106748 -> jz 0x001067bf
0x104748 -> lea rax,[0x10e0be]
0x10a74a -> test eax,eax
0x10874a -> add rax,rdx
0x10674a -> mov rdx,qword ptr [rbp + -0x8]
0x10c74b -> test eax,eax
0x10a74c -> jnz 0x0010a7ac
0x10c74d -> jz 0x0010c70e
0x10874d -> mov rax,qword ptr [rax]
0x10a74e -> mov rax,qword ptr [rbp + -0x10]
0x10674e -> mov rcx,qword ptr [rbp + -0x50]
0x10c74f -> mov rax,qword ptr [rbp + -0x120]
0x10474f -> mov qword ptr [rbp + -0x2f0],rax
0x108750 -> mov qword ptr [rbp + -0x10],rax
0x10a752 -> mov eax,dword ptr [rax + 0x48]
0x106752 -> mov rsi,qword ptr [rbp + -0x40]
0x108754 -> mov rax,qword ptr [rbp + -0x10]
0x10a755 -> test eax,eax
0x10c756 -> mov byte ptr [rax],0x0
0x106756 -> mov rax,qword ptr [rbp + -0x38]
0x104756 -> mov dword ptr [rbp + -0x2e8],0x0
0x10a757 -> jz 0x0010a76b
0x108758 -> mov eax,dword ptr [rax + 0x20]
0x10c759 -> mov rax,qword ptr [rbp + -0x138]
0x10a759 -> mov rax,qword ptr [rbp + -0x10]
0x10675a -> mov rdi,rax
0x10875b -> and eax,0x4000
0x10a75d -> mov edx,dword ptr [rax + 0x48]
0x10675d -> call 0x0010635d
0x10c760 -> lea rcx,[rax + 0x10]
0x10a760 -> mov rax,qword ptr [rbp + -0x10]
0x108760 -> test eax,eax
0x104760 -> mov dword ptr [rbp + -0x2e4],0x2
0x108762 -> jz 0x00108774
0x106762 -> test eax,eax
0x10c764 -> mov rax,qword ptr [rbp + -0x128]
0x10a764 -> mov eax,dword ptr [rax + 0x4c]
0x108764 -> mov rax,qword ptr [rbp + -0x28]
0x106764 -> jnz 0x001067c2
0x106766 -> mov rax,qword ptr [rbp + -0x50]
0x10a767 -> cmp edx,eax
0x108768 -> mov rax,qword ptr [rax + 0x130]
0x10a769 -> jle 0x0010a794
0x10676a -> mov rax,qword ptr [rax + 0xe0]
0x10476a -> lea rax,[rbp + -0x660]
0x10c76b -> mov edx,0x0
0x10a76b -> mov eax,dword ptr [rbp + -0x3c]
0x10a76e -> mov edx,0x1
0x10876f -> test rax,rax
0x10c770 -> mov rsi,rcx
0x106771 -> mov eax,dword ptr [rax + 0x20]
0x104771 -> mov qword ptr [rbp + -0x2e0],rax
0x108772 -> jz 0x001087e7
0x10c773 -> mov rdi,rax
0x10a773 -> lea rsi,[0x10ee9a]
0x108774 -> mov rax,qword ptr [rbp + -0x10]
0x106774 -> and eax,0x4
0x10c776 -> call 0x0010c0ee
0x106777 -> test eax,eax
0x108778 -> mov rax,qword ptr [rax + 0x40]
0x104778 -> mov dword ptr [rbp + -0x2d8],0x0
0x106779 -> jnz 0x0010678d
0x10a77a -> mov edi,eax
0x10c77b -> test al,al
0x10677b -> mov rax,qword ptr [rbp + -0x50]
0x10a77c -> call 0x0010d7a5
0x10877c -> mov rdx,qword ptr [rbp + -0x18]
0x10c77d -> jz 0x0010c795
0x10c77f -> mov rax,qword ptr [rbp + -0x118]
0x10677f -> add rax,0xa0
0x108780 -> mov rsi,rdx
0x10a781 -> mov rax,qword ptr [rbp + -0x10]
0x104782 -> lea rax,[0x10e0c8]
0x108783 -> mov rdi,rax
0x10a785 -> mov eax,dword ptr [rax + 0x4c]
0x106785 -> mov rdi,rax
0x10c786 -> mov rdi,rax
0x108786 -> call strcmp
0x10a788 -> lea edx,[rax + 0x1]
0x106788 -> call pthread_rwlock_unlock
0x10c789 -> call fclose
0x104789 -> mov qword ptr [rbp + -0x2d0],rax
0x10a78b -> mov rax,qword ptr [rbp + -0x10]
0x10878b -> test eax,eax
0x10878d -> jnz 0x001087e8
0x10678d -> mov rax,qword ptr [rbp + -0x8]
0x10c78e -> mov eax,0x1
0x10a78f -> mov dword ptr [rax + 0x4c],edx
0x10878f -> mov edx,dword ptr [rbp + -0x30]
0x104790 -> mov dword ptr [rbp + -0x2c8],0x0
0x106791 -> sub qword ptr [rbp + -0x48],rax
0x10a792 -> jmp 0x0010a7d8
0x108792 -> mov rax,qword ptr [rbp + -0x28]
0x10c793 -> jmp 0x0010c7cd
0x10a794 -> mov eax,dword ptr [rbp + -0x3c]
0x10c795 -> mov rdx,qword ptr [rbp + -0x118]
0x106795 -> mov rax,qword ptr [rbp + -0x8]
0x108796 -> mov dword ptr [rax + 0x104],edx
0x10a797 -> mov edx,0x1
0x106799 -> add qword ptr [rbp + -0x38],rax
0x10479a -> mov dword ptr [rbp + -0x2c4],0x2
0x10c79c -> lea rax,[rbp + -0x110]
0x10a79c -> lea rsi,[0x10ee9c]
0x10879c -> mov rax,qword ptr [rbp + -0x18]
0x10679d -> mov rax,qword ptr [rbp + -0x8]
0x1087a0 -> mov rdi,rax
0x1067a1 -> add qword ptr [rbp + -0x40],rax
0x10c7a3 -> mov esi,0x100
0x10a7a3 -> mov edi,eax
0x1087a3 -> call free
0x1047a4 -> lea rax,[rbp + -0x5a0]
0x10a7a5 -> call 0x0010d7a5
0x1067a5 -> add qword ptr [rbp + -0x30],0x1
0x10c7a8 -> mov rdi,rax
0x1087a8 -> mov rdx,qword ptr [rbp + -0x10]
0x10a7aa -> jmp 0x0010a7d8
0x1067aa -> mov rax,qword ptr [rbp + -0x30]
0x10c7ab -> call fgets
0x1047ab -> add rax,0x30
0x10a7ac -> add dword ptr [rbp + -0x24],0x1
0x1087ac -> mov rax,qword ptr [rbp + -0x28]
0x1067ae -> cmp rax,qword ptr [rbp + -0x20]
0x1047af -> mov qword ptr [rbp + -0x2c0],rax
0x10c7b0 -> test rax,rax
0x10a7b0 -> mov rax,qword ptr [rbp + -0x38]
0x1087b0 -> mov rsi,rdx
0x1067b2 -> jle 0x00106648
0x10c7b3 -> jnz 0x0010c66b
0x1087b3 -> mov rdi,rax
0x10a7b4 -> mov edx,dword ptr [rax + 0x8]
0x1087b6 -> call 0x001082aa
0x1047b6 -> mov dword ptr [rbp + -0x2b8],0x0
0x10a7b7 -> mov eax,dword ptr [rbp + -0x24]
0x1067b8 -> mov eax,0x0
0x10c7b9 -> mov rax,qword ptr [rbp + -0x118]
0x10a7ba -> cmp edx,eax
0x1087bb -> xor eax,0x1
0x10a7bc -> ja 0x0010a718
0x1067bd -> jmp 0x001067ef
0x1087be -> test al,al
0x1067bf -> nop
0x10c7c0 -> mov rdi,rax
0x1087c0 -> jz 0x001087c9
0x1067c0 -> jmp 0x001067c3
0x1047c0 -> lea rax,[0x10e0cf]
0x10a7c2 -> mov eax,dword ptr [rbp + -0x3c]
0x1087c2 -> mov eax,0x0
0x1067c2 -> nop
0x10c7c3 -> call fclose
0x1067c3 -> mov rax,qword ptr [rbp + -0x50]
0x10a7c5 -> mov edx,0x1
0x1087c7 -> jmp 0x00108816
0x1067c7 -> mov rax,qword ptr [rax + 0xe0]
0x1047c7 -> mov qword ptr [rbp + -0x2b0],rax
0x10c7c8 -> mov eax,0x0
0x1087c9 -> mov rcx,qword ptr [rbp + -0x10]
0x10a7ca -> lea rsi,[0x10ee9e]
0x10c7cd -> mov rcx,qword ptr [rbp + -0x8]
0x1087cd -> mov rax,qword ptr [rbp + -0x28]
0x1067ce -> mov eax,dword ptr [rax + 0x20]
0x1047ce -> mov dword ptr [rbp + -0x2a8],0x0
0x10c7d1 -> xor rcx,qword ptr fs:[0x28]
0x10a7d1 -> mov edi,eax
0x1087d1 -> mov edx,0x1
0x1067d1 -> and eax,0x4
0x10a7d3 -> call 0x0010d7a5
0x1067d4 -> test eax,eax
0x1087d6 -> mov rsi,rcx
0x1067d6 -> jnz 0x001067ea
0x10a7d8 -> mov rax,qword ptr [rbp + -0x18]
0x1067d8 -> mov rax,qword ptr [rbp + -0x50]
0x1047d8 -> mov dword ptr [rbp + -0x2a4],0x2
0x1087d9 -> mov rdi,rax
0x10c7da -> jz 0x0010c7e1
0x10c7dc -> call __stack_chk_fail
0x10a7dc -> mov rdi,rax
0x1087dc -> call 0x001080cc
0x1067dc -> add rax,0xa0
0x10a7df -> call g_free
0x10c7e1 -> leave
0x1087e1 -> mov rax,qword ptr [rbp + -0x28]
0x10c7e2 -> ret
0x1067e2 -> mov rdi,rax
0x1047e2 -> lea rax,[rbp + -0x5a0]
0x10c7e3 -> push rbp
0x10c7e4 -> mov rbp,rsp
0x10a7e4 -> mov eax,0x0
0x1087e5 -> jmp 0x00108816
0x1067e5 -> call pthread_rwlock_unlock
0x10c7e7 -> sub rsp,0x20
0x1087e7 -> nop
0x1087e8 -> add dword ptr [rbp + -0x1c],0x1
0x10a7e9 -> mov rcx,qword ptr [rbp + -0x8]
0x1047e9 -> add rax,0x38
0x1067ea -> mov eax,0xffffffff
0x10c7eb -> mov qword ptr [rbp + -0x18],rdi
0x1087ec -> mov rax,qword ptr [rbp + -0x38]
0x10a7ed -> xor rcx,qword ptr fs:[0x28]
0x1047ed -> mov qword ptr [rbp + -0x2a0],rax
0x10c7ef -> mov qword ptr [rbp + -0x8],0x0
0x1067ef -> leave
0x1087f0 -> mov edx,dword ptr [rax + 0x8]
0x1067f0 -> ret
0x1067f1 -> push rbp
0x1067f2 -> mov rbp,rsp
0x1087f3 -> mov eax,dword ptr [rbp + -0x1c]
0x1047f4 -> mov dword ptr [rbp + -0x298],0x0
0x1067f5 -> sub rsp,0x1080
0x10a7f6 -> jz 0x0010a7fd
0x1087f6 -> cmp edx,eax
0x10c7f7 -> mov esi,0x68
0x10a7f8 -> call __stack_chk_fail
0x1087f8 -> ja 0x00108739
0x10c7fc -> mov edi,0x1
0x1067fc -> mov qword ptr [rbp + -0x1058],rdi
0x10a7fd -> leave
0x10a7fe -> ret
0x1087fe -> mov rax,qword ptr [rbp + -0x18]
0x1047fe -> lea rax,[0x10e0d7]
0x10a7ff -> push rbp
0x10a800 -> mov rbp,rsp
0x10c801 -> call g_malloc0_n
0x108802 -> mov rdi,rax
0x10a803 -> sub rsp,0x20
0x106803 -> mov qword ptr [rbp + -0x1060],rsi
0x108805 -> call free
0x104805 -> mov qword ptr [rbp + -0x290],rax
0x10c806 -> mov qword ptr [rbp + -0x8],rax
0x10a807 -> mov qword ptr [rbp + -0x18],rdi
0x10c80a -> cmp qword ptr [rbp + -0x8],0x0
0x10880a -> lea rdi,[0x10e9b0]
0x10680a -> mov qword ptr [rbp + -0x1068],rdx
0x10a80b -> mov qword ptr [rbp + -0x20],rsi
0x10480c -> mov dword ptr [rbp + -0x288],0x0
0x10c80f -> jnz 0x0010c81b
0x10a80f -> mov dword ptr [rbp + -0xc],0x0
0x10c811 -> mov eax,0x0
0x108811 -> call 0x0010d638
0x106811 -> mov qword ptr [rbp + -0x1070],rcx
0x10c816 -> jmp 0x0010c9a5
0x10a816 -> jmp 0x0010a857
0x108816 -> mov rsi,qword ptr [rbp + -0x8]
0x104816 -> mov dword ptr [rbp + -0x284],0x2
0x10a818 -> mov rax,qword ptr [rbp + -0x20]
0x106818 -> mov dword ptr [rbp + -0x1074],r8d
0x10881a -> xor rsi,qword ptr fs:[0x28]
0x10c81b -> mov rax,qword ptr [rbp + -0x18]
0x10a81c -> mov rax,qword ptr [rax]
0x10c81f -> mov rax,qword ptr [rax]
0x10a81f -> mov edx,dword ptr [rbp + -0xc]
0x10681f -> mov rax,qword ptr fs:[0x28]
0x104820 -> lea rax,[rbp + -0x5a0]
0x10c822 -> test rax,rax
0x10a822 -> movsxd rdx,edx
0x108823 -> jz 0x0010882a
0x10c825 -> jz 0x0010c840
0x10a825 -> shl rdx,0x3
0x108825 -> call __stack_chk_fail
0x10c827 -> mov rax,qword ptr [rbp + -0x18]
0x104827 -> add rax,0x50
0x106828 -> mov qword ptr [rbp + -0x8],rax
0x10a829 -> add rax,rdx
0x10882a -> leave
0x10c82b -> mov rax,qword ptr [rax]
0x10882b -> ret
0x10482b -> mov qword ptr [rbp + -0x280],rax
0x10a82c -> mov rax,qword ptr [rax]
0x10882c -> push rbp
0x10682c -> xor eax,eax
0x10882d -> mov rbp,rsp
0x10c82e -> mov rdi,rax
0x10682e -> mov rax,qword ptr [rbp + -0x1070]
0x10a82f -> mov qword ptr [rbp + -0x8],rax
0x108830 -> sub rsp,0x450
0x10c831 -> call g_strdup
0x104832 -> mov dword ptr [rbp + -0x278],0x0
0x10a833 -> mov rax,qword ptr [rbp + -0x8]
0x106835 -> mov rax,qword ptr [rax + 0xe0]
0x10c836 -> mov rdx,rax
0x10a837 -> mov rdx,qword ptr [rax + 0x40]
0x108837 -> mov qword ptr [rbp + -0x438],rdi
0x10c839 -> mov rax,qword ptr [rbp + -0x8]
0x10a83b -> mov rax,qword ptr [rbp + -0x18]
0x10683c -> mov eax,dword ptr [rax + 0x20]
0x10483c -> lea rax,[0x10e0e6]
0x10c83d -> mov qword ptr [rax],rdx
0x10883e -> mov dword ptr [rbp + -0x43c],esi
0x10a83f -> mov rsi,rdx
0x10683f -> and eax,0x4
0x10c840 -> mov rax,qword ptr [rbp + -0x18]
0x10a842 -> mov rdi,rax
0x106842 -> test eax,eax
0x104843 -> mov qword ptr [rbp + -0x270],rax
0x10c844 -> mov rdx,qword ptr [rax + 0x8]
0x108844 -> mov qword ptr [rbp + -0x448],rdx
0x106844 -> jnz 0x001068a5
0x10a845 -> call strcmp
0x106846 -> mov rax,qword ptr [rbp + -0x1070]
0x10c848 -> mov rax,qword ptr [rbp + -0x8]
0x10a84a -> test eax,eax
0x10484a -> mov dword ptr [rbp + -0x268],0x0
0x10884b -> mov dword ptr [rbp + -0x440],ecx
0x10c84c -> mov qword ptr [rax + 0x8],rdx
0x10a84c -> jnz 0x0010a853
0x10684d -> mov rax,qword ptr [rax + 0xe0]
0x10a84e -> mov eax,dword ptr [rbp + -0xc]
0x10c850 -> mov rax,qword ptr [rbp + -0x18]
0x10a851 -> jmp 0x0010a86a
0x108851 -> mov rax,qword ptr fs:[0x28]
0x10a853 -> add dword ptr [rbp + -0xc],0x1
0x10c854 -> mov rax,qword ptr [rax + 0x10]
0x106854 -> mov eax,dword ptr [rax + 0x20]
0x104854 -> mov dword ptr [rbp + -0x264],0x2
0x10a857 -> mov rax,qword ptr [rbp + -0x20]
0x106857 -> and eax,0x10000
0x10c858 -> test rax,rax
0x10885a -> mov qword ptr [rbp + -0x8],rax
0x10c85b -> jz 0x0010c878
0x10a85b -> mov edx,dword ptr [rax + 0x8]
0x10685c -> test eax,eax
0x10c85d -> mov rax,qword ptr [rbp + -0x18]
0x10a85e -> mov eax,dword ptr [rbp + -0xc]
0x10885e -> xor eax,eax
0x10685e -> jz 0x00106873
0x10485e -> lea rax,[rbp + -0x5a0]
0x108860 -> lea rax,[rbp + -0x410]
0x106860 -> mov rax,qword ptr [rbp + -0x1070]
0x10c861 -> mov rax,qword ptr [rax + 0x10]
0x10a861 -> cmp edx,eax
0x10a863 -> ja 0x0010a818
0x10c865 -> mov rdi,rax
0x10a865 -> mov eax,0xffffffff
0x104865 -> add rax,0x58
0x108867 -> add rax,0x4
0x106867 -> mov rax,qword ptr [rax + 0x98]
0x10c868 -> call g_strdup
0x104869 -> mov qword ptr [rbp + -0x260],rax
0x10a86a -> leave
0x10a86b -> ret
0x10886b -> mov qword ptr [rbp + -0x420],rax
0x10a86c -> push rbp
0x10c86d -> mov rdx,rax
0x10a86d -> mov rbp,rsp
0x10686e -> test rax,rax
0x10c870 -> mov rax,qword ptr [rbp + -0x8]
0x10a870 -> sub rsp,0x50
0x104870 -> mov dword ptr [rbp + -0x258],0x0
0x106871 -> jz 0x001068a5
0x108872 -> lea rcx,[rbp + -0x428]
0x106873 -> mov edi,dword ptr [rbp + -0x1074]
0x10c874 -> mov qword ptr [rax + 0x10],rdx
0x10a874 -> mov qword ptr [rbp + -0x38],rdi
0x10c878 -> mov rax,qword ptr [rbp + -0x18]
0x10a878 -> mov qword ptr [rbp + -0x40],rsi
0x108879 -> mov rax,qword ptr [rbp + -0x438]
0x106879 -> mov rcx,qword ptr [rbp + -0x1070]
0x10487a -> lea rax,[0x10e0ed]
0x10c87c -> mov rax,qword ptr [rax + 0x18]
0x10a87c -> mov qword ptr [rbp + -0x48],rdx
0x10c880 -> test rax,rax
0x10a880 -> mov rax,qword ptr fs:[0x28]
0x108880 -> mov edx,0x4
0x106880 -> mov rdx,qword ptr [rbp + -0x1068]
0x104881 -> mov qword ptr [rbp + -0x250],rax
0x10c883 -> jz 0x0010c8a0
0x10c885 -> mov rax,qword ptr [rbp + -0x18]
0x108885 -> mov rsi,rcx
0x106887 -> mov rsi,qword ptr [rbp + -0x1060]
0x108888 -> mov rdi,rax
0x104888 -> mov dword ptr [rbp + -0x248],0x0
0x10c889 -> mov rax,qword ptr [rax + 0x18]
0x10a889 -> mov qword ptr [rbp + -0x8],rax
0x10888b -> call 0x001036fe
0x10c88d -> mov rdi,rax
0x10a88d -> xor eax,eax
0x10688e -> mov rax,qword ptr [rbp + -0x1058]
0x10a88f -> mov rax,qword ptr [rbp + -0x38]
0x10c890 -> call g_strdup
0x108890 -> mov eax,dword ptr [rbp + -0x428]
0x104892 -> mov dword ptr [rbp + -0x244],0x3
0x10a893 -> mov eax,dword ptr [rax + 0x8]
0x10c895 -> mov rdx,rax
0x106895 -> mov r8d,edi
0x10a896 -> mov dword ptr [rbp + -0x1c],eax
0x108896 -> mov edi,eax
0x10c898 -> mov rax,qword ptr [rbp + -0x8]
0x108898 -> call ntohl
0x106898 -> mov rdi,rax
0x10a899 -> mov dword ptr [rbp + -0x20],0xffffffff
0x10689b -> call 0x00106210
0x10c89c -> mov qword ptr [rax + 0x18],rdx
0x10489c -> lea rax,[rbp + -0x5a0]
0x10889d -> mov dword ptr [rbp + -0x428],eax
0x10c8a0 -> mov rax,qword ptr [rbp + -0x18]
0x10a8a0 -> mov rax,qword ptr [0x00311270]
0x1068a0 -> jmp 0x00106c4b
0x1088a3 -> mov eax,dword ptr [rbp + -0x428]
0x1048a3 -> add rax,0x20
0x10c8a4 -> mov edx,dword ptr [rax + 0x20]
0x1068a5 -> mov rax,qword ptr [rbp + -0x1058]
0x10c8a7 -> mov rax,qword ptr [rbp + -0x8]
0x10a8a7 -> mov rdx,qword ptr [rbp + -0x48]
0x1048a7 -> mov qword ptr [rbp + -0x240],rax
0x1088a9 -> test eax,eax
0x10c8ab -> mov dword ptr [rax + 0x20],edx
0x10a8ab -> mov rsi,qword ptr [rbp + -0x40]
0x1088ab -> jz 0x001088d5
0x1068ac -> lea rdx,[rax + 0xfff]
0x1088ad -> mov esi,dword ptr [rbp + -0x43c]
0x10c8ae -> mov rax,qword ptr [rbp + -0x18]
0x1048ae -> mov dword ptr [rbp + -0x238],0x1
0x10a8af -> mov rcx,rdx
0x10c8b2 -> mov edx,dword ptr [rax + 0x24]
0x10a8b2 -> mov edx,0x1
0x1088b3 -> mov rax,qword ptr [rbp + -0x438]
0x1068b3 -> test rax,rax
0x10c8b5 -> mov rax,qword ptr [rbp + -0x8]
0x1068b6 -> cmovs rax,rdx
0x10a8b7 -> mov rdi,rax
0x1048b8 -> lea rax,[0x10e0f6]
0x10c8b9 -> mov dword ptr [rax + 0x24],edx
0x10a8ba -> call 0x00104624
0x1088ba -> lea r8,[0x10ea18]
0x1068ba -> sar rax,0xc
0x10c8bc -> mov rax,qword ptr [rbp + -0x18]
0x1068be -> mov qword ptr [rbp + -0x1040],rax
0x10a8bf -> mov qword ptr [rbp + -0x10],rax
0x1048bf -> mov qword ptr [rbp + -0x230],rax
0x10c8c0 -> movzx edx,byte ptr [rax + 0x28]
0x1088c1 -> mov rcx,-0x1
0x10a8c3 -> mov rax,qword ptr [rbp + -0x40]
0x10c8c4 -> mov rax,qword ptr [rbp + -0x8]
0x1068c5 -> mov rdx,qword ptr [rbp + -0x1058]
0x1048c6 -> mov dword ptr [rbp + -0x228],0x0
0x10a8c7 -> mov ecx,dword ptr [rax + 0x4c]
0x10c8c8 -> mov byte ptr [rax + 0x28],dl
0x1088c8 -> mov edx,0x80000003
0x10a8ca -> mov rax,qword ptr [0x00311388]
0x10c8cb -> mov rax,qword ptr [rbp + -0x18]
0x1068cc -> mov rax,qword ptr [rbp + -0x1068]
0x1088cd -> mov rdi,rax
0x10c8cf -> mov rax,qword ptr [rax + 0x30]
0x1088d0 -> call 0x00106ed8
0x1048d0 -> mov dword ptr [rbp + -0x224],0x3
0x10a8d1 -> mov edx,0x0
0x10c8d3 -> test rax,rax
0x1068d3 -> add rax,rdx
0x1088d5 -> mov eax,dword ptr [0x003111e0]
0x10c8d6 -> jz 0x0010c8f3
0x10a8d6 -> mov esi,ecx
0x1068d6 -> sub rax,0x1
0x10c8d8 -> mov rax,qword ptr [rbp + -0x18]
0x10a8d8 -> mov rdi,rax
0x1068da -> shr rax,0xc
0x1048da -> lea rax,[rbp + -0x5a0]
0x10a8db -> call g_thread_pool_set_max_threads
0x1088db -> and eax,0x2
0x10c8dc -> mov rax,qword ptr [rax + 0x30]
0x1088de -> test eax,eax
0x1068de -> mov qword ptr [rbp + -0x1038],rax
0x10c8e0 -> mov rdi,rax
0x10a8e0 -> cmp qword ptr [rbp + -0x10],0x0
0x1088e0 -> jnz 0x0010891b
0x1048e1 -> add rax,0x20
0x1088e2 -> mov esi,dword ptr [rbp + -0x43c]
0x10c8e3 -> call g_strdup
0x10a8e5 -> jz 0x0010a975
0x1068e5 -> mov rax,qword ptr [rbp + -0x1040]
0x1048e5 -> mov qword ptr [rbp + -0x220],rax
0x10c8e8 -> mov rdx,rax
0x1088e8 -> mov rax,qword ptr [rbp + -0x438]
0x10c8eb -> mov rax,qword ptr [rbp + -0x8]
0x10a8eb -> mov dword ptr [rbp + -0x24],0x0
0x1068ec -> mov qword ptr [rbp + -0x1048],rax
0x1048ec -> mov dword ptr [rbp + -0x218],0x2
0x10c8ef -> mov qword ptr [rax + 0x30],rdx
0x1088ef -> lea r8,[0x10ea58]
0x10a8f2 -> jmp 0x0010a954
0x10c8f3 -> mov rax,qword ptr [rbp + -0x18]
0x1068f3 -> jmp 0x00106bac
0x10a8f4 -> mov rax,qword ptr [rbp + -0x10]
0x1088f6 -> mov rcx,-0x1
0x1048f6 -> lea rax,[0x10e100]
0x10c8f7 -> mov rax,qword ptr [rax + 0x38]
0x10a8f8 -> mov rax,qword ptr [rax]
0x1068f8 -> mov rax,qword ptr [rbp + -0x1048]
0x10c8fb -> test rax,rax
0x10a8fb -> mov edx,dword ptr [rbp + -0x24]
0x1088fd -> mov edx,0x80000002
0x1048fd -> mov qword ptr [rbp + -0x210],rax
0x10c8fe -> jz 0x0010c91b
0x10a8fe -> movsxd rdx,edx
0x1068ff -> shl rax,0xc
0x10c900 -> mov rax,qword ptr [rbp + -0x18]
0x10a901 -> shl rdx,0x3
0x108902 -> mov rdi,rax
0x106903 -> mov qword ptr [rbp + -0x1030],rax
0x10c904 -> mov rax,qword ptr [rax + 0x38]
0x104904 -> mov dword ptr [rbp + -0x208],0x0
0x10a905 -> add rax,rdx
0x108905 -> call 0x00106ed8
0x10c908 -> mov rdi,rax
0x10a908 -> mov rax,qword ptr [rax]
0x10890a -> lea rdi,[0x10ea90]
0x10690a -> mov rax,qword ptr [rbp + -0x1058]
0x10c90b -> call g_strdup
0x10a90b -> mov qword ptr [rbp + -0x18],rax
0x10490e -> mov dword ptr [rbp + -0x204],0x3
0x10a90f -> mov rax,qword ptr [rbp + -0x18]
0x10c910 -> mov rdx,rax
0x108911 -> call 0x0010d3ef
0x106911 -> sub rax,qword ptr [rbp + -0x1030]
0x10c913 -> mov rax,qword ptr [rbp + -0x8]
0x10a913 -> mov rax,qword ptr [rax + 0x40]
0x108916 -> jmp 0x00108a4b
0x10c917 -> mov qword ptr [rax + 0x38],rdx
0x10a917 -> test rax,rax
0x106918 -> mov qword ptr [rbp + -0x1028],rax
0x104918 -> lea rax,[rbp + -0x5a0]
0x10a91a -> jz 0x0010a950
0x10c91b -> mov rax,qword ptr [rbp + -0x18]
0x10891b -> mov dword ptr [rbp + -0x424],0x0
0x10a91c -> mov rax,qword ptr [rbp + -0x18]
0x10c91f -> mov rax,qword ptr [rax + 0x50]
0x10691f -> mov eax,0x1000
0x10491f -> add rax,0x20
0x10a920 -> mov rax,qword ptr [rax + 0x40]
0x10c923 -> test rax,rax
0x104923 -> mov qword ptr [rbp + -0x200],rax
0x10a924 -> mov rdx,qword ptr [rbp + -0x38]
0x106924 -> sub rax,qword ptr [rbp + -0x1028]
0x108925 -> jmp 0x00108a0e
0x10c926 -> jz 0x0010c943
0x10c928 -> mov rax,qword ptr [rbp + -0x18]
0x10a928 -> mov rsi,rdx
0x10892a -> mov rax,qword ptr [rbp + -0x448]
0x10492a -> mov dword ptr [rbp + -0x1f8],0x2000
0x10a92b -> mov rdi,rax
0x10692b -> test rax,rax
0x10c92c -> mov rax,qword ptr [rax + 0x50]
0x10a92e -> call 0x0010a7ff
0x10692e -> jle 0x00106945
0x10c930 -> mov rdi,rax
0x106930 -> mov eax,0x1000
0x108931 -> mov rax,qword ptr [rax]
0x10c933 -> call g_strdup
0x10a933 -> cmp eax,-0x1
0x108934 -> mov edx,dword ptr [rbp + -0x424]
0x104934 -> lea rax,[0x10e10a]
0x106935 -> sub rax,qword ptr [rbp + -0x1028]
0x10a936 -> jnz 0x0010a950
0x10c938 -> mov rdx,rax
0x10a938 -> lea rcx,[rbp + -0x18]
0x10893a -> movsxd rdx,edx
0x10c93b -> mov rax,qword ptr [rbp + -0x8]
0x10493b -> mov qword ptr [rbp + -0x1f0],rax
0x10a93c -> mov rax,qword ptr [rbp + -0x38]
0x10693c -> cmp qword ptr [rbp + -0x1068],rax
0x10893d -> shl rdx,0x3
0x10c93f -> mov qword ptr [rax + 0x50],rdx
0x10a940 -> mov edx,0x1
0x108941 -> add rax,rdx
0x104942 -> mov dword ptr [rbp + -0x1e8],0x0
0x10c943 -> mov rax,qword ptr [rbp + -0x18]
0x106943 -> jc 0x00106959
0x108944 -> mov rax,qword ptr [rax]
0x10a945 -> mov rsi,rcx
0x106945 -> mov rax,qword ptr [rbp + -0x1028]
0x10c947 -> mov rax,qword ptr [rax + 0x40]
0x108947 -> mov qword ptr [rbp + -0x418],rax
0x10a948 -> mov rdi,rax
0x10c94b -> test rax,rax
0x10a94b -> call g_array_append_vals
0x10694c -> mov edx,0x1000
0x10494c -> mov dword ptr [rbp + -0x1e4],0x3
0x10c94e -> jz 0x0010c96b
0x10894e -> mov rax,qword ptr [rbp + -0x438]
0x10c950 -> mov rax,qword ptr [rbp + -0x18]
0x10a950 -> add dword ptr [rbp + -0x24],0x1
0x106951 -> sub rdx,rax
0x10c954 -> mov rax,qword ptr [rax + 0x40]
0x10a954 -> mov rax,qword ptr [rbp + -0x10]
0x106954 -> mov rax,rdx
0x108955 -> mov rax,qword ptr [rax + 0x130]
0x104956 -> lea rax,[rbp + -0x5a0]
0x106957 -> jmp 0x00106960
0x10c958 -> mov rdi,rax
0x10a958 -> mov edx,dword ptr [rax + 0x8]
0x106959 -> mov rax,qword ptr [rbp + -0x1068]
0x10c95b -> call g_strdup
0x10a95b -> mov eax,dword ptr [rbp + -0x24]
0x10895c -> test rax,rax
0x10495d -> add rax,0x20
0x10a95e -> cmp edx,eax
0x10895f -> jnz 0x00108978
0x10c960 -> mov rdx,rax
0x10a960 -> ja 0x0010a8f4
0x106960 -> mov qword ptr [rbp + -0x1020],rax
0x108961 -> mov rax,qword ptr [rbp + -0x418]
0x104961 -> mov qword ptr [rbp + -0x1e0],rax
0x10a962 -> mov rax,qword ptr [rbp + -0x38]
0x10c963 -> mov rax,qword ptr [rbp + -0x8]
0x10a966 -> mov edx,dword ptr [rax + 0x8]
0x10c967 -> mov qword ptr [rax + 0x40],rdx
0x106967 -> mov rax,qword ptr [rbp + -0x1070]
0x108968 -> mov eax,dword ptr [rax + 0x20]
0x104968 -> mov dword ptr [rbp + -0x1d8],0x4
0x10a969 -> mov eax,dword ptr [rbp + -0x1c]
0x10c96b -> mov rax,qword ptr [rbp + -0x18]
0x10896b -> and eax,0x4000
0x10a96c -> sub edx,eax
0x10a96e -> mov eax,edx
0x10696e -> mov rax,qword ptr [rax + 0xe0]
0x10c96f -> mov rax,qword ptr [rax + 0x58]
0x10a970 -> mov dword ptr [rbp + -0x20],eax
0x108970 -> test eax,eax
0x108972 -> jnz 0x00108a06
0x104972 -> lea rax,[0x10e116]
0x10c973 -> test rax,rax
0x10a973 -> jmp 0x0010a976
0x10a975 -> nop
0x106975 -> mov eax,dword ptr [rax + 0x20]
0x10c976 -> jz 0x0010c993
0x10a976 -> mov rax,qword ptr [rbp + -0x10]
0x10c978 -> mov rax,qword ptr [rbp + -0x18]
0x108978 -> mov rax,qword ptr [rbp + -0x418]
0x106978 -> and eax,0x4
0x104979 -> mov qword ptr [rbp + -0x1d0],rax
0x10a97a -> mov esi,0x1
0x10697b -> test eax,eax
0x10c97c -> mov rax,qword ptr [rax + 0x58]
0x10697d -> jnz 0x00106994
0x10a97f -> mov rdi,rax
0x10897f -> mov rax,qword ptr [rax + 0x40]
0x10697f -> mov rax,qword ptr [rbp + -0x1070]
0x10c980 -> mov rdi,rax
0x104980 -> mov dword ptr [rbp + -0x1c8],0x0
0x10a982 -> call g_array_free
0x10c983 -> call g_strdup
0x108983 -> mov rdi,rax
0x108986 -> call strlen
0x106986 -> add rax,0xa0
0x10a987 -> mov eax,dword ptr [rbp + -0x20]
0x10c988 -> mov rdx,rax
0x10a98a -> mov rcx,qword ptr [rbp + -0x8]
0x10498a -> mov dword ptr [rbp + -0x1c4],0x3
0x10c98b -> mov rax,qword ptr [rbp + -0x8]
0x10898b -> mov edi,eax
0x10698c -> mov rdi,rax
0x10898d -> call htonl
0x10a98e -> xor rcx,qword ptr fs:[0x28]
0x10c98f -> mov qword ptr [rax + 0x58],rdx
0x10698f -> call pthread_rwlock_rdlock
0x108992 -> mov dword ptr [rbp + -0x428],eax
0x10c993 -> mov rax,qword ptr [rbp + -0x18]
0x106994 -> mov rax,qword ptr [rbp + -0x1070]
0x104994 -> lea rax,[rbp + -0x5a0]
0x10c997 -> mov edx,dword ptr [rax + 0x48]
0x10a997 -> jz 0x0010a99e
0x108998 -> mov eax,dword ptr [rbp + -0x428]
0x10a999 -> call __stack_chk_fail
0x10c99a -> mov rax,qword ptr [rbp + -0x8]
0x10699b -> mov rax,qword ptr [rax + 0xf8]
0x10499b -> add rax,0x20
0x10c99e -> mov dword ptr [rax + 0x48],edx
0x10a99e -> leave
0x10899e -> mov dword ptr [rbp + -0x410],eax
0x10a99f -> ret
0x10499f -> mov qword ptr [rbp + -0x1c0],rax
0x10a9a0 -> push rbp
0x10c9a1 -> mov rax,qword ptr [rbp + -0x8]
0x10a9a1 -> mov rbp,rsp
0x1069a2 -> mov rdx,qword ptr [rbp + -0x1048]
0x10a9a4 -> sub rsp,0x270
0x1089a4 -> mov rax,qword ptr [rbp + -0x418]
0x10c9a5 -> leave
0x10c9a6 -> ret
0x1049a6 -> mov dword ptr [rbp + -0x1b8],0x10000
0x10c9a7 -> push rbp
0x10c9a8 -> mov rbp,rsp
0x1069a9 -> shl rdx,0x2
0x10c9ab -> sub rsp,0xd0
0x10a9ab -> mov qword ptr [rbp + -0x268],rdi
0x1089ab -> mov rcx,qword ptr [rax + 0x40]
0x1069ad -> add rax,rdx
0x1089af -> mov rax,qword ptr [rbp + -0x420]
0x1069b0 -> mov eax,dword ptr [rax]
0x1049b0 -> lea rax,[0x10e11f]
0x10c9b2 -> mov dword ptr [rbp + -0xc4],edi
0x10a9b2 -> mov qword ptr [rbp + -0x270],rsi
0x1069b2 -> cmp eax,-0x1
0x1069b5 -> jz 0x00106a19
0x1089b6 -> mov edx,0x3fc
0x1069b7 -> mov rax,qword ptr [rbp + -0x1070]
0x1049b7 -> mov qword ptr [rbp + -0x1b0],rax
0x10c9b8 -> mov rax,qword ptr fs:[0x28]
0x10a9b9 -> mov rax,qword ptr fs:[0x28]
0x1089bb -> mov rsi,rcx
0x1089be -> mov rdi,rax
0x1069be -> mov rax,qword ptr [rax + 0xf8]
0x1049be -> mov dword ptr [rbp + -0x1a8],0x0
0x10c9c1 -> mov qword ptr [rbp + -0x8],rax
0x1089c1 -> call strncpy
0x10a9c2 -> mov qword ptr [rbp + -0x8],rax
0x10c9c5 -> xor eax,eax
0x1069c5 -> mov rdx,qword ptr [rbp + -0x1048]
0x10a9c6 -> xor eax,eax
0x1089c6 -> mov rax,qword ptr [rbp + -0x418]
0x10c9c7 -> lea rdx,[rbp + -0xb0]
0x10a9c8 -> mov dword ptr [rbp + -0x24c],0x0
0x1049c8 -> mov dword ptr [rbp + -0x1a4],0x3
0x1069cc -> shl rdx,0x2
0x1089cd -> mov rax,qword ptr [rax + 0x40]
0x10c9ce -> mov eax,dword ptr [rbp + -0xc4]
0x1069d0 -> add rax,rdx
0x1089d1 -> mov rdi,rax
0x10a9d2 -> mov eax,0x0
0x1049d2 -> lea rax,[rbp + -0x5a0]
0x1069d3 -> mov eax,dword ptr [rax]
0x10c9d4 -> mov esi,0x80081272
0x1089d4 -> call strlen
0x1069d5 -> shl eax,0xc
0x10a9d7 -> mov ecx,0x10
0x1069d8 -> mov edx,eax
0x10c9d9 -> mov edi,eax
0x1089d9 -> add rax,0x4
0x1049d9 -> add rax,0x20
0x1069da -> mov rax,qword ptr [rbp + -0x1028]
0x10c9db -> mov eax,0x0
0x10a9dc -> lea rdx,[rbp + -0x210]
0x1089dd -> mov rcx,rax
0x1049dd -> mov qword ptr [rbp + -0x1a0],rax
0x10c9e0 -> call ioctl
0x1089e0 -> lea rdx,[rbp + -0x410]
0x1069e1 -> lea rcx,[rdx + rax*0x1]
0x10a9e3 -> mov rdi,rdx
0x1049e4 -> mov dword ptr [rbp + -0x198],0x10
0x10c9e5 -> test eax,eax
0x1069e5 -> mov rdx,qword ptr [rbp + -0x1020]
0x10a9e6 -> cld
0x10c9e7 -> jnz 0x0010ca01
0x10a9e7 -> stosq.rep rdi
0x1089e7 -> mov esi,dword ptr [rbp + -0x43c]
0x10c9e9 -> mov rax,qword ptr [rbp + -0xb0]
0x10a9ea -> mov eax,edi
0x10a9ec -> mov edx,ecx
0x1069ec -> mov rax,qword ptr [rbp + -0x1070]
0x1089ed -> mov rax,qword ptr [rbp + -0x438]
0x10a9ee -> mov dword ptr [rbp + -0x244],edx
0x1049ee -> lea rax,[0x10e12a]
0x10c9f0 -> test rax,rax
0x10c9f3 -> jz 0x0010ca01
0x1069f3 -> mov eax,dword ptr [rax + 0xf0]
0x10a9f4 -> mov dword ptr [rbp + -0x240],eax
0x1089f4 -> mov r8,rdx
0x10c9f5 -> mov rax,qword ptr [rbp + -0xb0]
0x1049f5 -> mov qword ptr [rbp + -0x190],rax
0x1089f7 -> mov edx,0x2
0x1069f9 -> mov rsi,qword ptr [rbp + -0x1060]
0x10a9fa -> mov dword ptr [rbp + -0x250],0x0
0x10c9fc -> jmp 0x0010ca88
0x1089fc -> mov rdi,rax
0x1049fc -> mov dword ptr [rbp + -0x188],0x0
0x1089ff -> call 0x00106ed8
0x106a00 -> mov edi,eax
0x10ca01 -> mov qword ptr [rbp + -0x70],0x0
0x106a02 -> call pwrite64
0x10aa04 -> jmp 0x0010aa98
0x108a04 -> jmp 0x00108a07
0x108a06 -> nop
0x104a06 -> mov dword ptr [rbp + -0x184],0x3
0x108a07 -> add dword ptr [rbp + -0x424],0x1
0x106a07 -> cmp qword ptr [rbp + -0x1020],rax
0x10ca09 -> lea rdx,[rbp + -0xa0]
0x10aa09 -> mov rax,qword ptr [0x00311268]
0x108a0e -> mov rax,qword ptr [rbp + -0x448]
0x106a0e -> jz 0x00106b4d
0x10ca10 -> mov eax,dword ptr [rbp + -0xc4]
0x10aa10 -> mov rax,qword ptr [rax]
0x104a10 -> lea rax,[rbp + -0x5a0]
0x10aa13 -> mov edx,dword ptr [rbp + -0x250]
0x106a14 -> jmp 0x00106c19
0x108a15 -> mov edx,dword ptr [rax + 0x8]
0x10ca16 -> mov rsi,rdx
0x104a17 -> add rax,0x20
0x108a18 -> mov eax,dword ptr [rbp + -0x424]
0x10ca19 -> mov edi,eax
0x10aa19 -> movsxd rdx,edx
0x106a19 -> mov rax,qword ptr [rbp + -0x1070]
0x10ca1b -> call 0x0010d8b0
0x104a1b -> mov qword ptr [rbp + -0x180],rax
0x10aa1c -> shl rdx,0x2
0x108a1e -> cmp edx,eax
0x10ca20 -> mov dword ptr [rbp + -0xb4],eax
0x10aa20 -> add rax,rdx
0x108a20 -> ja 0x0010892a
0x106a20 -> mov rax,qword ptr [rax + 0xe0]
0x104a22 -> mov dword ptr [rbp + -0x178],0x20
0x10aa23 -> mov eax,dword ptr [rax]
0x10aa25 -> mov dword ptr [rbp + -0x22c],eax
0x10ca26 -> cmp dword ptr [rbp + -0xb4],0x0
0x108a26 -> mov esi,dword ptr [rbp + -0x43c]
0x106a27 -> mov eax,dword ptr [rax + 0x20]
0x106a2a -> and eax,0x10
0x10aa2b -> mov eax,dword ptr [rbp + -0x22c]
0x108a2c -> mov rax,qword ptr [rbp + -0x438]
0x104a2c -> lea rax,[0x10e12e]
0x10ca2d -> jnz 0x0010ca50
0x106a2d -> test eax,eax
0x10ca2f -> mov eax,dword ptr [rbp + -0x88]
0x106a2f -> jnz 0x00106a50
0x10aa31 -> lea edx,[rax + 0x3f]
0x106a31 -> mov rax,qword ptr [rbp + -0x1070]
0x108a33 -> mov r8d,0x0
0x104a33 -> mov qword ptr [rbp + -0x170],rax
0x10aa34 -> test eax,eax
0x10ca35 -> and eax,0xf000
0x10aa36 -> cmovs eax,edx
0x106a38 -> mov eax,dword ptr [rax + 0xf4]
0x10aa39 -> sar eax,0x6
0x108a39 -> mov ecx,0x0
0x10ca3a -> cmp eax,0x8000
0x104a3a -> mov dword ptr [rbp + -0x168],0x0
0x10aa3c -> mov esi,eax
0x10aa3e -> movsxd rax,esi
0x108a3e -> mov edx,0x1
0x106a3e -> lea ecx,[rax + 0x1]
0x10ca3f -> jz 0x0010ca4a
0x10ca41 -> mov rax,qword ptr [rbp + -0x70]
0x10aa41 -> mov rdi,qword ptr [rbp + rax*0x8 + -0x210]
0x106a41 -> mov rdx,qword ptr [rbp + -0x1070]
0x108a43 -> mov rdi,rax
0x104a44 -> mov dword ptr [rbp + -0x164],0x3
0x10ca45 -> test rax,rax
0x108a46 -> call 0x00106ed8
0x10ca48 -> jle 0x0010ca50
0x106a48 -> mov dword ptr [rdx + 0xf4],ecx
0x10aa49 -> mov eax,dword ptr [rbp + -0x22c]
0x10ca4a -> mov rax,qword ptr [rbp + -0x70]
0x108a4b -> mov rax,qword ptr [rbp + -0x8]
0x10ca4e -> jmp 0x0010ca88
0x106a4e -> jmp 0x00106a57
0x104a4e -> lea rax,[rbp + -0x5a0]
0x10aa4f -> cdq
0x108a4f -> xor rax,qword ptr fs:[0x28]
0x10ca50 -> mov eax,dword ptr [rbp + -0xc4]
0x10aa50 -> shr edx,0x1a
0x106a50 -> mov rax,qword ptr [rbp + -0x1048]
0x10aa53 -> add eax,edx
0x10aa55 -> and eax,0x3f
0x104a55 -> add rax,0x20
0x10ca56 -> mov edx,0x2
0x106a57 -> mov rdx,qword ptr [rbp + -0x1070]
0x10aa58 -> sub eax,edx
0x108a58 -> jz 0x00108a5f
0x104a59 -> mov qword ptr [rbp + -0x160],rax
0x10aa5a -> mov edx,0x1
0x108a5a -> call __stack_chk_fail
0x10ca5b -> mov esi,0x0
0x106a5e -> mov rdx,qword ptr [rdx + 0xf8]
0x10aa5f -> mov ecx,eax
0x108a5f -> leave
0x10ca60 -> mov edi,eax
0x108a60 -> ret
0x104a60 -> mov dword ptr [rbp + -0x158],0x40
0x10aa61 -> shl rdx,cl
0x108a61 -> push rbp
0x10ca62 -> call lseek64
0x108a62 -> mov rbp,rsp
0x10aa64 -> mov rax,rdx
0x108a65 -> sub rsp,0x470
0x106a65 -> mov rcx,qword ptr [rbp + -0x1048]
0x10ca67 -> mov qword ptr [rbp + -0xa8],rax
0x10aa67 -> or rdi,rax
0x10aa6a -> mov rdx,rdi
0x104a6a -> lea rax,[0x10e133]
0x108a6c -> mov qword ptr [rbp + -0x458],rdi
0x106a6c -> shl rcx,0x2
0x10aa6d -> movsxd rax,esi
0x10ca6e -> cmp qword ptr [rbp + -0xa8],0x0
0x10aa70 -> mov qword ptr [rbp + rax*0x8 + -0x210],rdx
0x106a70 -> add rdx,rcx
0x104a71 -> mov qword ptr [rbp + -0x150],rax
0x108a73 -> mov dword ptr [rbp + -0x45c],esi
0x106a73 -> mov dword ptr [rdx],eax
0x106a75 -> cmp qword ptr [rbp + -0x1028],0x0
0x10ca76 -> jle 0x0010ca81
0x10ca78 -> mov rax,qword ptr [rbp + -0xa8]
0x10aa78 -> mov eax,dword ptr [rbp + -0x22c]
0x104a78 -> mov dword ptr [rbp + -0x148],0x0
0x108a79 -> mov qword ptr [rbp + -0x468],rdx
0x106a7d -> jnz 0x00106a8c
0x10aa7e -> cmp dword ptr [rbp + -0x24c],eax
0x10ca7f -> jmp 0x0010ca88
0x106a7f -> cmp qword ptr [rbp + -0x1020],0x1000
0x108a80 -> mov dword ptr [rbp + -0x460],ecx
0x10ca81 -> mov rax,-0x1
0x104a82 -> mov dword ptr [rbp + -0x144],0x3
0x10aa84 -> cmovge eax,dword ptr [rbp + -0x24c]
0x108a86 -> mov rax,qword ptr fs:[0x28]
0x10ca88 -> mov rcx,qword ptr [rbp + -0x8]
0x106a8a -> jz 0x00106af4
0x10aa8b -> mov dword ptr [rbp + -0x24c],eax
0x10ca8c -> xor rcx,qword ptr fs:[0x28]
0x106a8c -> mov rax,qword ptr [rbp + -0x1070]
0x104a8c -> lea rax,[rbp + -0x5a0]
0x108a8f -> mov qword ptr [rbp + -0x8],rax
0x10aa91 -> add dword ptr [rbp + -0x250],0x1
0x108a93 -> xor eax,eax
0x106a93 -> mov rax,qword ptr [rax + 0xe0]
0x104a93 -> add rax,0x20
0x10ca95 -> jz 0x0010ca9c
0x108a95 -> mov qword ptr [rbp + -0x428],0x0
0x10ca97 -> call __stack_chk_fail
0x104a97 -> mov qword ptr [rbp + -0x140],rax
0x10aa98 -> mov rax,qword ptr [0x00311268]
0x106a9a -> mov eax,dword ptr [rax + 0x20]
0x10ca9c -> leave
0x10ca9d -> ret
0x106a9d -> and eax,0x10000
0x10ca9e -> push rbp
0x104a9e -> mov dword ptr [rbp + -0x138],0x80
0x10ca9f -> mov rbp,rsp
0x10aa9f -> mov edx,dword ptr [rax + 0x8]
0x108aa0 -> mov byte ptr [rbp + -0x445],0x0
0x10caa2 -> sub rsp,0x60
0x10aaa2 -> mov eax,dword ptr [rbp + -0x250]
0x106aa2 -> test eax,eax
0x106aa4 -> jz 0x00106abd
0x10caa6 -> mov qword ptr [rbp + -0x58],rdi
0x106aa6 -> mov rax,qword ptr [rbp + -0x1070]
0x108aa7 -> mov dword ptr [rbp + -0x434],0x80000006
0x10aaa8 -> cmp edx,eax
0x104aa8 -> lea rax,[0x10e139]
0x10caaa -> mov qword ptr [rbp + -0x60],rsi
0x10aaaa -> ja 0x0010aa09
0x106aad -> mov rax,qword ptr [rax + 0x98]
0x10caae -> mov rax,qword ptr [rbp + -0x60]
0x104aaf -> mov qword ptr [rbp + -0x130],rax
0x10aab0 -> lea rax,[rbp + -0x110]
0x108ab1 -> lea rax,[0x10eab4]
0x10cab2 -> mov rax,qword ptr [rax + 0xe0]
0x106ab4 -> test rax,rax
0x104ab6 -> mov dword ptr [rbp + -0x128],0x0
0x10aab7 -> mov rdi,rax
0x106ab7 -> jz 0x00106c12
0x108ab8 -> mov qword ptr [rbp + -0x420],rax
0x10cab9 -> mov eax,dword ptr [rax + 0x20]
0x10aaba -> call sigemptyset
0x10cabc -> and eax,0x1
0x106abd -> mov qword ptr [rbp + -0x1018],0x1000
0x10cabf -> test eax,eax
0x10aabf -> cmp eax,-0x1
0x108abf -> lea rcx,[rbp + -0x43c]
0x104ac0 -> mov dword ptr [rbp + -0x124],0x3
0x10cac1 -> jz 0x0010cae2
0x10aac2 -> jnz 0x0010aad0
0x10cac3 -> lea rcx,[0x10f640]
0x10aac4 -> lea rdi,[0x10eea0]
0x108ac6 -> mov rax,qword ptr [rbp + -0x458]
0x106ac8 -> mov rdx,qword ptr [rbp + -0x1018]
0x10caca -> mov edx,0x10a
0x104aca -> lea rax,[rbp + -0x5a0]
0x10aacb -> call 0x0010d638
0x108acd -> mov edx,0x4
0x10cacf -> lea rsi,[0x10f529]
0x106acf -> mov rcx,qword ptr [rbp + -0x1070]
0x10aad0 -> lea rax,[rbp + -0x110]
0x104ad1 -> add rax,0x20
0x108ad2 -> mov rsi,rcx
0x108ad5 -> mov rdi,rax
0x104ad5 -> mov qword ptr [rbp + -0x120],rax
0x10cad6 -> lea rdi,[0x10f5d0]
0x106ad6 -> lea rsi,[rbp + -0x1010]
0x10aad7 -> mov esi,0x11
0x108ad8 -> call 0x001036fe
0x10aadc -> mov rdi,rax
0x104adc -> mov dword ptr [rbp + -0x118],0x100
0x10cadd -> call __assert_fail
0x108add -> mov eax,dword ptr [rbp + -0x43c]
0x106add -> mov rax,qword ptr [rbp + -0x1030]
0x10aadf -> call sigaddset
0x10cae2 -> mov rax,qword ptr [rbp + -0x58]
0x108ae3 -> mov edi,eax
0x10aae4 -> cmp eax,-0x1
0x106ae4 -> mov rdi,rax
0x108ae5 -> call htonl
0x10cae6 -> mov rdx,qword ptr [rax + 0x10]
0x104ae6 -> lea rax,[0x10e13d]
0x10aae7 -> jnz 0x0010aaf5
0x106ae7 -> call 0x0010635d
0x10aae9 -> lea rdi,[0x10eec8]
0x10caea -> mov rax,qword ptr [rbp + -0x58]
0x108aea -> mov dword ptr [rbp + -0x43c],eax
0x106aec -> test eax,eax
0x104aed -> mov qword ptr [rbp + -0x110],rax
0x10caee -> mov eax,dword ptr [rax + 0x18]
0x106aee -> jnz 0x00106c15
0x10aaf0 -> call 0x0010d638
0x108af0 -> lea rcx,[rbp + -0x440]
0x10caf1 -> mov eax,eax
0x10caf3 -> add rdx,rax
0x106af4 -> mov rdx,qword ptr [rbp + -0x1020]
0x104af4 -> mov dword ptr [rbp + -0x108],0x0
0x10aaf5 -> lea rax,[rbp + -0x110]
0x10caf6 -> mov rax,qword ptr [rbp + -0x60]
0x108af7 -> mov rax,qword ptr [rbp + -0x458]
0x10cafa -> mov rax,qword ptr [rax]
0x106afb -> mov rax,qword ptr [rbp + -0x1028]
0x10aafc -> mov esi,0x1
0x10cafd -> cmp rdx,rax
0x108afe -> mov edx,0x4
0x104afe -> mov dword ptr [rbp + -0x104],0x3
0x10cb00 -> jbe 0x0010cb21
0x10ab01 -> mov rdi,rax
0x10cb02 -> lea rcx,[0x10f640]
0x106b02 -> lea rcx,[rbp + -0x1010]
0x108b03 -> mov rsi,rcx
0x10ab04 -> call sigaddset
0x108b06 -> mov rdi,rax
0x104b08 -> lea rax,[rbp + -0x5a0]
0x10cb09 -> mov edx,0x10b
0x10ab09 -> cmp eax,-0x1
0x108b09 -> call 0x001036fe
0x106b09 -> add rcx,rax
0x10ab0c -> jnz 0x0010ab1a
0x106b0c -> mov rax,qword ptr [rbp + -0x1060]
0x10cb0e -> lea rsi,[0x10f529]
0x10ab0e -> lea rdi,[0x10eef8]
0x108b0e -> mov eax,dword ptr [rbp + -0x440]
0x104b0f -> add rax,0x20
0x106b13 -> mov rsi,rax
0x104b13 -> mov qword ptr [rbp + -0x100],rax
0x108b14 -> mov edi,eax
0x10cb15 -> lea rdi,[0x10f5f8]
0x10ab15 -> call 0x0010d638
0x108b16 -> call htonl
0x106b16 -> mov rdi,rcx
0x106b19 -> call memcpy
0x10ab1a -> lea rax,[rbp + -0x110]
0x104b1a -> mov dword ptr [rbp + -0xf8],0x200
0x108b1b -> mov dword ptr [rbp + -0x440],eax
0x10cb1c -> call __assert_fail
0x106b1e -> mov rax,qword ptr [rbp + -0x1070]
0x10cb21 -> mov rax,qword ptr [rbp + -0x60]
0x10ab21 -> mov esi,0xf
0x108b21 -> mov eax,dword ptr [rbp + -0x43c]
0x104b24 -> lea rax,[0x10e148]
0x10cb25 -> mov rax,qword ptr [rax + 0xe0]
0x106b25 -> mov eax,dword ptr [rax + 0xf0]
0x10ab26 -> mov rdi,rax
0x108b27 -> lea edx,[rax + -0x6]
0x10ab29 -> call sigaddset
0x108b2a -> mov eax,dword ptr [rbp + -0x440]
0x106b2b -> lea rcx,[rbp + -0x1010]
0x104b2b -> mov qword ptr [rbp + -0xf0],rax
0x10cb2c -> mov eax,dword ptr [rax + 0x20]
0x10ab2e -> cmp eax,-0x1
0x10cb2f -> and eax,0x4
0x108b30 -> cmp edx,eax
0x10ab31 -> jnz 0x0010ab3f
0x10cb32 -> test eax,eax
0x108b32 -> jnc 0x00108b81
0x106b32 -> mov edx,0x1000
0x104b32 -> mov dword ptr [rbp + -0xe8],0x0
0x10ab33 -> lea rdi,[0x10ef28]
0x10cb34 -> jz 0x0010cb40
0x108b34 -> mov esi,dword ptr [rbp + -0x45c]
0x10cb36 -> mov eax,0x0
0x106b37 -> mov rsi,rcx
0x10ab3a -> call 0x0010d638
0x108b3a -> mov rax,qword ptr [rbp + -0x458]
0x106b3a -> mov edi,eax
0x10cb3b -> jmp 0x0010cd15
0x106b3c -> call write
0x104b3c -> mov dword ptr [rbp + -0xe4],0x3
0x10ab3f -> lea rdx,[rbp + -0x90]
0x10cb40 -> mov rax,qword ptr [rbp + -0x60]
0x108b41 -> lea r8,[0x10eac8]
0x106b41 -> cmp rax,0x1000
0x10cb44 -> mov rax,qword ptr [rax + 0xe0]
0x10ab46 -> lea rax,[rbp + -0x110]
0x104b46 -> lea rax,[rbp + -0x5a0]
0x106b47 -> jnz 0x00106c18
0x108b48 -> mov rcx,-0x1
0x10cb4b -> mov eax,dword ptr [rax + 0x20]
0x10ab4d -> mov rsi,rax
0x106b4d -> mov rax,qword ptr [rbp + -0x1070]
0x104b4d -> add rax,0x20
0x10cb4e -> and eax,0x2000
0x108b4f -> mov edx,0x80000003
0x10ab50 -> mov edi,0x0
0x104b51 -> mov qword ptr [rbp + -0xe0],rax
0x10cb53 -> test eax,eax
0x108b54 -> mov rdi,rax
0x106b54 -> mov rax,qword ptr [rax + 0xe0]
0x10cb55 -> jz 0x0010cbcf
0x10ab55 -> call sigprocmask
0x10cb57 -> mov rax,qword ptr [rbp + -0x58]
0x108b57 -> call 0x00106ed8
0x104b58 -> mov dword ptr [rbp + -0xd8],0x400
0x10ab5a -> cmp eax,-0x1
0x10cb5b -> mov rax,qword ptr [rax + 0x10]
0x106b5b -> mov eax,dword ptr [rax + 0x20]
0x108b5c -> mov eax,dword ptr [rbp + -0x43c]
0x10ab5d -> jnz 0x0010ab6b
0x106b5e -> and eax,0x4
0x10cb5f -> add rax,0xfff
0x10ab5f -> lea rdi,[0x10ef53]
0x106b61 -> test eax,eax
0x108b62 -> mov eax,eax
0x104b62 -> lea rax,[0x10e152]
0x106b63 -> jnz 0x00106b7a
0x108b64 -> lea rdx,[rax + -0x4]
0x10cb65 -> and rax,-0x1000
0x106b65 -> mov rax,qword ptr [rbp + -0x1070]
0x10ab66 -> call 0x0010d638
0x108b68 -> lea rcx,[rbp + -0x410]
0x104b69 -> mov qword ptr [rbp + -0xd0],rax
0x10cb6b -> mov qword ptr [rbp + -0x48],rax
0x10ab6b -> mov eax,dword ptr [0x003111f0]
0x106b6c -> add rax,0xa0
0x10cb6f -> mov rax,qword ptr [rbp + -0x58]
0x108b6f -> mov rax,qword ptr [rbp + -0x458]
0x104b70 -> mov dword ptr [rbp + -0xc8],0x0
0x10ab71 -> test eax,eax
0x106b72 -> mov rdi,rax
0x10cb73 -> mov rdx,qword ptr [rax + 0x10]
0x10ab73 -> jz 0x0010abb0
0x10ab75 -> mov dword ptr [0x003111f0],0x0
0x106b75 -> call pthread_rwlock_unlock
0x108b76 -> mov rsi,rcx
0x10cb77 -> mov rax,qword ptr [rbp + -0x58]
0x108b79 -> mov rdi,rax
0x106b7a -> mov rax,qword ptr [rbp + -0x1020]
0x104b7a -> mov dword ptr [rbp + -0xc4],0x3
0x10cb7b -> mov eax,dword ptr [rax + 0x18]
0x108b7c -> call 0x001036fe
0x10cb7e -> mov eax,eax
0x10ab7f -> mov rax,qword ptr [0x00311380]
0x10cb80 -> add rax,rdx
0x108b81 -> mov eax,dword ptr [rbp + -0x440]
0x106b81 -> sub qword ptr [rbp + -0x1068],rax
0x10cb83 -> and rax,-0x1000
0x104b84 -> lea rax,[rbp + -0x5a0]
0x10ab86 -> mov edx,0x0
0x108b87 -> test eax,eax
0x106b88 -> mov rax,qword ptr [rbp + -0x1020]
0x10cb89 -> mov qword ptr [rbp + -0x28],rax
0x108b89 -> jz 0x00108bdd
0x10ab8b -> lea rsi,[0x105e2f]
0x108b8b -> mov eax,dword ptr [rbp + -0x440]
0x104b8b -> add rax,0x20
0x10cb8d -> jmp 0x0010cbbb
0x10cb8f -> mov rax,qword ptr [rbp + -0x60]
0x106b8f -> add qword ptr [rbp + -0x1058],rax
0x104b8f -> mov qword ptr [rbp + -0xc0],rax
0x108b91 -> add eax,0x1
0x10ab92 -> mov rdi,rax
0x10cb93 -> mov rax,qword ptr [rax]
0x108b94 -> mov eax,eax
0x10ab95 -> call g_hash_table_foreach
0x10cb96 -> mov rcx,rax
0x108b96 -> mov rdi,rax
0x106b96 -> mov rax,qword ptr [rbp + -0x1020]
0x104b96 -> mov dword ptr [rbp + -0xb8],0x800
0x10cb99 -> mov rax,qword ptr [rbp + -0x60]
0x108b99 -> call malloc
0x10ab9a -> lea rdi,[0x311280]
0x10cb9d -> mov rax,qword ptr [rax + 0x90]
0x106b9d -> add qword ptr [rbp + -0x1060],rax
0x108b9e -> mov qword ptr [rbp + -0x430],rax
0x104ba0 -> lea rax,[0x10e157]
0x10aba1 -> call unlink
0x10cba4 -> mov rdx,qword ptr [rbp + -0x48]
0x106ba4 -> add qword ptr [rbp + -0x1048],0x1
0x108ba5 -> mov eax,dword ptr [rbp + -0x440]
0x10aba6 -> mov edi,0x0
0x104ba7 -> mov qword ptr [rbp + -0xb0],rax
0x10cba8 -> mov rsi,rcx
0x10cbab -> mov rdi,rax
0x10abab -> call exit
0x108bab -> mov edx,eax
0x106bac -> mov rax,qword ptr [rbp + -0x1048]
0x108bad -> mov rax,qword ptr [rbp + -0x430]
0x10cbae -> call 0x0010cf44
0x104bae -> mov dword ptr [rbp + -0xa8],0x0
0x10abb0 -> mov eax,dword ptr [0x003111ec]
0x10cbb3 -> add qword ptr [rbp + -0x48],0x1000
0x106bb3 -> cmp rax,qword ptr [rbp + -0x1038]
0x108bb4 -> add rax,rdx
0x10abb6 -> test eax,eax
0x108bb7 -> mov byte ptr [rax],0x0
0x10abb8 -> jz 0x0010ac9b
0x104bb8 -> mov dword ptr [rbp + -0xa4],0x2
0x108bba -> mov eax,dword ptr [rbp + -0x440]
0x106bba -> jle 0x001068f8
0x10cbbb -> mov rax,qword ptr [rbp + -0x48]
0x10abbe -> mov dword ptr [0x003111ec],0x0
0x10cbbf -> cmp rax,qword ptr [rbp + -0x28]
0x108bc0 -> mov edx,eax
0x106bc0 -> mov rax,qword ptr [rbp + -0x1070]
0x108bc2 -> mov rcx,qword ptr [rbp + -0x430]
0x104bc2 -> lea rax,[rbp + -0x5a0]
0x10cbc3 -> jl 0x0010cb8f
0x10cbc5 -> mov eax,0x0
0x106bc7 -> mov rax,qword ptr [rax + 0xe0]
0x10abc8 -> jmp 0x0010ac6e
0x108bc9 -> mov rax,qword ptr [rbp + -0x458]
0x104bc9 -> add rax,0x10
0x10cbca -> jmp 0x0010cd15
0x10abcd -> mov eax,dword ptr [rbp + -0x254]
0x104bcd -> mov qword ptr [rbp + -0xa0],rax
0x106bce -> mov eax,dword ptr [rax + 0x20]
0x10cbcf -> mov rax,qword ptr [rbp + -0x60]
0x108bd0 -> mov rsi,rcx
0x106bd1 -> and eax,0x40
0x10cbd3 -> mov rax,qword ptr [rax + 0x98]
0x10abd3 -> and eax,0x7f
0x108bd3 -> mov rdi,rax
0x106bd4 -> test eax,eax
0x104bd4 -> mov dword ptr [rbp + -0x98],0x0
0x10abd6 -> test eax,eax
0x108bd6 -> call 0x001036fe
0x106bd6 -> jz 0x00106bee
0x10abd8 -> jnz 0x0010ac03
0x106bd8 -> mov rax,qword ptr [rbp + -0x1070]
0x10cbda -> mov rax,qword ptr [rax]
0x10abda -> mov eax,dword ptr [rbp + -0x254]
0x108bdb -> jmp 0x00108bf0
0x10cbdd -> mov rdx,qword ptr [rax + 0x8]
0x108bdd -> lea rdi,[0x10deb5]
0x104bde -> lea rax,[0x10e162]
0x106bdf -> mov eax,dword ptr [rax + 0xf0]
0x10abe0 -> sar eax,0x8
0x10cbe1 -> mov rax,qword ptr [rax]
0x10abe3 -> movzx eax,al
0x10cbe4 -> mov qword ptr [rbp + -0x20],rax
0x108be4 -> call strdup
0x106be5 -> mov edi,eax
0x104be5 -> mov qword ptr [rbp + -0x90],rax
0x10abe6 -> mov ecx,eax
0x106be7 -> call fsync
0x10cbe8 -> mov qword ptr [rbp + -0x18],rdx
0x10abe8 -> lea rdx,[0x10ef6f]
0x108be9 -> mov qword ptr [rbp + -0x430],rax
0x10cbec -> mov dword ptr [rbp + -0x4c],0x1
0x106bec -> jmp 0x00106c0b
0x104bec -> mov dword ptr [rbp + -0x88],0x0
0x106bee -> cmp dword ptr [rbp + -0x1074],0x0
0x10abef -> mov esi,0x20
0x108bf0 -> mov dword ptr [rbp + -0x438],0x0
0x10cbf3 -> mov rax,qword ptr [rbp + -0x60]
0x10abf4 -> mov edi,0x0
0x106bf5 -> jz 0x00106c0b
0x104bf6 -> mov dword ptr [rbp + -0x84],0x0
0x10cbf7 -> mov rax,qword ptr [rax + 0x98]
0x106bf7 -> mov rax,qword ptr [rbp + -0x1070]
0x10abf9 -> mov eax,0x0
0x108bfa -> jmp 0x00108c99
0x10cbfe -> mov edx,dword ptr [rax + 0x8]
0x10abfe -> call g_log
0x106bfe -> mov eax,dword ptr [rax + 0xf0]
0x108bff -> mov rax,qword ptr [rbp + -0x468]
0x104c00 -> lea rax,[rbp + -0x5a0]
0x10cc01 -> mov eax,dword ptr [rbp + -0x4c]
0x10ac03 -> mov rax,qword ptr [0x00311380]
0x10cc04 -> cmp edx,eax
0x106c04 -> mov edi,eax
0x10cc06 -> jbe 0x0010cc34
0x108c06 -> mov rax,qword ptr [rax]
0x106c06 -> call fdatasync
0x104c07 -> add rax,0x48
0x10cc08 -> mov rax,qword ptr [rbp + -0x60]
0x102c08 -> sub rsp,0x8
0x108c09 -> mov edx,dword ptr [rbp + -0x438]
0x10ac0a -> lea rdx,[rbp + -0x228]
0x106c0b -> mov eax,0x0
0x104c0b -> mov qword ptr [rbp + -0x80],rax
0x10cc0c -> mov rax,qword ptr [rax + 0x98]
0x102c0c -> mov rax,qword ptr [0x00310fd0]
0x108c0f -> movsxd rdx,edx
0x104c0f -> mov dword ptr [rbp + -0x78],0x0
0x106c10 -> jmp 0x00106c4b
0x10ac11 -> mov rsi,rdx
0x108c12 -> shl rdx,0x3
0x106c12 -> nop
0x10cc13 -> mov rax,qword ptr [rax]
0x106c13 -> jmp 0x00106c19
0x102c13 -> test rax,rax
0x10ac14 -> mov rdi,rax
0x106c15 -> nop
0x10cc16 -> mov edx,dword ptr [rbp + -0x4c]
0x108c16 -> add rax,rdx
0x106c16 -> jmp 0x00106c19
0x104c16 -> lea rax,[0x10e171]
0x102c16 -> jz 0x00102c1a
0x10ac17 -> call g_hash_table_lookup
0x106c18 -> nop
0x102c18 -> call rax
0x10cc19 -> movsxd rdx,edx
0x108c19 -> mov rax,qword ptr [rax]
0x106c19 -> mov rax,qword ptr [rbp + -0x1070]
0x102c1a -> add rsp,0x8
0x10cc1c -> shl rdx,0x4
0x10ac1c -> mov qword ptr [rbp + -0x220],rax
0x108c1c -> mov qword ptr [rbp + -0x418],rax
0x104c1d -> mov qword ptr [rbp + -0x70],rax
0x102c1e -> ret
0x10cc20 -> add rax,rdx
0x106c20 -> mov rax,qword ptr [rax + 0xe0]
0x102c20 -> push qword ptr [0x00310b00]
0x104c21 -> mov dword ptr [rbp + -0x68],0x0
0x10cc23 -> mov rdx,qword ptr [rax + 0x8]
0x10ac23 -> cmp qword ptr [rbp + -0x220],0x0
0x108c23 -> mov rax,qword ptr [rbp + -0x418]
0x102c26 -> jmp qword ptr [0x00310b08]
0x10cc27 -> mov rax,qword ptr [rax]
0x106c27 -> mov eax,dword ptr [rax + 0x20]
0x104c28 -> mov dword ptr [rbp + -0x64],0x3
0x10cc2a -> mov qword ptr [rbp + -0x10],rax
0x108c2a -> mov rax,qword ptr [rax + 0x40]
0x106c2a -> and eax,0x4
0x10ac2b -> jnz 0x0010ac55
0x10ac2d -> mov eax,dword ptr [rbp + -0x228]
0x106c2d -> test eax,eax
0x10cc2e -> mov qword ptr [rbp + -0x8],rdx
0x108c2e -> mov rdx,qword ptr [rbp + -0x430]
0x106c2f -> jnz 0x00106c46
0x104c2f -> lea rax,[rbp + -0x5a0]
0x102c30 -> jmp qword ptr [0x00310b10]
0x106c31 -> mov rax,qword ptr [rbp + -0x1070]
0x10cc32 -> jmp 0x0010cc46
0x10ac33 -> cdqe
0x10cc34 -> mov dword ptr [rbp + -0x10],0xffffffff
0x10ac35 -> mov rcx,rax
0x108c35 -> mov rsi,rdx
0x104c36 -> add rax,0x20
0x102c36 -> push 0x0
0x10ac38 -> lea rdx,[0x10ef88]
0x108c38 -> mov rdi,rax
0x106c38 -> add rax,0xa0
0x104c3a -> mov qword ptr [rbp + -0x60],rax
0x10cc3b -> mov rax,qword ptr [rbp + -0x60]
0x108c3b -> call strcmp
0x102c3b -> jmp 0x00102c20
0x106c3e -> mov rdi,rax
0x104c3e -> mov dword ptr [rbp + -0x58],0x4000
0x10cc3f -> mov rax,qword ptr [rax]
0x10ac3f -> mov esi,0x20
0x108c40 -> test eax,eax
0x102c40 -> jmp qword ptr [0x00310b18]
0x106c41 -> call pthread_rwlock_unlock
0x10cc42 -> mov qword ptr [rbp + -0x8],rax
0x108c42 -> jnz 0x00108c92
0x10ac44 -> mov edi,0x0
0x108c44 -> mov rax,qword ptr [rbp + -0x418]
0x104c45 -> lea rax,[0x10e17b]
0x10cc46 -> mov rax,qword ptr [rbp + -0x18]
0x106c46 -> mov eax,0xffffffff
0x102c46 -> push 0x1
0x10ac49 -> mov eax,0x0
0x10cc4a -> mov rdx,rax
0x108c4b -> mov eax,dword ptr [rax + 0x20]
0x106c4b -> mov rsi,qword ptr [rbp + -0x8]
0x102c4b -> jmp 0x00102c20
0x104c4c -> mov qword ptr [rbp + -0x50],rax
0x10cc4d -> mov rax,qword ptr [rbp + -0x58]
0x10ac4e -> call g_log
0x108c4e -> and eax,0x4000
0x106c4f -> xor rsi,qword ptr fs:[0x28]
0x104c50 -> mov dword ptr [rbp + -0x48],0x0
0x102c50 -> jmp qword ptr [0x00310b20]
0x10cc51 -> mov rax,qword ptr [rax + 0x10]
0x10ac53 -> jmp 0x0010ac6e
0x108c53 -> test eax,eax
0x10cc55 -> cmp rdx,rax
0x10ac55 -> mov rax,qword ptr [0x00311380]
0x108c55 -> jz 0x00108c84
0x102c56 -> push 0x2
0x108c57 -> mov rax,qword ptr [rbp + -0x458]
0x104c57 -> mov dword ptr [rbp + -0x44],0x3
0x10cc58 -> ja 0x0010ccc3
0x106c58 -> jz 0x00106c5f
0x10cc5a -> mov rdx,qword ptr [rbp + -0x8]
0x106c5a -> call __stack_chk_fail
0x102c5b -> jmp 0x00102c20
0x10ac5c -> lea rdx,[rbp + -0x228]
0x10cc5e -> mov rax,qword ptr [rbp + -0x18]
0x108c5e -> mov rax,qword ptr [rax + 0x130]
0x104c5e -> lea rax,[rbp + -0x5a0]
0x106c5f -> leave
0x106c60 -> ret
0x102c60 -> jmp qword ptr [0x00310b28]
0x106c61 -> push rbp
0x10cc62 -> sub rdx,rax
0x106c62 -> mov rbp,rsp
0x10ac63 -> mov rsi,rdx
0x10cc65 -> mov rax,qword ptr [rbp + -0x58]
0x108c65 -> test rax,rax
0x106c65 -> sub rsp,0x50
0x104c65 -> add rax,0x20
0x10ac66 -> mov rdi,rax
0x102c66 -> push 0x3
0x108c68 -> jnz 0x00108c84
0x10cc69 -> mov eax,dword ptr [rax + 0x18]
0x10ac69 -> call g_hash_table_remove
0x106c69 -> mov qword ptr [rbp + -0x38],rdi
0x104c69 -> mov qword ptr [rbp + -0x40],rax
0x108c6a -> mov dword ptr [rbp + -0x434],0x80000005
0x102c6b -> jmp 0x00102c20
0x10cc6c -> mov eax,eax
0x106c6d -> mov qword ptr [rbp + -0x40],rsi
0x104c6d -> mov dword ptr [rbp + -0x38],0x8000
0x10cc6e -> cmp rdx,rax
0x10ac6e -> lea rax,[rbp + -0x254]
0x102c70 -> jmp qword ptr [0x00310b30]
0x10cc71 -> jl 0x0010ccc3
0x106c71 -> mov dword ptr [rbp + -0x44],edx
0x10cc73 -> mov rax,qword ptr [rbp + -0x58]
0x108c74 -> lea rax,[0x10eb10]
0x106c74 -> mov rax,qword ptr [rbp + -0x38]
0x104c74 -> mov dword ptr [rbp + -0x674],0x19
0x10ac75 -> mov edx,0x1
0x102c76 -> push 0x4
0x10cc77 -> mov rax,qword ptr [rax + 0x10]
0x106c78 -> mov rax,qword ptr [rax + 0x10]
0x10ac7a -> mov rsi,rax
0x10cc7b -> mov rdx,qword ptr [rbp + -0x18]
0x108c7b -> mov qword ptr [rbp + -0x420],rax
0x102c7b -> jmp 0x00102c20
0x106c7c -> mov qword ptr [rbp + -0x18],rax
0x10ac7d -> mov edi,0xffffffff
0x104c7e -> lea rax,[0x10e182]
0x10cc7f -> sub rax,rdx
0x106c80 -> mov rax,qword ptr [rbp + -0x38]
0x102c80 -> jmp qword ptr [0x00310b38]
0x10cc82 -> mov qword ptr [rbp + -0x40],rax
0x10ac82 -> call waitpid
0x108c82 -> jmp 0x00108c92
0x108c84 -> mov rax,qword ptr [rbp + -0x418]
0x106c84 -> mov eax,dword ptr [rax + 0x18]
0x104c85 -> mov qword ptr [rbp + -0x530],rax
0x10cc86 -> mov rax,qword ptr [rbp + -0x8]
0x102c86 -> push 0x5
0x10ac87 -> mov dword ptr [rbp + -0x228],eax
0x106c87 -> mov eax,eax
0x106c89 -> mov qword ptr [rbp + -0x28],rax
0x10cc8a -> sub rax,qword ptr [rbp + -0x40]
0x108c8b -> mov qword ptr [rbp + -0x428],rax
0x102c8b -> jmp 0x00102c20
0x104c8c -> mov dword ptr [rbp + -0x528],0x0
0x10ac8d -> mov eax,dword ptr [rbp + -0x228]
0x106c8d -> mov qword ptr [rbp + -0x10],0x4000000
0x10cc8e -> mov qword ptr [rbp + -0x38],rax
0x102c90 -> jmp qword ptr [0x00310b40]
0x10cc92 -> mov rax,qword ptr [rbp + -0x38]
0x108c92 -> add dword ptr [rbp + -0x438],0x1
0x10ac93 -> test eax,eax
0x10ac95 -> jg 0x0010abcd
0x106c95 -> mov rax,qword ptr [rbp + -0x10]
0x10cc96 -> sub rax,qword ptr [rbp + -0x40]
0x104c96 -> mov dword ptr [rbp + -0x524],0x2
0x102c96 -> push 0x6
0x108c99 -> mov rax,qword ptr [rbp + -0x468]
0x106c99 -> mov rsi,rax
0x10cc9a -> mov rdx,qword ptr [rbp + -0x58]
0x10ac9b -> mov eax,dword ptr [0x003111f4]
0x102c9b -> jmp 0x00102c20
0x106c9c -> mov edi,0x1
0x10cc9e -> mov edx,dword ptr [rdx + 0x18]
0x108ca0 -> mov edx,dword ptr [rax + 0x8]
0x104ca0 -> lea rax,[rbp + -0x5f0]
0x102ca0 -> jmp qword ptr [0x00310b48]
0x10cca1 -> mov edx,edx
0x10aca1 -> test eax,eax
0x106ca1 -> call calloc
0x10cca3 -> cmp rax,rdx
0x10aca3 -> jz 0x0010adb5
0x108ca3 -> mov eax,dword ptr [rbp + -0x438]
0x10cca6 -> cmovg rax,rdx
0x106ca6 -> mov qword ptr [rbp + -0x8],rax
0x102ca6 -> push 0x7
0x104ca7 -> mov qword ptr [rbp + -0x520],rax
0x10aca9 -> mov qword ptr [rbp + -0x228],0x0
0x108ca9 -> cmp edx,eax
0x10ccaa -> mov qword ptr [rbp + -0x30],rax
0x106caa -> jmp 0x00106d06
0x108cab -> ja 0x00108bff
0x102cab -> jmp 0x00102c20
0x106cac -> mov rax,qword ptr [rbp + -0x28]
0x10ccae -> mov eax,dword ptr [rbp + -0x20]
0x104cae -> mov dword ptr [rbp + -0x518],0x0
0x106cb0 -> mov qword ptr [rbp + -0x20],rax
0x102cb0 -> jmp qword ptr [0x00310b50]
0x10ccb1 -> mov rdx,qword ptr [rbp + -0x30]
0x108cb1 -> mov rax,qword ptr [rbp + -0x430]
0x10acb4 -> lea rdx,[0x10efc0]
0x106cb4 -> mov rax,qword ptr [rbp + -0x20]
0x10ccb5 -> mov rcx,qword ptr [rbp + -0x40]
0x102cb6 -> push 0x8
0x108cb8 -> mov rdi,rax
0x106cb8 -> cmp rax,qword ptr [rbp + -0x10]
0x104cb8 -> lea rax,[0x10e187]
0x10ccb9 -> mov rsi,rcx
0x10acbb -> mov esi,0x20
0x108cbb -> call free
0x102cbb -> jmp 0x00102c20
0x10ccbc -> mov edi,eax
0x106cbc -> jbe 0x00106cc6
0x10ccbe -> call 0x00106e2b
0x106cbe -> mov rax,qword ptr [rbp + -0x10]
0x104cbf -> mov qword ptr [rbp + -0x510],rax
0x10acc0 -> mov edi,0x0
0x108cc0 -> lea rcx,[rbp + -0x444]
0x102cc0 -> jmp qword ptr [0x00310b58]
0x106cc2 -> mov qword ptr [rbp + -0x20],rax
0x10ccc3 -> mov rax,qword ptr [rbp + -0x10]
0x10acc5 -> mov eax,0x0
0x106cc6 -> mov edi,dword ptr [rbp + -0x44]
0x104cc6 -> mov dword ptr [rbp + -0x508],0x0
0x102cc6 -> push 0x9
0x10ccc7 -> mov rdx,qword ptr [rbp + -0x8]
0x108cc7 -> mov rax,qword ptr [rbp + -0x458]
0x106cc9 -> mov rcx,qword ptr [rbp + -0x40]
0x10acca -> call g_log
0x10cccb -> mov qword ptr [rbp + -0x20],rax
0x102ccb -> jmp 0x00102c20
0x106ccd -> mov rdx,qword ptr [rbp + -0x20]
0x108cce -> mov edx,0x2
0x10cccf -> mov qword ptr [rbp + -0x18],rdx
0x10accf -> mov dword ptr [0x003111f4],0x0
0x104cd0 -> mov dword ptr [rbp + -0x504],0x2
0x102cd0 -> jmp qword ptr [0x00310b60]
0x106cd1 -> mov rsi,qword ptr [rbp + -0x8]
0x10ccd3 -> add dword ptr [rbp + -0x4c],0x1
0x108cd3 -> mov rsi,rcx
0x106cd5 -> mov rax,qword ptr [rbp + -0x18]
0x108cd6 -> mov rdi,rax
0x102cd6 -> push 0xa
0x10ccd7 -> mov rax,qword ptr [rbp + -0x60]
0x10acd9 -> lea rdx,[rbp + -0x228]
0x108cd9 -> call 0x001036fe
0x106cd9 -> mov r8d,edi
0x104cda -> lea rax,[rbp + -0x5f0]
0x10ccdb -> mov rax,qword ptr [rax + 0x98]
0x102cdb -> jmp 0x00102c20
0x106cdc -> mov rdi,rax
0x108cde -> movzx eax,word ptr [rbp + -0x444]
0x106cdf -> call 0x001067f1
0x10ace0 -> mov rcx,qword ptr [rbp + -0x270]
0x102ce0 -> jmp qword ptr [0x00310b68]
0x104ce1 -> add rax,0x8
0x10cce2 -> mov edx,dword ptr [rax + 0x8]
0x106ce4 -> mov dword ptr [rbp + -0x2c],eax
0x10cce5 -> mov eax,dword ptr [rbp + -0x4c]
0x108ce5 -> movzx eax,ax
0x104ce5 -> mov qword ptr [rbp + -0x500],rax
0x102ce6 -> push 0xb
0x10ace7 -> mov rax,qword ptr [rbp + -0x268]
0x106ce7 -> cmp dword ptr [rbp + -0x2c],0x0
0x10cce8 -> cmp edx,eax
0x108ce8 -> mov edi,eax
0x10ccea -> jbe 0x0010cd10
0x108cea -> call ntohs
0x106ceb -> jz 0x00106cfe
0x102ceb -> jmp 0x00102c20
0x10ccec -> mov rax,qword ptr [rbp + -0x18]
0x104cec -> mov dword ptr [rbp + -0x4f8],0x0
0x106ced -> mov rax,qword ptr [rbp + -0x8]
0x10acee -> mov rsi,rcx
0x108cef -> mov word ptr [rbp + -0x444],ax
0x10ccf0 -> mov rcx,rax
0x102cf0 -> jmp qword ptr [0x00310b70]
0x10acf1 -> mov rdi,rax
0x106cf1 -> mov rdi,rax
0x10ccf3 -> mov rax,qword ptr [rbp + -0x58]
0x10acf4 -> call 0x0010a86c
0x106cf4 -> call free
0x108cf6 -> cmp qword ptr [rbp + -0x428],0x0
0x104cf6 -> lea rax,[0x10e18d]
0x102cf6 -> push 0xc
0x10ccf7 -> mov rdx,qword ptr [rax + 0x10]
0x10acf9 -> mov dword ptr [rbp + -0x23c],eax
0x106cf9 -> mov eax,dword ptr [rbp + -0x2c]
0x10ccfb -> mov rax,qword ptr [rbp + -0x58]
0x102cfb -> jmp 0x00102c20
0x106cfc -> jmp 0x00106d1e
0x104cfd -> mov qword ptr [rbp + -0x4f0],rax
0x108cfe -> jnz 0x00108d5f
0x106cfe -> mov rax,qword ptr [rbp + -0x20]
0x10ccff -> mov eax,dword ptr [rax + 0x18]
0x10acff -> cmp dword ptr [rbp + -0x23c],-0x1
0x108d00 -> movzx eax,word ptr [rbp + -0x444]
0x102d00 -> jmp qword ptr [0x00310b78]
0x10cd02 -> mov eax,eax
0x106d02 -> sub qword ptr [rbp + -0x28],rax
0x10cd04 -> add rax,rdx
0x104d04 -> mov dword ptr [rbp + -0x4e8],0x0
0x10ad06 -> jnz 0x0010ad31
0x106d06 -> cmp qword ptr [rbp + -0x28],0x0
0x102d06 -> push 0xd
0x10cd07 -> cmp rcx,rax
0x108d07 -> movzx eax,ax
0x10ad08 -> mov rax,qword ptr [rbp + -0x228]
0x10cd0a -> jc 0x0010cbf3
0x108d0a -> lea rsi,[rax + rax*0x1]
0x106d0b -> jnz 0x00106cac
0x102d0b -> jmp 0x00102c20
0x106d0d -> mov rax,qword ptr [rbp + -0x8]
0x108d0e -> lea rdx,[rbp + -0x410]
0x104d0e -> mov dword ptr [rbp + -0x4e4],0x3
0x10ad0f -> mov rax,qword ptr [rax + 0x8]
0x10cd10 -> mov eax,0x0
0x102d10 -> jmp qword ptr [0x00310b80]
0x106d11 -> mov rdi,rax
0x10ad13 -> mov rcx,rax
0x106d14 -> call free
0x10cd15 -> leave
0x108d15 -> mov rax,qword ptr [rbp + -0x458]
0x10cd16 -> ret
0x10ad16 -> lea rdx,[0x10efe8]
0x102d16 -> push 0xe
0x10cd17 -> push rbp
0x10cd18 -> mov rbp,rsp
0x104d18 -> lea rax,[rbp + -0x5f0]
0x106d19 -> mov eax,0x0
0x10cd1b -> sub rsp,0x10
0x102d1b -> jmp 0x00102c20
0x108d1c -> mov ecx,0x400
0x10ad1d -> mov esi,0x20
0x106d1e -> leave
0x10cd1f -> mov qword ptr [rbp + -0x8],rdi
0x106d1f -> ret
0x104d1f -> add rax,0x48
0x106d20 -> push rbp
0x102d20 -> jmp qword ptr [0x00310b88]
0x108d21 -> mov rdi,rax
0x106d21 -> mov rbp,rsp
0x10ad22 -> mov edi,0x0
0x10cd23 -> lea rax,[0x311220]
0x104d23 -> mov qword ptr [rbp + -0x4e0],rax
0x108d24 -> call 0x001037b1
0x106d24 -> sub rsp,0x30
0x102d26 -> push 0xf
0x10ad27 -> mov eax,0x0
0x106d28 -> mov qword ptr [rbp + -0x28],rdi
0x108d29 -> mov rcx,qword ptr [rbp + -0x420]
0x10cd2a -> mov rdi,rax
0x104d2a -> mov dword ptr [rbp + -0x4d8],0x1
0x102d2b -> jmp 0x00102c20
0x10ad2c -> call g_log
0x106d2c -> mov rax,qword ptr [rbp + -0x28]
0x10cd2d -> call pthread_mutex_lock
0x108d30 -> mov edx,dword ptr [rbp + -0x434]
0x106d30 -> mov rax,qword ptr [rax + 0xe0]
0x102d30 -> jmp qword ptr [0x00310b90]
0x10ad31 -> mov rax,qword ptr [rbp + -0x268]
0x10cd32 -> mov rax,qword ptr [rbp + -0x8]
0x104d34 -> lea rax,[0x10e157]
0x10cd36 -> mov eax,dword ptr [rax + 0x60]
0x108d36 -> mov esi,dword ptr [rbp + -0x45c]
0x102d36 -> push 0x10
0x106d37 -> mov eax,dword ptr [rax + 0x20]
0x10ad38 -> mov edx,dword ptr [rax + 0x8]
0x10cd39 -> lea edx,[rax + 0x1]
0x106d3a -> and eax,0x4
0x10ad3b -> mov eax,dword ptr [rbp + -0x23c]
0x104d3b -> mov qword ptr [rbp + -0x4d0],rax
0x102d3b -> jmp 0x00102c20
0x10cd3c -> mov rax,qword ptr [rbp + -0x8]
0x108d3c -> mov rax,qword ptr [rbp + -0x458]
0x106d3d -> test eax,eax
0x106d3f -> jz 0x00106d57
0x10cd40 -> mov dword ptr [rax + 0x60],edx
0x102d40 -> jmp qword ptr [0x00310b98]
0x10ad41 -> sub edx,eax
0x106d41 -> mov rax,qword ptr [rbp + -0x28]
0x104d42 -> mov dword ptr [rbp + -0x4c8],0x0
0x10cd43 -> lea rax,[0x311220]
0x10ad43 -> mov eax,edx
0x108d43 -> mov r8,rcx
0x10ad45 -> mov dword ptr [rbp + -0x250],eax
0x106d45 -> mov eax,dword ptr [rax + 0xf0]
0x108d46 -> mov rcx,-0x1
0x102d46 -> push 0x11
0x10cd4a -> mov rdi,rax
0x10ad4b -> jmp 0x0010ada1
0x106d4b -> mov edi,eax
0x102d4b -> jmp 0x00102c20
0x104d4c -> mov dword ptr [rbp + -0x4c4],0x2
0x10cd4d -> call pthread_mutex_unlock
0x10ad4d -> mov rax,qword ptr [rbp + -0x268]
0x108d4d -> mov rdi,rax
0x106d4d -> call fsync
0x108d50 -> call 0x00106ed8
0x102d50 -> jmp qword ptr [0x00310ba0]
0x10cd52 -> mov rax,qword ptr [rbp + -0x8]
0x106d52 -> jmp 0x00106e29
0x10ad54 -> mov rax,qword ptr [rax]
0x108d55 -> mov eax,0x0
0x10cd56 -> leave
0x104d56 -> lea rax,[rbp + -0x5f0]
0x102d56 -> push 0x12
0x10cd57 -> ret
0x10ad57 -> mov edx,dword ptr [rbp + -0x250]
0x106d57 -> mov rax,qword ptr [rbp + -0x28]
0x10cd58 -> push rbp
0x10cd59 -> mov rbp,rsp
0x108d5a -> jmp 0x00108f44
0x106d5b -> mov rax,qword ptr [rax + 0xe0]
0x102d5b -> jmp 0x00102c20
0x10cd5c -> sub rsp,0x10
0x10ad5d -> movsxd rdx,edx
0x104d5d -> add rax,0x10
0x108d5f -> cmp dword ptr [rbp + -0x45c],0x7
0x10cd60 -> mov qword ptr [rbp + -0x8],rdi
0x10ad60 -> shl rdx,0x3
0x102d60 -> jmp qword ptr [0x00310ba8]
0x104d61 -> mov qword ptr [rbp + -0x4c0],rax
0x106d62 -> mov eax,dword ptr [rax + 0x20]
0x10cd64 -> lea rax,[0x311220]
0x10ad64 -> add rax,rdx
0x106d65 -> and eax,0x10000
0x108d66 -> jnz 0x00108dcd
0x102d66 -> push 0x13
0x10ad67 -> mov rax,qword ptr [rax]
0x108d68 -> mov edx,dword ptr [rbp + -0x460]
0x104d68 -> mov dword ptr [rbp + -0x4b8],0x0
0x10ad6a -> mov qword ptr [rbp + -0x218],rax
0x106d6a -> test eax,eax
0x10cd6b -> mov rdi,rax
0x102d6b -> jmp 0x00102c20
0x106d6c -> jz 0x00106d84
0x10cd6e -> call pthread_mutex_lock
0x108d6e -> mov rax,qword ptr [rbp + -0x458]
0x106d6e -> mov rax,qword ptr [rbp + -0x28]
0x102d70 -> jmp qword ptr [0x00310bb0]
0x10ad71 -> mov rax,qword ptr [rbp + -0x218]
0x106d72 -> mov eax,dword ptr [rax + 0xf0]
0x104d72 -> lea rax,[0x10e196]
0x10cd73 -> mov rax,qword ptr [rbp + -0x8]
0x108d75 -> mov dword ptr [rax + 0x104],edx
0x102d76 -> push 0x14
0x10cd77 -> mov eax,dword ptr [rax + 0x60]
0x10ad78 -> mov rax,qword ptr [rax + 0x40]
0x106d78 -> mov edi,eax
0x104d79 -> mov qword ptr [rbp + -0x4b0],rax
0x10cd7a -> lea edx,[rax + -0x1]
0x106d7a -> call fsync
0x108d7b -> mov rdx,qword ptr [rbp + -0x428]
0x102d7b -> jmp 0x00102c20
0x10ad7c -> mov rcx,rax
0x10cd7d -> mov rax,qword ptr [rbp + -0x8]
0x10ad7f -> lea rdx,[0x10f009]
0x106d7f -> jmp 0x00106e29
0x104d80 -> mov dword ptr [rbp + -0x4a8],0x0
0x102d80 -> jmp qword ptr [0x00310bb8]
0x10cd81 -> mov dword ptr [rax + 0x60],edx
0x108d82 -> mov rax,qword ptr [rbp + -0x458]
0x10cd84 -> mov rax,qword ptr [rbp + -0x8]
0x106d84 -> mov rax,qword ptr [rbp + -0x28]
0x10ad86 -> mov esi,0x20
0x102d86 -> push 0x15
0x10cd88 -> mov eax,dword ptr [rax + 0x60]
0x106d88 -> mov rax,qword ptr [rax + 0xe0]
0x108d89 -> mov rsi,rdx
0x104d8a -> mov dword ptr [rbp + -0x4a4],0x2
0x10cd8b -> test eax,eax
0x10ad8b -> mov edi,0x0
0x102d8b -> jmp 0x00102c20
0x108d8c -> mov rdi,rax
0x10cd8d -> jnz 0x0010cda3
0x10cd8f -> mov rax,qword ptr [rbp + -0x8]
0x108d8f -> call 0x001082aa
0x106d8f -> mov eax,dword ptr [rax + 0x20]
0x10ad90 -> mov eax,0x0
0x102d90 -> jmp qword ptr [0x00310bc0]
0x106d92 -> and eax,0x2000
0x10cd93 -> mov rdi,rax
0x108d94 -> xor eax,0x1
0x104d94 -> lea rax,[rbp + -0x5f0]
0x10ad95 -> call g_log
0x10cd96 -> call g_free
0x102d96 -> push 0x16
0x108d97 -> test al,al
0x106d97 -> test eax,eax
0x108d99 -> jz 0x00108dcd
0x106d99 -> jz 0x00106dc3
0x10ad9a -> add dword ptr [rbp + -0x250],0x1
0x10cd9b -> mov qword ptr [rbp + -0x8],0x0
0x108d9b -> mov esi,dword ptr [rbp + -0x45c]
0x106d9b -> mov rax,qword ptr [rbp + -0x28]
0x104d9b -> add rax,0x18
0x102d9b -> jmp 0x00102c20
0x106d9f -> mov rax,qword ptr [rax + 0xe0]
0x104d9f -> mov qword ptr [rbp + -0x4a0],rax
0x102da0 -> jmp qword ptr [0x00310bc8]
0x10ada1 -> mov rax,qword ptr [rbp + -0x268]
0x108da1 -> mov rax,qword ptr [rbp + -0x458]
0x10cda3 -> lea rax,[0x311220]
0x106da6 -> mov eax,dword ptr [rax + 0x20]
0x104da6 -> mov dword ptr [rbp + -0x498],0x0
0x102da6 -> push 0x17
0x10ada8 -> mov edx,dword ptr [rax + 0x8]
0x108da8 -> lea r8,[0x10eb30]
0x106da9 -> and eax,0x1
0x10cdaa -> mov rdi,rax
0x10adab -> mov eax,dword ptr [rbp + -0x250]
0x102dab -> jmp 0x00102c20
0x106dac -> test eax,eax
0x10cdad -> call pthread_mutex_unlock
0x106dae -> jz 0x00106db7
0x108daf -> mov rcx,-0x1
0x106db0 -> mov eax,0x0
0x104db0 -> lea rax,[0x10e19b]
0x102db0 -> jmp qword ptr [0x00310bd0]
0x10adb1 -> cmp edx,eax
0x10cdb2 -> mov rax,qword ptr [rbp + -0x8]
0x10adb3 -> ja 0x0010ad4d
0x10adb5 -> mov rax,qword ptr [rbp + -0x210]
0x106db5 -> jmp 0x00106e29
0x10cdb6 -> leave
0x108db6 -> mov edx,0x80000002
0x102db6 -> push 0x18
0x10cdb7 -> ret
0x106db7 -> call sync
0x104db7 -> mov qword ptr [rbp + -0x490],rax
0x10cdb8 -> push rbp
0x10cdb9 -> mov rbp,rsp
0x108dbb -> mov rdi,rax
0x102dbb -> jmp 0x00102c20
0x10cdbc -> sub rsp,0x50
0x10adbc -> mov rdx,qword ptr [rbp + -0x208]
0x106dbc -> mov eax,0x0
0x108dbe -> call 0x00106ed8
0x104dbe -> mov dword ptr [rbp + -0x488],0x0
0x10cdc0 -> mov qword ptr [rbp + -0x28],rdi
0x102dc0 -> jmp qword ptr [0x00310bd8]
0x106dc1 -> jmp 0x00106e29
0x10adc3 -> mov qword ptr [rbp + -0x190],rax
0x108dc3 -> mov eax,0x0
0x106dc3 -> mov dword ptr [rbp + -0x14],0x0
0x10cdc4 -> mov dword ptr [rbp + -0x2c],esi
0x102dc6 -> push 0x19
0x10cdc7 -> mov qword ptr [rbp + -0x38],rdx
0x108dc8 -> jmp 0x00108f44
0x104dc8 -> mov dword ptr [rbp + -0x484],0x2
0x10adca -> mov qword ptr [rbp + -0x188],rdx
0x106dca -> jmp 0x00106e0f
0x10cdcb -> mov qword ptr [rbp + -0x40],rcx
0x102dcb -> jmp 0x00102c20
0x106dcc -> mov rax,qword ptr [rbp + -0x28]
0x108dcd -> mov dword ptr [rbp + -0x438],0x0
0x10cdcf -> mov qword ptr [rbp + -0x48],r8
0x106dd0 -> mov rax,qword ptr [rax + 0x98]
0x102dd0 -> jmp qword ptr [0x00310be0]
0x10add1 -> mov rax,qword ptr [rbp + -0x200]
0x104dd2 -> lea rax,[rbp + -0x668]
0x10cdd3 -> mov rax,qword ptr fs:[0x28]
0x102dd6 -> push 0x1a
0x108dd7 -> jmp 0x00108e84
0x106dd7 -> mov rax,qword ptr [rax]
0x10add8 -> mov rdx,qword ptr [rbp + -0x1f8]
0x104dd9 -> mov qword ptr [rbp + -0x480],rax
0x106dda -> mov edx,dword ptr [rbp + -0x14]
0x102ddb -> jmp 0x00102c20
0x10cddc -> mov qword ptr [rbp + -0x8],rax
0x108ddc -> lea rcx,[rbp + -0x442]
0x106ddd -> movsxd rdx,edx
0x10addf -> mov qword ptr [rbp + -0x180],rax
0x10cde0 -> xor eax,eax
0x106de0 -> shl rdx,0x4
0x104de0 -> mov dword ptr [rbp + -0x478],0x0
0x102de0 -> jmp qword ptr [0x00310be8]
0x10cde2 -> cmp dword ptr [rbp + -0x2c],0x9
0x108de3 -> mov rax,qword ptr [rbp + -0x458]
0x106de4 -> add rax,rdx
0x10cde6 -> jg 0x0010cdf4
0x10ade6 -> mov qword ptr [rbp + -0x178],rdx
0x102de6 -> push 0x1b
0x106de7 -> mov rdx,qword ptr [rax + 0x8]
0x10cde8 -> lea rdi,[0x10f648]
0x108dea -> mov edx,0x2
0x104dea -> lea rax,[0x10e1a6]
0x106deb -> mov rax,qword ptr [rax]
0x102deb -> jmp 0x00102c20
0x10aded -> mov rax,qword ptr [rbp + -0x1f0]
0x106dee -> mov qword ptr [rbp + -0x10],rax
0x10cdef -> call 0x0010d638
0x108def -> mov rsi,rcx
0x102df0 -> jmp qword ptr [0x00310bf0]
0x104df1 -> mov qword ptr [rbp + -0x470],rax
0x108df2 -> mov rdi,rax
0x106df2 -> mov qword ptr [rbp + -0x8],rdx
0x10cdf4 -> cmp qword ptr [rbp + -0x38],0x3fffff
0x10adf4 -> mov rdx,qword ptr [rbp + -0x1e8]
0x108df5 -> call 0x001036fe
0x106df6 -> mov eax,dword ptr [rbp + -0x10]
0x102df6 -> push 0x1c
0x104df8 -> mov dword ptr [rbp + -0x468],0x0
0x106df9 -> mov edi,eax
0x108dfa -> movzx eax,word ptr [rbp + -0x442]
0x10adfb -> mov qword ptr [rbp + -0x170],rax
0x106dfb -> call fsync
0x102dfb -> jmp 0x00102c20
0x10cdfc -> jg 0x0010ce7a
0x10cdfe -> mov rax,qword ptr [rbp + -0x40]
0x106e00 -> test eax,eax
0x102e00 -> jmp qword ptr [0x00310bf8]
0x108e01 -> movzx eax,ax
0x10ce02 -> lea rdx,[rax + 0xfff]
0x10ae02 -> mov qword ptr [rbp + -0x168],rdx
0x106e02 -> jns 0x00106e0b
0x104e02 -> mov dword ptr [rbp + -0x464],0x3
0x108e04 -> mov edi,eax
0x106e04 -> mov eax,0xffffffff
0x108e06 -> call ntohs
0x102e06 -> push 0x1d
0x10ce09 -> test rax,rax
0x10ae09 -> mov rax,qword ptr [rbp + -0x1e0]
0x106e09 -> jmp 0x00106e29
0x108e0b -> movzx eax,ax
0x106e0b -> add dword ptr [rbp + -0x14],0x1
0x102e0b -> jmp 0x00102c20
0x10ce0c -> cmovs rax,rdx
0x104e0c -> lea rax,[rbp + -0x5f0]
0x108e0e -> test eax,eax
0x106e0f -> mov rax,qword ptr [rbp + -0x28]
0x10ce10 -> sar rax,0xc
0x10ae10 -> mov rdx,qword ptr [rbp + -0x1d8]
0x108e10 -> jz 0x00108e14
0x102e10 -> jmp qword ptr [0x00310c00]
0x108e12 -> jmp 0x00108e7d
0x106e13 -> mov rax,qword ptr [rax + 0x98]
0x104e13 -> add rax,0x48
0x10ce14 -> mov rdx,rax
0x108e14 -> mov esi,dword ptr [rbp + -0x45c]
0x102e16 -> push 0x1e
0x10ce17 -> mov rax,rdx
0x10ae17 -> mov qword ptr [rbp + -0x160],rax
0x104e17 -> mov qword ptr [rbp + -0x460],rax
0x10ce1a -> sar rax,0x3f
0x108e1a -> mov rax,qword ptr [rbp + -0x458]
0x106e1a -> mov edx,dword ptr [rax + 0x8]
0x102e1b -> jmp 0x00102c20
0x106e1d -> mov eax,dword ptr [rbp + -0x14]
0x10ce1e -> shr rax,0x36
0x10ae1e -> mov qword ptr [rbp + -0x158],rdx
0x104e1e -> mov dword ptr [rbp + -0x458],0x2
0x106e20 -> cmp edx,eax
0x102e20 -> jmp qword ptr [0x00310c08]
0x108e21 -> mov r8d,0x0
0x10ce22 -> add rdx,rax
0x106e22 -> ja 0x00106dcc
0x106e24 -> mov eax,0x0
0x10ce25 -> and edx,0x3ff
0x10ae25 -> mov rax,qword ptr [rbp + -0x1d0]
0x102e26 -> push 0x1f
0x108e27 -> mov ecx,0xc
0x104e28 -> lea rax,[0x10e1b0]
0x106e29 -> leave
0x106e2a -> ret
0x10ce2b -> sub rdx,rax
0x106e2b -> push rbp
0x102e2b -> jmp 0x00102c20
0x10ae2c -> mov rdx,qword ptr [rbp + -0x1c8]
0x108e2c -> mov edx,0x3
0x106e2c -> mov rbp,rsp
0x10ce2e -> mov rax,rdx
0x106e2f -> sub rsp,0x40
0x104e2f -> mov qword ptr [rbp + -0x450],rax
0x102e30 -> jmp qword ptr [0x00310c10]
0x10ce31 -> mov rdx,rax
0x108e31 -> mov rdi,rax
0x10ae33 -> mov qword ptr [rbp + -0x150],rax
0x106e33 -> mov dword ptr [rbp + -0x24],edi
0x10ce34 -> mov eax,dword ptr [rbp + -0x2c]
0x108e34 -> call 0x00106ed8
0x106e36 -> mov qword ptr [rbp + -0x30],rsi
0x104e36 -> mov dword ptr [rbp + -0x448],0x0
0x102e36 -> push 0x20
0x10ce37 -> movsxd rsi,eax
0x108e39 -> lea rcx,[rbp + -0x442]
0x10ce3a -> mov rax,qword ptr [rbp + -0x28]
0x10ae3a -> mov qword ptr [rbp + -0x148],rdx
0x106e3a -> mov qword ptr [rbp + -0x38],rdx
0x102e3b -> jmp 0x00102c20
0x10ce3e -> mov rcx,rdx
0x106e3e -> mov rax,qword ptr fs:[0x28]
0x108e40 -> mov rax,qword ptr [rbp + -0x458]
0x104e40 -> mov dword ptr [rbp + -0x444],0x2
0x102e40 -> jmp qword ptr [0x00310c18]
0x10ce41 -> lea rdx,[0x10f674]
0x10ae41 -> mov rax,qword ptr [rbp + -0x1c0]
0x102e46 -> push 0x21
0x108e47 -> mov edx,0x2
0x106e47 -> mov qword ptr [rbp + -0x8],rax
0x10ce48 -> mov rdi,rax
0x10ae48 -> mov rdx,qword ptr [rbp + -0x1b8]
0x104e4a -> lea rax,[rbp + -0x5f0]
0x10ce4b -> mov eax,0x0
0x106e4b -> xor eax,eax
0x102e4b -> jmp 0x00102c20
0x108e4c -> mov rsi,rcx
0x106e4d -> call __errno_location
0x10ae4f -> mov qword ptr [rbp + -0x140],rax
0x108e4f -> mov rdi,rax
0x10ce50 -> call snprintf
0x102e50 -> jmp qword ptr [0x00310c20]
0x104e51 -> add rax,0x20
0x108e52 -> call 0x00103891
0x106e52 -> mov dword ptr [rax],0x0
0x10ce55 -> mov rax,qword ptr [rbp + -0x40]
0x104e55 -> mov qword ptr [rbp + -0x440],rax
0x10ae56 -> mov qword ptr [rbp + -0x138],rdx
0x102e56 -> push 0x22
0x108e57 -> mov rcx,qword ptr [rbp + -0x428]
0x106e58 -> mov rcx,qword ptr [rbp + -0x38]
0x10ce59 -> lea rdx,[rax + 0x3fffff]
0x102e5b -> jmp 0x00102c20
0x106e5c -> mov rdx,qword ptr [rbp + -0x30]
0x104e5c -> mov dword ptr [rbp + -0x438],0x0
0x10ae5d -> mov rax,qword ptr [rbp + -0x1b0]
0x108e5e -> mov rax,qword ptr [rbp + -0x458]
0x10ce60 -> test rax,rax
0x106e60 -> mov eax,dword ptr [rbp + -0x24]
0x102e60 -> jmp qword ptr [0x00310c28]
0x10ce63 -> cmovs rax,rdx
0x106e63 -> mov esi,0x3
0x10ae64 -> mov rdx,qword ptr [rbp + -0x1a8]
0x108e65 -> mov edx,0x0
0x104e66 -> lea rax,[0x10e1b9]
0x102e66 -> push 0x23
0x10ce67 -> sar rax,0x16
0x106e68 -> mov edi,eax
0x108e6a -> mov rsi,rcx
0x106e6a -> call fallocate64
0x10ce6b -> mov rdx,rax
0x10ae6b -> mov qword ptr [rbp + -0x130],rax
0x102e6b -> jmp 0x00102c20
0x108e6d -> mov rdi,rax
0x104e6d -> mov qword ptr [rbp + -0x430],rax
0x10ce6e -> mov rax,qword ptr [rbp + -0x48]
0x106e6f -> test eax,eax
0x108e70 -> call 0x001080cc
0x102e70 -> jmp qword ptr [0x00310c30]
0x106e71 -> jz 0x00106ebe
0x10ce72 -> mov qword ptr [rax],rdx
0x10ae72 -> mov qword ptr [rbp + -0x128],rdx
0x106e73 -> call __errno_location
0x104e74 -> mov dword ptr [rbp + -0x428],0x0
0x10ce75 -> jmp 0x0010cf2d
0x108e75 -> mov byte ptr [rbp + -0x445],0x1
0x102e76 -> push 0x24
0x106e78 -> mov eax,dword ptr [rax]
0x10ae79 -> mov rax,qword ptr [rbp + -0x1a0]
0x10ce7a -> mov rax,qword ptr [rbp + -0x38]
0x106e7a -> cmp eax,0x4
0x102e7b -> jmp 0x00102c20
0x108e7c -> nop
0x108e7d -> add dword ptr [rbp + -0x438],0x1
0x106e7d -> jz 0x00106e58
0x10ce7e -> lea rdx,[rax + 0x3ff]
0x104e7e -> mov dword ptr [rbp + -0x424],0x3
0x106e7f -> mov rax,qword ptr [rbp + -0x30]
0x10ae80 -> mov rdx,qword ptr [rbp + -0x198]
0x102e80 -> jmp qword ptr [0x00310c38]
0x106e83 -> mov qword ptr [rbp + -0x20],rax
0x108e84 -> movzx eax,word ptr [rbp + -0x444]
0x10ce85 -> test rax,rax
0x102e86 -> push 0x25
0x10ae87 -> mov qword ptr [rbp + -0x120],rax
0x106e87 -> mov rax,qword ptr [rbp + -0x38]
0x10ce88 -> cmovs rax,rdx
0x104e88 -> lea rax,[rbp + -0x5f0]
0x108e8b -> movzx eax,ax
0x106e8b -> mov qword ptr [rbp + -0x18],rax
0x102e8b -> jmp 0x00102c20
0x10ce8c -> sar rax,0xa
0x10ae8e -> mov qword ptr [rbp + -0x118],rdx
0x108e8e -> cmp dword ptr [rbp + -0x438],eax
0x106e8f -> lea rdx,[rbp + -0x20]
0x104e8f -> add rax,0x48
0x10ce90 -> mov r9,rax
0x102e90 -> jmp qword ptr [0x00310c40]
0x10ce93 -> mov eax,dword ptr [rbp + -0x2c]
0x106e93 -> mov eax,dword ptr [rbp + -0x24]
0x104e93 -> mov qword ptr [rbp + -0x420],rax
0x108e94 -> jl 0x00108ddc
0x10ae95 -> mov eax,dword ptr [rbp + -0x24c]
0x10ce96 -> lea esi,[rax + -0x9]
0x106e96 -> mov esi,0x1277
0x102e96 -> push 0x26
0x10ce99 -> mov rax,qword ptr [rbp + -0x28]
0x108e9a -> movzx eax,byte ptr [rbp + -0x445]
0x104e9a -> mov dword ptr [rbp + -0x418],0x8
0x10ae9b -> mov dword ptr [rbp + -0x248],eax
0x106e9b -> mov edi,eax
0x102e9b -> jmp 0x00102c20
0x10ce9d -> lea rdi,[rax + 0x9]
0x106e9d -> mov eax,0x0
0x102ea0 -> jmp qword ptr [0x00310c48]
0x10cea1 -> mov rdx,qword ptr [rbp + -0x48]
0x10aea1 -> mov dword ptr [rbp + -0x250],0x0
0x108ea1 -> xor eax,0x1
0x106ea2 -> call ioctl
0x108ea4 -> test al,al
0x104ea4 -> lea rax,[0x10e1c4]
0x10cea5 -> mov rax,qword ptr [rbp + -0x40]
0x108ea6 -> jz 0x00108f1a
0x102ea6 -> push 0x27
0x106ea7 -> test eax,eax
0x108ea8 -> mov edi,0x0
0x10cea9 -> mov r8,rdx
0x106ea9 -> jz 0x00106ec1
0x10aeab -> jmp 0x0010af3f
0x106eab -> call __errno_location
0x104eab -> mov qword ptr [rbp + -0x410],rax
0x102eab -> jmp 0x00102c20
0x10ceac -> mov rcx,rax
0x108ead -> call htons
0x10ceaf -> mov rdx,r9
0x10aeb0 -> mov rax,qword ptr [0x00311260]
0x106eb0 -> mov eax,dword ptr [rax]
0x102eb0 -> jmp qword ptr [0x00310c50]
0x10ceb2 -> call 0x0010cdb8
0x108eb2 -> mov word ptr [rbp + -0x442],ax
0x106eb2 -> cmp eax,0x4
0x104eb2 -> mov dword ptr [rbp + -0x408],0x0
0x106eb5 -> jz 0x00106e8f
0x102eb6 -> push 0x28
0x10ceb7 -> mov rax,qword ptr [rbp + -0x48]
0x10aeb7 -> mov rax,qword ptr [rax]
0x106eb7 -> call __errno_location
0x108eb9 -> mov esi,dword ptr [rbp + -0x45c]
0x10aeba -> mov edx,dword ptr [rbp + -0x250]
0x10cebb -> mov rax,qword ptr [rax]
0x102ebb -> jmp 0x00102c20
0x106ebc -> jmp 0x00106ec2
0x104ebc -> mov dword ptr [rbp + -0x404],0x0
0x10cebe -> cqo
0x106ebe -> nop
0x108ebf -> mov rax,qword ptr [rbp + -0x458]
0x106ebf -> jmp 0x00106ec2
0x10cec0 -> shr rdx,0x36
0x10aec0 -> movsxd rdx,edx
0x102ec0 -> jmp qword ptr [0x00310c58]
0x106ec1 -> nop
0x106ec2 -> mov rax,qword ptr [rbp + -0x8]
0x10aec3 -> shl rdx,0x2
0x10cec4 -> add rax,rdx
0x108ec6 -> mov r8d,0x0
0x106ec6 -> xor rax,qword ptr fs:[0x28]
0x104ec6 -> lea rax,[rbp + -0x5f0]
0x102ec6 -> push 0x29
0x10cec7 -> and eax,0x3ff
0x10aec7 -> add rax,rdx
0x10aeca -> mov eax,dword ptr [rax]
0x102ecb -> jmp 0x00102c20
0x10cecc -> sub rax,rdx
0x10aecc -> mov dword ptr [rbp + -0x230],eax
0x108ecc -> mov ecx,0xc
0x104ecd -> add rax,0x4c
0x10cecf -> mov rdx,rax
0x106ecf -> jz 0x00106ed6
0x102ed0 -> jmp qword ptr [0x00310c60]
0x108ed1 -> mov edx,0x3
0x106ed1 -> call __stack_chk_fail
0x104ed1 -> mov qword ptr [rbp + -0x400],rax
0x10ced2 -> lea rax,[rbp + -0x12]
0x10aed2 -> mov eax,dword ptr [rbp + -0x230]
0x10ced6 -> mov rcx,rdx
0x108ed6 -> mov rdi,rax
0x106ed6 -> leave
0x102ed6 -> push 0x2a
0x106ed7 -> ret
0x10aed8 -> lea edx,[rax + 0x3f]
0x106ed8 -> push rbp
0x104ed8 -> mov dword ptr [rbp + -0x3f8],0x0
0x10ced9 -> lea rdx,[0x10f67f]
0x108ed9 -> call 0x00106ed8
0x106ed9 -> mov rbp,rsp
0x10aedb -> test eax,eax
0x102edb -> jmp 0x00102c20
0x106edc -> sub rsp,0x40
0x10aedd -> cmovs eax,edx
0x108ede -> lea rcx,[rbp + -0x442]
0x10cee0 -> mov esi,0xa
0x10aee0 -> sar eax,0x6
0x106ee0 -> mov qword ptr [rbp + -0x28],rdi
0x102ee0 -> jmp qword ptr [0x00310c68]
0x104ee2 -> lea rax,[0x10e171]
0x10aee3 -> mov esi,eax
0x106ee4 -> mov dword ptr [rbp + -0x2c],esi
0x10cee5 -> mov rdi,rax
0x10aee5 -> movsxd rax,esi
0x108ee5 -> mov rax,qword ptr [rbp + -0x458]
0x102ee6 -> push 0x2b
0x106ee7 -> mov dword ptr [rbp + -0x30],edx
0x10cee8 -> mov eax,0x0
0x10aee8 -> mov rdi,qword ptr [rbp + rax*0x8 + -0x190]
0x104ee9 -> mov qword ptr [rbp + -0x3f0],rax
0x106eea -> mov qword ptr [rbp + -0x38],rcx
0x102eeb -> jmp 0x00102c20
0x108eec -> mov edx,0x2
0x10ceed -> call snprintf
0x106eee -> mov qword ptr [rbp + -0x40],r8
0x10aef0 -> mov eax,dword ptr [rbp + -0x230]
0x104ef0 -> mov dword ptr [rbp + -0x3e8],0x0
0x102ef0 -> jmp qword ptr [0x00310c70]
0x108ef1 -> mov rsi,rcx
0x10cef2 -> lea rcx,[rbp + -0x12]
0x106ef2 -> mov rax,qword ptr fs:[0x28]
0x108ef4 -> mov rdi,rax
0x10cef6 -> mov rax,qword ptr [rbp + -0x28]
0x10aef6 -> cdq
0x102ef6 -> push 0x2c
0x10aef7 -> shr edx,0x1a
0x108ef7 -> call 0x00103891
0x10cefa -> mov edx,0x9
0x10aefa -> add eax,edx
0x104efa -> mov dword ptr [rbp + -0x3e4],0x3
0x106efb -> mov qword ptr [rbp + -0x8],rax
0x102efb -> jmp 0x00102c20
0x10aefc -> and eax,0x3f
0x108efc -> mov rcx,qword ptr [rbp + -0x428]
0x10ceff -> mov rsi,rcx
0x10aeff -> sub eax,edx
0x106eff -> xor eax,eax
0x102f00 -> jmp qword ptr [0x00310c78]
0x10af01 -> mov edx,0x1
0x106f01 -> mov rdi,0x3e889045565a9
0x10cf02 -> mov rdi,rax
0x108f03 -> mov rax,qword ptr [rbp + -0x458]
0x104f04 -> lea rax,[rbp + -0x5f0]
0x10cf05 -> call memcpy
0x10af06 -> mov ecx,eax
0x102f06 -> push 0x2d
0x10af08 -> shl rdx,cl
0x10cf0a -> mov rax,qword ptr [rbp + -0x48]
0x108f0a -> mov edx,0x0
0x10af0b -> mov rax,rdx
0x106f0b -> call 0x0010d6ce
0x104f0b -> add rax,0x48
0x102f0b -> jmp 0x00102c20
0x10cf0e -> mov rax,qword ptr [rax]
0x10af0e -> or rdi,rax
0x108f0f -> mov rsi,rcx
0x104f0f -> mov qword ptr [rbp + -0x3e0],rax
0x106f10 -> mov qword ptr [rbp + -0x20],rax
0x102f10 -> jmp qword ptr [0x00310c80]
0x10cf11 -> lea rdx,[rax + 0x3ff]
0x10af11 -> mov rdx,rdi
0x108f12 -> mov rdi,rax
0x10af14 -> movsxd rax,esi
0x106f14 -> mov eax,dword ptr [rbp + -0x2c]
0x108f15 -> call 0x001080cc
0x104f16 -> mov dword ptr [rbp + -0x3d8],0x4000
0x102f16 -> push 0x2e
0x10af17 -> mov qword ptr [rbp + rax*0x8 + -0x190],rdx
0x106f17 -> mov edi,eax
0x10cf18 -> test rax,rax
0x106f19 -> call htonl
0x108f1a -> mov esi,dword ptr [rbp + -0x45c]
0x10cf1b -> cmovs rax,rdx
0x102f1b -> jmp 0x00102c20
0x106f1e -> mov dword ptr [rbp + -0x18],eax
0x10cf1f -> sar rax,0xa
0x10af1f -> mov eax,dword ptr [rbp + -0x230]
0x108f20 -> mov rax,qword ptr [rbp + -0x458]
0x104f20 -> lea rax,[0x10e1d0]
0x102f20 -> jmp qword ptr [0x00310c88]
0x106f21 -> mov eax,dword ptr [rbp + -0x30]
0x10cf23 -> mov rdx,rax
0x106f24 -> mov edi,eax
0x10af25 -> cmp dword ptr [rbp + -0x248],eax
0x10cf26 -> mov rax,qword ptr [rbp + -0x48]
0x106f26 -> call htonl
0x102f26 -> push 0x2f
0x108f27 -> mov r8d,0x0
0x104f27 -> mov qword ptr [rbp + -0x3d0],rax
0x10cf2a -> mov qword ptr [rax],rdx
0x10af2b -> cmovge eax,dword ptr [rbp + -0x248]
0x106f2b -> mov dword ptr [rbp + -0x14],eax
0x102f2b -> jmp 0x00102c20
0x10cf2d -> nop
0x108f2d -> mov ecx,0x0
0x10cf2e -> mov rax,qword ptr [rbp + -0x8]
0x106f2e -> mov rax,qword ptr [rbp + -0x38]
0x104f2e -> mov dword ptr [rbp + -0x3c8],0x0
0x102f30 -> jmp qword ptr [0x00310c90]
0x10cf32 -> xor rax,qword ptr fs:[0x28]
0x10af32 -> mov dword ptr [rbp + -0x248],eax
0x108f32 -> mov edx,0x1
0x106f32 -> mov edi,eax
0x106f34 -> call htonl
0x102f36 -> push 0x30
0x108f37 -> mov rdi,rax
0x10af38 -> add dword ptr [rbp + -0x250],0x1
0x104f38 -> mov dword ptr [rbp + -0x3c4],0x2
0x106f39 -> mov dword ptr [rbp + -0x10],eax
0x108f3a -> call 0x00106ed8
0x10cf3b -> jz 0x0010cf42
0x102f3b -> jmp 0x00102c20
0x106f3c -> cmp qword ptr [rbp + -0x38],0x0
0x10cf3d -> call __stack_chk_fail
0x10af3f -> mov rax,qword ptr [0x00311260]
0x108f3f -> mov eax,0x1
0x102f40 -> jmp qword ptr [0x00310c98]
0x106f41 -> jns 0x00106f61
0x10cf42 -> leave
0x104f42 -> lea rax,[rbp + -0x5f0]
0x10cf43 -> ret
0x106f43 -> mov rax,qword ptr [rbp + -0x40]
0x10cf44 -> push rbp
0x108f44 -> mov rdi,qword ptr [rbp + -0x8]
0x10cf45 -> mov rbp,rsp
0x10af46 -> mov edx,dword ptr [rax + 0x8]
0x102f46 -> push 0x31
0x106f47 -> mov rdi,rax
0x10cf48 -> push r14
0x108f48 -> xor rdi,qword ptr fs:[0x28]
0x10af49 -> mov eax,dword ptr [rbp + -0x250]
0x104f49 -> add rax,0x28
0x10cf4a -> push r13
0x106f4a -> call strlen
0x102f4b -> jmp 0x00102c20
0x10cf4c -> push r12
0x104f4d -> mov qword ptr [rbp + -0x3c0],rax
0x10cf4e -> push rbx
0x10cf4f -> sub rsp,0x50
0x10af4f -> cmp edx,eax
0x106f4f -> mov qword ptr [rbp + -0x38],rax
0x102f50 -> jmp qword ptr [0x00310ca0]
0x10af51 -> ja 0x0010aeb0
0x108f51 -> jz 0x00108f58
0x10cf53 -> mov qword ptr [rbp + -0x48],rdi
0x108f53 -> call __stack_chk_fail
0x106f53 -> mov rax,qword ptr [rbp + -0x38]
0x104f54 -> mov dword ptr [rbp + -0x3b8],0x0
0x102f56 -> push 0x32
0x10cf57 -> mov qword ptr [rbp + -0x50],rsi
0x10af57 -> mov eax,dword ptr [rbp + -0x248]
0x106f57 -> mov edi,eax
0x108f58 -> leave
0x108f59 -> ret
0x106f59 -> call htonl
0x108f5a -> push rbp
0x10cf5b -> mov qword ptr [rbp + -0x58],rdx
0x108f5b -> mov rbp,rsp
0x102f5b -> jmp 0x00102c20
0x10af5d -> lea edi,[rax + 0x1]
0x108f5e -> sub rsp,0x50
0x106f5e -> mov dword ptr [rbp + -0x10],eax
0x104f5e -> lea rax,[0x10e1d9]
0x10cf5f -> mov rax,qword ptr fs:[0x28]
0x10af60 -> lea rdx,[rbp + -0x90]
0x102f60 -> jmp qword ptr [0x00310ca8]
0x106f61 -> lea rcx,[rbp + -0x20]
0x108f62 -> mov dword ptr [rbp + -0x34],edi
0x108f65 -> mov qword ptr [rbp + -0x40],rsi
0x106f65 -> mov rax,qword ptr [rbp + -0x28]
0x104f65 -> mov qword ptr [rbp + -0x3b0],rax
0x102f66 -> push 0x33
0x10af67 -> lea rax,[rbp + -0x190]
0x10cf68 -> mov qword ptr [rbp + -0x28],rax
0x108f69 -> mov qword ptr [rbp + -0x48],rdx
0x106f69 -> mov edx,0x14
0x102f6b -> jmp 0x00102c20
0x10cf6c -> xor eax,eax
0x104f6c -> mov dword ptr [rbp + -0x3a8],0x0
0x108f6d -> mov rax,qword ptr fs:[0x28]
0x10cf6e -> mov rax,rsp
0x10af6e -> mov r9,rdx
0x106f6e -> mov rsi,rcx
0x102f70 -> jmp qword ptr [0x00310cb0]
0x10cf71 -> mov r12,rax
0x10af71 -> mov r8d,0x0
0x106f71 -> mov rdi,rax
0x10cf74 -> mov rax,qword ptr [rbp + -0x48]
0x106f74 -> call 0x00103891
0x108f76 -> mov qword ptr [rbp + -0x8],rax
0x104f76 -> mov dword ptr [rbp + -0x3a4],0x2
0x102f76 -> push 0x34
0x10af77 -> mov ecx,0x0
0x10cf78 -> mov rdi,rax
0x106f79 -> cmp qword ptr [rbp + -0x40],0x0
0x108f7a -> xor eax,eax
0x10cf7b -> call strlen
0x102f7b -> jmp 0x00102c20
0x10af7c -> mov edx,0x0
0x108f7c -> mov word ptr [rbp + -0x22],0x3
0x106f7e -> jz 0x00106f97
0x10cf80 -> add rax,0x100
0x106f80 -> mov rdx,qword ptr [rbp + -0x38]
0x104f80 -> lea rax,[rbp + -0x5f0]
0x102f80 -> jmp qword ptr [0x00310cb8]
0x10af81 -> mov rsi,rax
0x108f82 -> mov dword ptr [rbp + -0x20],0x0
0x10af84 -> call pselect
0x106f84 -> mov rcx,qword ptr [rbp + -0x40]
0x10cf86 -> mov rdx,rax
0x102f86 -> push 0x35
0x104f87 -> add rax,0x30
0x106f88 -> mov rax,qword ptr [rbp + -0x28]
0x10cf89 -> sub rdx,0x1
0x10af89 -> test eax,eax
0x108f89 -> mov esi,0x150
0x10af8b -> jle 0x0010ab6b
0x104f8b -> mov qword ptr [rbp + -0x3a0],rax
0x102f8b -> jmp 0x00102c20
0x106f8c -> mov rsi,rcx
0x10cf8d -> mov qword ptr [rbp + -0x38],rdx
0x108f8e -> mov edi,0x1
0x106f8f -> mov rdi,rax
0x102f90 -> jmp qword ptr [0x00310cc0]
0x10cf91 -> mov qword ptr [rbp + -0x70],rax
0x10af91 -> mov dword ptr [rbp + -0x250],0x0
0x106f92 -> call 0x00103891
0x104f92 -> mov dword ptr [rbp + -0x398],0x0
0x108f93 -> call g_malloc0_n
0x10cf95 -> mov qword ptr [rbp + -0x68],0x0
0x102f96 -> push 0x36
0x106f97 -> nop
0x108f98 -> mov qword ptr [rbp + -0x10],rax
0x106f98 -> mov rax,qword ptr [rbp + -0x8]
0x10af9b -> jmp 0x0010b02b
0x102f9b -> jmp 0x00102c20
0x108f9c -> mov rax,qword ptr [rbp + -0x10]
0x106f9c -> xor rax,qword ptr fs:[0x28]
0x104f9c -> lea rax,[0x10e1e1]
0x10cf9d -> mov r13,rax
0x10cfa0 -> mov r14d,0x0
0x10afa0 -> mov rax,qword ptr [0x00311268]
0x108fa0 -> mov edx,dword ptr [rbp + -0x34]
0x102fa0 -> jmp qword ptr [0x00310cc8]
0x108fa3 -> mov dword ptr [rax + 0xd8],edx
0x104fa3 -> mov qword ptr [rbp + -0x390],rax
0x106fa5 -> jz 0x00106fac
0x10cfa6 -> mov edx,0x10
0x102fa6 -> push 0x37
0x10afa7 -> mov rax,qword ptr [rax]
0x106fa7 -> call __stack_chk_fail
0x108fa9 -> mov rax,qword ptr [rbp + -0x10]
0x10afaa -> mov edx,dword ptr [rbp + -0x250]
0x104faa -> mov dword ptr [rbp + -0x388],0x0
0x10cfab -> sub rdx,0x1
0x102fab -> jmp 0x00102c20
0x106fac -> leave
0x108fad -> lea rdx,[0x10369a]
0x106fad -> ret
0x106fae -> push rbp
0x10cfaf -> add rax,rdx
0x106faf -> mov rbp,rsp
0x10afb0 -> movsxd rdx,edx
0x102fb0 -> jmp qword ptr [0x00310cd0]
0x10cfb2 -> mov ebx,0x10
0x106fb2 -> push rbx
0x10afb3 -> shl rdx,0x2
0x106fb3 -> sub rsp,0x928
0x108fb4 -> mov qword ptr [rax + 0x138],rdx
0x104fb4 -> mov dword ptr [rbp + -0x384],0x2
0x102fb6 -> push 0x38
0x10cfb7 -> mov edx,0x0
0x10afb7 -> add rax,rdx
0x10afba -> mov eax,dword ptr [rax]
0x106fba -> mov dword ptr [rbp + -0x924],edi
0x108fbb -> mov rax,qword ptr [rbp + -0x10]
0x102fbb -> jmp 0x00102c20
0x10cfbc -> div rbx
0x10afbc -> mov dword ptr [rbp + -0x234],eax
0x104fbe -> lea rax,[rbp + -0x5f0]
0x10cfbf -> imul rax,rax,0x10
0x108fbf -> lea rdx,[0x1036cc]
0x106fc0 -> mov qword ptr [rbp + -0x930],rsi
0x102fc0 -> jmp qword ptr [0x00310cd8]
0x10afc2 -> mov eax,dword ptr [rbp + -0x234]
0x10cfc3 -> sub rsp,rax
0x104fc5 -> add rax,0x38
0x10cfc6 -> mov rax,rsp
0x108fc6 -> mov qword ptr [rax + 0x140],rdx
0x102fc6 -> push 0x39
0x106fc7 -> mov rax,qword ptr fs:[0x28]
0x10afc8 -> lea edx,[rax + 0x3f]
0x10cfc9 -> add rax,0x0
0x104fc9 -> mov qword ptr [rbp + -0x380],rax
0x10afcb -> test eax,eax
0x102fcb -> jmp 0x00102c20
0x10cfcd -> mov qword ptr [rbp + -0x30],rax
0x10afcd -> cmovs eax,edx
0x108fcd -> mov rax,qword ptr [rbp + -0x10]
0x10afd0 -> sar eax,0x6
0x106fd0 -> mov qword ptr [rbp + -0x18],rax
0x104fd0 -> mov dword ptr [rbp + -0x378],0x0
0x102fd0 -> jmp qword ptr [0x00310ce0]
0x10cfd1 -> mov rax,qword ptr [rbp + -0x30]
0x108fd1 -> lea rdx,[0x103944]
0x10afd3 -> cdqe
0x106fd4 -> xor eax,eax
0x10cfd5 -> mov rdx,qword ptr [rbp + -0x48]
0x10afd5 -> mov rsi,qword ptr [rbp + rax*0x8 + -0x190]
0x106fd6 -> lea rax,[rbp + -0x8b0]
0x102fd6 -> push 0x3a
0x108fd8 -> mov qword ptr [rax + 0x148],rdx
0x10cfd9 -> mov rsi,rdx
0x104fda -> lea rax,[0x10e1ec]
0x102fdb -> jmp 0x00102c20
0x10cfdc -> mov rdi,rax
0x10afdd -> mov eax,dword ptr [rbp + -0x234]
0x106fdd -> mov qword ptr [rbp + -0x8e8],rax
0x10cfdf -> call strcpy
0x108fdf -> cmp qword ptr [rbp + -0x40],0x0
0x102fe0 -> jmp qword ptr [0x00310ce8]
0x104fe1 -> mov qword ptr [rbp + -0x370],rax
0x10afe3 -> cdq
0x10cfe4 -> mov rbx,qword ptr [rbp + -0x30]
0x10afe4 -> shr edx,0x1a
0x108fe4 -> jnz 0x00109005
0x106fe4 -> mov dword ptr [rbp + -0x918],0x80
0x108fe6 -> lea rcx,[0x10f4d8]
0x102fe6 -> push 0x3b
0x10afe7 -> add eax,edx
0x10cfe8 -> mov rax,qword ptr [rbp + -0x48]
0x104fe8 -> mov dword ptr [rbp + -0x368],0x0
0x10afe9 -> and eax,0x3f
0x102feb -> jmp 0x00102c20
0x10cfec -> mov rdi,rax
0x10afec -> sub eax,edx
0x108fed -> mov edx,0x94a
0x10afee -> mov edx,0x1
0x106fee -> mov qword ptr [rbp + -0x900],0x0
0x10cfef -> call strlen
0x102ff0 -> jmp qword ptr [0x00310cf0]
0x108ff2 -> lea rsi,[0x10d8f4]
0x104ff2 -> mov dword ptr [rbp + -0x364],0x2
0x10aff3 -> mov ecx,eax
0x10cff4 -> lea rdi,[rbx + rax*0x1]
0x10aff5 -> shl rdx,cl
0x102ff6 -> push 0x3c
0x10cff8 -> lea rcx,[rbp + -0x40]
0x10aff8 -> mov rax,rdx
0x108ff9 -> lea rdi,[0x10eb56]
0x106ff9 -> mov qword ptr [rbp + -0x8f8],0x0
0x10affb -> and rax,rsi
0x102ffb -> jmp 0x00102c20
0x10cffc -> mov rdx,qword ptr [rbp + -0x58]
0x104ffc -> lea rax,[rbp + -0x5f0]
0x10affe -> test rax,rax
0x10d000 -> mov rax,qword ptr [rbp + -0x50]
0x109000 -> call __assert_fail
0x103000 -> jmp qword ptr [0x00310cf8]
0x10b001 -> jz 0x0010b023
0x10b003 -> mov rdx,qword ptr [rbp + -0x270]
0x105003 -> add rax,0x40
0x10d004 -> mov r8,rcx
0x107004 -> mov rcx,qword ptr [rbp + -0x8e8]
0x109005 -> mov rax,qword ptr [rbp + -0x10]
0x103006 -> push 0x3d
0x10d007 -> mov rcx,rdx
0x105007 -> mov qword ptr [rbp + -0x360],rax
0x109009 -> mov edx,0x8
0x10d00a -> mov rdx,rax
0x10b00a -> mov ecx,dword ptr [rbp + -0x234]
0x10700b -> lea rdx,[rbp + -0x918]
0x10300b -> jmp 0x00102c20
0x10d00d -> mov esi,0x100
0x10900e -> lea rsi,[0x10eb66]
0x10500e -> mov dword ptr [rbp + -0x358],0x0
0x10b010 -> mov rax,qword ptr [rbp + -0x268]
0x103010 -> jmp qword ptr [0x00310d00]
0x10d012 -> call 0x0010cdb8
0x107012 -> mov eax,dword ptr [rbp + -0x924]
0x109015 -> mov rdi,rax
0x103016 -> push 0x3e
0x10d017 -> mov rax,qword ptr [rbp + -0x30]
0x10b017 -> mov esi,ecx
0x109018 -> call 0x00103891
0x107018 -> mov rsi,rcx
0x105018 -> lea rax,[rbp + -0x530]
0x10b019 -> mov rdi,rax
0x10d01b -> mov rdi,rax
0x10701b -> mov edi,eax
0x10301b -> jmp 0x00102c20
0x10b01c -> call 0x0010a3e3
0x10901d -> mov rax,qword ptr [0x0010f720]
0x10701d -> call getsockname
0x10d01e -> call unlink
0x10501f -> mov qword ptr [rbp + -0x648],rax
0x103020 -> jmp qword ptr [0x00310d08]
0x10b021 -> jmp 0x0010b024
0x107022 -> test eax,eax
0x10d023 -> mov rsp,r12
0x10b023 -> nop
0x10b024 -> add dword ptr [rbp + -0x250],0x1
0x109024 -> mov rdi,rax
0x107024 -> jns 0x0010704b
0x10d026 -> nop
0x107026 -> lea rdx,[0x10e522]
0x105026 -> mov dword ptr [rbp + -0x680],0xf
0x103026 -> push 0x3f
0x10d027 -> mov rax,qword ptr [rbp + -0x28]
0x109027 -> call 0x0010d6ce
0x10d02b -> xor rax,qword ptr fs:[0x28]
0x10b02b -> mov rax,qword ptr [0x00311268]
0x10302b -> jmp 0x00102c20
0x10902c -> mov qword ptr [rbp + -0x18],rax
0x10702d -> mov esi,0x20
0x109030 -> lea rcx,[rbp + -0x18]
0x105030 -> mov qword ptr [rbp + -0x658],0x0
0x103030 -> jmp qword ptr [0x00310d10]
0x10b032 -> mov edx,dword ptr [rax + 0x8]
0x107032 -> mov edi,0x0
0x10d034 -> jz 0x0010d03b
0x109034 -> mov rax,qword ptr [rbp + -0x10]
0x10b035 -> mov eax,dword ptr [rbp + -0x250]
0x10d036 -> call __stack_chk_fail
0x103036 -> push 0x40
0x107037 -> mov eax,0x0
0x109038 -> mov edx,0x8
0x10d03b -> lea rsp,[rbp + -0x20]
0x10b03b -> cmp edx,eax
0x10503b -> mov qword ptr [rbp + -0x640],0x0
0x10303b -> jmp 0x00102c20
0x10703c -> call g_log
0x10b03d -> ja 0x0010afa0
0x10903d -> mov rsi,rcx
0x10d03f -> pop rbx
0x10d040 -> pop r12
0x109040 -> mov rdi,rax
0x103040 -> jmp qword ptr [0x00310d18]
0x107041 -> mov eax,0xffffffff
0x10d042 -> pop r13
0x10b043 -> mov dword ptr [rbp + -0x250],0x0
0x109043 -> call 0x00103891
0x10d044 -> pop r14
0x10d046 -> pop rbp
0x107046 -> jmp 0x00107657
0x105046 -> mov qword ptr [rbp + -0x638],0x0
0x103046 -> push 0x41
0x10d047 -> ret
0x10d048 -> push rbp
0x109048 -> movzx eax,word ptr [rbp + -0x22]
0x10d049 -> mov rbp,rsp
0x10704b -> movzx eax,word ptr [rbp + -0x8b0]
0x10304b -> jmp 0x00102c20
0x10d04c -> sub rsp,0x20
0x10904c -> movzx eax,ax
0x10b04d -> jmp 0x0010b0fb
0x10904f -> mov edi,eax
0x10d050 -> mov qword ptr [rbp + -0x18],rdi
0x103050 -> jmp qword ptr [0x00310d20]
0x109051 -> call htons
0x105051 -> lea rax,[rbp + -0x5f0]
0x10b052 -> mov rax,qword ptr [0x00311260]
0x107052 -> cmp ax,0x1
0x10d054 -> mov rax,qword ptr [rbp + -0x18]
0x109056 -> mov word ptr [rbp + -0x22],ax
0x107056 -> jnz 0x0010707b
0x103056 -> push 0x42
0x10d058 -> add rax,0x1
0x107058 -> mov rax,qword ptr [rbp + -0x930]
0x105058 -> mov edx,0x50
0x10b059 -> mov rax,qword ptr [rax]
0x10905a -> lea rcx,[rbp + -0x22]
0x10305b -> jmp 0x00102c20
0x10d05c -> mov qword ptr [rbp + -0x8],rax
0x10b05c -> mov edx,dword ptr [rbp + -0x250]
0x10505d -> mov esi,0x0
0x10905e -> mov rax,qword ptr [rbp + -0x10]
0x10705f -> mov word ptr [rax + 0x10],0x1
0x10d060 -> jmp 0x0010d0a3
0x103060 -> jmp qword ptr [0x00310d28]
0x10d062 -> mov rax,qword ptr [rbp + -0x8]
0x10b062 -> movsxd rdx,edx
0x109062 -> mov edx,0x2
0x105062 -> mov rdi,rax
0x10b065 -> shl rdx,0x2
0x107065 -> lea rax,[rbp + -0x830]
0x105065 -> call memset
0x10d066 -> mov byte ptr [rax],0x0
0x103066 -> push 0x43
0x109067 -> mov rsi,rcx
0x10d069 -> mov rax,qword ptr [rbp + -0x18]
0x10b069 -> add rax,rdx
0x10906a -> mov rdi,rax
0x10506a -> lea rax,[0x10e1f8]
0x10306b -> jmp 0x00102c20
0x10b06c -> mov eax,dword ptr [rax]
0x10706c -> mov dword ptr [rax],0x78696e75
0x10d06d -> mov esi,0x1c0
0x10906d -> call 0x00103891
0x10b06e -> mov dword ptr [rbp + -0x238],eax
0x103070 -> jmp qword ptr [0x00310d30]
0x105071 -> mov qword ptr [rbp + -0x5b0],rax
0x10d072 -> mov rdi,rax
0x109072 -> lea rcx,[rbp + -0x20]
0x107072 -> mov byte ptr [rax + 0x4],0x0
0x10b074 -> mov eax,dword ptr [rbp + -0x238]
0x10d075 -> call mkdir
0x109076 -> mov rax,qword ptr [rbp + -0x10]
0x107076 -> jmp 0x001071df
0x103076 -> push 0x44
0x105078 -> cmp qword ptr [rbp + -0x690],0x0
0x10d07a -> cmp eax,-0x1
0x10b07a -> lea edx,[rax + 0x3f]
0x10907a -> mov edx,0x4
0x10707b -> mov rax,qword ptr [rbp + -0x930]
0x10307b -> jmp 0x00102c20
0x10d07d -> jnz 0x0010d097
0x10b07d -> test eax,eax
0x10d07f -> call __errno_location
0x10b07f -> cmovs eax,edx
0x10907f -> mov rsi,rcx
0x105080 -> jz 0x001050a0
0x103080 -> jmp qword ptr [0x00310d38]
0x10b082 -> sar eax,0x6
0x109082 -> mov rdi,rax
0x107082 -> add rax,0x10
0x105082 -> mov rcx,qword ptr [rbp + -0x690]
0x10d084 -> mov eax,dword ptr [rax]
0x10b085 -> cdqe
0x109085 -> call 0x001036fe
0x10d086 -> cmp eax,0x11
0x107086 -> mov rcx,rax
0x103086 -> push 0x45
0x10b087 -> mov rsi,qword ptr [rbp + rax*0x8 + -0x190]
0x10d089 -> jz 0x0010d097
0x107089 -> lea rdx,[rbp + -0x918]
0x105089 -> lea rax,[rbp + -0x5f0]
0x10908a -> mov eax,dword ptr [rbp + -0x20]
0x10d08b -> lea rdi,[0x10f68a]
0x10308b -> jmp 0x00102c20
0x10908d -> mov edi,eax
0x10b08f -> mov eax,dword ptr [rbp + -0x238]
0x10908f -> call htonl
0x107090 -> mov eax,dword ptr [rbp + -0x924]
0x105090 -> mov edx,0x50
0x103090 -> jmp qword ptr [0x00310d40]
0x10d092 -> call 0x0010d638
0x109094 -> mov dword ptr [rbp + -0x20],eax
0x10b095 -> cdq
0x105095 -> mov rsi,rcx
0x10b096 -> shr edx,0x1a
0x107096 -> mov rsi,rcx
0x103096 -> push 0x46
0x10d097 -> mov rax,qword ptr [rbp + -0x8]
0x109097 -> mov eax,dword ptr [rbp + -0x20]
0x105098 -> mov rdi,rax
0x10b099 -> add eax,edx
0x107099 -> mov edi,eax
0x10909a -> and eax,0x2
0x10d09b -> mov byte ptr [rax],0x2f
0x10b09b -> and eax,0x3f
0x10709b -> call getpeername
0x10509b -> call memcpy
0x10309b -> jmp 0x00102c20
0x10909d -> test eax,eax
0x10d09e -> add qword ptr [rbp + -0x8],0x1
0x10b09e -> sub eax,edx
0x10909f -> jz 0x001090b0
0x10b0a0 -> mov edx,0x1
0x1070a0 -> test eax,eax
0x1050a0 -> call g_key_file_new
0x1030a0 -> jmp qword ptr [0x00310d48]
0x1090a1 -> mov eax,dword ptr [0x003111e0]
0x1070a2 -> jns 0x001070c9
0x10d0a3 -> mov rax,qword ptr [rbp + -0x8]
0x1070a4 -> lea rdx,[0x10e539]
0x10b0a5 -> mov ecx,eax
0x1050a5 -> mov qword ptr [rbp + -0x620],rax
0x1030a6 -> push 0x47
0x10d0a7 -> mov esi,0x2f
0x10b0a7 -> shl rdx,cl
0x1090a7 -> or eax,0x4
0x10b0aa -> mov rax,rdx
0x1090aa -> mov dword ptr [0x003111e0],eax
0x1070ab -> mov esi,0x20
0x1030ab -> jmp 0x00102c20
0x10d0ac -> mov rdi,rax
0x1050ac -> mov edx,0x8
0x10b0ad -> and rax,rsi
0x10d0af -> call strchr
0x10b0b0 -> test rax,rax
0x1090b0 -> lea rcx,[rbp + -0x18]
0x1070b0 -> mov edi,0x0
0x1030b0 -> jmp qword ptr [0x00310d50]
0x1050b1 -> mov esi,0x1
0x10b0b3 -> jz 0x0010b0f4
0x10d0b4 -> mov qword ptr [rbp + -0x8],rax
0x1090b4 -> mov rax,qword ptr [rbp + -0x10]
0x10b0b5 -> mov edx,dword ptr [rbp + -0x238]
0x1070b5 -> mov eax,0x0
0x1050b6 -> mov edi,0x0
0x1030b6 -> push 0x48
0x10d0b8 -> cmp qword ptr [rbp + -0x8],0x0
0x1090b8 -> mov edx,0x8
0x1070ba -> call g_log
0x10b0bb -> mov rax,qword ptr [rbp + -0x268]
0x1050bb -> call g_array_new
0x1030bb -> jmp 0x00102c20
0x10d0bd -> jnz 0x0010d062
0x1090bd -> mov rsi,rcx
0x10d0bf -> nop
0x1070bf -> mov eax,0xffffffff
0x10d0c0 -> leave
0x1090c0 -> mov rdi,rax
0x1050c0 -> mov qword ptr [rbp + -0x638],rax
0x1030c0 -> jmp qword ptr [0x00310d58]
0x10d0c1 -> ret
0x10d0c2 -> push rbp
0x10b0c2 -> mov esi,edx
0x10d0c3 -> mov rbp,rsp
0x1090c3 -> call 0x001036fe
0x10b0c4 -> mov rdi,rax
0x1070c4 -> jmp 0x00107657
0x10d0c6 -> push r14
0x1030c6 -> push 0x49
0x10b0c7 -> call 0x0010a658
0x1050c7 -> cmp byte ptr [rbp + -0x694],0x0
0x10d0c8 -> push r13
0x1090c8 -> mov rax,qword ptr [rbp + -0x18]
0x1070c9 -> mov eax,dword ptr [rbp + -0x918]
0x10d0ca -> push r12
0x1030cb -> jmp 0x00102c20
0x10d0cc -> push rbx
0x10b0cc -> test eax,eax
0x1090cc -> mov rdi,rax
0x10d0cd -> add rsp,-0x80
0x10b0ce -> jns 0x0010b0f4
0x1050ce -> jz 0x001050e9
0x1090cf -> call 0x0010d6ce
0x1070cf -> mov rdx,qword ptr [rbp + -0x930]
0x10b0d0 -> mov eax,dword ptr [rbp + -0x238]
0x1050d0 -> mov rax,qword ptr [rbp + -0x638]
0x1030d0 -> jmp qword ptr [0x00310d60]
0x10d0d1 -> mov qword ptr [rbp + -0x68],rdi
0x1090d4 -> mov qword ptr [rbp + -0x18],rax
0x10d0d5 -> mov dword ptr [rbp + -0x6c],esi
0x10b0d6 -> mov edi,eax
0x1070d6 -> lea rdi,[rdx + 0x10]
0x1030d6 -> push 0x4a
0x1050d7 -> lea rdx,[0x10cd58]
0x10d0d8 -> mov qword ptr [rbp + -0x78],rdx
0x10b0d8 -> call close
0x1090d8 -> mov rdx,qword ptr [rbp + -0x18]
0x1070da -> lea rdx,[rbp + -0x830]
0x1030db -> jmp 0x00102c20
0x10d0dc -> mov qword ptr [rbp + -0x80],rcx
0x1090dc -> mov rax,qword ptr [0x0010f720]
0x10b0dd -> mov edx,dword ptr [rbp + -0x250]
0x1050de -> mov rsi,rdx
0x10d0e0 -> mov qword ptr [rbp + -0x88],r8
0x1030e0 -> jmp qword ptr [0x00310d68]
0x1070e1 -> sub rsp,0x8
0x1050e1 -> mov rdi,rax
0x10b0e3 -> mov rax,qword ptr [0x00311260]
0x1090e3 -> cmp rdx,rax
0x1050e4 -> call g_array_set_clear_func
0x1070e5 -> push 0x1
0x1090e6 -> jz 0x001090f9
0x1030e6 -> push 0x4b
0x10d0e7 -> mov rax,qword ptr fs:[0x28]
0x1070e7 -> mov r9d,0x0
0x1090e8 -> lea rdi,[0x10eb70]
0x1050e9 -> lea rdx,[rbp + -0x658]
0x10b0ea -> mov esi,edx
0x1030eb -> jmp 0x00102c20
0x10b0ec -> mov rdi,rax
0x1070ed -> mov r8d,0x0
0x10b0ef -> call g_array_remove_index
0x1090ef -> call 0x0010d3ef
0x10d0f0 -> mov qword ptr [rbp + -0x28],rax
0x1050f0 -> mov rsi,qword ptr [rbp + -0x688]
0x1030f0 -> jmp qword ptr [0x00310d70]
0x1070f3 -> mov ecx,0x401
0x10d0f4 -> xor eax,eax
0x10b0f4 -> add dword ptr [rbp + -0x250],0x1
0x1090f4 -> jmp 0x001092d0
0x10d0f6 -> mov rax,rsp
0x1030f6 -> push 0x4c
0x1050f7 -> mov rax,qword ptr [rbp + -0x620]
0x1070f8 -> mov esi,eax
0x10d0f9 -> mov r12,rax
0x1090f9 -> lea rcx,[rbp + -0x1c]
0x1070fa -> call getnameinfo
0x10b0fb -> mov rax,qword ptr [0x00311260]
0x1030fb -> jmp 0x00102c20
0x10d0fc -> mov rax,qword ptr [rbp + -0x68]
0x1090fd -> mov rax,qword ptr [rbp + -0x10]
0x1050fe -> mov rcx,rdx
0x1070ff -> add rsp,0x10
0x10d100 -> mov rdi,rax
0x103100 -> jmp qword ptr [0x00310d78]
0x109101 -> mov edx,0x4
0x105101 -> mov edx,0x3
0x10b102 -> mov edx,dword ptr [rax + 0x8]
0x10d103 -> call strlen
0x107103 -> mov dword ptr [rbp + -0x908],eax
0x10b105 -> mov eax,dword ptr [rbp + -0x250]
0x109106 -> mov rsi,rcx
0x105106 -> mov rdi,rax
0x103106 -> push 0x4d
0x10d108 -> add rax,0x100
0x109109 -> mov rdi,rax
0x107109 -> cmp dword ptr [rbp + -0x908],0x0
0x105109 -> call g_key_file_load_from_file
0x10b10b -> cmp edx,eax
0x10310b -> jmp 0x00102c20
0x10910c -> call 0x001036fe
0x10b10d -> ja 0x0010b052
0x10d10e -> mov rdx,rax
0x10510e -> test eax,eax
0x107110 -> jz 0x00107147
0x105110 -> jnz 0x00105173
0x103110 -> jmp qword ptr [0x00310d80]
0x10d111 -> sub rdx,0x1
0x109111 -> mov eax,dword ptr [rbp + -0x1c]
0x107112 -> mov eax,dword ptr [rbp + -0x908]
0x105112 -> mov rax,qword ptr [rbp + -0x658]
0x10b113 -> jmp 0x0010ab6b
0x109114 -> mov edi,eax
0x10d115 -> mov qword ptr [rbp + -0x50],rdx
0x109116 -> call ntohl
0x103116 -> push 0x4e
0x10b118 -> push rbp
0x107118 -> mov edi,eax
0x10d119 -> mov qword ptr [rbp + -0xa0],rax
0x10b119 -> mov rbp,rsp
0x105119 -> mov rbx,qword ptr [rax + 0x8]
0x10711a -> call gai_strerror
0x10911b -> mov dword ptr [rbp + -0x1c],eax
0x10311b -> jmp 0x00102c20
0x10b11c -> push rbx
0x10b11d -> sub rsp,0x38
0x10511d -> lea rdi,[0x10dfd9]
0x10911e -> mov rax,qword ptr [rbp + -0x10]
0x10711f -> mov rcx,rax
0x10d120 -> mov qword ptr [rbp + -0x98],0x0
0x103120 -> jmp qword ptr [0x00310d88]
0x10b121 -> mov dword ptr [rbp + -0x34],edi
0x109122 -> mov rax,qword ptr [rax + 0x130]
0x107122 -> lea rdx,[0x10e550]
0x10b124 -> mov qword ptr [rbp + -0x40],rsi
0x105124 -> call g_quark_from_static_string
0x103126 -> push 0x4f
0x10b128 -> mov rax,qword ptr fs:[0x28]
0x109129 -> test rax,rax
0x107129 -> mov esi,0x20
0x105129 -> mov esi,eax
0x10d12b -> mov r13,rax
0x10512b -> mov rdx,qword ptr [rbp + -0x688]
0x10312b -> jmp 0x00102c20
0x10912c -> jnz 0x00109190
0x10d12e -> mov r14d,0x0
0x10912e -> mov eax,dword ptr [0x003111e0]
0x10712e -> mov edi,0x0
0x103130 -> jmp qword ptr [0x00310d90]
0x10b131 -> mov qword ptr [rbp + -0x18],rax
0x105132 -> mov rax,qword ptr [rbp + -0x6a0]
0x107133 -> mov eax,0x0
0x10d134 -> mov edx,0x10
0x109134 -> and eax,0x4000
0x10b135 -> xor eax,eax
0x103136 -> push 0x50
0x10b137 -> mov dword ptr [rbp + -0x24],0x1
0x107138 -> call g_log
0x10d139 -> sub rdx,0x1
0x109139 -> test eax,eax
0x105139 -> mov r9,rbx
0x10913b -> jz 0x00109190
0x10313b -> jmp 0x00102c20
0x10513c -> mov r8,rdx
0x10d13d -> add rax,rdx
0x10913d -> mov eax,dword ptr [rbp + -0x1c]
0x10713d -> mov eax,0xffffffff
0x10b13e -> lea rdx,[rbp + -0x24]
0x10513f -> lea rcx,[0x10e230]
0x10d140 -> mov ebx,0x10
0x109140 -> cmp eax,0x5
0x103140 -> jmp qword ptr [0x00310d98]
0x10b142 -> mov eax,dword ptr [rbp + -0x34]
0x107142 -> jmp 0x00107657
0x109143 -> jz 0x00109190
0x10d145 -> mov edx,0x0
0x10b145 -> mov r8d,0x4
0x109145 -> mov eax,dword ptr [rbp + -0x1c]
0x105146 -> mov edx,0x0
0x103146 -> push 0x51
0x107147 -> lea rax,[rbp + -0x8e0]
0x109148 -> cmp eax,0x1
0x10d14a -> div rbx
0x10b14b -> mov rcx,rdx
0x10914b -> jz 0x001092cc
0x10514b -> mov rdi,rax
0x10314b -> jmp 0x00102c20
0x10d14d -> imul rax,rax,0x10
0x10b14e -> mov edx,0x2
0x10714e -> mov edx,0x30
0x10514e -> mov eax,0x0
0x103150 -> jmp qword ptr [0x00310da0]
0x10d151 -> sub rsp,rax
0x109151 -> mov eax,dword ptr [rbp + -0x1c]
0x10b153 -> mov esi,0x1
0x107153 -> mov esi,0x0
0x105153 -> call g_set_error
0x10d154 -> mov rax,rsp
0x109154 -> cmp eax,0x2
0x103156 -> push 0x52
0x10d157 -> add rax,0x0
0x109157 -> jz 0x001092a7
0x10b158 -> mov edi,eax
0x107158 -> mov rdi,rax
0x105158 -> mov rax,qword ptr [rbp + -0x620]
0x10b15a -> call setsockopt
0x10d15b -> mov qword ptr [rbp + -0x48],rax
0x10715b -> call memset
0x10315b -> jmp 0x00102c20
0x10915d -> mov rax,qword ptr [rbp + -0x10]
0x10d15f -> mov rax,qword ptr [rbp + -0x48]
0x10b15f -> cmp eax,-0x1
0x10515f -> mov rdi,rax
0x107160 -> mov dword ptr [rbp + -0x8e0],0x20
0x103160 -> jmp qword ptr [0x00310da8]
0x109161 -> mov rdi,rax
0x10b162 -> jnz 0x0010b1ad
0x105162 -> call g_key_file_free
0x10d163 -> mov rdx,qword ptr [rbp + -0x68]
0x10b164 -> call __errno_location
0x109164 -> call 0x00103805
0x103166 -> push 0x53
0x10d167 -> mov rsi,rdx
0x105167 -> mov rax,qword ptr [rbp + -0x638]
0x10b169 -> mov eax,dword ptr [rax]
0x109169 -> mov esi,dword ptr [rbp + -0x1c]
0x10d16a -> mov rdi,rax
0x10716a -> lea rcx,[rbp + -0x900]
0x10b16b -> mov edi,eax
0x10316b -> jmp 0x00102c20
0x10916c -> mov rax,qword ptr [rbp + -0x10]
0x10d16d -> call strcpy
0x10b16d -> call strerror
0x10516e -> jmp 0x00105dfc
0x109170 -> lea r8,[0x10eb98]
0x103170 -> jmp qword ptr [0x00310db0]
0x107171 -> lea rdx,[rbp + -0x8e0]
0x10d172 -> mov rbx,qword ptr [rbp + -0x48]
0x10b172 -> mov rbx,rax
0x105173 -> mov rax,qword ptr [rbp + -0x620]
0x10b175 -> lea rdi,[0x10dfd9]
0x10d176 -> mov rax,qword ptr [rbp + -0x68]
0x103176 -> push 0x54
0x109177 -> mov rcx,-0x1
0x107178 -> lea rax,[rbp + -0x830]
0x10d17a -> mov rdi,rax
0x10517a -> mov rdi,rax
0x10317b -> jmp 0x00102c20
0x10b17c -> call g_quark_from_static_string
0x10d17d -> call strlen
0x10517d -> call g_key_file_get_start_group
0x10917e -> mov edx,0x80000005
0x10717f -> mov esi,0x0
0x103180 -> jmp qword ptr [0x00310db8]
0x10b181 -> mov esi,eax
0x10d182 -> lea rdi,[rbx + rax*0x1]
0x105182 -> mov qword ptr [rbp + -0x618],rax
0x10b183 -> mov rax,qword ptr [rbp + -0x40]
0x109183 -> mov rdi,rax
0x107184 -> mov rdi,rax
0x10d186 -> lea rcx,[rbp + -0x58]
0x109186 -> call 0x00106ed8
0x103186 -> push 0x55
0x10b187 -> mov r8,rbx
0x107187 -> call getaddrinfo
0x105189 -> cmp qword ptr [rbp + -0x618],0x0
0x10d18a -> mov rdx,qword ptr [rbp + -0x80]
0x10b18a -> lea rcx,[0x10f028]
0x10918b -> jmp 0x00109291
0x10318b -> jmp 0x00102c20
0x10718c -> mov dword ptr [rbp + -0x908],eax
0x10d18e -> mov rax,qword ptr [rbp + -0x78]
0x109190 -> mov eax,dword ptr [rbp + -0x1c]
0x103190 -> jmp qword ptr [0x00310dc0]
0x10b191 -> mov edx,0xb
0x105191 -> jz 0x001051ad
0x10d192 -> mov r8,rcx
0x107192 -> cmp dword ptr [rbp + -0x908],0x0
0x109193 -> cmp eax,0x7
0x105193 -> mov rax,qword ptr [rbp + -0x618]
0x10d195 -> mov rcx,rdx
0x10b196 -> mov rdi,rax
0x109196 -> ja 0x0010925d
0x103196 -> push 0x56
0x10d198 -> mov rdx,rax
0x10b199 -> mov eax,0x0
0x107199 -> jz 0x001071df
0x10519a -> lea rsi,[0x10e252]
0x10d19b -> mov esi,0x100
0x10719b -> mov eax,dword ptr [rbp + -0x908]
0x10319b -> jmp 0x00102c20
0x10919c -> mov eax,eax
0x10b19e -> call g_set_error
0x10919e -> lea rdx,[rax*0x4]
0x10d1a0 -> call 0x0010cdb8
0x1031a0 -> jmp qword ptr [0x00310dc8]
0x1071a1 -> mov edi,eax
0x1051a1 -> mov rdi,rax
0x10b1a3 -> mov eax,0xffffffff
0x1071a3 -> call gai_strerror
0x1051a4 -> call strcmp
0x10d1a5 -> mov rax,qword ptr [rbp + -0x88]
0x1091a6 -> lea rax,[0x10ec8c]
0x1031a6 -> push 0x57
0x10b1a8 -> jmp 0x0010b298
0x1071a8 -> mov rcx,rax
0x1051a9 -> test eax,eax
0x1071ab -> lea rdx,[0x10e567]
0x1051ab -> jz 0x001051fd
0x1031ab -> jmp 0x00102c20
0x10d1ac -> mov rdi,rax
0x10b1ad -> mov dword ptr [rbp + -0x20],0x1
0x1091ad -> mov eax,dword ptr [rdx + rax*0x1]
0x1051ad -> cmp byte ptr [rbp + -0x694],0x0
0x10d1af -> call pthread_mutex_lock
0x1091b0 -> movsxd rdx,eax
0x1031b0 -> jmp qword ptr [0x00310dd0]
0x1071b2 -> mov esi,0x20
0x1091b3 -> lea rax,[0x10ec8c]
0x10d1b4 -> mov ecx,dword ptr [rbp + -0x6c]
0x10b1b4 -> mov dword ptr [rbp + -0x1c],0xa
0x1051b4 -> jz 0x001051fd
0x1051b6 -> lea rdi,[0x10dfd9]
0x1031b6 -> push 0x58
0x10d1b7 -> mov rax,qword ptr [rbp + -0x48]
0x1071b7 -> mov edi,0x0
0x1091ba -> add rax,rdx
0x10d1bb -> mov edx,0x180
0x10b1bb -> lea rdx,[rbp + -0x20]
0x1031bb -> jmp 0x00102c20
0x1071bc -> mov eax,0x0
0x1091bd -> jmp rax
0x1051bd -> call g_quark_from_static_string
0x10b1bf -> mov eax,dword ptr [rbp + -0x34]
0x1091bf -> mov ecx,dword ptr [rbp + -0x20]
0x10d1c0 -> mov esi,ecx
0x1031c0 -> jmp qword ptr [0x00310dd8]
0x1071c1 -> call g_log
0x10d1c2 -> mov rdi,rax
0x10b1c2 -> mov r8d,0x8
0x1091c2 -> mov esi,dword ptr [rbp + -0x1c]
0x1051c2 -> mov esi,eax
0x1051c4 -> mov rax,qword ptr [rbp + -0x6a0]
0x10d1c5 -> mov eax,0x0
0x1091c5 -> mov rdx,qword ptr [rbp + -0x40]
0x1071c6 -> mov rax,qword ptr [rbp + -0x900]
0x1031c6 -> push 0x59
0x10b1c8 -> mov rcx,rdx
0x1091c9 -> mov rax,qword ptr [rbp + -0x10]
0x10d1ca -> call open64
0x10b1cb -> mov edx,0xd
0x1051cb -> lea rcx,[0x10e260]
0x1031cb -> jmp 0x00102c20
0x1091cd -> mov rdi,rax
0x1071cd -> mov rdi,rax
0x10d1cf -> mov dword ptr [rbp + -0x60],eax
0x10b1d0 -> mov esi,0x1
0x1091d0 -> call 0x0010868f
0x1071d0 -> call freeaddrinfo
0x1031d0 -> jmp qword ptr [0x00310de0]
0x10d1d2 -> cmp dword ptr [rbp + -0x60],0x0
0x1051d2 -> mov edx,0x1
0x10b1d5 -> mov edi,eax
0x1091d5 -> test rax,rax
0x1071d5 -> mov eax,0xffffffff
0x10d1d6 -> jns 0x0010d2f6
0x1031d6 -> push 0x5a
0x10b1d7 -> call setsockopt
0x1051d7 -> mov rdi,rax
0x1091d8 -> jz 0x001092cf
0x1071da -> jmp 0x00107657
0x1051da -> mov eax,0x0
0x1031db -> jmp 0x00102c20
0x10d1dc -> call __errno_location
0x10b1dc -> cmp eax,-0x1
0x1091de -> mov rax,qword ptr [rbp + -0x10]
0x10b1df -> jnz 0x0010b227
0x1071df -> lea rax,[rbp + -0x830]
0x1051df -> call g_set_error
0x1031e0 -> jmp qword ptr [0x00310de8]
0x10d1e1 -> mov eax,dword ptr [rax]
0x10b1e1 -> call __errno_location
0x1091e2 -> jmp 0x001092e1
0x10d1e3 -> cmp eax,0x2
0x1051e4 -> mov rax,qword ptr [rbp + -0x620]
0x10d1e6 -> jnz 0x0010d2f6
0x10b1e6 -> mov eax,dword ptr [rax]
0x1071e6 -> mov edx,0x7
0x1031e6 -> push 0x5b
0x1091e7 -> mov ecx,dword ptr [rbp + -0x20]
0x10b1e8 -> mov edi,eax
0x10b1ea -> call strerror
0x1091ea -> mov esi,dword ptr [rbp + -0x1c]
0x1071eb -> lea rsi,[0x10e57e]
0x1051eb -> mov rdi,rax
0x1031eb -> jmp 0x00102c20
0x10d1ec -> mov eax,dword ptr [rbp + -0x6c]
0x1091ed -> mov rdx,qword ptr [rbp + -0x40]
0x1051ee -> call g_key_file_free
0x10d1ef -> and eax,0x2
0x10b1ef -> mov rbx,rax
0x1031f0 -> jmp qword ptr [0x00310df0]
0x1091f1 -> mov rax,qword ptr [rbp + -0x10]
0x10d1f2 -> test eax,eax
0x10b1f2 -> lea rdi,[0x10dfd9]
0x1071f2 -> mov rdi,rax
0x1051f3 -> mov eax,0x0
0x10d1f4 -> jz 0x0010d232
0x1091f5 -> mov rdi,rax
0x1071f5 -> call strncmp
0x10d1f6 -> mov rax,qword ptr [rbp + -0x48]
0x1031f6 -> push 0x5c
0x1091f8 -> call 0x0010882c
0x1051f8 -> jmp 0x00105dfc
0x10b1f9 -> call g_quark_from_static_string
0x10d1fa -> mov rdi,rax
0x1071fa -> test eax,eax
0x1031fb -> jmp 0x00102c20
0x1071fc -> jnz 0x0010722d
0x10d1fd -> call 0x0010d048
0x1091fd -> jmp 0x00109291
0x1051fd -> mov rax,qword ptr [rbp + -0x620]
0x10b1fe -> mov esi,eax
0x1071fe -> lea rax,[rbp + -0x830]
0x10b200 -> mov rax,qword ptr [rbp + -0x40]
0x103200 -> jmp qword ptr [0x00310df8]
0x10d202 -> mov rax,qword ptr [rbp + -0x48]
0x109202 -> mov rax,qword ptr [rbp + -0x10]
0x10b204 -> mov r8,rbx
0x105204 -> mov esi,0x0
0x107205 -> mov rdi,rax
0x10d206 -> mov edx,0x180
0x109206 -> mov rdi,rax
0x103206 -> push 0x5d
0x10b207 -> lea rcx,[0x10f058]
0x107208 -> call strlen
0x109209 -> call 0x00103805
0x105209 -> mov rdi,rax
0x10d20b -> mov esi,0x42
0x10320b -> jmp 0x00102c20
0x10520c -> call g_key_file_get_groups
0x10720d -> mov rdx,rax
0x10b20e -> mov edx,0xa
0x10920e -> mov esi,dword ptr [rbp + -0x1c]
0x10d210 -> mov rdi,rax
0x107210 -> lea rax,[rbp + -0x830]
0x103210 -> jmp qword ptr [0x00310e00]
0x109211 -> mov rax,qword ptr [rbp + -0x10]
0x105211 -> mov qword ptr [rbp + -0x610],rax
0x10d213 -> mov eax,0x0
0x10b213 -> mov rdi,rax
0x109215 -> lea r8,[0x10ebb8]
0x10b216 -> mov eax,0x0
0x103216 -> push 0x5e
0x107217 -> add rax,0x7
0x10d218 -> call open64
0x105218 -> mov dword ptr [rbp + -0x67c],0x0
0x10b21b -> call g_set_error
0x10721b -> lea rcx,[rbp + -0x830]
0x10321b -> jmp 0x00102c20
0x10921c -> mov rcx,-0x1
0x10d21d -> mov dword ptr [rbp + -0x60],eax
0x10d220 -> cmp dword ptr [rbp + -0x60],0x0
0x10b220 -> mov eax,0xffffffff
0x103220 -> jmp qword ptr [0x00310e08]
0x107222 -> mov rsi,rax
0x105222 -> jmp 0x00105c92
0x109223 -> mov edx,0x80000004
0x10d224 -> jns 0x0010d299
0x10b225 -> jmp 0x0010b298
0x107225 -> mov rdi,rcx
0x10d226 -> lea rdi,[0x10f6a0]
0x103226 -> push 0x5f
0x10b227 -> lea rdx,[rbp + -0x24]
0x105227 -> lea rax,[rbp + -0x5a0]
0x109228 -> mov rdi,rax
0x107228 -> call memmove
0x10b22b -> mov eax,dword ptr [rbp + -0x34]
0x10922b -> call 0x00106ed8
0x10322b -> jmp 0x00102c20
0x10d22d -> call 0x0010d638
0x10722d -> mov rax,qword ptr [rbp + -0x930]
0x10b22e -> mov r8d,0x4
0x10522e -> mov edx,0x68
0x109230 -> jmp 0x00109291
0x103230 -> jmp qword ptr [0x00310e10]
0x10d232 -> lea rdi,[0x10f6c1]
0x109232 -> mov ecx,dword ptr [rbp + -0x20]
0x105233 -> mov esi,0x0
0x10b234 -> mov rcx,rdx
0x107234 -> mov rax,qword ptr [rax + 0xe0]
0x109235 -> mov esi,dword ptr [rbp + -0x1c]
0x103236 -> push 0x60
0x10b237 -> mov edx,0x9
0x109238 -> mov rdx,qword ptr [rbp + -0x40]
0x105238 -> mov rdi,rax
0x10d239 -> mov eax,0x0
0x10723b -> mov eax,dword ptr [rax + 0x24]
0x10523b -> call memset
0x10323b -> jmp 0x00102c20
0x10b23c -> mov esi,0x1
0x10923c -> mov rax,qword ptr [rbp + -0x10]
0x10d23e -> call g_strdup_printf
0x10723e -> cmp eax,0x1
0x109240 -> mov rdi,rax
0x105240 -> cmp dword ptr [rbp + -0x67c],0x1
0x103240 -> jmp qword ptr [0x00310e18]
0x10b241 -> mov edi,eax
0x107241 -> jz 0x00107318
0x10d243 -> mov qword ptr [rbp + -0x40],rax
0x10b243 -> call setsockopt
0x109243 -> call 0x00108a61
0x103246 -> push 0x61
0x10d247 -> mov edi,0x4d
0x107247 -> cmp eax,0x1
0x105247 -> jz 0x00105257
0x10b248 -> cmp eax,-0x1
0x109248 -> test al,al
0x105249 -> movzx eax,byte ptr [rbp + -0x694]
0x10924a -> jz 0x00109290
0x10724a -> jc 0x0010725f
0x10b24b -> jnz 0x0010b293
0x10324b -> jmp 0x00102c20
0x10d24c -> call umask
0x10924c -> mov eax,dword ptr [rbp + -0x1c]
0x10724c -> cmp eax,0x2
0x10b24d -> call __errno_location
0x10924f -> cmp eax,0x7
0x10724f -> jz 0x001072a9
0x105250 -> xor eax,0x1
0x103250 -> jmp qword ptr [0x00310e20]
0x10d251 -> mov dword ptr [rbp + -0x5c],eax
0x107251 -> cmp eax,0x3
0x10b252 -> mov eax,dword ptr [rax]
0x109252 -> jnz 0x00109290
0x105253 -> test al,al
0x10d254 -> mov rax,qword ptr [rbp + -0x40]
0x10b254 -> mov edi,eax
0x109254 -> mov rax,qword ptr [rbp + -0x10]
0x107254 -> jz 0x00107371
0x105255 -> jz 0x00105271
0x10b256 -> call strerror
0x103256 -> push 0x62
0x105257 -> lea rax,[rbp + -0x350]
0x10d258 -> mov rdi,rax
0x109258 -> jmp 0x001092e1
0x10725a -> jmp 0x001075e4
0x10d25b -> call mkstemp64
0x10b25b -> mov rbx,rax
0x10325b -> jmp 0x00102c20
0x10925d -> mov rax,qword ptr [rbp + -0x10]
0x10b25e -> lea rdi,[0x10dfd9]
0x10525e -> mov qword ptr [rbp + -0x648],rax
0x10725f -> lea rdx,[0x10e586]
0x10d260 -> mov dword ptr [rbp + -0x60],eax
0x103260 -> jmp qword ptr [0x00310e28]
0x109261 -> mov rdi,rax
0x10d263 -> mov eax,dword ptr [rbp + -0x5c]
0x109264 -> call 0x00103805
0x10b265 -> call g_quark_from_static_string
0x105265 -> mov eax,dword ptr [rbp + -0x674]
0x10d266 -> mov edi,eax
0x107266 -> mov esi,0x20
0x103266 -> push 0x63
0x10d268 -> call umask
0x109269 -> mov esi,dword ptr [rbp + -0x1c]
0x10b26a -> mov esi,eax
0x10726b -> mov edi,0x0
0x10526b -> mov dword ptr [rbp + -0x680],eax
0x10326b -> jmp 0x00102c20
0x10b26c -> mov rax,qword ptr [rbp + -0x40]
0x10926c -> mov rax,qword ptr [rbp + -0x10]
0x10d26d -> cmp dword ptr [rbp + -0x60],0x0
0x10b270 -> mov r8,rbx
0x109270 -> lea r8,[0x10ebf0]
0x107270 -> mov eax,0x0
0x103270 -> jmp qword ptr [0x00310e30]
0x10d271 -> jle 0x0010d28d
0x105271 -> mov dword ptr [rbp + -0x678],0x0
0x10d273 -> mov rax,qword ptr [rbp + -0x40]
0x10b273 -> lea rcx,[0x10f088]
0x107275 -> call g_log
0x103276 -> push 0x64
0x10d277 -> mov rdi,rax
0x109277 -> mov rcx,-0x1
0x10d27a -> call unlink
0x10b27a -> mov edx,0xc
0x10727a -> mov rax,qword ptr [rbp + -0x930]
0x10527b -> jmp 0x001057cb
0x10327b -> jmp 0x00102c20
0x10927e -> mov edx,0x80000001
0x10d27f -> mov rax,qword ptr [rbp + -0x40]
0x10b27f -> mov rdi,rax
0x105280 -> mov eax,dword ptr [rbp + -0x678]
0x103280 -> jmp qword ptr [0x00310e38]
0x107281 -> mov rax,qword ptr [rax + 0xe0]
0x10b282 -> mov eax,0x0
0x10d283 -> mov rdi,rax
0x109283 -> mov rdi,rax
0x10d286 -> call g_free
0x109286 -> call 0x00106ed8
0x105286 -> cdqe
0x103286 -> push 0x65
0x10b287 -> call g_set_error
0x107288 -> mov rax,qword ptr [rax]
0x105288 -> shl rax,0x5
0x10d28b -> jmp 0x0010d299
0x10928b -> jmp 0x00109291
0x10728b -> mov rdi,rax
0x10328b -> jmp 0x00102c20
0x10b28c -> mov eax,0xffffffff
0x10528c -> mov rdx,rax
0x10d28d -> lea rdi,[0x10f6a0]
0x10928d -> nop
0x10928e -> jmp 0x00109291
0x10728e -> call g_strdup
0x10528f -> mov rax,qword ptr [rbp + -0x648]
0x109290 -> nop
0x103290 -> jmp qword ptr [0x00310e40]
0x10b291 -> jmp 0x0010b298
0x109291 -> mov eax,dword ptr [rbp + -0x1c]
0x10b293 -> mov eax,0x0
0x107293 -> mov rdx,rax
0x10d294 -> call 0x0010d638
0x109294 -> cmp eax,0x1
0x107296 -> mov rax,qword ptr [rbp + -0x930]
0x105296 -> add rax,rdx
0x103296 -> push 0x66
0x109297 -> jz 0x001092a8
0x10b298 -> mov rcx,qword ptr [rbp + -0x18]
0x10d299 -> lea rax,[0x10f6ce]
0x109299 -> mov eax,dword ptr [rbp + -0x1c]
0x105299 -> mov rax,qword ptr [rax + 0x10]
0x10329b -> jmp 0x00102c20
0x10b29c -> xor rcx,qword ptr fs:[0x28]
0x10929c -> cmp eax,0x2
0x10729d -> mov qword ptr [rax + 0x90],rdx
0x10529d -> test rax,rax
0x10929f -> jnz 0x001090b0
0x10d2a0 -> mov qword ptr [rbp + -0x38],rax
0x1052a0 -> jnz 0x001052c1
0x1032a0 -> jmp qword ptr [0x00310e48]
0x1052a2 -> lea rcx,[0x10f488]
0x10d2a4 -> mov eax,dword ptr [rbp + -0x60]
0x1072a4 -> jmp 0x001075e4
0x10b2a5 -> jz 0x0010b2ac
0x1092a5 -> jmp 0x001092a8
0x1032a6 -> push 0x67
0x10d2a7 -> mov edx,0x0
0x10b2a7 -> call __stack_chk_fail
0x1092a7 -> nop
0x1092a8 -> mov eax,dword ptr [rbp + -0x1c]
0x1072a9 -> lea rdx,[0x10e59c]
0x1052a9 -> mov edx,0x37c
0x1092ab -> cmp eax,0x2
0x1032ab -> jmp 0x00102c20
0x10d2ac -> mov esi,0xfff
0x10b2ac -> add rsp,0x38
0x1092ae -> jnz 0x001092be
0x1052ae -> lea rsi,[0x10d8f4]
0x10b2b0 -> pop rbx
0x1092b0 -> lea rdi,[0x10ec2a]
0x1072b0 -> mov esi,0x20
0x1032b0 -> jmp qword ptr [0x00310e50]
0x10d2b1 -> mov edi,eax
0x10b2b1 -> pop rbp
0x10b2b2 -> ret
0x10d2b3 -> call lseek64
0x10b2b3 -> push rbp
0x10b2b4 -> mov rbp,rsp
0x1072b5 -> mov edi,0x0
0x1052b5 -> lea rdi,[0x10e292]
0x1032b6 -> push 0x68
0x10b2b7 -> push rbx
0x1092b7 -> call 0x0010d3ef
0x10d2b8 -> test rax,rax
0x10b2b8 -> sub rsp,0xa8
0x1072ba -> mov eax,0x0
0x10d2bb -> jns 0x0010d2c9
0x1032bb -> jmp 0x00102c20
0x1092bc -> jmp 0x001092d0
0x1052bc -> call __assert_fail
0x10d2bd -> lea rdi,[0x10f6d0]
0x1092be -> lea rdi,[0x10ec48]
0x10b2bf -> mov qword ptr [rbp + -0xa8],rdi
0x1072bf -> call g_log
0x1032c0 -> jmp qword ptr [0x00310e58]
0x1052c1 -> mov eax,dword ptr [rbp + -0x678]
0x10d2c4 -> call 0x0010d638
0x1072c4 -> mov dword ptr [rbp + -0x914],0x0
0x1092c5 -> call 0x0010d3ef
0x10b2c6 -> mov qword ptr [rbp + -0xb0],rsi
0x1032c6 -> push 0x69
0x1052c7 -> cdqe
0x10d2c9 -> mov rcx,qword ptr [rbp + -0x38]
0x1052c9 -> shl rax,0x5
0x1092ca -> jmp 0x001092d0
0x1032cb -> jmp 0x00102c20
0x1092cc -> nop
0x10d2cd -> mov eax,dword ptr [rbp + -0x60]
0x10b2cd -> mov rax,qword ptr fs:[0x28]
0x1092cd -> jmp 0x001092d0
0x1052cd -> mov rdx,rax
0x1072ce -> jmp 0x001072fb
0x1092cf -> nop
0x10d2d0 -> mov edx,0x1
0x1092d0 -> mov rax,qword ptr [rbp + -0x10]
0x1072d0 -> mov eax,dword ptr [rbp + -0x914]
0x1052d0 -> mov rax,qword ptr [rbp + -0x648]
0x1032d0 -> jmp qword ptr [0x00310e60]
0x1092d4 -> mov rdi,rax
0x10d2d5 -> mov rsi,rcx
0x10b2d6 -> mov qword ptr [rbp + -0x18],rax
0x1072d6 -> cdqe
0x1032d6 -> push 0x6a
0x1092d7 -> call g_free
0x1052d7 -> add rax,rdx
0x10d2d8 -> mov edi,eax
0x1072d8 -> movzx eax,byte ptr [rbp + rax*0x1 + -0x830]
0x10d2da -> call write
0x10b2da -> xor eax,eax
0x1052da -> mov eax,dword ptr [rax + 0xc]
0x1032db -> jmp 0x00102c20
0x10b2dc -> mov dword ptr [rbp + -0x98],0xffffffff
0x1092dc -> mov eax,0x0
0x1052dd -> test eax,eax
0x10d2df -> mov qword ptr [rbp + -0x30],rax
0x1052df -> jz 0x00105367
0x1072e0 -> cmp al,0x2e
0x1032e0 -> jmp qword ptr [0x00310e68]
0x1092e1 -> mov rcx,qword ptr [rbp + -0x8]
0x1072e2 -> jnz 0x001072f4
0x10d2e3 -> cmp qword ptr [rbp + -0x30],0x0
0x1072e4 -> mov eax,dword ptr [rbp + -0x914]
0x1092e5 -> xor rcx,qword ptr fs:[0x28]
0x1052e5 -> mov eax,dword ptr [rbp + -0x678]
0x10b2e6 -> mov dword ptr [rbp + -0x94],0xffffffff
0x1032e6 -> push 0x6b
0x10d2e8 -> jg 0x0010d2f6
0x10d2ea -> lea rdi,[0x10f6f0]
0x1072ea -> cdqe
0x1052eb -> cdqe
0x1032eb -> jmp 0x00102c20
0x1072ec -> mov byte ptr [rbp + rax*0x1 + -0x830],0x2f
0x1052ed -> shl rax,0x5
0x1092ee -> jz 0x001092f5
0x10b2f0 -> lea rax,[rbp + -0x90]
0x1092f0 -> call __stack_chk_fail
0x1032f0 -> jmp qword ptr [0x00310e70]
0x10d2f1 -> call 0x0010d638
0x1052f1 -> mov rdx,rax
0x1072f4 -> add dword ptr [rbp + -0x914],0x1
0x1052f4 -> mov rax,qword ptr [rbp + -0x648]
0x1092f5 -> leave
0x10d2f6 -> mov rax,qword ptr [rbp + -0x88]
0x1092f6 -> ret
0x1032f6 -> push 0x6c
0x10b2f7 -> mov edx,0x6e
0x1092f7 -> push rbp
0x1092f8 -> mov rbp,rsp
0x1092fb -> sub rsp,0x10
0x1072fb -> mov eax,dword ptr [rbp + -0x914]
0x1052fb -> add rax,rdx
0x1032fb -> jmp 0x00102c20
0x10b2fc -> mov esi,0x0
0x10d2fd -> mov rdi,rax
0x1052fe -> mov eax,dword ptr [rax + 0xc]
0x1092ff -> mov dword ptr [rbp + -0x4],edi
0x10d300 -> call pthread_mutex_unlock
0x103300 -> jmp qword ptr [0x00310e78]
0x10b301 -> mov rdi,rax
0x107301 -> movsxd rbx,eax
0x105301 -> cmp eax,0x2
0x109302 -> mov eax,dword ptr [rbp + -0x4]
0x10b304 -> call memset
0x107304 -> lea rax,[rbp + -0x830]
0x105304 -> jz 0x00105367
0x10d305 -> mov eax,dword ptr [rbp + -0x60]
0x109305 -> cmp eax,0x16
0x105306 -> mov eax,dword ptr [rbp + -0x678]
0x103306 -> push 0x6d
0x10d308 -> mov rsp,r12
0x109308 -> jz 0x00109355
0x10b309 -> mov word ptr [rbp + -0x90],0x1
0x10930a -> cmp eax,0x16
0x10d30b -> mov rbx,qword ptr [rbp + -0x28]
0x10730b -> mov rdi,rax
0x10330b -> jmp 0x00102c20
0x10530c -> cdqe
0x10930d -> jg 0x00109320
0x10730e -> call strlen
0x10530e -> shl rax,0x5
0x10d30f -> xor rbx,qword ptr fs:[0x28]
0x10930f -> cmp eax,0x5
0x103310 -> jmp qword ptr [0x00310e80]
0x10b312 -> mov rax,qword ptr [rbp + -0xa8]
0x109312 -> jz 0x0010933d
0x105312 -> mov rdx,rax
0x107313 -> cmp rbx,rax
0x109314 -> cmp eax,0xc
0x105315 -> mov rax,qword ptr [rbp + -0x648]
0x107316 -> jc 0x001072d0
0x103316 -> push 0x6e
0x109317 -> jz 0x00109349
0x10d318 -> jz 0x0010d31f
0x107318 -> lea rdx,[0x10e5ad]
0x10b319 -> lea rdx,[rbp + -0x90]
0x109319 -> cmp eax,0x1
0x10d31a -> call __stack_chk_fail
0x10331b -> jmp 0x00102c20
0x10931c -> jz 0x00109331
0x10531c -> add rax,rdx
0x10931e -> jmp 0x0010936d
0x10d31f -> lea rsp,[rbp + -0x20]
0x10731f -> mov esi,0x20
0x10531f -> mov eax,dword ptr [rax + 0xc]
0x10b320 -> lea rcx,[rdx + 0x2]
0x109320 -> cmp eax,0x1b
0x103320 -> jmp qword ptr [0x00310e88]
0x105322 -> cmp eax,0x3
0x10d323 -> pop rbx
0x109323 -> jl 0x0010936d
0x10d324 -> pop r12
0x10b324 -> mov edx,0x6c
0x107324 -> mov edi,0x0
0x109325 -> cmp eax,0x1c
0x105325 -> jz 0x00105367
0x10d326 -> pop r13
0x103326 -> push 0x6f
0x105327 -> mov eax,dword ptr [rbp + -0x678]
0x10d328 -> pop r14
0x109328 -> jle 0x00109361
0x10b329 -> mov rsi,rax
0x107329 -> mov eax,0x0
0x10d32a -> pop rbp
0x10932a -> cmp eax,0x7a
0x10d32b -> ret
0x10332b -> jmp 0x00102c20
0x10d32c -> push rbp
0x10b32c -> mov rdi,rcx
0x10d32d -> mov rbp,rsp
0x10932d -> jz 0x00109361
0x10532d -> cdqe
0x10732e -> call g_log
0x10b32f -> call strncpy
0x10932f -> jmp 0x0010936d
0x10532f -> shl rax,0x5
0x10d330 -> sub rsp,0x20
0x103330 -> jmp qword ptr [0x00310e90]
0x109331 -> mov edi,0x1
0x107333 -> mov rax,qword ptr [rbp + -0x930]
0x105333 -> mov rdx,rax
0x10d334 -> mov dword ptr [rbp + -0x14],edi
0x10b334 -> mov byte ptr [rbp + -0x23],0x0
0x109336 -> call htonl
0x105336 -> mov rax,qword ptr [rbp + -0x648]
0x103336 -> push 0x70
0x10d337 -> mov dword ptr [rbp + -0x18],esi
0x10b338 -> mov edx,0x0
0x10d33a -> mov eax,dword ptr [rbp + -0x14]
0x10733a -> mov rax,qword ptr [rax + 0xe0]
0x10933b -> jmp 0x00109377
0x10333b -> jmp 0x00102c20
0x10d33d -> mov edx,0x0
0x10b33d -> mov esi,0x1
0x10933d -> mov edi,0x5
0x10533d -> add rax,rdx
0x105340 -> mov eax,dword ptr [rax + 0xc]
0x103340 -> jmp qword ptr [0x00310e98]
0x107341 -> mov rax,qword ptr [rax]
0x10d342 -> mov esi,0x3
0x10b342 -> mov edi,0x1
0x109342 -> call htonl
0x105343 -> cmp eax,0x1
0x107344 -> lea rdx,[rbp + -0x830]
0x105346 -> jz 0x00105367
0x103346 -> push 0x71
0x10d347 -> mov edi,eax
0x10b347 -> call socket
0x109347 -> jmp 0x00109377
0x105348 -> lea rcx,[0x10f488]
0x10d349 -> mov eax,0x0
0x109349 -> mov edi,0xc
0x10734b -> mov rsi,rdx
0x10334b -> jmp 0x00102c20
0x10b34c -> mov dword ptr [rbp + -0x98],eax
0x10d34e -> call fcntl
0x10934e -> call htonl
0x10734e -> mov rdi,rax
0x10534f -> mov edx,0x37d
0x103350 -> jmp qword ptr [0x00310ea0]
0x107351 -> mov eax,0x0
0x10b352 -> mov eax,dword ptr [rbp + -0x98]
0x10d353 -> mov dword ptr [rbp + -0x4],eax
0x109353 -> jmp 0x00109377
0x105354 -> lea rsi,[0x10d8f4]
0x109355 -> mov edi,0x16
0x10d356 -> cmp dword ptr [rbp + -0x4],-0x1
0x107356 -> call g_strdup_printf
0x103356 -> push 0x72
0x10b358 -> test eax,eax
0x10d35a -> jnz 0x0010d363
0x10b35a -> jns 0x0010b3a3
0x10935a -> call htonl
0x10735b -> mov rdx,rax
0x10535b -> lea rdi,[0x10e2a8]
0x10335b -> jmp 0x00102c20
0x10d35c -> mov eax,0xffffffff
0x10b35c -> call __errno_location
0x10735e -> mov rax,qword ptr [rbp + -0x930]
0x10935f -> jmp 0x00109377
0x103360 -> jmp qword ptr [0x00310ea8]
0x10d361 -> jmp 0x0010d38d
0x10b361 -> mov eax,dword ptr [rax]
0x109361 -> mov edi,0x1c
0x105362 -> call __assert_fail
0x10d363 -> cmp dword ptr [rbp + -0x18],0x0
0x10b363 -> mov edi,eax
0x10b365 -> call strerror
0x107365 -> mov qword ptr [rax + 0x90],rdx
0x109366 -> call htonl
0x103366 -> push 0x73
0x10d367 -> jz 0x0010d371
0x105367 -> mov eax,dword ptr [rbp + -0x678]
0x10d369 -> mov eax,dword ptr [rbp + -0x4]
0x10b36a -> mov rbx,rax
0x10936b -> jmp 0x00109377
0x10336b -> jmp 0x00102c20
0x10d36c -> or ah,0x8
0x10736c -> jmp 0x001075e4
0x10b36d -> lea rdi,[0x10dfd9]
0x10936d -> mov edi,0x16
0x10536d -> cdqe
0x10d36f -> jmp 0x0010d377
0x10536f -> shl rax,0x5
0x103370 -> jmp qword ptr [0x00310eb0]
0x10d371 -> mov eax,dword ptr [rbp + -0x4]
0x107371 -> mov rax,qword ptr [rbp + -0x930]
0x109372 -> call htonl
0x105373 -> mov rdx,rax
0x10d374 -> and ah,0xf7
0x10b374 -> call g_quark_from_static_string
0x105376 -> mov rax,qword ptr [rbp + -0x648]
0x103376 -> push 0x74
0x10d377 -> mov ecx,dword ptr [rbp + -0x14]
0x109377 -> leave
0x109378 -> ret
0x107378 -> mov rax,qword ptr [rax + 0xe0]
0x10b379 -> mov esi,eax
0x109379 -> push rbp
0x10d37a -> mov edx,eax
0x10937a -> mov rbp,rsp
0x10b37b -> mov rax,qword ptr [rbp + -0xb0]
0x10337b -> jmp 0x00102c20
0x10d37c -> mov esi,0x4
0x10937d -> sub rsp,0x10
0x10537d -> add rax,rdx
0x10737f -> movzx eax,byte ptr [rax + 0x28]
0x105380 -> mov eax,dword ptr [rax + 0xc]
0x103380 -> jmp qword ptr [0x00310eb8]
0x10d381 -> mov edi,ecx
0x109381 -> mov qword ptr [rbp + -0x8],rdi
0x10b382 -> mov r8,rbx
0x10d383 -> mov eax,0x0
0x107383 -> movzx eax,al
0x105383 -> cmp eax,0x1
0x10b385 -> lea rcx,[0x10f0b8]
0x109385 -> mov rax,qword ptr [rbp + -0x8]
0x107386 -> mov ecx,eax
0x105386 -> jz 0x00105437
0x103386 -> push 0x75
0x10d388 -> call fcntl
0x107388 -> lea rdx,[0x10e5c1]
0x109389 -> mov eax,dword ptr [rax + 0x10]
0x10338b -> jmp 0x00102c20
0x10b38c -> mov edx,0xe
0x10938c -> test eax,eax
0x10538c -> cmp eax,0x1
0x10d38d -> leave
0x10d38e -> ret
0x10938e -> jle 0x0010939e
0x10d38f -> push rbp
0x10738f -> mov esi,0x20
0x10538f -> jc 0x001053a8
0x10d390 -> mov rbp,rsp
0x109390 -> mov rax,qword ptr [rbp + -0x8]
0x103390 -> jmp qword ptr [0x00310ec0]
0x10b391 -> mov rdi,rax
0x105391 -> cmp eax,0x2
0x10d393 -> sub rsp,0x20
0x10b394 -> mov eax,0x0
0x109394 -> mov eax,dword ptr [rax + 0x10]
0x107394 -> mov edi,0x0
0x105394 -> jz 0x001054c9
0x103396 -> push 0x76
0x10d397 -> mov dword ptr [rbp + -0x14],edi
0x109397 -> mov edi,eax
0x10b399 -> call g_set_error
0x109399 -> call close
0x107399 -> mov eax,0x0
0x10d39a -> mov rax,qword ptr fs:[0x28]
0x10539a -> cmp eax,0x3
0x10339b -> jmp 0x00102c20
0x10539d -> jz 0x0010555b
0x10b39e -> jmp 0x0010b499
0x10939e -> mov rax,qword ptr [rbp + -0x8]
0x10739e -> call g_log
0x1033a0 -> jmp qword ptr [0x00310ec8]
0x1093a2 -> mov eax,dword ptr [rax + 0x14]
0x10d3a3 -> mov qword ptr [rbp + -0x8],rax
0x10b3a3 -> lea rax,[rbp + -0x90]
0x1073a3 -> mov eax,dword ptr [rbp + -0x918]
0x1053a3 -> jmp 0x00105693
0x1093a5 -> test eax,eax
0x1033a6 -> push 0x77
0x10d3a7 -> xor eax,eax
0x1093a7 -> jle 0x001093b7
0x1053a8 -> mov eax,dword ptr [rbp + -0x678]
0x10d3a9 -> mov dword ptr [rbp + -0xc],0x1
0x1093a9 -> mov rax,qword ptr [rbp + -0x8]
0x1073a9 -> mov edx,eax
0x10b3aa -> mov rcx,rax
0x1073ab -> mov rax,qword ptr [rbp + -0x930]
0x1033ab -> jmp 0x00102c20
0x10b3ad -> mov eax,dword ptr [rbp + -0x98]
0x1093ad -> mov eax,dword ptr [rax + 0x14]
0x1053ae -> cdqe
0x10d3b0 -> mov dword ptr [rbp + -0xc],0x1
0x1093b0 -> mov edi,eax
0x1053b0 -> shl rax,0x5
0x1033b0 -> jmp qword ptr [0x00310ed0]
0x1093b2 -> call close
0x1073b2 -> lea rcx,[rax + 0x10]
0x10b3b3 -> mov edx,0x6e
0x1053b4 -> mov rdx,rax
0x1073b6 -> lea rax,[rbp + -0x8b0]
0x1033b6 -> push 0x78
0x10d3b7 -> lea rdx,[rbp + -0xc]
0x1093b7 -> mov rax,qword ptr [rbp + -0x8]
0x1053b7 -> mov rax,qword ptr [rbp + -0x648]
0x10b3b8 -> mov rsi,rcx
0x10d3bb -> mov eax,dword ptr [rbp + -0x14]
0x10b3bb -> mov edi,eax
0x1093bb -> mov rax,qword ptr [rax + 0x18]
0x1033bb -> jmp 0x00102c20
0x10b3bd -> call bind
0x1073bd -> mov rsi,rcx
0x10d3be -> mov r8d,0x4
0x1053be -> add rax,rdx
0x1093bf -> mov rdi,rax
0x1073c0 -> mov rdi,rax
0x1033c0 -> jmp qword ptr [0x00310ed8]
0x1053c1 -> mov rdx,qword ptr [rax]
0x10b3c2 -> test eax,eax
0x1093c2 -> call g_free
0x1073c3 -> call memcpy
0x10d3c4 -> mov rcx,rdx
0x10b3c4 -> jns 0x0010b417
0x1053c4 -> mov eax,dword ptr [rbp + -0x67c]
0x10b3c6 -> call __errno_location
0x1033c6 -> push 0x79
0x10d3c7 -> mov edx,0x1
0x1093c7 -> mov rax,qword ptr [rbp + -0x8]
0x1073c8 -> mov rax,qword ptr [rbp + -0x930]
0x1053ca -> cdqe
0x10b3cb -> mov eax,dword ptr [rax]
0x1093cb -> mov rax,qword ptr [rax + 0x8]
0x1033cb -> jmp 0x00102c20
0x10d3cc -> mov esi,0x6
0x1053cc -> lea rcx,[rax*0x8]
0x10b3cd -> mov edi,eax
0x10b3cf -> call strerror
0x1093cf -> mov rdi,rax
0x1073cf -> movzx eax,word ptr [rax + 0x10]
0x1033d0 -> jmp qword ptr [0x00310ee0]
0x10d3d1 -> mov edi,eax
0x1093d2 -> call g_free
0x10d3d3 -> call setsockopt
0x1073d3 -> cmp ax,0x1
0x10b3d4 -> mov rbx,rax
0x1053d4 -> mov rax,qword ptr [rbp + -0x610]
0x1033d6 -> push 0x7a
0x10b3d7 -> lea rdi,[0x10dfd9]
0x1093d7 -> mov rax,qword ptr [rbp + -0x8]
0x1073d7 -> jnz 0x001073f4
0x10d3d8 -> nop
0x10d3d9 -> mov rax,qword ptr [rbp + -0x8]
0x1073d9 -> lea rax,[rbp + -0x830]
0x1093db -> mov rdi,rax
0x1053db -> add rax,rcx
0x1033db -> jmp 0x00102c20
0x10d3dd -> xor rax,qword ptr fs:[0x28]
0x10b3de -> call g_quark_from_static_string
0x1093de -> call g_free
0x1053de -> mov rsi,qword ptr [rax]
0x1073e0 -> mov rdi,rax
0x1033e0 -> jmp qword ptr [0x00310ee8]
0x1053e1 -> lea rcx,[rbp + -0x658]
0x10b3e3 -> mov esi,eax
0x1093e3 -> nop
0x1073e3 -> call g_strdup
0x1093e4 -> leave
0x10b3e5 -> mov rdx,qword ptr [rbp + -0xa8]
0x1093e5 -> ret
0x10d3e6 -> jz 0x0010d3ed
0x1093e6 -> push rbp
0x1033e6 -> push 0x7b
0x1093e7 -> mov rbp,rsp
0x10d3e8 -> call __stack_chk_fail
0x1073e8 -> mov qword ptr [rbp + -0x8f8],rax
0x1053e8 -> mov rax,qword ptr [rbp + -0x620]
0x1093ea -> sub rsp,0x10
0x1033eb -> jmp 0x00102c20
0x10b3ec -> mov rax,qword ptr [rbp + -0xb0]
0x10d3ed -> leave
0x10d3ee -> ret
0x1093ee -> mov qword ptr [rbp + -0x8],rdi
0x10d3ef -> push rbp
0x1073ef -> jmp 0x00107591
0x1053ef -> mov rdi,rax
0x10d3f0 -> mov rbp,rsp
0x1033f0 -> jmp qword ptr [0x00310ef0]
0x1093f2 -> mov qword ptr [rbp + -0x10],rsi
0x1053f2 -> call g_key_file_get_integer
0x10d3f3 -> push rbx
0x10b3f3 -> mov r9,rbx
0x10d3f4 -> sub rsp,0xc8
0x1073f4 -> mov rax,qword ptr [rbp + -0x900]
0x10b3f6 -> mov r8,rdx
0x1093f6 -> cmp qword ptr [rbp + -0x10],0x100000
0x1033f6 -> push 0x7c
0x1053f7 -> mov dword ptr [rbp + -0x66c],eax
0x10b3f9 -> lea rcx,[0x10f0f8]
0x10d3fb -> mov qword ptr [rbp + -0xc8],rdi
0x1073fb -> mov eax,dword ptr [rax + 0x4]
0x1033fb -> jmp 0x00102c20
0x1053fd -> mov rax,qword ptr [rbp + -0x658]
0x1093fe -> jbe 0x0010940a
0x1073fe -> cmp eax,0x2
0x10b400 -> mov edx,0xf
0x109400 -> mov eax,0xffffffff
0x103400 -> jmp qword ptr [0x00310ef8]
0x107401 -> jz 0x00107431
0x10d402 -> mov rax,qword ptr fs:[0x28]
0x107403 -> mov rax,qword ptr [rbp + -0x900]
0x105404 -> test rax,rax
0x10b405 -> mov rdi,rax
0x109405 -> jmp 0x0010948a
0x103406 -> push 0x7d
0x105407 -> jnz 0x00105689
0x10b408 -> mov eax,0x0
0x10940a -> mov rax,qword ptr [rbp + -0x8]
0x10740a -> mov eax,dword ptr [rax + 0x4]
0x10d40b -> mov qword ptr [rbp + -0x18],rax
0x10340b -> jmp 0x00102c20
0x10b40d -> call g_set_error
0x10740d -> cmp eax,0xa
0x10540d -> mov eax,dword ptr [rbp + -0x678]
0x10940e -> mov rdi,rax
0x10d40f -> xor eax,eax
0x107410 -> jz 0x00107431
0x103410 -> jmp qword ptr [0x00310f00]
0x10d411 -> mov rcx,qword ptr [rbp + -0xc8]
0x109411 -> call pipe
0x10b412 -> jmp 0x0010b499
0x107412 -> lea rcx,[0x10f4a8]
0x105413 -> cdqe
0x105415 -> shl rax,0x5
0x109416 -> test eax,eax
0x103416 -> push 0x7e
0x10b417 -> mov eax,dword ptr [rbp + -0x98]
0x10d418 -> lea rax,[rbp + -0xb0]
0x109418 -> jz 0x00109421
0x107419 -> mov edx,0x6ac
0x105419 -> mov rdx,rax
0x10941a -> mov eax,0xffffffff
0x10341b -> jmp 0x00102c20
0x10541c -> mov rax,qword ptr [rbp + -0x648]
0x10b41d -> mov esi,0xa
0x10741e -> lea rsi,[0x10d8f4]
0x10d41f -> mov edx,0x96
0x10941f -> jmp 0x0010948a
0x103420 -> jmp qword ptr [0x00310f08]
0x109421 -> mov rax,qword ptr [rbp + -0x8]
0x10b422 -> mov edi,eax
0x105423 -> add rax,rdx
0x10d424 -> mov rsi,rcx
0x10b424 -> call listen
0x109425 -> add rax,0x4
0x107425 -> lea rdi,[0x10e5d8]
0x105426 -> mov rax,qword ptr [rax + 0x10]
0x103426 -> push 0x7f
0x10d427 -> mov rdi,rax
0x10b429 -> test eax,eax
0x109429 -> mov eax,dword ptr [rax]
0x10d42a -> call strncpy
0x10542a -> mov edx,dword ptr [rbp + -0x66c]
0x10b42b -> jns 0x0010b471
0x10942b -> mov edx,0x100000
0x10342b -> jmp 0x00102c20
0x10742c -> call __assert_fail
0x10b42d -> call __errno_location
0x10d42f -> mov rax,qword ptr [rbp + -0xc8]
0x109430 -> mov esi,0x407
0x105430 -> mov dword ptr [rax],edx
0x103430 -> jmp qword ptr [0x00310f10]
0x107431 -> mov rax,qword ptr [rbp + -0x900]
0x10b432 -> mov eax,dword ptr [rax]
0x105432 -> jmp 0x00105689
0x10b434 -> mov edi,eax
0x109435 -> mov edi,eax
0x10d436 -> lea rsi,[0x10f730]
0x10b436 -> call strerror
0x103436 -> push 0x80
0x109437 -> mov eax,0x0
0x105437 -> mov eax,dword ptr [rbp + -0x678]
0x107438 -> mov eax,dword ptr [rax + 0x4]
0x10b43b -> mov rbx,rax
0x10743b -> cmp eax,0x2
0x10343b -> jmp 0x00102c20
0x10943c -> call fcntl
0x10d43d -> mov rdi,rax
0x10543d -> cdqe
0x10b43e -> lea rdi,[0x10dfd9]
0x10743e -> jnz 0x0010744c
0x10543f -> shl rax,0x5
0x10d440 -> call strstr
0x107440 -> mov dword ptr [rbp + -0x910],0x20
0x103440 -> jmp qword ptr [0x00310f18]
0x109441 -> cmp eax,0xfffff
0x105443 -> mov rdx,rax
0x10d445 -> mov qword ptr [rbp + -0xb8],rax
0x10b445 -> call g_quark_from_static_string
0x109446 -> jg 0x00109485
0x105446 -> mov rax,qword ptr [rbp + -0x648]
0x103446 -> push 0x81
0x109448 -> mov rax,qword ptr [rbp + -0x8]
0x10b44a -> mov esi,eax
0x10744a -> jmp 0x0010748a
0x10344b -> jmp 0x00102c20
0x10d44c -> cmp qword ptr [rbp + -0xb8],0x0
0x10b44c -> mov rax,qword ptr [rbp + -0xb0]
0x10944c -> mov eax,dword ptr [rax]
0x10744c -> mov rax,qword ptr [rbp + -0x900]
0x10544d -> add rax,rdx
0x10944e -> mov edi,eax
0x109450 -> call close
0x105450 -> mov rdx,qword ptr [rax]
0x103450 -> jmp qword ptr [0x00310f20]
0x10b453 -> mov r8,rbx
0x107453 -> mov eax,dword ptr [rax + 0x4]
0x105453 -> mov eax,dword ptr [rbp + -0x67c]
0x10d454 -> jz 0x0010d512
0x109455 -> mov rax,qword ptr [rbp + -0x8]
0x10b456 -> lea rcx,[0x10f138]
0x107456 -> cmp eax,0xa
0x103456 -> push 0x82
0x109459 -> add rax,0x4
0x107459 -> jnz 0x00107467
0x105459 -> cdqe
0x10d45a -> mov rdx,qword ptr [rbp + -0xb8]
0x10745b -> mov dword ptr [rbp + -0x910],0x80
0x10545b -> lea rcx,[rax*0x8]
0x10345b -> jmp 0x00102c20
0x10b45d -> mov edx,0xf
0x10945d -> mov eax,dword ptr [rax]
0x10945f -> mov edi,eax
0x103460 -> jmp qword ptr [0x00310f28]
0x10d461 -> mov rax,qword ptr [rbp + -0xc8]
0x109461 -> call close
0x10b462 -> mov rdi,rax
0x105463 -> mov rax,qword ptr [rbp + -0x610]
0x10b465 -> mov eax,0x0
0x107465 -> jmp 0x0010748a
0x109466 -> mov rax,qword ptr [rbp + -0x8]
0x103466 -> push 0x83
0x107467 -> mov r8d,0x0
0x10d468 -> sub rdx,rax
0x10b46a -> call g_set_error
0x10946a -> mov dword ptr [rax],0xffffffff
0x10546a -> add rax,rcx
0x10d46b -> mov rax,rdx
0x10346b -> jmp 0x00102c20
0x10746d -> lea rcx,[0x10f4b8]
0x10546d -> mov rsi,qword ptr [rax]
0x10d46e -> mov edx,0x96
0x10b46f -> jmp 0x0010b499
0x109470 -> mov rax,qword ptr [rbp + -0x8]
0x105470 -> lea rcx,[rbp + -0x658]
0x103470 -> jmp qword ptr [0x00310f30]
0x10b471 -> mov dword ptr [rbp + -0x94],0x0
0x10d473 -> mov rbx,rdx
0x109474 -> add rax,0x4
0x107474 -> mov edx,0x6b2
0x10d476 -> sub rbx,rax
0x103476 -> push 0x84
0x105477 -> mov rax,qword ptr [rbp + -0x620]
0x109478 -> mov dword ptr [rax],0xffffffff
0x10d479 -> call __errno_location
0x107479 -> lea rsi,[0x10d8f4]
0x10b47b -> mov rax,qword ptr [0x00311268]
0x10347b -> jmp 0x00102c20
0x10d47e -> mov eax,dword ptr [rax]
0x10947e -> mov eax,0xffffffff
0x10547e -> mov rdi,rax
0x10d480 -> mov edi,eax
0x107480 -> mov edi,0x0
0x103480 -> jmp qword ptr [0x00310f38]
0x105481 -> call g_key_file_get_int64
0x10d482 -> call strerror
0x10b482 -> lea rcx,[rbp + -0x98]
0x109483 -> jmp 0x0010948a
0x109485 -> mov eax,0x0
0x107485 -> call g_assertion_message_expr
0x105486 -> mov qword ptr [rbp + -0x5f8],rax
0x103486 -> push 0x85
0x10d487 -> mov rcx,rax
0x10b489 -> mov edx,0x1
0x10d48a -> mov rdx,qword ptr [rbp + -0xb8]
0x10948a -> leave
0x10748a -> lea rax,[rbp + -0x8b0]
0x10948b -> ret
0x10348b -> jmp 0x00102c20
0x10948c -> push rbp
0x10948d -> mov rbp,rsp
0x10548d -> mov rax,qword ptr [rbp + -0x658]
0x10b48e -> mov rsi,rcx
0x109490 -> sub rsp,0x20
0x103490 -> jmp qword ptr [0x00310f40]
0x10d491 -> mov rax,qword ptr [rbp + -0xc8]
0x10b491 -> mov rdi,rax
0x107491 -> add rax,0x2
0x10b494 -> call g_array_append_vals
0x109494 -> mov qword ptr [rbp + -0x18],rdi
0x105494 -> test rax,rax
0x107495 -> mov qword ptr [rbp + -0x8f0],rax
0x103496 -> push 0x86
0x105497 -> jnz 0x0010568c
0x10d498 -> sub rdx,rax
0x109498 -> mov qword ptr [rbp + -0x20],rsi
0x10b499 -> cmp dword ptr [rbp + -0x94],0x0
0x10d49b -> mov rax,rdx
0x10349b -> jmp 0x00102c20
0x10949c -> mov esi,0x1
0x10749c -> mov dword ptr [rbp + -0x90c],0x0
0x10549d -> mov eax,dword ptr [rbp + -0x678]
0x10d49e -> mov rdx,rax
0x10b4a0 -> jns 0x0010b4b9
0x1034a0 -> jmp qword ptr [0x00310f48]
0x10d4a1 -> lea rax,[rbp + -0xb0]
0x1094a1 -> mov edi,0x20
0x10b4a2 -> mov eax,dword ptr [rbp + -0x98]
0x1054a3 -> cdqe
0x1054a5 -> shl rax,0x5
0x1094a6 -> call calloc
0x1074a6 -> jmp 0x0010751f
0x1034a6 -> push 0x87
0x10d4a8 -> add rax,rdx
0x10b4a8 -> test eax,eax
0x1074a8 -> mov rax,qword ptr [rbp + -0x930]
0x1054a9 -> mov rdx,rax
0x10b4aa -> js 0x0010b4b9
0x10d4ab -> mov rdx,rbx
0x1094ab -> mov qword ptr [rbp + -0x8],rax
0x1034ab -> jmp 0x00102c20
0x10b4ac -> mov eax,dword ptr [rbp + -0x98]
0x1054ac -> mov rax,qword ptr [rbp + -0x648]
0x10d4ae -> mov rsi,rcx
0x1094af -> mov rax,qword ptr [rbp + -0x8]
0x1074af -> mov rax,qword ptr [rax + 0xe0]
0x1034b0 -> jmp qword ptr [0x00310f50]
0x10d4b1 -> mov rdi,rax
0x10b4b2 -> mov edi,eax
0x1094b3 -> mov rdx,qword ptr [rbp + -0x20]
0x1054b3 -> add rax,rdx
0x10d4b4 -> call strncpy
0x10b4b4 -> call close
0x1074b6 -> movzx eax,byte ptr [rax + 0x28]
0x1054b6 -> mov rax,qword ptr [rax + 0x10]
0x1034b6 -> push 0x88
0x1094b7 -> mov qword ptr [rax + 0x8],rdx
0x10d4b9 -> add qword ptr [rbp + -0xb8],0x2
0x10b4b9 -> mov eax,dword ptr [rbp + -0x94]
0x1074ba -> movzx eax,al
0x1054ba -> mov rdx,qword ptr [rbp + -0x5f8]
0x1094bb -> mov rax,qword ptr [rbp + -0x8]
0x1034bb -> jmp 0x00102c20
0x1074bd -> sub eax,dword ptr [rbp + -0x90c]
0x10b4bf -> mov rbx,qword ptr [rbp + -0x18]
0x1094bf -> mov rdx,qword ptr [rbp + -0x18]
0x1034c0 -> jmp qword ptr [0x00310f58]
0x10d4c1 -> lea rax,[rbp + -0xb0]
0x1054c1 -> mov qword ptr [rax],rdx
0x10b4c3 -> xor rbx,qword ptr fs:[0x28]
0x1094c3 -> mov qword ptr [rax],rdx
0x1074c3 -> mov dword ptr [rbp + -0x904],eax
0x1054c4 -> jmp 0x0010568c
0x1094c6 -> mov rax,qword ptr [rbp + -0x8]
0x1034c6 -> push 0x89
0x10d4c8 -> mov rdi,rax
0x1074c9 -> mov eax,0x0
0x1054c9 -> mov eax,dword ptr [rbp + -0x678]
0x1094ca -> mov qword ptr [rax + 0x18],0x0
0x10d4cb -> call strlen
0x1034cb -> jmp 0x00102c20
0x10b4cc -> jz 0x0010b4d3
0x10b4ce -> call __stack_chk_fail
0x1074ce -> cmp dword ptr [rbp + -0x904],0x0
0x1054cf -> cdqe
0x10d4d0 -> mov edx,0x96
0x1034d0 -> jmp qword ptr [0x00310f60]
0x1054d1 -> shl rax,0x5
0x1094d2 -> mov rax,qword ptr [rbp + -0x8]
0x10b4d3 -> add rsp,0xa8
0x10d4d5 -> mov rbx,rdx
0x1074d5 -> cmovns eax,dword ptr [rbp + -0x904]
0x1054d5 -> mov rdx,rax
0x1094d6 -> mov dword ptr [rax + 0x10],0xffffffff
0x1034d6 -> push 0x8a
0x10d4d8 -> sub rbx,rax
0x1054d8 -> mov rax,qword ptr [rbp + -0x648]
0x10b4da -> pop rbx
0x10d4db -> lea rax,[rbp + -0xb0]
0x10b4db -> pop rbp
0x1034db -> jmp 0x00102c20
0x10b4dc -> ret
0x1074dc -> mov dword ptr [rbp + -0x904],eax
0x10b4dd -> push rbp
0x1094dd -> mov rax,qword ptr [rbp + -0x8]
0x10b4de -> mov rbp,rsp
0x1054df -> add rax,rdx
0x1034e0 -> jmp qword ptr [0x00310f68]
0x10b4e1 -> push rbx
0x1094e1 -> mov dword ptr [rax + 0x14],0xffffffff
0x10d4e2 -> mov rdi,rax
0x10b4e2 -> sub rsp,0x98
0x1074e2 -> mov eax,dword ptr [rbp + -0x904]
0x1054e2 -> mov rdx,qword ptr [rax]
0x10d4e5 -> call strlen
0x1054e5 -> mov eax,dword ptr [rbp + -0x67c]
0x1034e6 -> push 0x8b
0x1094e8 -> mov rax,qword ptr [rbp + -0x20]
0x1074e8 -> mov edi,eax
0x10b4e9 -> mov qword ptr [rbp + -0x88],rdi
0x10d4ea -> mov rdx,rax
0x1074ea -> call 0x0010c539
0x1054eb -> cdqe
0x1034eb -> jmp 0x00102c20
0x1094ec -> mov eax,dword ptr [rax + 0x4]
0x10d4ed -> lea rax,[rbp + -0xb0]
0x1054ed -> lea rcx,[rax*0x8]
0x1094ef -> movzx eax,ax
0x1074ef -> mov byte ptr [rbp + -0x919],al
0x10b4f0 -> mov qword ptr [rbp + -0x90],rsi
0x1034f0 -> jmp qword ptr [0x00310f70]
0x1094f2 -> cmp eax,0x1
0x10d4f4 -> lea rcx,[rax + rdx*0x1]
0x1094f5 -> jnz 0x00109568
0x1074f5 -> mov rax,qword ptr [rbp + -0x8f0]
0x1054f5 -> mov rax,qword ptr [rbp + -0x610]
0x1034f6 -> push 0x8c
0x10b4f7 -> mov qword ptr [rbp + -0x98],rdx
0x1094f7 -> mov rax,qword ptr [rbp + -0x18]
0x10d4f8 -> mov rax,qword ptr [rbp + -0xb8]
0x1094fb -> mov rax,qword ptr [rax + 0xe0]
0x1034fb -> jmp 0x00102c20
0x1074fc -> movzx eax,byte ptr [rax]
0x1054fc -> add rax,rcx
0x10b4fe -> mov rax,qword ptr fs:[0x28]
0x10d4ff -> mov rdx,rbx
0x1074ff -> and al,byte ptr [rbp + -0x919]
0x1054ff -> mov rsi,qword ptr [rax]
0x103500 -> jmp qword ptr [0x00310f78]
0x10d502 -> mov rsi,rax
0x109502 -> mov eax,dword ptr [rax + 0x20]
0x105502 -> lea rcx,[rbp + -0x658]
0x10d505 -> mov rdi,rcx
0x109505 -> and eax,0x8000
0x107505 -> mov edx,eax
0x103506 -> push 0x8d
0x10b507 -> mov qword ptr [rbp + -0x18],rax
0x107507 -> mov rax,qword ptr [rbp + -0x8f0]
0x10d508 -> call strncpy
0x105509 -> mov rax,qword ptr [rbp + -0x620]
0x10950a -> test eax,eax
0x10b50b -> xor eax,eax
0x10350b -> jmp 0x00102c20
0x10950c -> jz 0x0010954c
0x10d50d -> jmp 0x0010d5f0
0x10b50d -> mov qword ptr [rbp + -0x70],0x0
0x10950e -> mov rax,qword ptr [rbp + -0x20]
0x10750e -> mov byte ptr [rax],dl
0x107510 -> add qword ptr [rbp + -0x8f0],0x1
0x105510 -> mov rdi,rax
0x103510 -> jmp qword ptr [0x00310f80]
0x10d512 -> mov rax,qword ptr [rbp + -0xc8]
0x109512 -> mov eax,dword ptr [rax + 0x18]
0x105513 -> call g_key_file_get_string
0x10b515 -> mov qword ptr [rbp + -0x68],0x0
0x109515 -> mov edx,eax
0x103516 -> push 0x8e
0x109517 -> mov rax,qword ptr [rbp + -0x8]
0x107518 -> add dword ptr [rbp + -0x90c],0x8
0x105518 -> mov qword ptr [rbp + -0x600],rax
0x10d519 -> lea rsi,[0x10f733]
0x10951b -> add rax,0x10
0x10351b -> jmp 0x00102c20
0x10b51d -> mov dword ptr [rbp + -0x7c],0xffffffff
0x10951f -> mov rsi,rdx
0x10751f -> mov eax,dword ptr [rbp + -0x90c]
0x10551f -> mov rax,qword ptr [rbp + -0x658]
0x10d520 -> mov rdi,rax
0x103520 -> jmp qword ptr [0x00310f88]
0x109522 -> mov rdi,rax
0x10d523 -> call strstr
0x10b524 -> mov dword ptr [rbp + -0x80],0xffffffff
0x109525 -> call 0x001093e6
0x107525 -> cmp eax,dword ptr [rbp + -0x910]
0x105526 -> test rax,rax
0x103526 -> push 0x8f
0x10d528 -> mov qword ptr [rbp + -0xb8],rax
0x105529 -> jnz 0x0010568f
0x10952a -> test eax,eax
0x10b52b -> mov rax,qword ptr [rbp + -0x88]
0x10752b -> jl 0x001074a8
0x10352b -> jmp 0x00102c20
0x10952c -> jz 0x00109568
0x10952e -> mov rax,qword ptr [rbp + -0x20]
0x10d52f -> cmp qword ptr [rbp + -0xb8],0x0
0x10552f -> mov eax,dword ptr [rbp + -0x678]
0x103530 -> jmp qword ptr [0x00310f90]
0x107531 -> mov esi,dword ptr [rbp + -0x918]
0x10b532 -> mov qword ptr [rbp + -0x60],rax
0x109532 -> mov eax,dword ptr [rax + 0x18]
0x109535 -> mov eax,eax
0x105535 -> cdqe
0x10b536 -> cmp qword ptr [rbp + -0x88],0x0
0x103536 -> push 0x90
0x10d537 -> jz 0x0010d5f0
0x109537 -> mov rdi,rax
0x107537 -> lea rdx,[rbp + -0x420]
0x105537 -> shl rax,0x5
0x10953a -> call malloc
0x10553b -> mov rdx,rax
0x10353b -> jmp 0x00102c20
0x10d53d -> mov rdx,qword ptr [rbp + -0xb8]
0x10b53e -> jz 0x0010b54e
0x10753e -> lea rax,[rbp + -0x8b0]
0x10553e -> mov rax,qword ptr [rbp + -0x648]
0x10953f -> mov rdx,rax
0x10b540 -> mov rax,qword ptr [rbp + -0x88]
0x103540 -> jmp qword ptr [0x00310f98]
0x109542 -> mov rax,qword ptr [rbp + -0x8]
0x10d544 -> mov rax,qword ptr [rbp + -0xc8]
0x107545 -> sub rsp,0x8
0x105545 -> add rax,rdx
0x109546 -> mov qword ptr [rax + 0x18],rdx
0x103546 -> push 0x91
0x10b547 -> movzx eax,byte ptr [rax]
0x105548 -> mov rax,qword ptr [rax + 0x10]
0x107549 -> push 0x1
0x10b54a -> test al,al
0x10954a -> jmp 0x00109568
0x10d54b -> sub rdx,rax
0x10754b -> mov r9d,0x0
0x10354b -> jmp 0x00102c20
0x10b54c -> jnz 0x0010b559
0x10954c -> mov rax,qword ptr [rbp + -0x20]
0x10554c -> mov rdx,qword ptr [rbp + -0x600]
0x10d54e -> mov rax,rdx
0x10b54e -> lea rax,[0x10f174]
0x109550 -> mov eax,dword ptr [rax + 0x18]
0x103550 -> jmp qword ptr [0x00310fa0]
0x10d551 -> mov edx,0x96
0x107551 -> mov r8d,0x0
0x109553 -> mov eax,eax
0x105553 -> mov qword ptr [rax],rdx
0x10b555 -> mov qword ptr [rbp + -0x60],rax
0x109555 -> mov rdi,rax
0x10d556 -> mov rbx,rdx
0x105556 -> jmp 0x0010568f
0x103556 -> push 0x92
0x107557 -> mov ecx,0x401
0x109558 -> call malloc
0x10d559 -> sub rbx,rax
0x10b559 -> mov rax,qword ptr [rbp + -0x60]
0x10555b -> mov eax,dword ptr [rbp + -0x678]
0x10355b -> jmp 0x00102c20
0x10d55c -> call __h_errno_location
0x10755c -> mov rdi,rax
0x10b55d -> mov edx,0xffffffff
0x10955d -> mov rdx,rax
0x10755f -> call getnameinfo
0x109560 -> mov rax,qword ptr [rbp + -0x8]
0x103560 -> jmp qword ptr [0x00310fa8]
0x10d561 -> mov eax,dword ptr [rax]
0x105561 -> cdqe
0x10b562 -> lea rsi,[0x10f180]
0x10d563 -> mov edi,eax
0x105563 -> shl rax,0x5
0x109564 -> mov qword ptr [rax + 0x18],rdx
0x107564 -> add rsp,0x10
0x10d565 -> call hstrerror
0x103566 -> push 0x93
0x105567 -> mov rdx,rax
0x109568 -> mov rax,qword ptr [rbp + -0x8]
0x107568 -> lea rdx,[rbp + -0x830]
0x10b569 -> mov rdi,rax
0x10d56a -> mov rcx,rax
0x10556a -> mov rax,qword ptr [rbp + -0x648]
0x10356b -> jmp 0x00102c20
0x10b56c -> call g_strsplit_set
0x10956c -> leave
0x10d56d -> mov rdx,qword ptr [rbp + -0xb8]
0x10956d -> ret
0x10956e -> push rbp
0x10956f -> mov rbp,rsp
0x10756f -> lea rax,[rbp + -0x420]
0x103570 -> jmp qword ptr [0x00310fb0]
0x10b571 -> mov qword ptr [rbp + -0x58],rax
0x105571 -> add rax,rdx
0x109572 -> sub rsp,0x10
0x10d574 -> mov rax,qword ptr [rbp + -0xc8]
0x105574 -> mov rdx,qword ptr [rax]
0x10b575 -> mov dword ptr [rbp + -0x78],0x0
0x109576 -> mov qword ptr [rbp + -0x8],rdi
0x107576 -> mov rsi,rax
0x103576 -> push 0x94
0x105577 -> mov eax,dword ptr [rbp + -0x67c]
0x107579 -> lea rdi,[0x10e612]
0x10957a -> mov qword ptr [rbp + -0x10],rsi
0x10d57b -> sub rdx,rax
0x10357b -> jmp 0x00102c20
0x10b57c -> jmp 0x0010b88f
0x10557d -> cdqe
0x10d57e -> mov rax,rdx
0x10957e -> mov edi,0x67446698
0x10557f -> lea rcx,[rax*0x8]
0x107580 -> mov eax,0x0
0x103580 -> jmp qword ptr [0x00310ff0]
0x10d581 -> mov rdx,rax
0x10b581 -> mov eax,dword ptr [rbp + -0x78]
0x109583 -> call htonl
0x10d584 -> lea rax,[rbp + -0xb0]
0x10b584 -> cdqe
0x107585 -> call g_strdup_printf
0x10b586 -> lea rdx,[rax*0x8]
0x105587 -> mov rax,qword ptr [rbp + -0x610]
0x109588 -> mov edx,eax
0x10958a -> mov rax,qword ptr [rbp + -0x8]
0x10758a -> mov qword ptr [rbp + -0x8f8],rax
0x10d58b -> add rax,rdx
0x10d58e -> mov rdx,rbx
0x10b58e -> mov rax,qword ptr [rbp + -0x58]
0x10958e -> mov dword ptr [rax],edx
0x10558e -> add rax,rcx
0x109590 -> mov rax,qword ptr [rbp + -0x8]
0x103590 -> xor ebp,ebp
0x10d591 -> mov rsi,rcx
0x107591 -> cmp qword ptr [rbp + -0x8f8],0x0
0x105591 -> mov rsi,qword ptr [rax]
0x10b592 -> add rax,rdx
0x103592 -> mov r9,rdx
0x10d594 -> mov rdi,rax
0x109594 -> mov dword ptr [rax + 0x4],0x0
0x105594 -> lea rcx,[rbp + -0x658]
0x10b595 -> mov rax,qword ptr [rax]
0x103595 -> pop rsi
0x103596 -> mov rdx,rsp
0x10d597 -> call strncpy
0x10b598 -> movzx eax,byte ptr [rax]
0x107599 -> jz 0x001075e3
0x103599 -> and rsp,-0x10
0x10b59b -> test al,al
0x10959b -> mov rax,qword ptr [rbp + -0x10]
0x10759b -> mov rax,qword ptr [rbp + -0x930]
0x10559b -> mov rax,qword ptr [rbp + -0x620]
0x10d59c -> add qword ptr [rbp + -0xb8],0x2
0x10b59d -> jz 0x0010b88a
0x10359d -> push rax
0x10359e -> push rsp
0x10959f -> add rax,0x8
0x10359f -> lea r8,[0x10d890]
0x1075a2 -> mov rax,qword ptr [rax + 0xe0]
0x1055a2 -> mov rdi,rax
0x10b5a3 -> lea rax,[rbp + -0x50]
0x1095a3 -> mov rdx,qword ptr [rbp + -0x8]
0x10d5a4 -> lea rax,[rbp + -0xb0]
0x1055a5 -> call g_key_file_get_boolean
0x1035a6 -> lea rcx,[0x10d820]
0x10b5a7 -> mov edx,0x30
0x1095a7 -> add rdx,0x8
0x1075a9 -> mov rax,qword ptr [rax]
0x1055aa -> mov dword ptr [rbp + -0x670],eax
0x10d5ab -> mov rdi,rax
0x1095ab -> mov rax,qword ptr [rax]
0x10b5ac -> mov esi,0x0
0x1075ac -> mov rdx,qword ptr [rbp + -0x8f8]
0x1035ad -> lea rdi,[0x10be3c]
0x10d5ae -> call strlen
0x1095ae -> mov qword ptr [rdx],rax
0x1055b0 -> mov rax,qword ptr [rbp + -0x658]
0x10b5b1 -> mov rdi,rax
0x1095b1 -> nop
0x1095b2 -> leave
0x10d5b3 -> mov edx,0x96
0x1095b3 -> ret
0x1075b3 -> mov rsi,rdx
0x10b5b4 -> call memset
0x1095b4 -> push rbp
0x1035b4 -> call qword ptr [0x00310fc8]
0x1095b5 -> mov rbp,rsp
0x1075b6 -> mov rdi,rax
0x1055b7 -> test rax,rax
0x10d5b8 -> mov rbx,rdx
0x1095b8 -> sub rsp,0x40
0x10b5b9 -> mov dword ptr [rbp + -0x50],0x21
0x1075b9 -> mov eax,0x0
0x1055ba -> jnz 0x00105692
0x1035ba -> hlt
0x10d5bb -> sub rbx,rax
0x1095bc -> mov qword ptr [rbp + -0x38],rdi
0x10d5be -> lea rax,[rbp + -0xb0]
0x1075be -> call g_strdup_printf
0x10b5c0 -> mov dword ptr [rbp + -0x48],0x1
0x1095c0 -> mov qword ptr [rbp + -0x40],rsi
0x1055c0 -> cmp dword ptr [rbp + -0x670],0x0
0x1035c0 -> lea rdi,[0x3111a0]
0x1075c3 -> mov rdx,rax
0x1095c4 -> mov rax,qword ptr fs:[0x28]
0x10d5c5 -> mov rdi,rax
0x1075c6 -> mov rax,qword ptr [rbp + -0x930]
0x10b5c7 -> mov dword ptr [rbp + -0x4c],0x0
0x1055c7 -> jz 0x00105627
0x1035c7 -> push rbp
0x10d5c8 -> call strlen
0x1035c8 -> lea rax,[0x3111a0]
0x1055c9 -> mov eax,dword ptr [rbp + -0x678]
0x10d5cd -> mov rdx,rax
0x1095cd -> mov qword ptr [rbp + -0x8],rax
0x1075cd -> mov qword ptr [rax + 0x90],rdx
0x10b5ce -> mov dword ptr [rbp + -0x44],0x6
0x1055cf -> cdqe
0x1035cf -> cmp rax,rdi
0x10d5d0 -> lea rax,[rbp + -0xb0]
0x1095d1 -> xor eax,eax
0x1055d1 -> shl rax,0x5
0x1035d2 -> mov rbp,rsp
0x1095d3 -> mov rax,qword ptr [rbp + -0x38]
0x1075d4 -> mov rax,qword ptr [rbp + -0x8f8]
0x10b5d5 -> cmp qword ptr [rbp + -0x90],0x0
0x1055d5 -> mov rdx,rax
0x1035d5 -> jz 0x001035f0
0x10d5d7 -> lea rcx,[rax + rdx*0x1]
0x1095d7 -> mov rax,qword ptr [rax + 0x130]
0x1035d7 -> mov rax,qword ptr [0x00310fb8]
0x1055d8 -> mov rax,qword ptr [rbp + -0x648]
0x10d5db -> mov rax,qword ptr [rbp + -0xb8]
0x1075db -> mov rdi,rax
0x10b5dd -> jz 0x0010b5e8
0x1095de -> test rax,rax
0x1075de -> call g_free
0x1035de -> test rax,rax
0x10b5df -> mov rax,qword ptr [rbp + -0x90]
0x1055df -> add rax,rdx
0x1095e1 -> jz 0x001095ed
0x1035e1 -> jz 0x001035f0
0x10d5e2 -> mov rdx,rbx
0x1055e2 -> mov rax,qword ptr [rax + 0x10]
0x1095e3 -> mov eax,0xffffffff
0x1075e3 -> nop
0x1035e3 -> pop rbp
0x1075e4 -> mov rax,qword ptr [rbp + -0x900]
0x1035e4 -> jmp rax
0x10d5e5 -> mov rsi,rax
0x10b5e6 -> jmp 0x0010b5ef
0x1055e6 -> mov ecx,dword ptr [rax]
0x10d5e8 -> mov rdi,rcx
0x10b5e8 -> lea rax,[0x10f184]
0x1095e8 -> jmp 0x00109700
0x1055e8 -> mov eax,dword ptr [rbp + -0x678]
0x10d5eb -> call strncpy
0x1075eb -> test rax,rax
0x1095ed -> mov rax,qword ptr [rbp + -0x40]
0x1075ee -> jz 0x001075ff
0x1055ee -> cdqe
0x10b5ef -> mov edx,dword ptr [rbp + -0x78]
0x10d5f0 -> mov byte ptr [rbp + -0x1b],0x0
0x1075f0 -> mov rax,qword ptr [rbp + -0x900]
0x1055f0 -> shl rax,0x5
0x1035f0 -> pop rbp
0x1095f1 -> mov eax,dword ptr [rax + 0x18]
0x1035f1 -> ret
0x10b5f2 -> movsxd rdx,edx
0x10d5f4 -> mov rax,qword ptr [0x00310ff8]
0x1095f4 -> mov edx,eax
0x1055f4 -> mov rdx,rax
0x10b5f5 -> lea rcx,[rdx*0x8]
0x1095f6 -> lea rax,[rbp + -0x28]
0x1075f7 -> mov rdi,rax
0x1055f7 -> mov rax,qword ptr [rbp + -0x648]
0x1095fa -> mov rsi,rdx
0x1075fa -> call freeaddrinfo
0x10d5fb -> mov rax,qword ptr [rax]
0x10b5fd -> mov rdx,qword ptr [rbp + -0x58]
0x1095fd -> mov rdi,rax
0x10d5fe -> lea rdx,[rbp + -0xb0]
0x1055fe -> add rax,rdx
0x1075ff -> mov rax,qword ptr [rbp + -0x930]
0x109600 -> call 0x001093e6
0x103600 -> lea rdi,[0x3111a0]
0x10b601 -> add rdx,rcx
0x105601 -> mov edx,dword ptr [rax + 0x18]
0x10b604 -> mov rdi,qword ptr [rdx]
0x105604 -> mov eax,dword ptr [rbp + -0x678]
0x10d605 -> lea rsi,[0x10f736]
0x109605 -> test eax,eax
0x107606 -> mov rdx,qword ptr [rax + 0x90]
0x10b607 -> lea rcx,[rbp + -0x70]
0x109607 -> jz 0x00109613
0x103607 -> lea rsi,[0x3111a0]
0x109609 -> mov eax,0xffffffff
0x10560a -> cdqe
0x10b60b -> lea rdx,[rbp + -0x50]
0x10d60c -> mov rdi,rax
0x10560c -> shl rax,0x5
0x10760d -> lea rax,[rbp + -0x830]
0x10960e -> jmp 0x00109700
0x10360e -> push rbp
0x10d60f -> mov eax,0x0
0x10b60f -> mov rsi,rax
0x10360f -> sub rsi,rdi
0x105610 -> mov rsi,rax
0x10b612 -> call getaddrinfo
0x103612 -> mov rbp,rsp
0x109613 -> mov rax,qword ptr [rbp + -0x40]
0x105613 -> mov rax,qword ptr [rbp + -0x648]
0x10d614 -> call fprintf
0x107614 -> mov r8,rdx
0x103615 -> sar rsi,0x3
0x10b617 -> mov dword ptr [rbp + -0x74],eax
0x109617 -> mov eax,dword ptr [rax + 0x18]
0x107617 -> mov rcx,rax
0x10d619 -> nop
0x103619 -> mov rax,rsi
0x10d61a -> mov rax,qword ptr [rbp + -0x18]
0x10b61a -> mov rax,qword ptr [rbp + -0x70]
0x10961a -> mov edi,eax
0x10761a -> lea rdx,[0x10e618]
0x10561a -> add rax,rsi
0x10961c -> mov rax,qword ptr [rbp + -0x40]
0x10361c -> shr rax,0x3f
0x10561d -> mov rax,qword ptr [rax + 0x10]
0x10d61e -> xor rax,qword ptr fs:[0x28]
0x10b61e -> mov qword ptr [rbp + -0x68],rax
0x109620 -> mov rax,qword ptr [rax + 0x10]
0x103620 -> add rsi,rax
0x107621 -> mov esi,0x20
0x105621 -> or edx,ecx
0x10b622 -> cmp dword ptr [rbp + -0x74],0x0
0x105623 -> mov dword ptr [rax],edx
0x103623 -> sar rsi,0x1
0x109624 -> mov rsi,rax
0x105625 -> jmp 0x00105692
0x10b626 -> jz 0x0010b860
0x107626 -> mov edi,0x0
0x103626 -> jz 0x00103640
0x10d627 -> jz 0x0010d62e
0x109627 -> mov eax,dword ptr [rbp + -0x24]
0x105627 -> mov eax,dword ptr [rbp + -0x678]
0x103628 -> mov rax,qword ptr [0x00310fe8]
0x10d629 -> call __stack_chk_fail
0x10962a -> mov rdx,qword ptr [rbp + -0x38]
0x10762b -> mov eax,0x0
0x10b62c -> mov eax,dword ptr [rbp + -0x78]
0x10562d -> cdqe
0x10d62e -> add rsp,0xc8
0x10962e -> mov r9d,0x0
0x10b62f -> cdqe
0x10562f -> shl rax,0x5
0x10362f -> test rax,rax
0x107630 -> call g_log
0x10b631 -> add rax,0x1
0x103632 -> jz 0x00103640
0x105633 -> mov rdx,rax
0x109634 -> mov r8d,0x0
0x103634 -> pop rbp
0x10d635 -> pop rbx
0x10b635 -> lea rdx,[rax*0x8]
0x107635 -> lea rax,[rbp + -0x830]
0x103635 -> jmp rax
0x10d636 -> pop rbp
0x105636 -> mov rax,qword ptr [rbp + -0x648]
0x10d637 -> ret
0x10d638 -> push rbp
0x10d639 -> mov rbp,rsp
0x10963a -> mov rcx,rdx
0x10d63c -> sub rsp,0x10
0x10763c -> mov rdi,rax
0x10b63d -> mov rax,qword ptr [rbp + -0x58]
0x10963d -> mov rdx,rdi
0x10563d -> add rax,rdx
0x10763f -> call g_strdup
0x10d640 -> mov qword ptr [rbp + -0x8],rdi
0x109640 -> mov edi,eax
0x105640 -> mov rax,qword ptr [rax + 0x10]
0x103640 -> pop rbp
0x10b641 -> add rax,rdx
0x103641 -> ret
0x109642 -> call 0x00106515
0x10d644 -> mov rax,qword ptr [rbp + -0x8]
0x10b644 -> mov rax,qword ptr [rax]
0x107644 -> mov rdx,rax
0x105644 -> mov edx,dword ptr [rax]
0x105646 -> mov eax,dword ptr [rbp + -0x678]
0x10b647 -> test rax,rax
0x109647 -> test eax,eax
0x107647 -> mov rax,qword ptr [rbp + -0x930]
0x10d648 -> mov rdi,rax
0x109649 -> jz 0x00109669
0x10b64a -> jnz 0x0010b860
0x10d64b -> call 0x0010d3ef
0x10964b -> mov eax,dword ptr [rbp + -0x24]
0x10564c -> cdqe
0x10964e -> mov edi,eax
0x10764e -> mov qword ptr [rax + 0x8],rdx
0x10564e -> shl rax,0x5
0x10d650 -> mov rax,qword ptr [0x00310ff8]
0x10b650 -> mov rax,qword ptr [0x00311268]
0x109650 -> call close
0x103650 -> cmp byte ptr [0x003111c8],0x0
0x107652 -> mov eax,0x0
0x105652 -> mov rcx,rax
0x109655 -> mov eax,dword ptr [rbp + -0x28]
0x105655 -> mov rax,qword ptr [rbp + -0x648]
0x10d657 -> mov rax,qword ptr [rax]
0x10b657 -> mov eax,dword ptr [rax + 0x8]
0x107657 -> mov rbx,qword ptr [rbp + -0x18]
0x103657 -> jnz 0x00103688
0x109658 -> mov edi,eax
0x103659 -> cmp qword ptr [0x00310ff0],0x0
0x10d65a -> mov rcx,rax
0x10b65a -> test eax,eax
0x10965a -> call close
0x10765b -> xor rbx,qword ptr fs:[0x28]
0x10b65c -> jnz 0x0010b860
0x10565c -> add rax,rcx
0x10d65d -> mov edx,0x9
0x10965f -> mov eax,0xffffffff
0x10565f -> mov eax,dword ptr [rax + 0x18]
0x103661 -> push rbp
0x10d662 -> mov esi,0x1
0x10b662 -> mov eax,dword ptr [rbp + -0x74]
0x105662 -> not eax
0x103662 -> mov rbp,rsp
0x109664 -> jmp 0x00109700
0x107664 -> jz 0x0010766b
0x105664 -> mov ecx,eax
0x10b665 -> mov edi,eax
0x103665 -> jz 0x00103673
0x107666 -> call __stack_chk_fail
0x105666 -> mov eax,dword ptr [rbp + -0x678]
0x10d667 -> lea rdi,[0x10f741]
0x10b667 -> call gai_strerror
0x103667 -> mov rdi,qword ptr [0x00311008]
0x109669 -> mov rdx,qword ptr [rbp + -0x40]
0x10766b -> mov rbx,qword ptr [rbp + -0x8]
0x10b66c -> mov rbx,rax
0x10566c -> cdqe
0x10966d -> lea rax,[rbp + -0x20]
0x10d66e -> call fwrite
0x10566e -> shl rax,0x5
0x10366e -> call 0x00103580
0x10b66f -> lea rdi,[0x10dfd9]
0x10766f -> leave
0x107670 -> ret
0x109671 -> mov rsi,rdx
0x107671 -> push rbp
0x107672 -> mov rbp,rsp
0x105672 -> mov rsi,rax
0x10d673 -> mov edi,0x1
0x103673 -> call 0x001035c0
0x109674 -> mov rdi,rax
0x107675 -> sub rsp,0x30
0x105675 -> mov rax,qword ptr [rbp + -0x648]
0x10b676 -> call g_quark_from_static_string
0x109677 -> call 0x0010956e
0x10d678 -> call exit
0x103678 -> mov byte ptr [0x003111c8],0x1
0x107679 -> mov qword ptr [rbp + -0x28],rdi
0x10b67b -> mov esi,eax
0x10967c -> mov rax,qword ptr [rbp + -0x38]
0x10567c -> add rax,rsi
0x10d67d -> push rbp
0x10b67d -> mov rax,qword ptr [rbp + -0x98]
0x10767d -> mov eax,esi
0x10d67e -> mov rbp,rsp
0x10767f -> mov dword ptr [rbp + -0x30],edx
0x10567f -> mov rax,qword ptr [rax + 0x10]
0x10367f -> pop rbp
0x109680 -> add rax,0x108
0x103680 -> ret
0x10d681 -> sub rsp,0x10
0x107682 -> mov byte ptr [rbp + -0x2c],al
0x105683 -> and edx,ecx
0x10b684 -> mov r8,rbx
0x10d685 -> mov qword ptr [rbp + -0x8],rdi
0x107685 -> mov dword ptr [rbp + -0x1c],0x0
0x105685 -> mov dword ptr [rax],edx
0x109686 -> mov rdi,rax
0x10b687 -> lea rcx,[0x10f190]
0x105687 -> jmp 0x00105692
0x103688 -> ret
0x10d689 -> mov rax,qword ptr [0x00310fc0]
0x109689 -> call pthread_mutex_lock
0x105689 -> nop
0x10568a -> jmp 0x00105693
0x10768c -> mov rax,qword ptr [rbp + -0x28]
0x10568c -> nop
0x10568d -> jmp 0x00105693
0x10b68e -> mov edx,0xd
0x10968e -> mov rax,qword ptr [rbp + -0x38]
0x10568f -> nop
0x10d690 -> mov rax,qword ptr [rax]
0x107690 -> mov rax,qword ptr [rax]
0x105690 -> jmp 0x00105693
0x103690 -> push rbp
0x103691 -> mov rbp,rsp
0x109692 -> mov eax,dword ptr [rax + 0xd8]
0x105692 -> nop
0x10d693 -> mov ecx,0x0
0x10b693 -> mov rdi,rax
0x107693 -> shr rax,0xc
0x105693 -> mov rax,qword ptr [rbp + -0x658]
0x103694 -> pop rbp
0x103695 -> jmp 0x00103600
0x10b696 -> mov eax,0x0
0x107697 -> mov dword ptr [rbp + -0x14],eax
0x10d698 -> mov edx,0x2
0x109698 -> lea rcx,[rbp + -0x20]
0x10769a -> mov edi,0x1000
0x10569a -> test rax,rax
0x10369a -> push rbp
0x10b69b -> call g_set_error
0x10369b -> mov rbp,rsp
0x10969c -> mov edx,0x10
0x10d69d -> mov esi,0x0
0x10569d -> jz 0x001057c4
0x10369e -> sub rsp,0x20
0x10769f -> call malloc
0x10b6a0 -> jmp 0x0010b8b6
0x1096a1 -> mov rsi,rcx
0x10d6a2 -> mov rdi,rax
0x1036a2 -> mov qword ptr [rbp + -0x8],rdi
0x1056a3 -> mov rax,qword ptr [rbp + -0x658]
0x1096a4 -> mov edi,eax
0x1076a4 -> mov qword ptr [rbp + -0x10],rax
0x10d6a5 -> call setvbuf
0x10b6a5 -> mov dword ptr [rbp + -0x80],0xffffffff
0x1096a6 -> call 0x0010d7a5
0x1036a6 -> mov qword ptr [rbp + -0x10],rsi
0x1076a8 -> mov dword ptr [rbp + -0x18],0x0
0x10d6aa -> mov rax,qword ptr [0x00310ff8]
0x1056aa -> mov eax,dword ptr [rax + 0x4]
0x1036aa -> mov qword ptr [rbp + -0x18],rdx
0x1096ab -> mov rax,qword ptr [rbp + -0x40]
0x10b6ac -> mov rax,qword ptr [rbp + -0x70]
0x1056ad -> cmp eax,0x3
0x1036ae -> mov rax,qword ptr [rbp + -0x8]
0x1096af -> mov eax,dword ptr [rax + 0x18]
0x1076af -> jmp 0x00107810
0x10b6b0 -> mov edx,dword ptr [rax + 0xc]
0x1056b0 -> jnz 0x001056f6
0x10d6b1 -> mov rax,qword ptr [rax]
0x1096b2 -> mov ecx,eax
0x1056b2 -> mov eax,dword ptr [rbp + -0x678]
0x1036b2 -> mov eax,dword ptr [rax + 0xd8]
0x10b6b3 -> mov rax,qword ptr [rbp + -0x70]
0x10d6b4 -> mov ecx,0x0
0x1096b4 -> mov rax,qword ptr [rbp + -0x38]
0x1076b4 -> mov eax,dword ptr [rbp + -0x18]
0x10b6b7 -> mov ecx,dword ptr [rax + 0x8]
0x1076b7 -> shl eax,0xc
0x1096b8 -> mov edx,dword ptr [rax + 0xd8]
0x1056b8 -> cdqe
0x1036b8 -> mov rdx,qword ptr [rbp + -0x18]
0x10d6b9 -> mov edx,0x2
0x10b6ba -> mov rax,qword ptr [rbp + -0x70]
0x1076ba -> cdqe
0x1056ba -> shl rax,0x5
0x1076bc -> mov qword ptr [rbp + -0x8],rax
0x1036bc -> mov rcx,qword ptr [rbp + -0x10]
0x10d6be -> mov esi,0x0
0x10b6be -> mov eax,dword ptr [rax + 0x4]
0x1096be -> mov eax,dword ptr [rbp + -0x28]
0x1056be -> mov rdx,rax
0x1076c0 -> cmp byte ptr [rbp + -0x2c],0x0
0x1036c0 -> mov rsi,rcx
0x10b6c1 -> mov esi,ecx
0x1096c1 -> mov r8,rcx
0x1056c1 -> mov rax,qword ptr [rbp + -0x648]
0x10d6c3 -> mov rdi,rax
0x10b6c3 -> mov edi,eax
0x1036c3 -> mov edi,eax
0x1096c4 -> mov ecx,0x0
0x1076c4 -> jz 0x001076d8
0x10b6c5 -> call socket
0x1036c5 -> call 0x0010d718
0x10d6c6 -> call setvbuf
0x1076c6 -> mov rax,qword ptr [rbp + -0x28]
0x1056c8 -> add rax,rdx
0x1096c9 -> mov esi,0x0
0x10b6ca -> mov dword ptr [rbp + -0x80],eax
0x1076ca -> add rax,0xa0
0x1036ca -> leave
0x10d6cb -> nop
0x1056cb -> mov eax,dword ptr [rax + 0x8]
0x1036cb -> ret
0x10d6cc -> leave
0x1036cc -> push rbp
0x10d6cd -> ret
0x10b6cd -> mov eax,dword ptr [rbp + -0x80]
0x1036cd -> mov rbp,rsp
0x10d6ce -> push rbp
0x1096ce -> mov edi,eax
0x1056ce -> test eax,eax
0x10d6cf -> mov rbp,rsp
0x10b6d0 -> test eax,eax
0x1096d0 -> call 0x00103ab2
0x1076d0 -> mov rdi,rax
0x1056d0 -> jnz 0x001056e6
0x1036d0 -> sub rsp,0x20
0x10d6d2 -> sub rsp,0x20
0x10b6d2 -> jns 0x0010b71b
0x1056d2 -> lea rax,[rbp + -0x658]
0x1076d3 -> call pthread_rwlock_wrlock
0x10b6d4 -> call __errno_location
0x1036d4 -> mov qword ptr [rbp + -0x8],rdi
0x1096d5 -> mov rax,qword ptr [rbp + -0x38]
0x10d6d6 -> mov qword ptr [rbp + -0x18],rdi
0x1076d8 -> mov rax,qword ptr [rbp + -0x28]
0x1036d8 -> mov qword ptr [rbp + -0x10],rsi
0x10b6d9 -> mov eax,dword ptr [rax]
0x1096d9 -> add rax,0x108
0x1056d9 -> mov rdi,rax
0x10d6da -> mov rax,qword ptr [rbp + -0x18]
0x10b6db -> mov edi,eax
0x1076dc -> mov rax,qword ptr [rax + 0xf8]
0x1056dc -> call g_clear_error
0x1036dc -> mov qword ptr [rbp + -0x18],rdx
0x10b6dd -> call strerror
0x10d6de -> mov dword ptr [rbp + -0x8],eax
0x1096df -> mov rdi,rax
0x1036e0 -> mov rax,qword ptr [rbp + -0x8]
0x10d6e1 -> mov rax,qword ptr [rbp + -0x18]
0x1056e1 -> jmp 0x001057c4
0x10b6e2 -> mov rbx,rax
0x1096e2 -> call pthread_mutex_unlock
0x1076e3 -> mov edx,dword ptr [rbp + -0x18]
0x1036e4 -> mov eax,dword ptr [rax + 0xd8]
0x10d6e5 -> shr rax,0x20
0x10b6e5 -> lea rdi,[0x10dfd9]
0x1076e6 -> movsxd rdx,edx
0x1056e6 -> mov rax,qword ptr [rbp + -0x628]
0x1096e7 -> mov eax,dword ptr [rbp + -0x28]
0x10d6e9 -> mov dword ptr [rbp + -0x4],eax
0x1076e9 -> shl rdx,0x2
0x1096ea -> mov edi,eax
0x1036ea -> mov rdx,qword ptr [rbp + -0x18]
0x10d6ec -> mov eax,dword ptr [rbp + -0x8]
0x10b6ec -> call g_quark_from_static_string
0x1096ec -> call close
0x1076ed -> add rax,rdx
0x1056ed -> mov qword ptr [rbp + -0x640],rax
0x1036ee -> mov rcx,qword ptr [rbp + -0x10]
0x10d6ef -> mov edi,eax
0x1076f0 -> mov eax,dword ptr [rax]
0x10d6f1 -> call ntohl
0x10b6f1 -> mov esi,eax
0x1096f1 -> mov eax,dword ptr [rbp + -0x24]
0x1076f2 -> cmp eax,-0x1
0x1036f2 -> mov rsi,rcx
0x10b6f3 -> mov rax,qword ptr [rbp + -0x98]
0x1096f4 -> mov edi,eax
0x1056f4 -> jmp 0x00105704
0x1076f5 -> jz 0x001077f4
0x1036f5 -> mov edi,eax
0x10d6f6 -> mov dword ptr [rbp + -0x8],eax
0x1096f6 -> call close
0x1056f6 -> mov rax,qword ptr [rbp + -0x630]
0x1036f7 -> call 0x0010d7a5
0x10d6f9 -> mov eax,dword ptr [rbp + -0x4]
0x10b6fa -> mov r8,rbx
0x1096fb -> mov eax,0x0
0x1076fb -> add dword ptr [rbp + -0x1c],0x1
0x10d6fc -> mov edi,eax
0x1036fc -> leave
0x10b6fd -> lea rcx,[0x10f1d0]
0x1056fd -> mov qword ptr [rbp + -0x640],rax
0x1036fd -> ret
0x10d6fe -> call ntohl
0x1036fe -> push rbp
0x1076ff -> mov rax,qword ptr [rbp + -0x28]
0x1036ff -> mov rbp,rsp
0x109700 -> mov rcx,qword ptr [rbp + -0x8]
0x103702 -> sub rsp,0x20
0x10d703 -> mov dword ptr [rbp + -0x4],eax
0x107703 -> mov rax,qword ptr [rax + 0xf8]
0x10b704 -> mov edx,0xe
0x109704 -> xor rcx,qword ptr fs:[0x28]
0x105704 -> mov rax,qword ptr [rbp + -0x658]
0x10d706 -> mov eax,dword ptr [rbp + -0x8]
0x103706 -> mov qword ptr [rbp + -0x8],rdi
0x10d709 -> shl rax,0x20
0x10b709 -> mov rdi,rax
0x10770a -> mov edx,dword ptr [rbp + -0x18]
0x10370a -> mov qword ptr [rbp + -0x10],rsi
0x10570b -> mov rbx,qword ptr [rax + 0x8]
0x10b70c -> mov eax,0x0
0x10d70d -> mov rdx,rax
0x10970d -> jz 0x00109714
0x10770d -> movsxd rdx,edx
0x10370e -> mov qword ptr [rbp + -0x18],rdx
0x10970f -> call __stack_chk_fail
0x10570f -> mov eax,dword ptr [rbp + -0x67c]
0x10d710 -> mov eax,dword ptr [rbp + -0x4]
0x107710 -> shl rdx,0x2
0x10b711 -> call g_set_error
0x103712 -> mov rax,qword ptr [rbp + -0x8]
0x10d713 -> or rax,rdx
0x109714 -> leave
0x107714 -> add rax,rdx
0x109715 -> ret
0x105715 -> cdqe
0x10d716 -> leave
0x10b716 -> jmp 0x0010b8b6
0x109716 -> push rbp
0x103716 -> mov rax,qword ptr [rax + 0x138]
0x10d717 -> ret
0x109717 -> mov rbp,rsp
0x107717 -> mov eax,dword ptr [rax]
0x105717 -> lea rdx,[rax*0x8]
0x10d718 -> push rbp
0x10d719 -> mov rbp,rsp
0x107719 -> shl eax,0xc
0x10971a -> sub rsp,0x40
0x10b71b -> mov eax,dword ptr [rbp + -0x80]
0x10d71c -> sub rsp,0x30
0x10771c -> mov edx,eax
0x10371d -> test rax,rax
0x10b71e -> mov rdx,qword ptr [rbp + -0x98]
0x10971e -> mov qword ptr [rbp + -0x38],rdi
0x10771e -> mov rax,qword ptr [rbp + -0x28]
0x10571f -> mov rax,qword ptr [rbp + -0x610]
0x10d720 -> mov dword ptr [rbp + -0x14],edi
0x103720 -> jnz 0x00103746
0x109722 -> mov qword ptr [rbp + -0x40],rsi
0x107722 -> mov eax,dword ptr [rax + 0xf0]
0x103722 -> lea r8,[0x10d8d8]
0x10d723 -> mov qword ptr [rbp + -0x20],rsi
0x10b725 -> mov rsi,rdx
0x109726 -> mov rax,qword ptr fs:[0x28]
0x105726 -> add rax,rdx
0x10d727 -> mov qword ptr [rbp + -0x28],rdx
0x10b728 -> mov edi,eax
0x107728 -> mov rsi,qword ptr [rbp + -0x10]
0x105729 -> mov r13,qword ptr [rax]
0x103729 -> lea rcx,[0x10f468]
0x10b72a -> call 0x0010b118
0x10d72b -> jmp 0x0010d797
0x10772c -> mov rcx,rdx
0x10572c -> mov eax,dword ptr [rbp + -0x678]
0x10d72d -> mov rdx,qword ptr [rbp + -0x28]
0x10b72f -> cmp eax,-0x1
0x10972f -> mov qword ptr [rbp + -0x8],rax
0x10772f -> mov edx,0x1000
0x103730 -> mov edx,0x178
0x10d731 -> mov rcx,qword ptr [rbp + -0x20]
0x10b732 -> jnz 0x0010b754
0x105732 -> cdqe
0x109733 -> xor eax,eax
0x10b734 -> mov rax,qword ptr [rbp + -0x98]
0x107734 -> mov edi,eax
0x105734 -> shl rax,0x5
0x10d735 -> mov eax,dword ptr [rbp + -0x14]
0x109735 -> mov rax,qword ptr [rbp + -0x40]
0x103735 -> lea rsi,[0x10d8f4]
0x107736 -> call pread64
0x10d738 -> mov rsi,rcx
0x105738 -> mov rdx,rax
0x109739 -> mov eax,dword ptr [rax + 0x18]
0x10d73b -> mov edi,eax
0x10b73b -> lea rsi,[0x10f210]
0x10773b -> cmp rax,0x1000
0x10573b -> mov rax,qword ptr [rbp + -0x648]
0x10973c -> mov eax,eax
0x10373c -> mov edi,0x0
0x10d73d -> call read
0x10973e -> mov rdi,rax
0x109741 -> call malloc
0x107741 -> jz 0x0010777f
0x103741 -> call g_assertion_message_expr
0x10d742 -> mov qword ptr [rbp + -0x8],rax
0x10b742 -> mov rdi,rax
0x105742 -> add rax,rdx
0x107743 -> lea rdx,[0x10e640]
0x10b745 -> mov eax,0x0
0x105745 -> mov r12,qword ptr [rax]
0x10d746 -> cmp qword ptr [rbp + -0x8],0x0
0x109746 -> mov qword ptr [rbp + -0x28],rax
0x103746 -> mov rax,qword ptr [rbp + -0x8]
0x105748 -> lea rdi,[0x10dfd9]
0x10b74a -> call g_prefix_error
0x10974a -> cmp qword ptr [rbp + -0x28],0x0
0x10774a -> mov esi,0x20
0x10374a -> mov rax,qword ptr [rax + 0x138]
0x10d74b -> jle 0x0010d75f
0x10d74d -> mov rax,qword ptr [rbp + -0x8]
0x10b74f -> jmp 0x0010b8b6
0x10974f -> jnz 0x0010975d
0x10774f -> mov edi,0x0
0x10574f -> call g_quark_from_static_string
0x10d751 -> sub qword ptr [rbp + -0x28],rax
0x109751 -> lea rdi,[0x10ecb0]
0x103751 -> mov rdx,qword ptr [rbp + -0x18]
0x10b754 -> mov rax,qword ptr [rbp + -0x70]
0x107754 -> mov eax,0x0
0x105754 -> mov esi,eax
0x10d755 -> mov rax,qword ptr [rbp + -0x8]
0x103755 -> mov rsi,qword ptr [rbp + -0x10]
0x105756 -> mov rdx,qword ptr [rbp + -0x640]
0x10b758 -> mov edx,dword ptr [rax + 0x10]
0x109758 -> call 0x0010d638
0x10d759 -> add qword ptr [rbp + -0x20],rax
0x107759 -> call g_log
0x103759 -> mov rcx,qword ptr [rbp + -0x8]
0x10b75b -> mov rax,qword ptr [rbp + -0x70]
0x10d75d -> jmp 0x0010d797
0x10975d -> mov rdx,qword ptr [rbp + -0x40]
0x10575d -> mov rax,qword ptr [rbp + -0x6a0]
0x10375d -> mov rdi,rcx
0x10775e -> cmp byte ptr [rbp + -0x2c],0x0
0x10d75f -> cmp qword ptr [rbp + -0x8],0x0
0x10b75f -> mov rax,qword ptr [rax + 0x18]
0x103760 -> call rax
0x109761 -> lea rax,[rbp + -0x20]
0x107762 -> jz 0x0010781e
0x103762 -> test eax,eax
0x10b763 -> mov rcx,rax
0x10d764 -> jns 0x0010d785
0x105764 -> sub rsp,0x8
0x103764 -> jns 0x001037ae
0x109765 -> mov rsi,rdx
0x10d766 -> call __errno_location
0x10b766 -> mov eax,dword ptr [rbp + -0x80]
0x103766 -> mov rax,qword ptr [rbp + -0x8]
0x109768 -> mov rdi,rax
0x107768 -> mov rax,qword ptr [rbp + -0x28]
0x105768 -> push rbx
0x10b769 -> mov rsi,rcx
0x105769 -> mov r9,r13
0x10376a -> mov rax,qword ptr [rax + 0x148]
0x10d76b -> mov eax,dword ptr [rax]
0x10976b -> call 0x0010956e
0x10b76c -> mov edi,eax
0x10776c -> add rax,0xa0
0x10576c -> mov r8,r12
0x10d76d -> cmp eax,0xb
0x10b76e -> call bind
0x10576f -> mov rcx,rdx
0x10d770 -> jz 0x0010d797
0x109770 -> mov rax,qword ptr [rbp + -0x40]
0x103771 -> test rax,rax
0x10d772 -> lea rdi,[0x10f74b]
0x107772 -> mov rdi,rax
0x105772 -> mov edx,0x3
0x10b773 -> test eax,eax
0x109774 -> mov eax,dword ptr [rax + 0x18]
0x103774 -> jnz 0x0010379a
0x10b775 -> jz 0x0010b7dc
0x107775 -> call pthread_rwlock_unlock
0x103776 -> lea r8,[0x10d901]
0x10b777 -> call __errno_location
0x109777 -> mov esi,eax
0x105777 -> mov rdi,rax
0x10d779 -> call 0x0010d3ef
0x109779 -> mov rax,qword ptr [rbp + -0x40]
0x10777a -> jmp 0x0010781e
0x10577a -> mov eax,0x0
0x10b77c -> mov eax,dword ptr [rax]
0x10977d -> mov rax,qword ptr [rax + 0x10]
0x10377d -> lea rcx,[0x10f468]
0x10d77e -> mov eax,0xffffffff
0x10b77e -> cmp eax,0x62
0x10777f -> mov rdx,qword ptr [rbp + -0x8]
0x10577f -> call g_set_error
0x10b781 -> jnz 0x0010b795
0x109781 -> mov rdi,rax
0x10d783 -> jmp 0x0010d7a3
0x10b783 -> mov rax,qword ptr [0x00311268]
0x107783 -> mov rsi,qword ptr [rbp + -0x10]
0x109784 -> mov rdx,qword ptr [rbp + -0x38]
0x105784 -> add rsp,0x10
0x103784 -> mov edx,0x17a
0x10d785 -> call __errno_location
0x107787 -> mov eax,dword ptr [rbp + -0x30]
0x109788 -> mov rax,qword ptr [rbp + -0x28]
0x105788 -> mov rax,qword ptr [rbp + -0x638]
0x103789 -> lea rsi,[0x10d8f4]
0x10d78a -> mov dword ptr [rax],0x68
0x10b78a -> mov eax,dword ptr [rax + 0x8]
0x10778a -> mov rcx,rdx
0x10978c -> mov rcx,rdx
0x10b78d -> test eax,eax
0x10778d -> mov edx,0x1000
0x10b78f -> jnz 0x0010b853
0x10978f -> mov rdx,rsi
0x10578f -> mov esi,0x1
0x10d790 -> mov eax,0xffffffff
0x103790 -> mov edi,0x0
0x109792 -> mov rsi,rax
0x107792 -> mov edi,eax
0x107794 -> call pwrite64
0x105794 -> mov rdi,rax
0x10d795 -> jmp 0x0010d7a3
0x10b795 -> call __errno_location
0x109795 -> call 0x00106599
0x103795 -> call g_assertion_message_expr
0x10d797 -> cmp qword ptr [rbp + -0x28],0x0
0x105797 -> call g_array_free
0x107799 -> cmp rax,0x1000
0x10b79a -> mov eax,dword ptr [rax]
0x10979a -> test eax,eax
0x10379a -> mov rax,qword ptr [rbp + -0x8]
0x10d79c -> jnz 0x0010d72d
0x10b79c -> mov edi,eax
0x10979c -> jz 0x001097af
0x10579c -> mov rax,qword ptr [rbp + -0x658]
0x10d79e -> mov eax,0x0
0x10b79e -> call strerror
0x10979e -> call __errno_location
0x10379e -> mov rax,qword ptr [rax + 0x148]
0x10779f -> jz 0x001077d6
0x1077a1 -> lea rdx,[0x10e670]
0x10d7a3 -> leave
0x10b7a3 -> mov rbx,rax
0x1097a3 -> mov eax,dword ptr [rax]
0x1057a3 -> mov rdi,rax
0x10d7a4 -> ret
0x10d7a5 -> push rbp
0x1097a5 -> mov edi,eax
0x1037a5 -> mov rdx,qword ptr [rbp + -0x8]
0x10d7a6 -> mov rbp,rsp
0x10b7a6 -> lea rdi,[0x10dfd9]
0x1057a6 -> call g_error_free
0x1097a7 -> call 0x001092f7
0x1077a8 -> mov esi,0x20
0x10d7a9 -> sub rsp,0x30
0x1037a9 -> mov rdi,rdx
0x1057ab -> mov rax,qword ptr [rbp + -0x620]
0x1097ac -> mov dword ptr [rbp + -0x1c],eax
0x1037ac -> call rax
0x10d7ad -> mov dword ptr [rbp + -0x14],edi
0x10b7ad -> call g_quark_from_static_string
0x1077ad -> mov edi,0x0
0x1037ae -> nop
0x1097af -> mov rax,qword ptr [rbp + -0x38]
0x1037af -> leave
0x10d7b0 -> mov qword ptr [rbp + -0x20],rsi
0x1037b0 -> ret
0x1037b1 -> push rbp
0x10b7b2 -> mov esi,eax
0x1077b2 -> mov eax,0x0
0x1057b2 -> mov rdi,rax
0x1037b2 -> mov rbp,rsp
0x1097b3 -> add rax,0x108
0x10d7b4 -> mov qword ptr [rbp + -0x28],rdx
0x10b7b4 -> mov rax,qword ptr [rbp + -0x98]
0x1057b5 -> call g_key_file_free
0x1037b5 -> sub rsp,0x30
0x1077b7 -> call g_log
0x10d7b8 -> jmp 0x0010d80d
0x1097b9 -> mov rdi,rax
0x1037b9 -> mov qword ptr [rbp + -0x18],rdi
0x10d7ba -> mov rdx,qword ptr [rbp + -0x28]
0x1057ba -> mov eax,0x0
0x10b7bb -> mov r8,rbx
0x1097bc -> call pthread_mutex_lock
0x1077bc -> cmp byte ptr [rbp + -0x2c],0x0
0x1037bd -> mov qword ptr [rbp + -0x20],rsi
0x10d7be -> mov rcx,qword ptr [rbp + -0x20]
0x10b7be -> lea rcx,[0x10f238]
0x1057bf -> jmp 0x00105dfc
0x1077c0 -> jz 0x00107821
0x1097c1 -> lea rcx,[rbp + -0x20]
0x1037c1 -> mov qword ptr [rbp + -0x28],rdx
0x10d7c2 -> mov eax,dword ptr [rbp + -0x14]
0x1077c2 -> mov rax,qword ptr [rbp + -0x28]
0x1057c4 -> add dword ptr [rbp + -0x678],0x1
0x10d7c5 -> mov rsi,rcx
0x10b7c5 -> mov edx,0xf
0x1097c5 -> mov rax,qword ptr [rbp + -0x38]
0x1037c5 -> mov qword ptr [rbp + -0x30],rcx
0x1077c6 -> add rax,0xa0
0x10d7c8 -> mov edi,eax
0x1097c9 -> mov edx,0x10
0x1037c9 -> jmp 0x001037fb
0x10d7ca -> call write
0x10b7ca -> mov rdi,rax
0x1057cb -> mov eax,dword ptr [rbp + -0x678]
0x1037cb -> mov rax,qword ptr [rbp + -0x30]
0x1077cc -> mov rdi,rax
0x10b7cd -> mov eax,0x0
0x1097ce -> mov rsi,rcx
0x10d7cf -> mov qword ptr [rbp + -0x8],rax
0x1077cf -> call pthread_rwlock_unlock
0x1037cf -> cmp qword ptr [rbp + -0x20],rax
0x1097d1 -> mov rdi,rax
0x1057d1 -> cmp eax,dword ptr [rbp + -0x680]
0x10b7d2 -> call g_set_error
0x10d7d3 -> cmp qword ptr [rbp + -0x8],0x0
0x1037d3 -> cmovbe rax,qword ptr [rbp + -0x20]
0x1097d4 -> call 0x00103891
0x1077d4 -> jmp 0x00107821
0x1077d6 -> mov rax,qword ptr [rbp + -0x28]
0x10b7d7 -> jmp 0x0010b8b6
0x1057d7 -> jl 0x00105280
0x10d7d8 -> jg 0x0010d7f9
0x1037d8 -> mov qword ptr [rbp + -0x8],rax
0x1097d9 -> mov eax,dword ptr [rbp + -0x1c]
0x10d7da -> call __errno_location
0x1077da -> mov rax,qword ptr [rax + 0xf8]
0x10b7dc -> mov eax,dword ptr [rbp + -0x80]
0x1097dc -> test eax,eax
0x1037dc -> mov rdx,qword ptr [rbp + -0x8]
0x1057dd -> mov rax,qword ptr [rbp + -0x660]
0x1097de -> jnz 0x001097fc
0x10d7df -> mov eax,dword ptr [rax]
0x10b7df -> mov esi,0xa
0x1097e0 -> mov rax,qword ptr [rbp + -0x40]
0x1037e0 -> mov rcx,qword ptr [rbp + -0x28]
0x10d7e1 -> cmp eax,0xb
0x1077e1 -> mov edx,dword ptr [rbp + -0x18]
0x10d7e4 -> jz 0x0010d7fc
0x10b7e4 -> mov edi,eax
0x1097e4 -> mov eax,dword ptr [rax + 0x18]
0x1077e4 -> movsxd rdx,edx
0x1057e4 -> test rax,rax
0x1037e4 -> mov rax,qword ptr [rbp + -0x18]
0x10d7e6 -> lea rdi,[0x10f75b]
0x10b7e6 -> call listen
0x1097e7 -> mov edx,eax
0x1077e7 -> shl rdx,0x2
0x1057e7 -> jz 0x001059ef
0x1037e8 -> mov rsi,rcx
0x1097e9 -> mov rcx,qword ptr [rbp + -0x28]
0x10b7eb -> test eax,eax
0x1077eb -> add rax,rdx
0x1037eb -> mov rdi,rax
0x10d7ed -> call 0x0010d3ef
0x10b7ed -> jns 0x0010b836
0x1097ed -> mov rax,qword ptr [rbp + -0x38]
0x1057ed -> mov rax,qword ptr [rbp + -0x660]
0x1077ee -> mov dword ptr [rax],0xffffffff
0x1037ee -> call 0x001036fe
0x10b7ef -> call __errno_location
0x1097f1 -> mov rsi,rcx
0x10d7f2 -> mov eax,0xffffffff
0x1037f3 -> mov rax,qword ptr [rbp + -0x8]
0x10b7f4 -> mov eax,dword ptr [rax]
0x1097f4 -> mov rdi,rax
0x1077f4 -> cmp byte ptr [rbp + -0x2c],0x0
0x1057f4 -> mov edx,0x4
0x10b7f6 -> mov edi,eax
0x10d7f7 -> jmp 0x0010d819
0x1097f7 -> call 0x00103891
0x1037f7 -> sub qword ptr [rbp + -0x20],rax
0x10b7f8 -> call strerror
0x1077f8 -> jz 0x0010780c
0x10d7f9 -> nop
0x1057f9 -> lea rsi,[0x10e309]
0x10d7fa -> jmp 0x0010d7fd
0x1077fa -> mov rax,qword ptr [rbp + -0x28]
0x1037fb -> cmp qword ptr [rbp + -0x20],0x0
0x10d7fc -> nop
0x1097fc -> mov rax,qword ptr [rbp + -0x38]
0x10d7fd -> mov rax,qword ptr [rbp + -0x8]
0x10b7fd -> mov rbx,rax
0x1077fe -> add rax,0xa0
0x10b800 -> lea rdi,[0x10dfd9]
0x109800 -> add rax,0x108
0x105800 -> mov rdi,rax
0x103800 -> jnz 0x001037cb
0x10d801 -> sub qword ptr [rbp + -0x28],rax
0x103802 -> nop
0x105803 -> call strncmp
0x103803 -> leave
0x107804 -> mov rdi,rax
0x103804 -> ret
0x10d805 -> mov rax,qword ptr [rbp + -0x8]
0x103805 -> push rbp
0x109806 -> mov rdi,rax
0x103806 -> mov rbp,rsp
0x10b807 -> call g_quark_from_static_string
0x107807 -> call pthread_rwlock_unlock
0x105808 -> test eax,eax
0x10d809 -> add qword ptr [rbp + -0x20],rax
0x109809 -> call pthread_mutex_unlock
0x103809 -> sub rsp,0x430
0x10580a -> jnz 0x0010581b
0x10b80c -> mov esi,eax
0x10780c -> add dword ptr [rbp + -0x18],0x1
0x10580c -> mov dword ptr [rbp + -0x57c],0x0
0x10d80d -> cmp qword ptr [rbp + -0x28],0x0
0x10b80e -> mov rax,qword ptr [rbp + -0x98]
0x10980e -> mov rax,qword ptr [rbp + -0x28]
0x107810 -> mov eax,dword ptr [rbp + -0x18]
0x103810 -> mov qword ptr [rbp + -0x428],rdi
0x10d812 -> jnz 0x0010d7ba
0x109812 -> mov rdi,rax
0x107813 -> cmp eax,dword ptr [rbp + -0x14]
0x10d814 -> mov eax,0x0
0x10b815 -> mov r8,rbx
0x109815 -> call free
0x107816 -> jl 0x001076b4
0x105816 -> jmp 0x001059f9
0x103817 -> mov rax,qword ptr fs:[0x28]
0x10b818 -> lea rcx,[0x10f288]
0x10d819 -> leave
0x10d81a -> ret
0x10981a -> nop
0x10981b -> mov rax,qword ptr [rbp + -0x8]
0x10581b -> mov rax,qword ptr [rbp + -0x660]
0x10781c -> jmp 0x00107822
0x10781e -> nop
0x10b81f -> mov edx,0xf
0x10981f -> xor rax,qword ptr fs:[0x28]
0x10781f -> jmp 0x00107822
0x10d820 -> push r15
0x103820 -> mov qword ptr [rbp + -0x8],rax
0x107821 -> nop
0x10d822 -> push r14
0x107822 -> mov rax,qword ptr [rbp + -0x10]
0x105822 -> mov edx,0x9
0x10d824 -> mov r15,rdx
0x10b824 -> mov rdi,rax
0x103824 -> xor eax,eax
0x107826 -> mov rdi,rax
0x103826 -> lea rcx,[rbp + -0x414]
0x10d827 -> push r13
0x10b827 -> mov eax,0x0
0x105827 -> lea rsi,[0x10e30e]
0x109828 -> jz 0x0010982f
0x10d829 -> push r12
0x107829 -> call free
0x10982a -> call __stack_chk_fail
0x10d82b -> lea r12,[0x3108d8]
0x10b82c -> call g_set_error
0x10382d -> mov rax,qword ptr [rbp + -0x428]
0x10782e -> mov eax,dword ptr [rbp + -0x1c]
0x10582e -> mov rdi,rax
0x10982f -> leave
0x109830 -> ret
0x10b831 -> jmp 0x0010b8b6
0x109831 -> push rbp
0x107831 -> leave
0x105831 -> call strncmp
0x10d832 -> push rbp
0x109832 -> mov rbp,rsp
0x107832 -> ret
0x10d833 -> lea rbp,[0x3108e0]
0x107833 -> push rbp
0x107834 -> mov rbp,rsp
0x103834 -> mov edx,0x4
0x109835 -> sub rsp,0x10
0x10b836 -> mov rax,qword ptr [0x00311268]
0x105836 -> test eax,eax
0x107837 -> sub rsp,0x50
0x105838 -> jnz 0x00105849
0x109839 -> mov qword ptr [rbp + -0x8],rdi
0x103839 -> mov rsi,rcx
0x10d83a -> push rbx
0x10583a -> mov dword ptr [rbp + -0x57c],0x1
0x10d83b -> mov r13d,edi
0x10783b -> mov qword ptr [rbp + -0x48],rdi
0x10383c -> mov rdi,rax
0x10b83d -> lea rcx,[rbp + -0x80]
0x10983d -> mov qword ptr [rbp + -0x10],rsi
0x10d83e -> mov r14,rsi
0x10783f -> mov rax,qword ptr fs:[0x28]
0x10383f -> call 0x001036fe
0x10d841 -> sub rbp,r12
0x10b841 -> mov edx,0x1
0x109841 -> mov rax,qword ptr [rbp + -0x8]
0x10d844 -> sub rsp,0x8
0x105844 -> jmp 0x001059f9
0x103844 -> mov eax,dword ptr [rbp + -0x414]
0x109845 -> mov rax,qword ptr [rax + 0xe0]
0x10b846 -> mov rsi,rcx
0x10d848 -> sar rbp,0x3
0x107848 -> mov qword ptr [rbp + -0x8],rax
0x10b849 -> mov rdi,rax
0x105849 -> mov rax,qword ptr [rbp + -0x660]
0x10384a -> mov edi,eax
0x10d84c -> call 0x00102c08
0x10b84c -> call g_array_append_vals
0x10984c -> mov eax,dword ptr [rax + 0x20]
0x10784c -> xor eax,eax
0x10384c -> call ntohl
0x10784e -> mov rax,qword ptr [rbp + -0x48]
0x10984f -> and eax,0x8000
0x105850 -> mov edx,0x6
0x10d851 -> test rbp,rbp
0x10b851 -> jmp 0x0010b854
0x103851 -> mov dword ptr [rbp + -0x414],eax
0x107852 -> mov qword ptr [rbp + -0x30],rax
0x10b853 -> nop
0x10d854 -> jz 0x0010d876
0x10b854 -> mov rax,qword ptr [rbp + -0x70]
0x109854 -> test eax,eax
0x105855 -> lea rsi,[0x10e318]
0x10d856 -> xor ebx,ebx
0x109856 -> jz 0x0010986f
0x107856 -> mov dword ptr [rbp + -0x38],0x2
0x103857 -> mov eax,dword ptr [rbp + -0x414]
0x10d858 -> nop dword ptr [rax + rax*0x1]
0x10b858 -> mov rax,qword ptr [rax + 0x28]
0x109858 -> mov rdx,qword ptr [rbp + -0x10]
0x10b85c -> mov qword ptr [rbp + -0x70],rax
0x10985c -> mov rax,qword ptr [rbp + -0x8]
0x10585c -> mov rdi,rax
0x10785d -> mov dword ptr [rbp + -0x20],0xffffffff
0x10385d -> mov esi,eax
0x10585f -> call strncmp
0x10385f -> lea rdx,[rbp + -0x410]
0x10d860 -> mov rdx,r15
0x10b860 -> mov rax,qword ptr [rbp + -0x70]
0x109860 -> mov rsi,rdx
0x10d863 -> mov rsi,r14
0x109863 -> mov rdi,rax
0x10b864 -> test rax,rax
0x107864 -> mov qword ptr [rbp + -0x18],0x0
0x105864 -> test eax,eax
0x10d866 -> mov edi,r13d
0x109866 -> call 0x001095b4
0x105866 -> jnz 0x00105877
0x103866 -> mov rax,qword ptr [rbp + -0x428]
0x10b867 -> jnz 0x0010b6a5
0x105868 -> mov dword ptr [rbp + -0x57c],0x2
0x10d869 -> call qword ptr [r12 + rbx*0x8]
0x10986b -> test eax,eax
0x10786c -> jmp 0x001078c9
0x10d86d -> add rbx,0x1
0x10b86d -> cmp qword ptr [rbp + -0x68],0x0
0x10986d -> jz 0x00109884
0x10386d -> mov ecx,0x400
0x10786e -> lea rdi,[0x311200]
0x10986f -> mov rdx,qword ptr [rbp + -0x10]
0x10d871 -> cmp rbp,rbx
0x10b872 -> jz 0x0010b88b
0x105872 -> jmp 0x001059f9
0x103872 -> mov rdi,rax
0x109873 -> mov rax,qword ptr [rbp + -0x8]
0x10d874 -> jnz 0x0010d860
0x10b874 -> mov rax,qword ptr [rbp + -0x68]
0x107875 -> call sem_wait
0x103875 -> call 0x001037b1
0x10d876 -> add rsp,0x8
0x109877 -> mov rsi,rdx
0x105877 -> mov rax,qword ptr [rbp + -0x660]
0x10b878 -> mov rdi,rax
0x10d87a -> pop rbx
0x10987a -> mov rdi,rax
0x10787a -> mov rax,qword ptr [rbp + -0x30]
0x10387a -> nop
0x10d87b -> pop rbp
0x10b87b -> call freeaddrinfo
0x10387b -> mov rax,qword ptr [rbp + -0x8]
0x10d87c -> pop r12
0x10987d -> call 0x00109716
0x10d87e -> pop r13
0x10787e -> mov rax,qword ptr [rax + 0xe0]
0x10587e -> mov edx,0x8
0x10387f -> xor rax,qword ptr fs:[0x28]
0x10d880 -> pop r14
0x10b880 -> mov qword ptr [rbp + -0x68],0x0
0x10d882 -> pop r15
0x109882 -> jmp 0x00109885
0x105883 -> lea rsi,[0x10e31f]
0x10d884 -> ret
0x109884 -> nop
0x109885 -> leave
0x107885 -> mov rax,qword ptr [rax]
0x109886 -> ret
0x109887 -> push rbp
0x10b888 -> jmp 0x0010b88b
0x109888 -> mov rbp,rsp
0x107888 -> mov rcx,rax
0x103888 -> jz 0x0010388f
0x10b88a -> nop
0x10588a -> mov rdi,rax
0x10388a -> call __stack_chk_fail
0x10b88b -> add dword ptr [rbp + -0x78],0x1
0x10988b -> sub rsp,0x50
0x10788b -> lea rdx,[0x10e69a]
0x10588d -> call strncmp
0x10b88f -> mov eax,dword ptr [rbp + -0x78]
0x10988f -> mov qword ptr [rbp + -0x48],rdi
0x10388f -> leave
0x10d890 -> ret
0x103890 -> ret
0x103891 -> push rbp
0x10b892 -> cdqe
0x107892 -> mov esi,0x20
0x105892 -> test eax,eax
0x103892 -> mov rbp,rsp
0x109893 -> mov rax,qword ptr fs:[0x28]
0x10b894 -> lea rdx,[rax*0x8]
0x105894 -> jnz 0x0010596a
0x103895 -> sub rsp,0x20
0x107897 -> mov edi,0x0
0x103899 -> mov qword ptr [rbp + -0x8],rdi
0x10589a -> mov dword ptr [rbp + -0x57c],0x3
0x10b89c -> mov rax,qword ptr [rbp + -0x58]
0x10989c -> mov qword ptr [rbp + -0x8],rax
0x10789c -> mov eax,0x0
0x10389d -> mov qword ptr [rbp + -0x10],rsi
0x10d8a0 -> mov rdx,rsi
0x10b8a0 -> add rax,rdx
0x1098a0 -> xor eax,eax
0x1078a1 -> call g_log
0x1038a1 -> mov qword ptr [rbp + -0x18],rdx
0x1098a2 -> mov rax,qword ptr [rbp + -0x48]
0x10d8a3 -> mov rsi,rdi
0x10b8a3 -> mov rax,qword ptr [rax]
0x1058a4 -> mov rax,qword ptr [rbp + -0x660]
0x1038a5 -> mov rax,qword ptr [rbp + -0x8]
0x10d8a6 -> mov edi,0x1
0x10b8a6 -> test rax,rax
0x1098a6 -> mov rax,qword ptr [rax]
0x1078a6 -> mov edx,dword ptr [rbp + -0x38]
0x10b8a9 -> jnz 0x0010b581
0x1098a9 -> mov qword ptr [rbp + -0x30],rax
0x1078a9 -> mov rax,qword ptr [rbp + -0x30]
0x1038a9 -> mov rax,qword ptr [rax + 0x140]
0x10d8ab -> call __xstat64
0x1058ab -> mov rdi,rax
0x1098ad -> mov rax,qword ptr [rbp + -0x48]
0x1078ad -> mov rax,qword ptr [rax + 0xe0]
0x1058ae -> call strlen
0x10b8af -> mov dword ptr [rbp + -0x7c],0x0
0x10d8b0 -> mov rdx,rsi
0x1038b0 -> test rax,rax
0x1098b1 -> mov rax,qword ptr [rax + 0x8]
0x10d8b3 -> mov esi,edi
0x1058b3 -> cmp rax,0x9
0x1038b3 -> jnz 0x001038d9
0x1078b4 -> mov rax,qword ptr [rax]
0x10d8b5 -> mov edi,0x1
0x1098b5 -> mov qword ptr [rbp + -0x28],rax
0x1038b5 -> lea r8,[0x10d91f]
0x10b8b6 -> cmp dword ptr [rbp + -0x7c],-0x1
0x1078b7 -> mov esi,edx
0x1058b7 -> ja 0x00105942
0x1098b9 -> mov rax,qword ptr [rbp + -0x28]
0x1078b9 -> mov rdi,rax
0x10d8ba -> call __fxstat64
0x10b8ba -> jnz 0x0010b8cd
0x10b8bc -> mov eax,dword ptr [rbp + -0x80]
0x1078bc -> mov eax,0x0
0x1038bc -> lea rcx,[0x10f478]
0x1098bd -> mov eax,dword ptr [rax + 0x4]
0x1058bd -> mov eax,dword ptr [rbp + -0x67c]
0x10b8bf -> test eax,eax
0x10d8c0 -> sub rsp,0x8
0x1098c0 -> and eax,0x10000
0x10b8c1 -> js 0x0010b8cd
0x1078c1 -> call open64
0x10b8c3 -> mov eax,dword ptr [rbp + -0x80]
0x1058c3 -> cdqe
0x1038c3 -> mov edx,0x19f
0x10d8c4 -> add rsp,0x8
0x1098c5 -> test eax,eax
0x1058c5 -> lea rdx,[rax*0x8]
0x10b8c6 -> mov edi,eax
0x1078c6 -> mov dword ptr [rbp + -0x20],eax
0x1098c7 -> setnz al
0x10d8c8 -> ret
0x10b8c8 -> call close
0x1038c8 -> lea rsi,[0x10d8f4]
0x1078c9 -> mov eax,dword ptr [rbp + -0x20]
0x1098ca -> movzx eax,al
0x1078cc -> test eax,eax
0x10b8cd -> cmp qword ptr [rbp + -0x68],0x0
0x1098cd -> mov dword ptr [rbp + -0x34],eax
0x1058cd -> mov rax,qword ptr [rbp + -0x610]
0x1078ce -> jle 0x0010786e
0x1038cf -> mov edi,0x0
0x1098d0 -> mov rdx,qword ptr [rbp + -0x28]
0x1078d0 -> mov edx,dword ptr [rbp + -0x20]
0x10b8d2 -> jz 0x0010b8e0
0x1078d3 -> mov rax,qword ptr [rbp + -0x30]
0x10b8d4 -> mov rax,qword ptr [rbp + -0x68]
0x1098d4 -> lea rax,[rbp + -0x20]
0x1058d4 -> add rax,rdx
0x1038d4 -> call g_assertion_message_expr
0x1078d7 -> mov rax,qword ptr [rax + 0xe0]
0x1058d7 -> mov r12,qword ptr [rax]
0x10b8d8 -> mov rdi,rax
0x1098d8 -> mov rsi,rdx
0x1038d9 -> mov rax,qword ptr [rbp + -0x8]
0x1058da -> mov rbx,qword ptr [rbp + -0x660]
0x10b8db -> call freeaddrinfo
0x1098db -> mov rdi,rax
0x1038dd -> mov rax,qword ptr [rax + 0x140]
0x1098de -> call 0x0010956e
0x1078de -> mov rax,qword ptr [rax]
0x10b8e0 -> mov eax,dword ptr [rbp + -0x7c]
0x1078e1 -> mov r8d,edx
0x1058e1 -> lea rdi,[0x10dfd9]
0x10b8e3 -> mov rbx,qword ptr [rbp + -0x18]
0x1098e3 -> mov rax,qword ptr [rbp + -0x48]
0x1078e4 -> mov rcx,rax
0x1038e4 -> mov rdx,qword ptr [rbp + -0x18]
0x10b8e7 -> xor rbx,qword ptr fs:[0x28]
0x1098e7 -> mov rax,qword ptr [rax + 0x18]
0x1078e7 -> lea rdx,[0x10e6af]
0x1058e8 -> call g_quark_from_static_string
0x1038e8 -> mov rsi,qword ptr [rbp + -0x10]
0x1098eb -> test rax,rax
0x1038ec -> mov rcx,qword ptr [rbp + -0x8]
0x1058ed -> mov esi,eax
0x1098ee -> jnz 0x0010993f
0x1078ee -> mov esi,0x20
0x1058ef -> mov rax,qword ptr [rbp + -0x6a0]
0x10b8f0 -> jz 0x0010b8f7
0x1098f0 -> mov rax,qword ptr [rbp + -0x28]
0x1038f0 -> mov rdi,rcx
0x10b8f2 -> call __stack_chk_fail
0x1078f3 -> mov edi,0x0
0x1038f3 -> call rax
0x1098f4 -> mov eax,dword ptr [rax + 0x18]
0x1038f5 -> test eax,eax
0x1058f6 -> mov r9,r12
0x10b8f7 -> add rsp,0x98
0x1098f7 -> mov edi,eax
0x1038f7 -> jns 0x00103941
0x1078f8 -> mov eax,0x0
0x1098f9 -> mov rax,qword ptr [rbp + -0x28]
0x1058f9 -> mov r8,rbx
0x1038f9 -> mov rax,qword ptr [rbp + -0x8]
0x1058fc -> lea rcx,[0x10e328]
0x1098fd -> mov rax,qword ptr [rax + 0x10]
0x1078fd -> call g_log
0x1038fd -> mov rax,qword ptr [rax + 0x148]
0x10b8fe -> pop rbx
0x10b8ff -> pop rbp
0x10b900 -> ret
0x10b901 -> push rbp
0x109901 -> mov rsi,rax
0x10b902 -> mov rbp,rsp
0x107902 -> mov edx,dword ptr [rbp + -0x20]
0x105903 -> mov edx,0x3
0x109904 -> mov rax,qword ptr [rbp + -0x48]
0x103904 -> test rax,rax
0x10b905 -> sub rsp,0xe0
0x107905 -> mov rax,qword ptr [rbp + -0x30]
0x103907 -> jnz 0x0010392d
0x109908 -> mov eax,dword ptr [rax + 0x10]
0x105908 -> mov rdi,rax
0x107909 -> mov esi,0x1
0x103909 -> lea r8,[0x10d901]
0x10990b -> mov ecx,dword ptr [rbp + -0x34]
0x10590b -> mov eax,0x0
0x10b90c -> mov qword ptr [rbp + -0xb8],rdi
0x10990e -> mov rdx,qword ptr [rbp + -0x30]
0x10790e -> mov rdi,rax
0x105910 -> call g_set_error
0x103910 -> lea rcx,[0x10f478]
0x107911 -> call 0x00107671
0x109912 -> mov r9d,ecx
0x10b913 -> mov qword ptr [rbp + -0xc0],rsi
0x109915 -> mov r8d,0x1
0x105915 -> mov rax,qword ptr [rbp + -0x638]
0x107916 -> mov dword ptr [rbp + -0x34],eax
0x103917 -> mov edx,0x1a1
0x107919 -> cmp dword ptr [rbp + -0x34],0x0
0x10b91a -> mov qword ptr [rbp + -0xc8],rdx
0x10991b -> mov rcx,rdx
0x10591c -> mov esi,0x1
0x10391c -> lea rsi,[0x10d8f4]
0x10791d -> jg 0x00107902
0x10991e -> mov rdx,rdi
0x10791f -> mov rax,qword ptr [rbp + -0x30]
0x10b921 -> mov qword ptr [rbp + -0xd0],rcx
0x109921 -> mov edi,eax
0x105921 -> mov rdi,rax
0x109923 -> call 0x00106515
0x107923 -> add rax,0xa0
0x103923 -> mov edi,0x0
0x105924 -> call g_array_free
0x10b928 -> mov dword ptr [rbp + -0xd4],r8d
0x109928 -> test eax,eax
0x103928 -> call g_assertion_message_expr
0x107929 -> mov rdi,rax
0x105929 -> mov rax,qword ptr [rbp + -0x620]
0x10992a -> jz 0x00109988
0x10992c -> call __errno_location
0x10792c -> call pthread_rwlock_wrlock
0x10392d -> mov rax,qword ptr [rbp + -0x8]
0x10b92f -> mov rax,qword ptr fs:[0x28]
0x105930 -> mov rdi,rax
0x109931 -> mov eax,dword ptr [rax]
0x107931 -> mov edx,dword ptr [rbp + -0x20]
0x103931 -> mov rax,qword ptr [rax + 0x148]
0x109933 -> mov edi,eax
0x105933 -> call g_key_file_free
0x107934 -> mov rax,qword ptr [rbp + -0x30]
0x109935 -> call 0x001092f7
0x10b938 -> mov qword ptr [rbp + -0x8],rax
0x107938 -> mov esi,0x0
0x105938 -> mov eax,0x0
0x103938 -> mov rdx,qword ptr [rbp + -0x8]
0x10993a -> mov dword ptr [rbp + -0x1c],eax
0x10b93c -> xor eax,eax
0x10393c -> mov rdi,rdx
0x10993d -> jmp 0x00109988
0x10793d -> mov rdi,rax
0x10593d -> jmp 0x00105dfc
0x10b93e -> cmp qword ptr [rbp + -0xd0],0x0
0x10993f -> mov rax,qword ptr [rbp + -0x28]
0x10393f -> call rax
0x107940 -> call 0x00107671
0x103941 -> nop
0x105942 -> mov rax,qword ptr [rbp + -0x660]
0x103942 -> leave
0x109943 -> mov eax,dword ptr [rax + 0x18]
0x103943 -> ret
0x103944 -> push rbp
0x107945 -> mov dword ptr [rbp + -0x34],eax
0x103945 -> mov rbp,rsp
0x10b946 -> jz 0x0010b9b3
0x109946 -> mov esi,eax
0x10b948 -> mov qword ptr [rbp + -0xa8],0x0
0x109948 -> mov rax,qword ptr [rbp + -0x48]
0x107948 -> cmp dword ptr [rbp + -0x34],0x0
0x103948 -> sub rsp,0x10
0x105949 -> add rax,0x8
0x10994c -> mov rax,qword ptr [rax + 0x18]
0x10794c -> jg 0x00107931
0x10394c -> mov qword ptr [rbp + -0x8],rdi
0x10594d -> mov edx,0x0
0x10794e -> mov edx,0x10
0x109950 -> mov rdx,qword ptr [rbp + -0x28]
0x103950 -> lea rdi,[0x10d93c]
0x105952 -> mov esi,0x0
0x10b953 -> lea rdx,[rbp + -0xa8]
0x107953 -> mov esi,0x1
0x109954 -> mov rdx,qword ptr [rdx + 0x10]
0x105957 -> mov rdi,rax
0x103957 -> call 0x0010d638
0x109958 -> mov rdi,rdx
0x107958 -> mov edi,0x1
0x10b95a -> mov rax,qword ptr [rbp + -0xd0]
0x10595a -> call strtol
0x10995b -> mov ecx,dword ptr [rbp + -0x34]
0x10395c -> push rbp
0x10795d -> call g_array_new
0x10395d -> mov rbp,rsp
0x10995e -> mov rdx,qword ptr [rbp + -0x30]
0x10595f -> mov byte ptr [rbp + -0x578],al
0x103960 -> sub rsp,0x20
0x10b961 -> mov rsi,rdx
0x109962 -> mov r8d,ecx
0x107962 -> mov qword ptr [rbp + -0x28],rax
0x10b964 -> mov rdi,rax
0x103964 -> mov qword ptr [rbp + -0x18],rdi
0x109965 -> mov rcx,rdx
0x105965 -> jmp 0x001059f9
0x107966 -> lea rcx,[rbp + -0x20]
0x10b967 -> call 0x0010b2b3
0x109968 -> mov rdx,rsi
0x103968 -> mov qword ptr [rbp + -0x20],rsi
0x10796a -> mov rax,qword ptr [rbp + -0x28]
0x10596a -> mov eax,dword ptr [rbp + -0x67c]
0x10996b -> mov rsi,rax
0x10b96c -> cmp eax,-0x1
0x10396c -> mov dword ptr [rbp + -0xc],0x0
0x10996e -> call 0x001067f1
0x10796e -> mov edx,0x1
0x10b96f -> jnz 0x0010b9b3
0x105970 -> cdqe
0x10b971 -> mov rax,qword ptr [rbp + -0xa8]
0x105972 -> lea rdx,[rax*0x8]
0x109973 -> test eax,eax
0x107973 -> mov rsi,rcx
0x103973 -> cmp qword ptr [rbp + -0x18],0x0
0x109975 -> jz 0x00109988
0x107976 -> mov rdi,rax
0x109977 -> call __errno_location
0x10b978 -> mov rax,qword ptr [rax + 0x8]
0x103978 -> jz 0x001039bc
0x107979 -> call g_array_append_vals
0x10597a -> mov rax,qword ptr [rbp + -0x610]
0x10397a -> mov rax,qword ptr [rbp + -0x18]
0x10b97c -> mov rcx,rax
0x10997c -> mov eax,dword ptr [rax]
0x10997e -> mov edi,eax
0x10797e -> mov rax,qword ptr [rbp + -0x30]
0x10397e -> movzx eax,byte ptr [rax]
0x10b97f -> lea rdx,[0x10f2d2]
0x109980 -> call 0x001092f7
0x105981 -> add rax,rdx
0x103981 -> test al,al
0x107982 -> mov rdx,qword ptr [rbp + -0x28]
0x103983 -> jz 0x001039bc
0x105984 -> mov r12,qword ptr [rax]
0x109985 -> mov dword ptr [rbp + -0x1c],eax
0x103985 -> mov rdx,qword ptr [rbp + -0x20]
0x10b986 -> mov esi,0x20
0x107986 -> mov qword ptr [rax + 0x98],rdx
0x105987 -> mov rbx,qword ptr [rbp + -0x660]
0x109988 -> mov rax,qword ptr [rbp + -0x30]
0x103989 -> mov rax,qword ptr [rbp + -0x18]
0x10b98b -> mov edi,0x0
0x10998c -> add rax,0x108
0x10798d -> mov rax,qword ptr [rbp + -0x30]
0x10398d -> mov rsi,rdx
0x10598e -> lea rdi,[0x10dfd9]
0x10b990 -> mov eax,0x0
0x103990 -> mov rdi,rax
0x107991 -> add rax,0xa0
0x109992 -> mov rdi,rax
0x103993 -> mov eax,0x0
0x10b995 -> call g_log
0x109995 -> call pthread_mutex_lock
0x105995 -> call g_quark_from_static_string
0x107997 -> mov rdi,rax
0x103998 -> call g_strdup_printf
0x10b99a -> lea rax,[rbp + -0xa8]
0x10999a -> lea rcx,[rbp + -0x20]
0x10799a -> call pthread_rwlock_unlock
0x10599a -> mov esi,eax
0x10599c -> mov rax,qword ptr [rbp + -0x6a0]
0x10399d -> mov qword ptr [rbp + -0x8],rax
0x10999e -> mov rax,qword ptr [rbp + -0x30]
0x10799f -> mov rax,qword ptr [rbp + -0x30]
0x10b9a1 -> mov rdi,rax
0x1039a1 -> mov rax,qword ptr [rbp + -0x8]
0x1099a2 -> mov edx,0x10
0x1079a3 -> mov rax,qword ptr [rax + 0xe0]
0x1059a3 -> mov r9,r12
0x10b9a4 -> call g_clear_error
0x1039a5 -> mov rdi,rax
0x1059a6 -> mov r8,rbx
0x1099a7 -> mov rsi,rcx
0x1039a8 -> call system
0x10b9a9 -> mov edi,0x1
0x1059a9 -> lea rcx,[0x10e370]
0x1099aa -> mov rdi,rax
0x1079aa -> mov rax,qword ptr [rax]
0x1099ad -> call 0x00103891
0x1079ad -> mov rcx,rax
0x1039ad -> mov dword ptr [rbp + -0xc],eax
0x10b9ae -> call exit
0x1079b0 -> lea rdx,[0x10e6c8]
0x1059b0 -> mov edx,0x3
0x1039b0 -> mov rax,qword ptr [rbp + -0x8]
0x1099b2 -> mov rax,qword ptr [rbp + -0x30]
0x10b9b3 -> mov eax,dword ptr [rbp + -0xd4]
0x1039b4 -> mov rdi,rax
0x1059b5 -> mov rdi,rax
0x1099b6 -> add rax,0x108
0x1079b7 -> mov esi,0x20
0x1039b7 -> call g_free
0x1059b8 -> mov eax,0x0
0x10b9b9 -> and eax,0x8
0x10b9bc -> test eax,eax
0x1099bc -> mov rdi,rax
0x1079bc -> mov edi,0x0
0x1039bc -> mov eax,dword ptr [rbp + -0xc]
0x1059bd -> call g_set_error
0x10b9be -> jnz 0x0010b9ca
0x1099bf -> call pthread_mutex_unlock
0x1039bf -> leave
0x10b9c0 -> cmp qword ptr [rbp + -0xd0],0x0
0x1039c0 -> ret
0x1079c1 -> mov eax,0x0
0x1039c1 -> push rbp
0x1059c2 -> mov rax,qword ptr [rbp + -0x638]
0x1039c2 -> mov rbp,rsp
0x1099c4 -> nop
0x1099c5 -> mov rax,qword ptr [rbp + -0x8]
0x1039c5 -> sub rsp,0x10
0x1079c6 -> call g_log
0x10b9c8 -> jnz 0x0010ba3c
0x1099c9 -> xor rax,qword ptr fs:[0x28]
0x1059c9 -> mov esi,0x1
0x1039c9 -> mov qword ptr [rbp + -0x8],rdi
0x10b9ca -> mov qword ptr [rbp + -0xa8],0x0
0x1079cb -> mov eax,0x0
0x1039cd -> mov rax,qword ptr [0x00311388]
0x1059ce -> mov rdi,rax
0x1079d0 -> mov rcx,qword ptr [rbp + -0x8]
0x1059d1 -> call g_array_free
0x1099d2 -> jz 0x001099d9
0x1099d4 -> call __stack_chk_fail
0x1079d4 -> xor rcx,qword ptr fs:[0x28]
0x1039d4 -> mov edx,0x1
0x10b9d5 -> lea rdx,[rbp + -0xa8]
0x1059d6 -> mov rax,qword ptr [rbp + -0x620]
0x1099d9 -> leave
0x1039d9 -> mov esi,0x0
0x1099da -> ret
0x1099db -> push rbp
0x10b9dc -> mov rcx,qword ptr [rbp + -0xc8]
0x1099dc -> mov rbp,rsp
0x1079dd -> jz 0x001079e4
0x1059dd -> mov rdi,rax
0x1039de -> mov rdi,rax
0x1099df -> sub rsp,0x30
0x1079df -> call __stack_chk_fail
0x1059e0 -> call g_key_file_free
0x1039e1 -> call g_thread_pool_free
0x10b9e3 -> mov rax,qword ptr [rbp + -0xc0]
0x1099e3 -> mov qword ptr [rbp + -0x28],rdi
0x1079e4 -> leave
0x1079e5 -> ret
0x1059e5 -> mov eax,0x0
0x1079e6 -> push rbp
0x1039e6 -> mov rax,qword ptr [rbp + -0x8]
0x1099e7 -> mov qword ptr [rbp + -0x30],rsi
0x1079e7 -> mov rbp,rsp
0x10b9ea -> mov rsi,rcx
0x1079ea -> sub rsp,0x70
0x1059ea -> jmp 0x00105dfc
0x1039ea -> mov rdx,qword ptr [rax + 0x90]
0x1099eb -> mov rax,qword ptr fs:[0x28]
0x10b9ed -> mov rdi,rax
0x1079ee -> mov qword ptr [rbp + -0x68],rdi
0x1059ef -> mov dword ptr [rbp + -0x57c],0x1
0x10b9f0 -> call 0x0010b4dd
0x1039f1 -> mov rax,qword ptr [rbp + -0x8]
0x1079f2 -> mov rax,qword ptr fs:[0x28]
0x1099f4 -> mov qword ptr [rbp + -0x8],rax
0x10b9f5 -> cmp eax,-0x1
0x1039f5 -> mov rax,qword ptr [rax + 0xe0]
0x10b9f8 -> jnz 0x0010ba3c
0x1099f8 -> xor eax,eax
0x1059f9 -> mov eax,dword ptr [rbp + -0x5a8]
0x10b9fa -> mov rax,qword ptr [rbp + -0xa8]
0x1099fa -> mov rdx,qword ptr [rbp + -0x30]
0x1079fb -> mov qword ptr [rbp + -0x8],rax
0x1039fc -> mov rax,qword ptr [rax + 0x38]
0x1099fe -> lea rax,[rbp + -0x20]
0x1079ff -> xor eax,eax
0x1059ff -> and eax,0x1
0x103a00 -> mov rsi,rdx
0x10ba01 -> mov rax,qword ptr [rax + 0x8]
0x107a01 -> mov dword ptr [rbp + -0x58],0x0
0x109a02 -> mov rsi,rdx
0x105a02 -> test eax,eax
0x103a03 -> mov rdi,rax
0x105a04 -> jz 0x00105a46
0x10ba05 -> mov rcx,rax
0x109a05 -> mov rdi,rax
0x105a06 -> lea rdx,[0x10e3a8]
0x103a06 -> call 0x0010395c
0x10ba08 -> lea rdx,[0x10f2d2]
0x109a08 -> call 0x0010956e
0x107a08 -> mov qword ptr [rbp + -0x40],0x0
0x103a0b -> mov rax,qword ptr [rbp + -0x8]
0x109a0d -> mov rax,qword ptr [rbp + -0x28]
0x105a0d -> mov esi,0x20
0x10ba0f -> mov esi,0x20
0x103a0f -> mov eax,dword ptr [rax + 0x100]
0x107a10 -> mov qword ptr [rbp + -0x38],0x0
0x109a11 -> mov rdi,rax
0x105a12 -> mov edi,0x0
0x10ba14 -> mov edi,0x0
0x109a14 -> call 0x00106d20
0x103a15 -> cmp eax,-0x1
0x105a17 -> mov eax,0x0
0x107a18 -> mov rax,qword ptr [rbp + -0x68]
0x103a18 -> jz 0x00103a39
0x10ba19 -> mov eax,0x0
0x109a19 -> test eax,eax
0x103a1a -> mov rax,qword ptr [rbp + -0x8]
0x109a1b -> jz 0x00109a2e
0x107a1c -> mov rax,qword ptr [rax + 0xe0]
0x105a1c -> call g_log
0x109a1d -> call __errno_location
0x10ba1e -> call g_log
0x103a1e -> mov eax,dword ptr [rax + 0x100]
0x105a21 -> lea rdx,[0x10e40b]
0x109a22 -> mov eax,dword ptr [rax]
0x10ba23 -> lea rax,[rbp + -0xa8]
0x107a23 -> mov eax,dword ptr [rax + 0x20]
0x109a24 -> mov edi,eax
0x103a24 -> mov edi,eax
0x109a26 -> call 0x001092f7
0x107a26 -> and eax,0x2
0x103a26 -> call close
0x105a28 -> mov esi,0x20
0x107a29 -> mov dword ptr [rbp + -0x50],eax
0x10ba2a -> mov rdi,rax
0x109a2b -> mov dword ptr [rbp + -0x1c],eax
0x103a2b -> mov rax,qword ptr [rbp + -0x8]
0x107a2c -> mov rax,qword ptr [rbp + -0x68]
0x10ba2d -> call g_clear_error
0x105a2d -> mov edi,0x0
0x109a2e -> mov rax,qword ptr [rbp + -0x28]
0x103a2f -> mov dword ptr [rax + 0x100],0xffffffff
0x107a30 -> mov rax,qword ptr [rax + 0xe0]
0x10ba32 -> mov edi,0x1
0x109a32 -> add rax,0x108
0x105a32 -> mov eax,0x0
0x10ba37 -> call exit
0x107a37 -> mov eax,dword ptr [rax + 0x20]
0x105a37 -> call g_log
0x109a38 -> mov rdi,rax
0x103a39 -> mov rax,qword ptr [rbp + -0x8]
0x107a3a -> and eax,0x2000
0x109a3b -> call pthread_mutex_lock
0x10ba3c -> lea rcx,[0x10a162]
0x105a3c -> mov eax,0x0
0x103a3d -> mov rax,qword ptr [rax + 0xe0]
0x107a3f -> mov dword ptr [rbp + -0x4c],eax
0x109a40 -> lea rcx,[rbp + -0x20]
0x105a41 -> jmp 0x00105dfc
0x107a42 -> mov rax,qword ptr [rbp + -0x68]
0x10ba43 -> mov edx,0x0
0x109a44 -> mov rax,qword ptr [rbp + -0x28]
0x103a44 -> mov eax,dword ptr [rax + 0x20]
0x107a46 -> mov rax,qword ptr [rax + 0xe0]
0x105a46 -> mov eax,dword ptr [rbp + -0x580]
0x103a47 -> and eax,0x4
0x10ba48 -> mov rax,qword ptr [0x00310fe0]
0x109a48 -> mov edx,0x10
0x103a4a -> test eax,eax
0x105a4c -> and eax,0x4
0x103a4c -> jz 0x00103a61
0x109a4d -> mov rsi,rcx
0x107a4d -> mov eax,dword ptr [rax + 0x20]
0x103a4e -> mov rax,qword ptr [rbp + -0x8]
0x10ba4f -> mov rsi,rax
0x105a4f -> test eax,eax
0x109a50 -> mov rdi,rax
0x107a50 -> and eax,0x400
0x105a51 -> jz 0x00105ae1
0x10ba52 -> mov rax,qword ptr [0x00310fd8]
0x103a52 -> mov rax,qword ptr [rax + 0xe8]
0x109a53 -> call 0x00103891
0x107a55 -> test eax,eax
0x107a57 -> jz 0x00107a66
0x105a57 -> mov eax,dword ptr [rbp + -0x580]
0x109a58 -> mov rax,qword ptr [rbp + -0x28]
0x10ba59 -> mov rdi,rax
0x107a59 -> cmp dword ptr [rbp + -0x50],0x0
0x103a59 -> mov rdi,rax
0x10ba5c -> call g_hash_table_new_full
0x109a5c -> add rax,0x108
0x103a5c -> call unlink
0x107a5d -> jnz 0x00107a66
0x105a5d -> and eax,0x8000
0x107a5f -> mov eax,0x1
0x10ba61 -> mov qword ptr [0x00311380],rax
0x103a61 -> mov rax,qword ptr [rbp + -0x8]
0x109a62 -> mov rdi,rax
0x105a62 -> test eax,eax
0x107a64 -> jmp 0x00107a6b
0x105a64 -> jz 0x00105ae1
0x109a65 -> call pthread_mutex_unlock
0x103a65 -> mov rax,qword ptr [rax + 0xe0]
0x107a66 -> mov eax,0x0
0x105a66 -> mov eax,dword ptr [rbp + -0x67c]
0x10ba68 -> lea rax,[0x105e1b]
0x109a6a -> nop
0x109a6b -> mov rax,qword ptr [rbp + -0x8]
0x107a6b -> mov dword ptr [rbp + -0x48],eax
0x105a6c -> cdqe
0x103a6c -> mov rdi,rax
0x107a6e -> mov rax,qword ptr [rbp + -0x68]
0x105a6e -> lea rdx,[rax*0x8]
0x10ba6f -> mov qword ptr [rbp + -0xa0],rax
0x109a6f -> xor rax,qword ptr fs:[0x28]
0x103a6f -> call 0x0010cd58
0x107a72 -> mov rax,qword ptr [rax + 0xe0]
0x103a74 -> nop
0x103a75 -> leave
0x10ba76 -> lea rax,[rbp + -0xa0]
0x105a76 -> mov rax,qword ptr [rbp + -0x610]
0x103a76 -> ret
0x103a77 -> push rbp
0x109a78 -> jz 0x00109a7f
0x103a78 -> mov rbp,rsp
0x107a79 -> mov rax,qword ptr [rax + 0x8]
0x109a7a -> call __stack_chk_fail
0x103a7b -> sub rsp,0x20
0x10ba7d -> add rax,0x8
0x107a7d -> test rax,rax
0x105a7d -> add rax,rdx
0x109a7f -> leave
0x103a7f -> mov qword ptr [rbp + -0x18],rdi
0x109a80 -> ret
0x107a80 -> jz 0x00107a8f
0x105a80 -> mov rbx,qword ptr [rax]
0x10ba81 -> mov rdi,rax
0x109a81 -> push rbp
0x109a82 -> mov rbp,rsp
0x107a82 -> cmp dword ptr [rbp + -0x50],0x0
0x105a83 -> lea rdi,[0x10dfd9]
0x103a83 -> call __errno_location
0x10ba84 -> call sigemptyset
0x109a85 -> sub rsp,0x30
0x107a86 -> jnz 0x00107a8f
0x107a88 -> mov eax,0x1
0x103a88 -> mov eax,dword ptr [rax]
0x10ba89 -> lea rax,[rbp + -0xa0]
0x109a89 -> mov qword ptr [rbp + -0x28],rdi
0x105a8a -> call g_quark_from_static_string
0x103a8a -> mov dword ptr [rbp + -0x4],eax
0x109a8d -> mov qword ptr [rbp + -0x30],rsi
0x107a8d -> jmp 0x00107a94
0x103a8d -> mov rax,qword ptr [rbp + -0x18]
0x107a8f -> mov eax,0x0
0x105a8f -> mov esi,eax
0x10ba90 -> add rax,0x8
0x109a91 -> mov rax,qword ptr fs:[0x28]
0x105a91 -> mov rax,qword ptr [rbp + -0x6a0]
0x103a91 -> mov rdi,rax
0x10ba94 -> mov esi,0xf
0x107a94 -> mov dword ptr [rbp + -0x54],eax
0x103a94 -> call 0x001039c1
0x107a97 -> cmp dword ptr [rbp + -0x4c],0x0
0x105a98 -> mov r8,rbx
0x10ba99 -> mov rdi,rax
0x103a99 -> call __errno_location
0x109a9a -> mov qword ptr [rbp + -0x8],rax
0x107a9b -> jnz 0x00107ab4
0x105a9b -> lea rcx,[0x10e418]
0x10ba9c -> call sigaddset
0x107a9d -> mov rax,qword ptr [rbp + -0x68]
0x109a9e -> xor eax,eax
0x103a9e -> mov rdx,rax
0x109aa0 -> mov rdx,qword ptr [rbp + -0x30]
0x10baa1 -> mov dword ptr [rbp + -0x18],0x10000000
0x107aa1 -> mov rax,qword ptr [rax + 0xe0]
0x103aa1 -> mov eax,dword ptr [rbp + -0x4]
0x105aa2 -> mov edx,0x9
0x109aa4 -> lea rax,[rbp + -0x20]
0x103aa4 -> mov dword ptr [rdx],eax
0x103aa6 -> lea rdi,[0x10d953]
0x105aa7 -> mov rdi,rax
0x10baa8 -> lea rax,[rbp + -0xa0]
0x109aa8 -> mov rsi,rdx
0x107aa8 -> mov eax,dword ptr [rax + 0x20]
0x105aaa -> mov eax,0x0
0x109aab -> mov rdi,rax
0x107aab -> and eax,0x10000
0x103aad -> call 0x0010d638
0x109aae -> call 0x0010956e
0x10baaf -> mov edx,0x0
0x105aaf -> call g_set_error
0x107ab0 -> test eax,eax
0x107ab2 -> jz 0x00107b25
0x103ab2 -> push rbp
0x109ab3 -> mov rdx,qword ptr [rbp + -0x28]
0x103ab3 -> mov rbp,rsp
0x10bab4 -> mov rsi,rax
0x107ab4 -> mov rax,qword ptr [rbp + -0x68]
0x105ab4 -> mov rax,qword ptr [rbp + -0x638]
0x103ab6 -> sub rsp,0x30
0x10bab7 -> mov edi,0x11
0x109ab7 -> mov rax,qword ptr [rbp + -0x30]
0x107ab8 -> mov qword ptr [rax + 0x98],0x0
0x103aba -> mov dword ptr [rbp + -0x14],edi
0x109abb -> mov rsi,rdx
0x105abb -> mov esi,0x1
0x10babc -> call sigaction
0x103abd -> mov qword ptr [rbp + -0x20],rsi
0x109abe -> mov rdi,rax
0x105ac0 -> mov rdi,rax
0x10bac1 -> cmp eax,-0x1
0x109ac1 -> call 0x0010ca9e
0x103ac1 -> mov dword ptr [rbp + -0x18],edx
0x107ac3 -> mov rax,qword ptr [rbp + -0x68]
0x105ac3 -> call g_array_free
0x10bac4 -> jnz 0x0010bad2
0x103ac4 -> mov qword ptr [rbp + -0x28],rcx
0x10bac6 -> lea rdi,[0x10f2ee]
0x109ac6 -> test eax,eax
0x107ac7 -> mov rax,qword ptr [rax + 0xe0]
0x109ac8 -> jz 0x00109adb
0x105ac8 -> mov rax,qword ptr [rbp + -0x620]
0x103ac8 -> mov qword ptr [rbp + -0x30],r8
0x109aca -> call __errno_location
0x103acc -> jmp 0x00103b0f
0x10bacd -> call 0x0010d638
0x107ace -> mov rdx,qword ptr [rax + 0x8]
0x103ace -> mov rdi,qword ptr [rbp + -0x30]
0x109acf -> mov eax,dword ptr [rax]
0x105acf -> mov rdi,rax
0x109ad1 -> mov edi,eax
0x10bad2 -> lea rax,[0x105e60]
0x107ad2 -> mov rax,qword ptr [rbp + -0x68]
0x105ad2 -> call g_key_file_free
0x103ad2 -> mov rcx,qword ptr [rbp + -0x28]
0x109ad3 -> call 0x001092f7
0x107ad6 -> mov qword ptr [rax],rdx
0x103ad6 -> mov edx,dword ptr [rbp + -0x18]
0x105ad7 -> mov eax,0x0
0x109ad8 -> mov dword ptr [rbp + -0x1c],eax
0x10bad9 -> mov qword ptr [rbp + -0xa0],rax
0x107ad9 -> mov rax,qword ptr [rbp + -0x68]
0x103ad9 -> mov rsi,qword ptr [rbp + -0x20]
0x109adb -> mov rax,qword ptr [rbp + -0x28]
0x105adc -> jmp 0x00105dfc
0x107add -> mov rax,qword ptr [rax + 0xe0]
0x103add -> mov eax,dword ptr [rbp + -0x14]
0x109adf -> add rax,0x108
0x10bae0 -> lea rax,[rbp + -0xa0]
0x103ae0 -> mov r9d,0x1
0x105ae1 -> mov eax,dword ptr [rbp + -0x580]
0x107ae4 -> mov eax,dword ptr [rax + 0x20]
0x109ae5 -> mov rdi,rax
0x103ae6 -> mov r8,rdi
0x10bae7 -> add rax,0x8
0x107ae7 -> and eax,0x10000
0x105ae7 -> and eax,0x4
0x109ae8 -> call pthread_mutex_lock
0x103ae9 -> mov edi,eax
0x105aea -> test eax,eax
0x10baeb -> mov rdi,rax
0x103aeb -> call splice
0x107aec -> test eax,eax
0x105aec -> jz 0x00105b7c
0x109aed -> lea rcx,[rbp + -0x20]
0x10baee -> call sigemptyset
0x107aee -> jz 0x00107e65
0x103af0 -> mov qword ptr [rbp + -0x8],rax
0x109af1 -> mov rax,qword ptr [rbp + -0x28]
0x105af2 -> mov eax,dword ptr [rbp + -0x580]
0x10baf3 -> lea rax,[rbp + -0xa0]
0x107af4 -> mov rdx,qword ptr [rbp + -0x68]
0x103af4 -> cmp qword ptr [rbp + -0x8],0x0
0x109af5 -> mov edx,0x10
0x107af8 -> lea rax,[rbp + -0x20]
0x105af8 -> and eax,0x10000
0x103af9 -> jg 0x00103b07
0x10bafa -> add rax,0x8
0x109afa -> mov rsi,rcx
0x103afb -> lea rdi,[0x10d96a]
0x107afc -> mov rcx,rdx
0x109afd -> mov rdi,rax
0x105afd -> test eax,eax
0x10bafe -> mov esi,0x11
0x107aff -> lea rdx,[0x107833]
0x105aff -> jz 0x00105b7c
0x109b00 -> call 0x00103891
0x105b01 -> mov eax,dword ptr [rbp + -0x67c]
0x103b02 -> call 0x0010d638
0x10bb03 -> mov rdi,rax
0x109b05 -> mov rax,qword ptr [rbp + -0x28]
0x10bb06 -> call sigaddset
0x107b06 -> mov esi,0x0
0x105b07 -> cdqe
0x103b07 -> mov rax,qword ptr [rbp + -0x8]
0x109b09 -> add rax,0x108
0x105b09 -> lea rdx,[rax*0x8]
0x10bb0b -> mov dword ptr [rbp + -0x18],0x10000000
0x107b0b -> mov rdi,rax
0x103b0b -> sub qword ptr [rbp + -0x30],rax
0x107b0e -> call pthread_create
0x109b0f -> mov rdi,rax
0x103b0f -> cmp qword ptr [rbp + -0x30],0x0
0x105b11 -> mov rax,qword ptr [rbp + -0x610]
0x10bb12 -> lea rax,[rbp + -0xa0]
0x109b12 -> call pthread_mutex_unlock
0x107b13 -> test eax,eax
0x103b14 -> jnz 0x00103ace
0x107b15 -> jz 0x00107e65
0x103b16 -> nop
0x109b17 -> nop
0x103b17 -> leave
0x109b18 -> mov rax,qword ptr [rbp + -0x8]
0x105b18 -> add rax,rdx
0x103b18 -> ret
0x10bb19 -> mov edx,0x0
0x103b19 -> push rbp
0x103b1a -> mov rbp,rsp
0x107b1b -> mov eax,0x0
0x105b1b -> mov rbx,qword ptr [rax]
0x109b1c -> xor rax,qword ptr fs:[0x28]
0x103b1d -> lea rdi,[0x10d980]
0x10bb1e -> mov rsi,rax
0x105b1e -> lea rdi,[0x10dfd9]
0x107b20 -> jmp 0x00107eeb
0x10bb21 -> mov edi,0xf
0x103b24 -> call puts
0x109b25 -> jz 0x00109b2c
0x107b25 -> mov edx,0x10
0x105b25 -> call g_quark_from_static_string
0x10bb26 -> call sigaction
0x109b27 -> call __stack_chk_fail
0x103b29 -> lea rdi,[0x10d9a0]
0x107b2a -> mov esi,0x1
0x105b2a -> mov esi,eax
0x10bb2b -> cmp eax,-0x1
0x109b2c -> leave
0x105b2c -> mov rax,qword ptr [rbp + -0x6a0]
0x109b2d -> ret
0x10bb2e -> jnz 0x0010bb3c
0x109b2e -> push rbp
0x109b2f -> mov rbp,rsp
0x107b2f -> mov edi,0x1
0x10bb30 -> lea rdi,[0x10f2ee]
0x103b30 -> mov eax,0x0
0x109b32 -> sub rsp,0x40
0x105b33 -> mov r8,rbx
0x107b34 -> call g_array_new
0x103b35 -> call printf
0x109b36 -> mov qword ptr [rbp + -0x38],rdi
0x105b36 -> lea rcx,[0x10e458]
0x10bb37 -> call 0x0010d638
0x107b39 -> mov rdx,rax
0x109b3a -> mov qword ptr [rbp + -0x40],rsi
0x103b3a -> lea rsi,[0x10dd90]
0x10bb3c -> lea rax,[0x105e74]
0x107b3c -> mov rax,qword ptr [rbp + -0x68]
0x105b3d -> mov edx,0x12
0x109b3e -> mov rax,qword ptr fs:[0x28]
0x107b40 -> mov qword ptr [rax + 0x98],rdx
0x103b41 -> lea rdi,[0x10ddb1]
0x105b42 -> mov rdi,rax
0x10bb43 -> mov qword ptr [rbp + -0xa0],rax
0x105b45 -> mov eax,0x0
0x109b47 -> mov qword ptr [rbp + -0x8],rax
0x107b47 -> mov dword ptr [rbp + -0x58],0x0
0x103b48 -> mov eax,0x0
0x10bb4a -> lea rax,[rbp + -0xa0]
0x105b4a -> call g_set_error
0x109b4b -> xor eax,eax
0x109b4d -> mov rax,qword ptr [rbp + -0x40]
0x103b4d -> call printf
0x107b4e -> cmp dword ptr [rbp + -0x58],0x0
0x105b4f -> mov rax,qword ptr [rbp + -0x638]
0x10bb51 -> add rax,0x8
0x109b51 -> mov eax,dword ptr [rax + 0x4]
0x107b52 -> jz 0x00107b5b
0x103b52 -> lea rsi,[0x10ddce]
0x109b54 -> and eax,0x10000
0x107b54 -> mov dword ptr [rbp + -0x54],0x0
0x10bb55 -> mov rdi,rax
0x105b56 -> mov esi,0x1
0x10bb58 -> call sigemptyset
0x109b59 -> test eax,eax
0x103b59 -> lea rdi,[0x10dde8]
0x109b5b -> setnz al
0x107b5b -> mov rax,qword ptr [rbp + -0x68]
0x105b5b -> mov rdi,rax
0x10bb5d -> mov dword ptr [rbp + -0x18],0x10000000
0x109b5e -> movzx eax,al
0x105b5e -> call g_array_free
0x107b5f -> mov rax,qword ptr [rax + 0xe0]
0x103b60 -> mov eax,0x0
0x109b61 -> mov dword ptr [rbp + -0x24],eax
0x105b63 -> mov rax,qword ptr [rbp + -0x620]
0x10bb64 -> lea rax,[rbp + -0xa0]
0x109b64 -> mov rdx,qword ptr [rbp + -0x40]
0x103b65 -> call printf
0x107b66 -> mov eax,dword ptr [rax + 0x20]
0x109b68 -> lea rax,[rbp + -0x20]
0x107b69 -> and eax,0x1
0x105b6a -> mov rdi,rax
0x103b6a -> nop
0x10bb6b -> mov edx,0x0
0x103b6b -> pop rbp
0x109b6c -> mov rsi,rdx
0x107b6c -> test eax,eax
0x103b6c -> ret
0x105b6d -> call g_key_file_free
0x103b6d -> push rbp
0x107b6e -> jnz 0x00107b84
0x103b6e -> mov rbp,rsp
0x109b6f -> mov rdi,rax
0x10bb70 -> mov rsi,rax
0x107b70 -> cmp dword ptr [rbp + -0x54],0x0
0x103b71 -> sub rsp,0x10
0x109b72 -> call 0x0010956e
0x105b72 -> mov eax,0x0
0x10bb73 -> mov edi,0x1
0x107b74 -> jz 0x00107b7d
0x103b75 -> mov qword ptr [rbp + -0x8],rdi
0x107b76 -> mov eax,0x42
0x109b77 -> mov edx,dword ptr [rbp + -0x24]
0x105b77 -> jmp 0x00105dfc
0x10bb78 -> call sigaction
0x103b79 -> mov qword ptr [rbp + -0x10],rsi
0x109b7a -> mov rcx,qword ptr [rbp + -0x38]
0x107b7b -> jmp 0x00107b89
0x105b7c -> mov qword ptr [rbp + -0x660],0x0
0x10bb7d -> cmp eax,-0x1
0x107b7d -> mov eax,0x2
0x103b7d -> mov rax,qword ptr [rbp + -0x10]
0x109b7e -> mov rax,qword ptr [rbp + -0x40]
0x10bb80 -> jnz 0x0010bb8e
0x103b81 -> mov rsi,rax
0x10bb82 -> lea rdi,[0x10f2ee]
0x109b82 -> mov rsi,rcx
0x107b82 -> jmp 0x00107b89
0x107b84 -> mov eax,0x0
0x103b84 -> lea rdi,[0x10de20]
0x109b85 -> mov rdi,rax
0x105b87 -> cmp dword ptr [rbp + -0x67c],0x0
0x109b88 -> call 0x00106c61
0x10bb89 -> call 0x0010d638
0x107b89 -> mov dword ptr [rbp + -0x44],eax
0x103b8b -> mov eax,0x0
0x107b8c -> cmp dword ptr [rbp + -0x48],0x0
0x109b8d -> test eax,eax
0x10bb8e -> lea rax,[0x105e88]
0x105b8e -> jg 0x00105b9e
0x109b8f -> jz 0x00109ba2
0x107b90 -> jz 0x00107bcc
0x105b90 -> movzx eax,byte ptr [rbp + -0x694]
0x103b90 -> call printf
0x109b91 -> call __errno_location
0x107b92 -> mov rax,qword ptr [rbp + -0x68]
0x10bb95 -> mov qword ptr [rbp + -0xa0],rax
0x103b95 -> mov rax,qword ptr [rbp + -0x8]
0x109b96 -> mov eax,dword ptr [rax]
0x107b96 -> mov rax,qword ptr [rax + 0x90]
0x105b97 -> xor eax,0x1
0x109b98 -> mov edi,eax
0x103b99 -> mov rax,qword ptr [rax]
0x109b9a -> call 0x001092f7
0x105b9a -> test al,al
0x10bb9c -> lea rax,[rbp + -0xa0]
0x105b9c -> jz 0x00105c03
0x103b9c -> mov rsi,rax
0x107b9d -> mov edx,dword ptr [rbp + -0x58]
0x105b9e -> mov eax,dword ptr [rbp + -0x67c]
0x109b9f -> mov dword ptr [rbp + -0x1c],eax
0x103b9f -> lea rdi,[0x10de26]
0x107ba0 -> mov rsi,rax
0x109ba2 -> mov rax,qword ptr [rbp + -0x38]
0x10bba3 -> add rax,0x8
0x107ba3 -> lea rdi,[0x10e6fe]
0x105ba4 -> cdqe
0x109ba6 -> add rax,0x108
0x105ba6 -> lea rdx,[rax*0x8]
0x103ba6 -> mov eax,0x0
0x10bba7 -> mov rdi,rax
0x10bbaa -> call sigemptyset
0x107baa -> mov eax,0x0
0x103bab -> call printf
0x109bac -> mov rdi,rax
0x105bae -> mov rax,qword ptr [rbp + -0x610]
0x10bbaf -> mov dword ptr [rbp + -0x18],0x10000000
0x109baf -> call pthread_mutex_lock
0x107baf -> call g_strdup_printf
0x103bb0 -> mov rax,qword ptr [rbp + -0x8]
0x109bb4 -> lea rcx,[rbp + -0x20]
0x107bb4 -> mov qword ptr [rbp + -0x30],rax
0x103bb4 -> mov rax,qword ptr [rax + 0x10]
0x105bb5 -> add rax,rdx
0x10bbb6 -> lea rax,[rbp + -0xa0]
0x109bb8 -> mov rax,qword ptr [rbp + -0x38]
0x107bb8 -> mov rax,qword ptr [rbp + -0x30]
0x105bb8 -> mov rax,qword ptr [rax]
0x103bb8 -> mov rsi,rax
0x105bbb -> mov qword ptr [rbp + -0x560],rax
0x103bbb -> lea rdi,[0x10de38]
0x109bbc -> mov edx,0x10
0x107bbc -> mov rdi,rax
0x10bbbd -> mov edx,0x0
0x107bbf -> call mkstemp64
0x109bc1 -> mov rsi,rcx
0x10bbc2 -> mov rsi,rax
0x105bc2 -> lea rax,[rbp + -0x5a0]
0x103bc2 -> mov eax,0x0
0x109bc4 -> mov rdi,rax
0x107bc4 -> mov dword ptr [rbp + -0x20],eax
0x10bbc5 -> mov edi,0xa
0x109bc7 -> call 0x00103891
0x107bc7 -> jmp 0x00107cb1
0x103bc7 -> call printf
0x105bc9 -> mov esi,0x68
0x10bbca -> call sigaction
0x109bcc -> mov rax,qword ptr [rbp + -0x38]
0x107bcc -> cmp dword ptr [rbp + -0x50],0x0
0x103bcc -> mov rax,qword ptr [rbp + -0x8]
0x105bce -> mov rdi,rax
0x10bbcf -> cmp eax,-0x1
0x109bd0 -> add rax,0x108
0x107bd0 -> jz 0x00107bfa
0x103bd0 -> mov eax,dword ptr [rax + 0x20]
0x105bd1 -> call g_memdup
0x10bbd2 -> jnz 0x0010bbe0
0x107bd2 -> mov rax,qword ptr [rbp + -0x68]
0x103bd3 -> and eax,0x1
0x10bbd4 -> lea rdi,[0x10f2ee]
0x109bd6 -> mov rdi,rax
0x107bd6 -> mov rax,qword ptr [rax + 0x90]
0x105bd6 -> mov rdi,rax
0x103bd6 -> test eax,eax
0x103bd8 -> jz 0x00103be6
0x109bd9 -> call pthread_mutex_unlock
0x105bd9 -> call 0x0010cd17
0x103bda -> lea rdi,[0x10de4a]
0x10bbdb -> call 0x0010d638
0x107bdd -> mov edx,dword ptr [rbp + -0x58]
0x109bde -> nop
0x105bde -> mov qword ptr [rbp + -0x650],rax
0x109bdf -> mov rax,qword ptr [rbp + -0x8]
0x10bbe0 -> nop
0x107be0 -> mov rsi,rax
0x10bbe1 -> mov rax,qword ptr [rbp + -0x8]
0x103be1 -> call puts
0x109be3 -> xor rax,qword ptr fs:[0x28]
0x107be3 -> lea rdi,[0x10e70b]
0x10bbe5 -> xor rax,qword ptr fs:[0x28]
0x105be5 -> lea rcx,[rbp + -0x650]
0x103be6 -> mov rax,qword ptr [rbp + -0x8]
0x107bea -> mov eax,0x0
0x103bea -> mov eax,dword ptr [rax + 0x20]
0x109bec -> jz 0x00109bf3
0x105bec -> mov rax,qword ptr [rbp + -0x638]
0x103bed -> and eax,0x2
0x10bbee -> jz 0x0010bbf5
0x109bee -> call __stack_chk_fail
0x107bef -> call g_strdup_printf
0x10bbf0 -> call __stack_chk_fail
0x103bf0 -> test eax,eax
0x103bf2 -> jz 0x00103c00
0x109bf3 -> leave
0x105bf3 -> mov edx,0x1
0x109bf4 -> ret
0x107bf4 -> mov qword ptr [rbp + -0x30],rax
0x103bf4 -> lea rdi,[0x10de5b]
0x10bbf5 -> leave
0x109bf5 -> push rbp
0x10bbf6 -> ret
0x109bf6 -> mov rbp,rsp
0x10bbf7 -> push rbp
0x10bbf8 -> mov rbp,rsp
0x107bf8 -> jmp 0x00107c11
0x105bf8 -> mov rsi,rcx
0x109bf9 -> mov qword ptr [rbp + -0x8],rdi
0x107bfa -> mov rax,qword ptr [rbp + -0x68]
0x10bbfb -> sub rsp,0x10
0x105bfb -> mov rdi,rax
0x103bfb -> call puts
0x109bfd -> mov qword ptr [rbp + -0x10],rsi
0x107bfe -> mov rax,qword ptr [rax + 0x90]
0x105bfe -> call g_array_append_vals
0x10bbff -> mov esi,0x0
0x103c00 -> mov rax,qword ptr [rbp + -0x8]
0x109c01 -> mov rax,qword ptr [rbp + -0x8]
0x105c03 -> mov eax,dword ptr [rbp + -0x580]
0x10bc04 -> mov edi,0x0
0x103c04 -> mov eax,dword ptr [rax + 0x20]
0x109c05 -> mov rax,qword ptr [rax + 0xe0]
0x107c05 -> mov rdi,rax
0x103c07 -> and eax,0x2000
0x107c08 -> call g_strdup
0x10bc09 -> call daemon
0x105c09 -> and eax,0x20
0x109c0c -> mov eax,dword ptr [rax + 0x20]
0x105c0c -> test eax,eax
0x103c0c -> test eax,eax
0x107c0d -> mov qword ptr [rbp + -0x30],rax
0x10bc0e -> test eax,eax
0x105c0e -> jz 0x00105c8b
0x103c0e -> jz 0x00103c1c
0x109c0f -> and eax,0x1
0x10bc10 -> jns 0x0010bc1e
0x105c10 -> mov eax,dword ptr [rbp + -0x67c]
0x103c10 -> lea rdi,[0x10de6d]
0x107c11 -> mov ecx,dword ptr [rbp + -0x44]
0x10bc12 -> lea rdi,[0x10f2fc]
0x109c12 -> test eax,eax
0x109c14 -> jnz 0x00109c2b
0x107c14 -> mov rax,qword ptr [rbp + -0x30]
0x109c16 -> mov rax,qword ptr [rbp + -0x8]
0x105c16 -> cdqe
0x103c17 -> call puts
0x107c18 -> mov edx,0x180
0x105c18 -> lea rdx,[rax*0x8]
0x10bc19 -> call 0x0010d638
0x109c1a -> mov rax,qword ptr [rax + 0xe0]
0x103c1c -> mov rax,qword ptr [rbp + -0x8]
0x107c1d -> mov esi,ecx
0x10bc1e -> movzx eax,byte ptr [0x00311280]
0x107c1f -> mov rdi,rax
0x105c20 -> mov rax,qword ptr [rbp + -0x610]
0x103c20 -> mov eax,dword ptr [rax + 0x20]
0x109c21 -> mov eax,dword ptr [rax + 0x20]
0x107c22 -> mov eax,0x0
0x103c23 -> and eax,0x4
0x109c24 -> and eax,0x8
0x10bc25 -> test al,al
0x103c26 -> test eax,eax
0x10bc27 -> jnz 0x0010bc41
0x109c27 -> test eax,eax
0x107c27 -> call open64
0x105c27 -> add rax,rdx
0x103c28 -> jz 0x00103c36
0x10bc29 -> mov edx,0xff
0x109c29 -> jz 0x00109c32
0x105c2a -> mov rbx,qword ptr [rax]
0x103c2a -> lea rdi,[0x10de7f]
0x109c2b -> mov eax,0x1
0x107c2c -> mov dword ptr [rbp + -0x20],eax
0x105c2d -> lea rdi,[0x10dfd9]
0x10bc2e -> lea rsi,[0x10f303]
0x107c2f -> mov eax,dword ptr [rbp + -0x20]
0x109c30 -> jmp 0x00109c37
0x103c31 -> call puts
0x109c32 -> mov eax,0x0
0x107c32 -> cmp eax,-0x1
0x105c34 -> call g_quark_from_static_string
0x10bc35 -> lea rdi,[0x311280]
0x107c35 -> jnz 0x00107cb1
0x103c36 -> mov rax,qword ptr [rbp + -0x8]
0x109c37 -> pop rbp
0x107c37 -> cmp dword ptr [rbp + -0x44],0x2
0x109c38 -> ret
0x109c39 -> push rbp
0x105c39 -> mov esi,eax
0x109c3a -> mov rbp,rsp
0x103c3a -> mov rax,qword ptr [rax + 0x8]
0x107c3b -> jnz 0x00107cb1
0x105c3b -> mov rax,qword ptr [rbp + -0x6a0]
0x10bc3c -> call strncpy
0x109c3d -> mov qword ptr [rbp + -0x8],rdi
0x107c3d -> mov rax,qword ptr [rbp + -0x30]
0x103c3e -> test rax,rax
0x10bc41 -> lea rsi,[0x10f31b]
0x109c41 -> mov qword ptr [rbp + -0x10],rsi
0x107c41 -> mov esi,0x0
0x103c41 -> jz 0x00103c5f
0x105c42 -> mov r8,rbx
0x103c43 -> mov rax,qword ptr [rbp + -0x8]
0x109c45 -> mov rax,qword ptr [rbp + -0x10]
0x105c45 -> lea rcx,[0x10e498]
0x107c46 -> mov rdi,rax
0x103c47 -> mov rax,qword ptr [rax + 0x8]
0x10bc48 -> lea rdi,[0x311280]
0x109c49 -> mov rdx,qword ptr [rax + 0x10]
0x107c49 -> mov eax,0x0
0x103c4b -> mov rsi,rax
0x105c4c -> mov edx,0x4
0x109c4d -> mov rax,qword ptr [rbp + -0x8]
0x107c4e -> call open64
0x103c4e -> lea rdi,[0x10de93]
0x10bc4f -> call fopen64
0x109c51 -> mov rax,qword ptr [rax]
0x105c51 -> mov rdi,rax
0x107c53 -> mov dword ptr [rbp + -0x20],eax
0x10bc54 -> mov qword ptr [rbp + -0x8],rax
0x109c54 -> cmp rdx,rax
0x105c54 -> mov eax,0x0
0x103c55 -> mov eax,0x0
0x107c56 -> mov eax,dword ptr [rbp + -0x20]
0x109c57 -> ja 0x00109c79
0x10bc58 -> cmp qword ptr [rbp + -0x8],0x0
0x109c59 -> mov rax,qword ptr [rbp + -0x10]
0x107c59 -> cmp eax,-0x1
0x105c59 -> call g_set_error
0x103c5a -> call printf
0x107c5c -> jz 0x00107cb1
0x10bc5d -> jz 0x0010bc8c
0x109c5d -> mov rdx,qword ptr [rax + 0x10]
0x107c5e -> mov rax,qword ptr [rbp + -0x68]
0x105c5e -> mov rax,qword ptr [rbp + -0x638]
0x10bc5f -> call getpid
0x103c5f -> mov rax,qword ptr [rbp + -0x8]
0x109c61 -> mov rax,qword ptr [rbp + -0x10]
0x107c62 -> mov rax,qword ptr [rax + 0xe0]
0x103c63 -> mov rax,qword ptr [rax + 0x18]
0x10bc64 -> mov edx,eax
0x109c65 -> mov eax,dword ptr [rax + 0x18]
0x105c65 -> mov esi,0x1
0x10bc66 -> mov rax,qword ptr [rbp + -0x8]
0x103c67 -> test rax,rax
0x109c68 -> mov eax,eax
0x107c69 -> mov eax,dword ptr [rax + 0x20]
0x10bc6a -> lea rsi,[0x10f31d]
0x109c6a -> add rdx,rax
0x105c6a -> mov rdi,rax
0x103c6a -> jz 0x00103c88
0x107c6c -> and eax,0x4
0x103c6c -> mov rax,qword ptr [rbp + -0x8]
0x109c6d -> mov rax,qword ptr [rbp + -0x8]
0x105c6d -> call g_array_free
0x107c6f -> test eax,eax
0x103c70 -> mov rax,qword ptr [rax + 0x18]
0x10bc71 -> mov rdi,rax
0x109c71 -> mov rax,qword ptr [rax]
0x107c71 -> jnz 0x00107cb1
0x105c72 -> mov rax,qword ptr [rbp + -0x620]
0x107c73 -> mov rax,qword ptr [rbp + -0x68]
0x10bc74 -> mov eax,0x0
0x109c74 -> cmp rdx,rax
0x103c74 -> mov rsi,rax
0x109c77 -> jbe 0x00109c80
0x107c77 -> mov rax,qword ptr [rax + 0xe0]
0x103c77 -> lea rdi,[0x10dea5]
0x10bc79 -> call fprintf
0x109c79 -> mov eax,0x1
0x105c79 -> mov rdi,rax
0x105c7c -> call g_key_file_free
0x10bc7e -> mov rax,qword ptr [rbp + -0x8]
0x109c7e -> jmp 0x00109c85
0x107c7e -> mov edx,dword ptr [rax + 0x20]
0x103c7e -> mov eax,0x0
0x109c80 -> mov eax,0x0
0x107c81 -> mov rax,qword ptr [rbp + -0x68]
0x105c81 -> mov eax,0x0
0x10bc82 -> mov rdi,rax
0x103c83 -> call printf
0x10bc85 -> call fclose
0x109c85 -> pop rbp
0x107c85 -> mov rax,qword ptr [rax + 0xe0]
0x109c86 -> ret
0x105c86 -> jmp 0x00105dfc
0x109c87 -> push rbp
0x109c88 -> mov rbp,rsp
0x103c88 -> mov edi,0x0
0x10bc8a -> jmp 0x0010bcb8
0x109c8b -> sub rsp,0x50
0x105c8b -> add dword ptr [rbp + -0x67c],0x1
0x10bc8c -> lea rdi,[0x10f321]
0x107c8c -> or edx,0x8
0x103c8d -> call exit
0x109c8f -> mov qword ptr [rbp + -0x48],rdi
0x107c8f -> mov dword ptr [rax + 0x20],edx
0x107c92 -> mov rax,qword ptr [rbp + -0x68]
0x105c92 -> mov eax,dword ptr [rbp + -0x67c]
0x103c92 -> push rbp
0x10bc93 -> call perror
0x109c93 -> mov qword ptr [rbp + -0x50],rsi
0x103c93 -> mov rbp,rsp
0x107c96 -> mov rax,qword ptr [rax + 0xe0]
0x103c96 -> push rbx
0x109c97 -> mov rax,qword ptr fs:[0x28]
0x103c97 -> sub rsp,0x1d8
0x10bc98 -> mov rax,qword ptr [0x003111c0]
0x105c98 -> cdqe
0x105c9a -> lea rdx,[rax*0x8]
0x107c9d -> mov edx,dword ptr [rax + 0x20]
0x103c9e -> mov dword ptr [rbp + -0x1c4],edi
0x10bc9f -> mov rcx,rax
0x109ca0 -> mov qword ptr [rbp + -0x8],rax
0x107ca0 -> mov rax,qword ptr [rbp + -0x68]
0x10bca2 -> mov edx,0x15
0x105ca2 -> mov rax,qword ptr [rbp + -0x610]
0x109ca4 -> xor eax,eax
0x107ca4 -> mov rax,qword ptr [rax + 0xe0]
0x103ca4 -> mov qword ptr [rbp + -0x1d0],rsi
0x109ca6 -> mov rax,qword ptr [rbp + -0x48]
0x10bca7 -> mov esi,0x1
0x105ca9 -> add rax,rdx
0x109caa -> mov qword ptr [rbp + -0x28],rax
0x107cab -> or edx,0x1
0x103cab -> mov qword ptr [rbp + -0x1d8],rdx
0x10bcac -> lea rdi,[0x10f327]
0x105cac -> mov rax,qword ptr [rax]
0x109cae -> mov rax,qword ptr [rbp + -0x28]
0x107cae -> mov dword ptr [rax + 0x20],edx
0x105caf -> test rax,rax
0x107cb1 -> mov eax,dword ptr [rbp + -0x20]
0x109cb2 -> mov rax,qword ptr [rax + 0x8]
0x105cb2 -> jnz 0x00105227
0x103cb2 -> mov rax,qword ptr fs:[0x28]
0x10bcb3 -> call fwrite
0x107cb4 -> cmp eax,-0x1
0x109cb6 -> mov eax,dword ptr [rax + 0x4]
0x107cb7 -> jnz 0x00107cfb
0x10bcb8 -> nop
0x105cb8 -> mov rax,qword ptr [rbp + -0x620]
0x10bcb9 -> leave
0x109cb9 -> and eax,0xffff
0x107cb9 -> cmp dword ptr [rbp + -0x50],0x0
0x10bcba -> ret
0x10bcbb -> push rbp
0x103cbb -> mov qword ptr [rbp + -0x18],rax
0x10bcbc -> mov rbp,rsp
0x107cbd -> jz 0x00107cc9
0x109cbe -> mov dword ptr [rbp + -0x30],eax
0x10bcbf -> sub rsp,0x30
0x107cbf -> cmp dword ptr [rbp + -0x58],0x0
0x105cbf -> mov rdi,rax
0x103cbf -> xor eax,eax
0x109cc1 -> mov rax,qword ptr [rbp + -0x28]
0x103cc1 -> mov dword ptr [rbp + -0x1b4],0x0
0x105cc2 -> call g_key_file_free
0x10bcc3 -> mov qword ptr [rbp + -0x28],rdi
0x107cc3 -> jg 0x00107df2
0x109cc5 -> mov rax,qword ptr [rax + 0x8]
0x10bcc7 -> mov qword ptr [rbp + -0x30],rsi
0x105cc7 -> mov rax,qword ptr [rbp + -0x668]
0x109cc9 -> mov eax,dword ptr [rax + 0x4]
0x107cc9 -> mov rax,qword ptr [rbp + -0x30]
0x10bccb -> cmp qword ptr [rbp + -0x30],0x0
0x103ccb -> mov dword ptr [rbp + -0x1b0],0x0
0x109ccc -> mov ax,0x0
0x107ccd -> mov rsi,rax
0x105cce -> test rax,rax
0x10bcd0 -> jz 0x0010bd2f
0x109cd0 -> mov dword ptr [rbp + -0x2c],eax
0x107cd0 -> lea rdi,[0x10e718]
0x105cd1 -> jz 0x00105d8d
0x10bcd2 -> mov rax,qword ptr [rbp + -0x30]
0x109cd3 -> mov dword ptr [rbp + -0x34],0x16
0x103cd5 -> lea rax,[rbp + -0x180]
0x10bcd6 -> mov rdi,rax
0x107cd7 -> mov eax,0x0
0x105cd7 -> mov rax,qword ptr [rbp + -0x668]
0x10bcd9 -> call getgrnam
0x109cda -> mov eax,dword ptr [rbp + -0x2c]
0x107cdc -> call g_strdup_printf
0x103cdc -> lea rdx,[0x311040]
0x109cdd -> and eax,0xfffcffff
0x10bcde -> mov qword ptr [rbp + -0x18],rax
0x105cde -> mov rdx,qword ptr [rbp + -0x6a0]
0x107ce1 -> mov qword ptr [rbp + -0x28],rax
0x10bce2 -> cmp qword ptr [rbp + -0x18],0x0
0x109ce2 -> test eax,eax
0x103ce3 -> mov ecx,0x2c
0x109ce4 -> jz 0x00109d11
0x107ce5 -> mov rax,qword ptr [rbp + -0x28]
0x105ce5 -> lea rcx,[rbp + -0x5f0]
0x109ce6 -> mov edx,dword ptr [rbp + -0x30]
0x10bce7 -> jnz 0x0010bd11
0x103ce8 -> mov rdi,rax
0x10bce9 -> mov rax,qword ptr [rbp + -0x30]
0x109ce9 -> mov eax,dword ptr [rbp + -0x2c]
0x107ce9 -> mov rdi,rax
0x103ceb -> mov rsi,rdx
0x109cec -> mov r8d,edx
0x107cec -> call 0x0010d3ef
0x105cec -> mov rsi,rcx
0x10bced -> mov rsi,rax
0x103cee -> movsq.rep rdi,rsi
0x109cef -> mov ecx,eax
0x105cef -> mov rdi,rax
0x10bcf0 -> lea rdi,[0x10f33d]
0x109cf1 -> lea rdx,[0x10ecd8]
0x107cf1 -> mov eax,0x0
0x103cf1 -> mov byte ptr [rbp + -0x1b6],0x0
0x105cf2 -> call 0x001042f1
0x107cf6 -> jmp 0x00107eeb
0x10bcf7 -> mov eax,0x0
0x105cf7 -> mov qword ptr [rbp + -0x608],rax
0x109cf8 -> mov esi,0x20
0x103cf8 -> lea rax,[0x10deb5]
0x107cfb -> cmp dword ptr [rbp + -0x48],0x0
0x10bcfc -> call g_strdup_printf
0x109cfd -> mov edi,0x0
0x105cfe -> cmp qword ptr [rbp + -0x608],0x0
0x107cff -> jz 0x00107d0d
0x103cff -> mov qword ptr [rbp + -0x198],rax
0x10bd01 -> mov qword ptr [rbp + -0x10],rax
0x107d01 -> mov rax,qword ptr [rbp + -0x30]
0x109d02 -> mov eax,0x0
0x10bd05 -> mov rax,qword ptr [rbp + -0x10]
0x107d05 -> mov rdi,rax
0x105d06 -> jz 0x00105d63
0x103d06 -> cmp dword ptr [rbp + -0x1c4],0x1
0x109d07 -> call g_log
0x107d08 -> call unlink
0x105d08 -> mov rax,qword ptr [rbp + -0x608]
0x10bd09 -> mov rdi,rax
0x10bd0c -> call 0x0010d638
0x109d0c -> jmp 0x00109f09
0x107d0d -> mov rdx,qword ptr [rbp + -0x40]
0x103d0d -> jnz 0x00103d19
0x105d0f -> mov edx,dword ptr [rax + 0x8]
0x103d0f -> mov eax,0x0
0x10bd11 -> mov rax,qword ptr [rbp + -0x18]
0x109d11 -> cmp dword ptr [rbp + -0x30],0x6
0x107d11 -> mov rax,qword ptr [rbp + -0x38]
0x105d12 -> mov rax,qword ptr [rbp + -0x608]
0x103d14 -> jmp 0x001042d3
0x10bd15 -> mov eax,dword ptr [rax + 0x10]
0x109d15 -> ja 0x00109ed9
0x107d15 -> add rax,rdx
0x10bd18 -> mov edi,eax
0x107d18 -> mov qword ptr [rbp + -0x18],rax
0x105d19 -> mov rcx,qword ptr [rax]
0x103d19 -> mov esi,0x68
0x10bd1a -> call setgid
0x109d1b -> mov eax,dword ptr [rbp + -0x30]
0x107d1c -> mov rax,qword ptr [rbp + -0x68]
0x105d1c -> mov rax,qword ptr [rbp + -0x638]
0x109d1e -> lea rdx,[rax*0x4]
0x103d1e -> mov edi,0x1
0x10bd1f -> test eax,eax
0x107d20 -> mov rax,qword ptr [rax + 0x98]
0x10bd21 -> jns 0x0010bd2f
0x10bd23 -> lea rdi,[0x10f354]
0x105d23 -> mov rsi,rcx
0x103d23 -> call g_malloc0_n
0x109d26 -> lea rax,[0x10ed44]
0x105d26 -> mov rdi,rax
0x107d27 -> lea rcx,[rbp + -0x20]
0x103d28 -> mov rdi,rax
0x105d29 -> call g_array_append_vals
0x10bd2a -> call 0x0010d638
0x107d2b -> mov edx,0x1
0x103d2b -> call 0x0010cd17
0x109d2d -> mov eax,dword ptr [rdx + rax*0x1]
0x105d2e -> mov qword ptr [rbp + -0x638],rax
0x10bd2f -> cmp qword ptr [rbp + -0x28],0x0
0x109d30 -> movsxd rdx,eax
0x107d30 -> mov rsi,rcx
0x103d30 -> mov qword ptr [rbp + -0x1a8],rax
0x109d33 -> lea rax,[0x10ed44]
0x107d33 -> mov rdi,rax
0x10bd34 -> jz 0x0010bda2
0x105d35 -> mov rax,qword ptr [rbp + -0x608]
0x10bd36 -> mov rax,qword ptr [rbp + -0x28]
0x107d36 -> call g_array_append_vals
0x103d37 -> lea rdi,[0x311020]
0x10bd3a -> mov rdi,rax
0x109d3a -> add rax,rdx
0x107d3b -> mov rax,qword ptr [rbp + -0x30]
0x105d3c -> mov edx,dword ptr [rax + 0x8]
0x10bd3d -> call getpwnam
0x109d3d -> jmp rax
0x103d3e -> call g_strdup
0x109d3f -> mov rax,qword ptr [rbp + -0x28]
0x107d3f -> mov rdi,rax
0x105d3f -> mov eax,dword ptr [rbp + -0x67c]
0x10bd42 -> mov qword ptr [rbp + -0x8],rax
0x107d42 -> call g_free
0x109d43 -> mov rdx,qword ptr [rax + 0x8]
0x103d43 -> mov rdx,rax
0x105d45 -> add eax,edx
0x10bd46 -> cmp qword ptr [rbp + -0x8],0x0
0x103d46 -> mov rax,qword ptr [rbp + -0x1a8]
0x109d47 -> mov rax,qword ptr [rbp + -0x28]
0x107d47 -> mov rax,qword ptr [rbp + -0x18]
0x105d47 -> mov dword ptr [rbp + -0x67c],eax
0x10bd4b -> jnz 0x0010bd75
0x109d4b -> mov rax,qword ptr [rax]
0x107d4b -> mov qword ptr [rbp + -0x40],rax
0x10bd4d -> mov rax,qword ptr [rbp + -0x28]
0x105d4d -> mov rax,qword ptr [rbp + -0x608]
0x103d4d -> mov qword ptr [rax + 0x18],rdx
0x109d4e -> mov rsi,rdx
0x107d4f -> mov eax,dword ptr [rbp + -0x20]
0x10bd51 -> mov rsi,rax
0x109d51 -> mov rdi,rax
0x103d51 -> mov rax,qword ptr [rbp + -0x1a8]
0x107d52 -> mov edi,eax
0x10bd54 -> lea rdi,[0x10f36a]
0x109d54 -> call 0x00109c39
0x107d54 -> call 0x0010c9a7
0x105d54 -> mov esi,0x1
0x103d58 -> mov dword ptr [rax + 0x24],0x1
0x109d59 -> test al,al
0x107d59 -> mov qword ptr [rbp + -0x38],rax
0x105d59 -> mov rdi,rax
0x10bd5b -> mov eax,0x0
0x109d5b -> jnz 0x00109f05
0x105d5c -> call g_array_free
0x107d5d -> cmp qword ptr [rbp + -0x38],0x0
0x103d5f -> jmp 0x00104206
0x10bd60 -> call g_strdup_printf
0x109d61 -> mov rax,qword ptr [rbp + -0x28]
0x105d61 -> jmp 0x00105d8d
0x107d62 -> jnz 0x00107ddd
0x105d63 -> mov rax,qword ptr [rbp + -0x6a0]
0x107d64 -> cmp dword ptr [rbp + -0x54],0x0
0x103d64 -> mov eax,dword ptr [rbp + -0x1ac]
0x10bd65 -> mov qword ptr [rbp + -0x10],rax
0x109d65 -> mov rdx,qword ptr [rax + 0x8]
0x107d68 -> jz 0x00107ddd
0x10bd69 -> mov rax,qword ptr [rbp + -0x10]
0x109d69 -> mov rax,qword ptr [rbp + -0x28]
0x107d6a -> cmp dword ptr [rbp + -0x50],0x0
0x105d6a -> mov rax,qword ptr [rax]
0x103d6a -> cmp eax,0x64
0x10bd6d -> mov rdi,rax
0x109d6d -> mov rax,qword ptr [rax]
0x105d6d -> test rax,rax
0x103d6d -> jz 0x0010414a
0x107d6e -> jz 0x00107d8f
0x10bd70 -> call 0x0010d638
0x109d70 -> mov rsi,rdx
0x107d70 -> lea rcx,[0x10f4c8]
0x105d70 -> jz 0x00105d8d
0x105d72 -> mov rax,qword ptr [rbp + -0x638]
0x109d73 -> mov rdi,rax
0x103d73 -> cmp eax,0x64
0x10bd75 -> mov esi,0x0
0x109d76 -> call 0x00109831
0x103d76 -> jg 0x00103db0
0x107d77 -> mov edx,0x77a
0x103d78 -> cmp eax,0x4d
0x105d79 -> mov esi,0x1
0x10bd7a -> mov edi,0x0
0x109d7b -> jmp 0x00109f03
0x103d7b -> jz 0x001041b5
0x107d7c -> lea rsi,[0x10d8f4]
0x105d7e -> mov rdi,rax
0x10bd7f -> call setgroups
0x109d80 -> mov rax,qword ptr [rbp + -0x28]
0x105d81 -> call g_array_free
0x103d81 -> cmp eax,0x4d
0x107d83 -> lea rdi,[0x10e73d]
0x10bd84 -> mov rax,qword ptr [rbp + -0x8]
0x109d84 -> mov rdx,qword ptr [rax + 0x8]
0x103d84 -> jg 0x00103d99
0x105d86 -> mov eax,0x0
0x103d86 -> cmp eax,0x1
0x10bd88 -> mov eax,dword ptr [rax + 0x10]
0x109d88 -> mov rax,qword ptr [rbp + -0x28]
0x103d89 -> jz 0x00103dec
0x107d8a -> call __assert_fail
0x10bd8b -> mov edi,eax
0x105d8b -> jmp 0x00105dfc
0x103d8b -> cmp eax,0x43
0x109d8c -> mov rax,qword ptr [rax]
0x10bd8d -> call setuid
0x105d8d -> cmp dword ptr [rbp + -0x67c],0x1
0x103d8e -> jz 0x00104159
0x109d8f -> mov rsi,rdx
0x107d8f -> mov rax,qword ptr [rbp + -0x68]
0x10bd92 -> test eax,eax
0x109d92 -> mov rdi,rax
0x107d93 -> mov rax,qword ptr [rax + 0xe0]
0x10bd94 -> jns 0x0010bda2
0x105d94 -> jnz 0x00105dcd
0x103d94 -> jmp 0x001041f2
0x109d95 -> call 0x00109bf5
0x10bd96 -> lea rdi,[0x10f380]
0x105d96 -> cmp byte ptr [rbp + -0x694],0x0
0x103d99 -> cmp eax,0x56
0x109d9a -> test al,al
0x107d9a -> mov rax,qword ptr [rax + 0x8]
0x109d9c -> jz 0x00109daa
0x103d9c -> jz 0x001041dc
0x10bd9d -> call 0x0010d638
0x105d9d -> jz 0x00105dcd
0x109d9e -> mov dword ptr [rbp + -0x34],0x1
0x107d9e -> mov rdx,rax
0x105d9f -> lea rdi,[0x10dfd9]
0x107da1 -> mov eax,dword ptr [rbp + -0x20]
0x10bda2 -> nop
0x103da2 -> cmp eax,0x63
0x10bda3 -> leave
0x10bda4 -> ret
0x107da4 -> mov rsi,rdx
0x10bda5 -> push rbp
0x109da5 -> jmp 0x00109f09
0x103da5 -> jz 0x0010412c
0x10bda6 -> mov rbp,rsp
0x105da6 -> call g_quark_from_static_string
0x107da7 -> mov edi,eax
0x10bda9 -> sub rsp,0x30
0x107da9 -> call ftruncate64
0x109daa -> mov rax,qword ptr [rbp + -0x28]
0x105dab -> mov esi,eax
0x103dab -> jmp 0x001041f2
0x10bdad -> mov qword ptr [rbp + -0x18],rdi
0x105dad -> mov rax,qword ptr [rbp + -0x6a0]
0x109dae -> mov rdx,qword ptr [rax + 0x8]
0x107dae -> test eax,eax
0x107db0 -> jns 0x00107dc8
0x103db0 -> cmp eax,0x6f
0x10bdb1 -> mov dword ptr [rbp + -0x1c],esi
0x109db2 -> mov rax,qword ptr [rbp + -0x28]
0x107db2 -> lea rdi,[0x10e748]
0x103db3 -> jz 0x001040e3
0x10bdb4 -> mov qword ptr [rbp + -0x28],rdx
0x105db4 -> lea rcx,[0x10e4e0]
0x109db6 -> mov rax,qword ptr [rax]
0x10bdb8 -> mov qword ptr [rbp + -0x30],rcx
0x109db9 -> mov rsi,rdx
0x107db9 -> call 0x0010d3ef
0x103db9 -> cmp eax,0x6f
0x105dbb -> mov edx,0x5
0x10bdbc -> mov dword ptr [rbp + -0x4],0x7
0x109dbc -> mov rdi,rax
0x103dbc -> jg 0x00103dd5
0x107dbe -> mov eax,0x0
0x103dbe -> cmp eax,0x6c
0x109dbf -> call 0x00109c39
0x105dc0 -> mov rdi,rax
0x103dc1 -> jz 0x00104183
0x10bdc3 -> mov eax,dword ptr [rbp + -0x1c]
0x107dc3 -> jmp 0x00107eeb
0x105dc3 -> mov eax,0x0
0x109dc4 -> test al,al
0x10bdc6 -> cmp eax,0x10
0x109dc6 -> jz 0x00109dd4
0x103dc7 -> cmp eax,0x6d
0x109dc8 -> mov dword ptr [rbp + -0x34],0x1c
0x107dc8 -> mov rax,qword ptr [rbp + -0x68]
0x105dc8 -> call g_set_error
0x10bdc9 -> jz 0x0010bdfd
0x103dca -> jz 0x001040c5
0x10bdcb -> cmp eax,0x10
0x107dcc -> mov rax,qword ptr [rax + 0xe0]
0x105dcd -> cmp qword ptr [rbp + -0x690],0x0
0x10bdce -> jg 0x0010bde1
0x109dcf -> jmp 0x00109f09
0x10bdd0 -> cmp eax,0x4
0x103dd0 -> jmp 0x001041f2
0x10bdd3 -> jz 0x0010bdf4
0x107dd3 -> mov rax,qword ptr [rax + 0x8]
0x109dd4 -> mov rax,qword ptr [rbp + -0x28]
0x10bdd5 -> cmp eax,0x8
0x105dd5 -> jz 0x00105df5
0x103dd5 -> cmp eax,0x70
0x107dd7 -> mov qword ptr [rbp + -0x38],rax
0x105dd7 -> lea rcx,[rbp + -0x5f0]
0x10bdd8 -> jz 0x0010bdf4
0x109dd8 -> mov rdi,rax
0x103dd8 -> jz 0x00104105
0x10bdda -> cmp eax,0x2
0x109ddb -> call 0x00109887
0x107ddb -> jmp 0x00107df3
0x10bddd -> jz 0x0010bdf4
0x107ddd -> cmp dword ptr [rbp + -0x50],0x0
0x105dde -> mov rax,qword ptr [rbp + -0x690]
0x103dde -> cmp eax,0x72
0x10bddf -> jmp 0x0010be18
0x109de0 -> jmp 0x00109f03
0x10bde1 -> cmp eax,0x40
0x107de1 -> jz 0x00107df3
0x103de1 -> jz 0x001040a7
0x107de3 -> cmp dword ptr [rbp + -0x48],0x0
0x10bde4 -> jz 0x0010be06
0x109de5 -> mov rax,qword ptr [rbp + -0x28]
0x105de5 -> mov edx,0x50
0x10bde6 -> cmp eax,0x80
0x107de7 -> jnz 0x00107df3
0x103de7 -> jmp 0x001041f2
0x109de9 -> mov rdx,qword ptr [rax + 0x8]
0x107de9 -> add dword ptr [rbp + -0x58],0x1
0x105dea -> mov rsi,rcx
0x10bdeb -> jz 0x0010be0f
0x103dec -> mov eax,dword ptr [rbp + -0x1b0]
0x10bded -> cmp eax,0x20
0x109ded -> mov rax,qword ptr [rbp + -0x28]
0x107ded -> jmp 0x00107b4e
0x105ded -> mov rdi,rax
0x10bdf0 -> jz 0x0010be06
0x105df0 -> call memcpy
0x109df1 -> mov rax,qword ptr [rax]
0x10bdf2 -> jmp 0x0010be18
0x107df2 -> nop
0x103df2 -> lea edx,[rax + 0x1]
0x107df3 -> mov rdx,qword ptr [rbp + -0x40]
0x10bdf4 -> mov dword ptr [rbp + -0x4],0x3
0x109df4 -> mov rsi,rdx
0x105df5 -> mov rax,qword ptr [rbp + -0x638]
0x103df5 -> mov dword ptr [rbp + -0x1b0],edx
0x109df7 -> mov rdi,rax
0x107df7 -> mov rax,qword ptr [rbp + -0x38]
0x109dfa -> call 0x001099db
0x10bdfb -> jmp 0x0010be1f
0x107dfb -> add rax,rdx
0x103dfb -> cmp eax,0x1
0x105dfc -> mov rbx,qword ptr [rbp + -0x28]
0x10bdfd -> mov dword ptr [rbp + -0x4],0x4
0x107dfe -> mov rdx,rax
0x103dfe -> jz 0x00103f7e
0x109dff -> jmp 0x00109f03
0x105e00 -> xor rbx,qword ptr fs:[0x28]
0x107e01 -> mov rax,qword ptr [rbp + -0x68]
0x10be04 -> jmp 0x0010be1f
0x109e04 -> mov rax,qword ptr [rbp + -0x28]
0x103e04 -> cmp eax,0x2
0x107e05 -> mov qword ptr [rax],rdx
0x10be06 -> mov dword ptr [rbp + -0x4],0x6
0x103e07 -> jz 0x00103fd9
0x109e08 -> mov rdx,qword ptr [rax + 0x8]
0x107e08 -> mov rax,qword ptr [rbp + -0x68]
0x105e09 -> jz 0x00105e10
0x105e0b -> call __stack_chk_fail
0x109e0c -> mov rax,qword ptr [rbp + -0x28]
0x107e0c -> mov rax,qword ptr [rax + 0xe0]
0x10be0d -> jmp 0x0010be1f
0x103e0d -> test eax,eax
0x10be0f -> mov dword ptr [rbp + -0x4],0x7
0x103e0f -> jnz 0x001040a2
0x109e10 -> mov rax,qword ptr [rax]
0x105e10 -> lea rsp,[rbp + -0x18]
0x109e13 -> mov rsi,rdx
0x107e13 -> mov rax,qword ptr [rax + 0x8]
0x105e14 -> pop rbx
0x105e15 -> pop r12
0x103e15 -> mov rax,qword ptr [0x003111a0]
0x10be16 -> jmp 0x0010be1f
0x109e16 -> mov rdi,rax
0x107e17 -> test rax,rax
0x105e17 -> pop r13
0x10be18 -> mov dword ptr [rbp + -0x4],0x3
0x109e19 -> call 0x00109bf5
0x105e19 -> pop rbp
0x107e1a -> jz 0x00107e66
0x105e1a -> ret
0x105e1b -> push rbp
0x107e1c -> mov rax,qword ptr [rbp + -0x68]
0x105e1c -> mov rbp,rsp
0x103e1c -> mov esi,0x3a
0x109e1e -> test al,al
0x10be1f -> mov rdx,qword ptr [rbp + -0x28]
0x105e1f -> mov dword ptr [rbp + -0x4],edi
0x109e20 -> jz 0x00109e2e
0x107e20 -> mov rax,qword ptr [rax + 0xe0]
0x103e21 -> mov rdi,rax
0x109e22 -> mov dword ptr [rbp + -0x34],0x1
0x105e22 -> mov dword ptr [0x003111ec],0x1
0x10be23 -> mov eax,dword ptr [rbp + -0x4]
0x103e24 -> call strchr
0x10be26 -> lea rsi,[0x10f396]
0x107e27 -> mov rdx,qword ptr [rax + 0x8]
0x109e29 -> jmp 0x00109f09
0x103e29 -> mov rbx,rax
0x107e2b -> mov rax,qword ptr [rbp + -0x68]
0x105e2c -> nop
0x103e2c -> mov rax,qword ptr [0x003111a0]
0x10be2d -> mov edi,eax
0x105e2d -> pop rbp
0x109e2e -> mov rax,qword ptr [rbp + -0x28]
0x105e2e -> ret
0x10be2f -> mov eax,0x0
0x107e2f -> mov rax,qword ptr [rax]
0x105e2f -> push rbp
0x105e30 -> mov rbp,rsp
0x109e32 -> mov rdx,qword ptr [rax + 0x8]
0x107e32 -> cmp rdx,rax
0x105e33 -> sub rsp,0x30
0x103e33 -> mov esi,0x3a
0x10be34 -> call syslog
0x107e35 -> jbe 0x00107e4d
0x109e36 -> mov rax,qword ptr [rbp + -0x28]
0x107e37 -> lea rdi,[0x10e768]
0x105e37 -> mov qword ptr [rbp + -0x18],rdi
0x103e38 -> mov rdi,rax
0x10be39 -> nop
0x10be3a -> leave
0x109e3a -> mov rax,qword ptr [rax]
0x10be3b -> ret
0x105e3b -> mov qword ptr [rbp + -0x20],rsi
0x103e3b -> call strrchr
0x10be3c -> push rbp
0x10be3d -> mov rbp,rsp
0x109e3d -> mov rsi,rdx
0x107e3e -> call 0x0010d3ef
0x105e3f -> mov qword ptr [rbp + -0x28],rdx
0x10be40 -> push rbx
0x109e40 -> mov rdi,rax
0x103e40 -> cmp rbx,rax
0x10be41 -> sub rsp,0x98
0x109e43 -> call 0x00109c39
0x107e43 -> mov eax,0x0
0x105e43 -> mov rax,qword ptr [rbp + -0x20]
0x103e43 -> jnz 0x00103ead
0x103e45 -> mov rax,qword ptr [0x003111a0]
0x105e47 -> mov qword ptr [rbp + -0x8],rax
0x10be48 -> mov dword ptr [rbp + -0x94],edi
0x109e48 -> test al,al
0x107e48 -> jmp 0x00107eeb
0x109e4a -> jnz 0x00109f08
0x105e4b -> mov rax,qword ptr [rbp + -0x8]
0x103e4c -> mov edx,0x2
0x107e4d -> mov rax,qword ptr [rbp + -0x68]
0x10be4e -> mov qword ptr [rbp + -0xa0],rsi
0x105e4f -> mov eax,dword ptr [rax]
0x109e50 -> mov rax,qword ptr [rbp + -0x28]
0x107e51 -> mov rax,qword ptr [rax + 0xe0]
0x105e51 -> mov esi,0xf
0x103e51 -> lea rsi,[0x10deb6]
0x109e54 -> mov rdx,qword ptr [rax + 0x8]
0x10be55 -> mov rax,qword ptr fs:[0x28]
0x105e56 -> mov edi,eax
0x109e58 -> mov rax,qword ptr [rbp + -0x28]
0x107e58 -> mov rdx,qword ptr [rax + 0x8]
0x105e58 -> call kill
0x103e58 -> mov rdi,rax
0x103e5b -> call g_strsplit
0x109e5c -> mov rax,qword ptr [rax]
0x107e5c -> mov rax,qword ptr [rbp + -0x68]
0x105e5d -> nop
0x10be5e -> mov qword ptr [rbp + -0x18],rax
0x105e5e -> leave
0x109e5f -> mov rsi,rdx
0x105e5f -> ret
0x107e60 -> mov qword ptr [rax],rdx
0x105e60 -> push rbp
0x103e60 -> mov qword ptr [rbp + -0x190],rax
0x105e61 -> mov rbp,rsp
0x10be62 -> xor eax,eax
0x109e62 -> mov rdi,rax
0x107e63 -> jmp 0x00107e66
0x10be64 -> mov qword ptr [rbp + -0x80],0x0
0x105e64 -> mov dword ptr [rbp + -0x4],edi
0x109e65 -> call 0x00109a81
0x107e65 -> nop
0x107e66 -> mov rax,qword ptr [rbp + -0x68]
0x105e67 -> mov dword ptr [0x003111f0],0x1
0x103e67 -> mov rax,qword ptr [rbp + -0x190]
0x109e6a -> jmp 0x00109f03
0x107e6a -> mov rax,qword ptr [rax]
0x10be6c -> lea rax,[rbp + -0x70]
0x107e6d -> mov rcx,rax
0x103e6e -> add rax,0x8
0x109e6f -> mov rax,qword ptr [rbp + -0x28]
0x10be70 -> mov edx,0x50
0x107e70 -> lea rdx,[0x10e790]
0x105e71 -> nop
0x105e72 -> pop rbp
0x103e72 -> mov rax,qword ptr [rax]
0x109e73 -> mov rdx,qword ptr [rax + 0x8]
0x105e73 -> ret
0x105e74 -> push rbp
0x10be75 -> mov esi,0x0
0x105e75 -> mov rbp,rsp
0x103e75 -> test rax,rax
0x109e77 -> mov rax,qword ptr [rbp + -0x28]
0x107e77 -> mov esi,0x20
0x105e78 -> mov dword ptr [rbp + -0x4],edi
0x103e78 -> jnz 0x00103ecf
0x10be7a -> mov rdi,rax
0x103e7a -> mov rax,qword ptr [rbp + -0x190]
0x109e7b -> mov rax,qword ptr [rax]
0x105e7b -> mov dword ptr [0x003111f4],0x1
0x107e7c -> mov edi,0x0
0x10be7d -> call memset
0x109e7e -> mov rsi,rdx
0x109e81 -> mov rdi,rax
0x107e81 -> mov eax,0x0
0x103e81 -> mov rdi,rax
0x10be82 -> mov edx,0x4
0x109e84 -> call 0x00109bf5
0x103e84 -> call g_strfreev
0x105e85 -> nop
0x107e86 -> call g_log
0x105e86 -> pop rbp
0x10be87 -> mov esi,0x0
0x105e87 -> ret
0x105e88 -> push rbp
0x109e89 -> test al,al
0x105e89 -> mov rbp,rsp
0x103e89 -> mov rax,qword ptr [0x003111a0]
0x109e8b -> jz 0x00109e96
0x107e8b -> cmp dword ptr [rbp + -0x50],0x0
0x10be8c -> mov edi,0x0
0x105e8c -> sub rsp,0x10
0x109e8d -> mov dword ptr [rbp + -0x34],0x1
0x107e8f -> jz 0x00107eb1
0x105e90 -> mov dword ptr [rbp + -0x4],edi
0x103e90 -> mov edx,0x2
0x10be91 -> call g_array_new
0x107e91 -> mov eax,dword ptr [rbp + -0x58]
0x105e93 -> lea rdx,[0x10e50d]
0x109e94 -> jmp 0x00109f09
0x107e94 -> mov ecx,eax
0x103e95 -> lea rsi,[0x10deb8]
0x10be96 -> mov qword ptr [0x00311268],rax
0x109e96 -> mov rax,qword ptr [rbp + -0x28]
0x107e96 -> lea rdx,[0x10e7b5]
0x109e9a -> mov rdx,qword ptr [rax + 0x8]
0x105e9a -> mov esi,0x20
0x103e9c -> mov rdi,rax
0x10be9d -> mov edx,0x4
0x107e9d -> mov esi,0x20
0x109e9e -> mov rax,qword ptr [rbp + -0x28]
0x105e9f -> mov edi,0x0
0x103e9f -> call g_strsplit
0x10bea2 -> mov esi,0x0
0x109ea2 -> mov rax,qword ptr [rax]
0x107ea2 -> mov edi,0x0
0x105ea4 -> mov eax,0x0
0x103ea4 -> mov qword ptr [rbp + -0x190],rax
0x109ea5 -> mov rsi,rdx
0x10bea7 -> mov edi,0x0
0x107ea7 -> mov eax,0x0
0x109ea8 -> mov rdi,rax
0x105ea9 -> call g_log
0x109eab -> call 0x00109c39
0x103eab -> jmp 0x00103ecf
0x10beac -> call g_array_new
0x107eac -> call g_log
0x103ead -> mov rax,qword ptr [0x003111a0]
0x105eae -> lea rdi,[0x311200]
0x109eb0 -> test al,al
0x10beb1 -> mov qword ptr [0x00311260],rax
0x107eb1 -> cmp dword ptr [rbp + -0x4c],0x0
0x109eb2 -> jz 0x00109ebd
0x109eb4 -> mov dword ptr [rbp + -0x34],0x1c
0x103eb4 -> mov edx,0x2
0x107eb5 -> jz 0x00107ee6
0x105eb5 -> call sem_post
0x107eb7 -> mov rax,qword ptr [rbp + -0x68]
0x10beb8 -> lea rdi,[0x10f399]
0x103eb9 -> lea rsi,[0x10deb8]
0x105eba -> nop
0x109ebb -> jmp 0x00109f09
0x107ebb -> mov rax,qword ptr [rax]
0x105ebb -> leave
0x105ebc -> ret
0x109ebd -> mov rax,qword ptr [rbp + -0x28]
0x105ebd -> push rbp
0x107ebe -> add rax,0xfff
0x105ebe -> mov rbp,rsp
0x10bebf -> call 0x0010d67d
0x103ec0 -> mov rdi,rax
0x109ec1 -> mov rdx,qword ptr [rax + 0x8]
0x105ec1 -> sub rsp,0x70
0x103ec3 -> call g_strsplit
0x10bec4 -> lea rdi,[0x10dd90]
0x107ec4 -> shr rax,0xc
0x109ec5 -> mov rax,qword ptr [rbp + -0x28]
0x105ec5 -> mov qword ptr [rbp + -0x48],rdi
0x107ec8 -> mov rcx,rax
0x103ec8 -> mov qword ptr [rbp + -0x190],rax
0x109ec9 -> mov rax,qword ptr [rax]
0x105ec9 -> mov qword ptr [rbp + -0x50],rsi
0x10becb -> call g_strdup
0x107ecb -> lea rdx,[0x10e7d0]
0x109ecc -> mov rsi,rdx
0x105ecd -> mov qword ptr [rbp + -0x58],rdx
0x109ecf -> mov rdi,rax
0x103ecf -> mov rax,qword ptr [rbp + -0x190]
0x10bed0 -> mov qword ptr [0x00311270],rax
0x105ed1 -> mov qword ptr [rbp + -0x60],rcx
0x109ed2 -> call 0x00109b2e
0x107ed2 -> mov esi,0x20
0x105ed5 -> mov qword ptr [rbp + -0x68],r8
0x103ed6 -> add rax,0x8
0x10bed7 -> lea rdx,[rbp + -0x70]
0x109ed7 -> jmp 0x00109f03
0x107ed7 -> mov edi,0x0
0x109ed9 -> mov rax,qword ptr [rbp + -0x28]
0x105ed9 -> mov rax,qword ptr [rbp + -0x48]
0x103eda -> mov rax,qword ptr [rax]
0x10bedb -> mov rcx,qword ptr [rbp + -0xa0]
0x107edc -> mov eax,0x0
0x109edd -> mov rax,qword ptr [rax + 0x8]
0x105edd -> mov rax,qword ptr [rax + 0x98]
0x103edd -> test rax,rax
0x103ee0 -> jz 0x00103f28
0x109ee1 -> mov eax,dword ptr [rax + 0x4]
0x107ee1 -> call g_log
0x10bee2 -> mov eax,dword ptr [rbp + -0x94]
0x103ee2 -> mov rax,qword ptr [rbp + -0x190]
0x109ee4 -> mov ecx,eax
0x105ee4 -> mov qword ptr [rbp + -0x28],rax
0x109ee6 -> lea rdx,[0x10ed10]
0x107ee6 -> mov eax,0x1
0x10bee8 -> mov rsi,rcx
0x105ee8 -> cmp qword ptr [rbp + -0x50],0x0
0x103ee9 -> add rax,0x8
0x10beeb -> mov edi,eax
0x107eeb -> mov rcx,qword ptr [rbp + -0x8]
0x10beed -> call 0x00103c92
0x109eed -> mov esi,0x20
0x105eed -> jns 0x00105ef9
0x103eed -> mov rax,qword ptr [rax]
0x107eef -> xor rcx,qword ptr fs:[0x28]
0x105eef -> mov eax,0xffffffff
0x103ef0 -> mov rdi,rax
0x10bef2 -> mov qword ptr [rbp + -0x88],rax
0x109ef2 -> mov edi,0x0
0x103ef3 -> call g_strdup
0x105ef4 -> jmp 0x00106113
0x109ef7 -> mov eax,0x0
0x107ef8 -> jz 0x00107eff
0x103ef8 -> mov rdx,rax
0x10bef9 -> mov dword ptr [rbp + -0x24],0x4
0x105ef9 -> mov rax,qword ptr [rbp + -0x48]
0x107efa -> call __stack_chk_fail
0x103efb -> mov rax,qword ptr [rbp + -0x1d8]
0x109efc -> call g_log
0x105efd -> mov rax,qword ptr [rax + 0xe0]
0x107eff -> leave
0x10bf00 -> mov rax,qword ptr [0x00311270]
0x107f00 -> ret
0x109f01 -> jmp 0x00109f09
0x107f01 -> push rbp
0x107f02 -> mov rbp,rsp
0x103f02 -> mov qword ptr [rax + 0x18],rdx
0x109f03 -> jmp 0x00109f72
0x105f04 -> mov eax,dword ptr [rax + 0x20]
0x109f05 -> nop
0x107f05 -> sub rsp,0x30
0x109f06 -> jmp 0x00109f09
0x103f06 -> mov rax,qword ptr [rbp + -0x190]
0x10bf07 -> lea rdx,[rbp + -0x80]
0x105f07 -> and eax,0x2000
0x109f08 -> nop
0x109f09 -> mov rax,qword ptr [rbp + -0x28]
0x107f09 -> mov qword ptr [rbp + -0x28],rdi
0x10bf0b -> lea rsi,[rbp + -0x70]
0x105f0c -> test eax,eax
0x109f0d -> mov rdx,qword ptr [rax + 0x8]
0x107f0d -> mov rax,qword ptr [rbp + -0x28]
0x103f0d -> mov rax,qword ptr [rax]
0x105f0e -> jz 0x00105fc7
0x10bf0f -> mov rcx,rdx
0x103f10 -> mov rdi,rax
0x109f11 -> lea rax,[rbp + -0x20]
0x107f11 -> mov rax,qword ptr [rax + 0xe0]
0x10bf12 -> mov edx,0x1
0x103f13 -> call g_strdup
0x105f14 -> mov rax,qword ptr [rbp + -0x50]
0x109f15 -> mov rsi,rdx
0x10bf17 -> mov rdi,rax
0x109f18 -> mov rdi,rax
0x107f18 -> mov rax,qword ptr [rax + 0x58]
0x105f18 -> cqo
0x103f18 -> mov rdx,rax
0x10bf1a -> call 0x00104624
0x105f1a -> shr rdx,0x34
0x109f1b -> call 0x0010956e
0x103f1b -> mov rax,qword ptr [rbp + -0x1d8]
0x107f1c -> test rax,rax
0x105f1e -> add rax,rdx
0x10bf1f -> mov qword ptr [rbp + -0x78],rax
0x107f1f -> jz 0x00107f3e
0x109f20 -> mov eax,dword ptr [rbp + -0x34]
0x107f21 -> mov rax,qword ptr [rbp + -0x28]
0x105f21 -> and eax,0xfff
0x103f22 -> mov qword ptr [rax + 0x10],rdx
0x10bf23 -> mov edx,dword ptr [rbp + -0x28]
0x109f23 -> mov edi,eax
0x109f25 -> call 0x001092f7
0x107f25 -> mov rax,qword ptr [rax + 0xe0]
0x10bf26 -> mov eax,dword ptr [0x003111e0]
0x105f26 -> sub rax,rdx
0x103f26 -> jmp 0x00103f6a
0x103f28 -> mov rax,qword ptr [rbp + -0x1d8]
0x105f29 -> mov rdx,rax
0x109f2a -> mov dword ptr [rbp + -0x1c],eax
0x10bf2c -> or eax,edx
0x107f2c -> mov rax,qword ptr [rax + 0x58]
0x105f2c -> mov rax,qword ptr [rbp + -0x60]
0x109f2d -> mov rax,qword ptr [rbp + -0x28]
0x10bf2e -> mov dword ptr [0x003111e0],eax
0x103f2f -> mov rax,qword ptr [rax + 0x10]
0x107f30 -> mov rdi,rax
0x105f30 -> mov qword ptr [rax],rdx
0x109f31 -> mov rax,qword ptr [rax]
0x107f33 -> call g_strdup
0x105f33 -> mov rax,qword ptr [rbp + -0x50]
0x103f33 -> mov rdi,rax
0x10bf34 -> mov rax,qword ptr [rbp + -0x88]
0x109f34 -> add rax,0x108
0x103f36 -> call g_free
0x105f37 -> lea rdx,[rax + 0xfff]
0x107f38 -> mov qword ptr [rbp + -0x10],rax
0x109f3a -> mov rdi,rax
0x10bf3b -> test rax,rax
0x103f3b -> mov rax,qword ptr [rbp + -0x1d8]
0x107f3c -> jmp 0x00107f5d
0x109f3d -> call pthread_mutex_lock
0x10bf3e -> jz 0x0010bf5b
0x107f3e -> mov rax,qword ptr [rbp + -0x28]
0x105f3e -> test rax,rax
0x10bf40 -> lea rcx,[rbp + -0x88]
0x105f41 -> cmovs rax,rdx
0x109f42 -> mov rax,qword ptr [rbp + -0x28]
0x107f42 -> mov rax,qword ptr [rax + 0x90]
0x103f42 -> mov qword ptr [rax + 0x10],0x0
0x105f45 -> sar rax,0xc
0x109f46 -> mov rax,qword ptr [rax]
0x10bf47 -> mov rax,qword ptr [rbp + -0x78]
0x109f49 -> lea rcx,[rbp + -0x20]
0x107f49 -> mov rdi,rax
0x105f49 -> add rax,0x1
0x103f4a -> mov rax,qword ptr [rbp + -0x190]
0x10bf4b -> mov edx,0x1
0x107f4c -> call dirname
0x109f4d -> mov edx,0x10
0x105f4d -> shl rax,0xc
0x10bf50 -> mov rsi,rcx
0x107f51 -> mov rdi,rax
0x105f51 -> sub rax,qword ptr [rbp + -0x50]
0x103f51 -> mov rax,qword ptr [rax]
0x109f52 -> mov rsi,rcx
0x10bf53 -> mov rdi,rax
0x107f54 -> call g_strdup
0x103f54 -> mov rdi,rax
0x109f55 -> mov rdi,rax
0x105f55 -> mov rdx,rax
0x10bf56 -> call g_array_append_vals
0x103f57 -> call g_strdup
0x109f58 -> call 0x00103891
0x105f58 -> mov rax,qword ptr [rbp + -0x68]
0x107f59 -> mov qword ptr [rbp + -0x10],rax
0x10bf5b -> cmp qword ptr [rbp + -0x78],0x0
0x105f5c -> mov qword ptr [rax],rdx
0x103f5c -> mov rdx,rax
0x109f5d -> mov rax,qword ptr [rbp + -0x28]
0x107f5d -> mov rax,qword ptr [rbp + -0x28]
0x105f5f -> mov rax,qword ptr [rbp + -0x48]
0x103f5f -> mov rax,qword ptr [rbp + -0x1d8]
0x10bf60 -> jz 0x0010bf6d
0x109f61 -> mov rax,qword ptr [rax]
0x107f61 -> mov rax,qword ptr [rax + 0x90]
0x10bf62 -> mov rax,qword ptr [rbp + -0x78]
0x105f63 -> lea rcx,[rax + 0x108]
0x109f64 -> add rax,0x108
0x10bf66 -> mov eax,dword ptr [rax + 0x8]
0x103f66 -> mov qword ptr [rax + 0x18],rdx
0x107f68 -> mov rdi,rax
0x10bf69 -> test eax,eax
0x109f6a -> mov rdi,rax
0x105f6a -> mov rax,qword ptr [rbp + -0x48]
0x103f6a -> mov rax,qword ptr [rbp + -0x190]
0x10bf6b -> jnz 0x0010bfcf
0x107f6b -> call __xpg_basename
0x10bf6d -> mov rax,qword ptr [rbp + -0x80]
0x109f6d -> call pthread_mutex_unlock
0x105f6e -> mov rax,qword ptr [rax]
0x107f70 -> mov rdi,rax
0x10bf71 -> test rax,rax
0x105f71 -> mov rdi,rax
0x103f71 -> mov rdi,rax
0x109f72 -> mov rax,qword ptr [rbp + -0x28]
0x107f73 -> call g_strdup
0x10bf74 -> jz 0x0010bfcf
0x105f74 -> mov rax,qword ptr [rbp + -0x48]
0x103f74 -> call g_strfreev
0x10bf76 -> mov rax,qword ptr [rbp + -0x80]
0x109f76 -> mov rdi,rax
0x107f78 -> mov qword ptr [rbp + -0x8],rax
0x105f78 -> mov rax,qword ptr [rax + 0xe0]
0x109f79 -> call 0x00109379
0x103f79 -> jmp 0x001040a2
0x10bf7a -> mov ebx,dword ptr [rax]
0x10bf7c -> lea rdi,[0x10dfd9]
0x107f7c -> call getpid
0x109f7e -> nop
0x103f7e -> mov rax,qword ptr [0x003111a0]
0x109f7f -> mov rax,qword ptr [rbp + -0x8]
0x105f7f -> mov eax,dword ptr [rax + 0x20]
0x107f81 -> mov esi,eax
0x105f82 -> and eax,0x1
0x10bf83 -> call g_quark_from_static_string
0x109f83 -> xor rax,qword ptr fs:[0x28]
0x107f83 -> mov rax,qword ptr [rbp + -0x28]
0x105f85 -> test eax,eax
0x103f85 -> mov rdi,rax
0x107f87 -> mov rcx,qword ptr [rax + 0x8]
0x105f87 -> jz 0x00105f90
0x10bf88 -> cmp ebx,eax
0x103f88 -> call g_strdup
0x105f89 -> mov esi,0x0
0x10bf8a -> jnz 0x0010bf97
0x107f8b -> mov rdx,qword ptr [rbp + -0x8]
0x10bf8c -> mov rax,qword ptr [rbp + -0x80]
0x109f8c -> jz 0x00109f93
0x103f8d -> mov rdx,rax
0x109f8e -> call __stack_chk_fail
0x105f8e -> jmp 0x00105f95
0x107f8f -> mov rax,qword ptr [rbp + -0x10]
0x10bf90 -> mov eax,dword ptr [rax + 0x4]
0x105f90 -> mov esi,0x2
0x103f90 -> mov rax,qword ptr [rbp + -0x1a8]
0x10bf93 -> test eax,eax
0x109f93 -> leave
0x107f93 -> mov r8d,esi
0x109f94 -> ret
0x10bf95 -> jz 0x0010bfcf
0x109f95 -> push rbp
0x105f95 -> mov rax,qword ptr [rbp + -0x48]
0x109f96 -> mov rbp,rsp
0x107f96 -> mov rsi,rax
0x10bf97 -> mov rax,qword ptr [rbp + -0x80]
0x103f97 -> mov qword ptr [rax],rdx
0x109f99 -> push rbx
0x107f99 -> lea rdi,[0x10e7f7]
0x105f99 -> mov rax,qword ptr [rax + 0x90]
0x109f9a -> sub rsp,0x28
0x103f9a -> mov rax,qword ptr [rbp + -0x1a8]
0x10bf9b -> test rax,rax
0x10bf9e -> jz 0x0010bfaa
0x109f9e -> mov qword ptr [rbp + -0x28],rdi
0x10bfa0 -> mov rax,qword ptr [rbp + -0x80]
0x107fa0 -> mov eax,0x0
0x105fa0 -> mov rdx,qword ptr [rbp + -0x50]
0x103fa1 -> mov rax,qword ptr [rax]
0x109fa2 -> mov esi,0x1
0x10bfa4 -> mov rax,qword ptr [rax + 0x8]
0x105fa4 -> mov r8,rcx
0x103fa4 -> movzx eax,byte ptr [rax]
0x107fa5 -> call g_strdup_printf
0x109fa7 -> mov edi,0x1c
0x105fa7 -> mov rcx,rdx
0x103fa7 -> cmp al,0x2f
0x10bfa8 -> jmp 0x0010bfb1
0x103fa9 -> jz 0x001040a1
0x10bfaa -> lea rax,[0x10f3a4]
0x107faa -> mov rdx,rax
0x105faa -> mov rdx,rdi
0x109fac -> call calloc
0x107fad -> mov rax,qword ptr [rbp + -0x28]
0x105fad -> mov rdi,rax
0x103faf -> mov rax,qword ptr [0x003111c0]
0x105fb0 -> call 0x0010d0c2
0x10bfb1 -> mov rcx,rax
0x109fb1 -> mov qword ptr [rbp + -0x20],rax
0x107fb1 -> mov qword ptr [rax + 0xe8],rdx
0x10bfb4 -> lea rdx,[0x10f3b8]
0x109fb5 -> mov rcx,qword ptr [rbp + -0x20]
0x105fb5 -> mov edx,eax
0x103fb6 -> mov rcx,rax
0x105fb7 -> mov rax,qword ptr [rbp + -0x58]
0x107fb8 -> mov rax,qword ptr [rbp + -0x10]
0x109fb9 -> mov rax,qword ptr [rbp + -0x28]
0x103fb9 -> mov edx,0x3d
0x10bfbb -> mov esi,0x10
0x105fbb -> mov dword ptr [rax],edx
0x107fbc -> mov rdi,rax
0x109fbd -> mov edx,0x1c
0x105fbd -> mov eax,0x0
0x103fbe -> mov esi,0x1
0x107fbf -> call g_free
0x10bfc0 -> mov edi,0x0
0x109fc2 -> mov rsi,rcx
0x105fc2 -> jmp 0x00106113
0x103fc3 -> lea rdi,[0x10dec0]
0x107fc4 -> mov rax,qword ptr [rbp + -0x8]
0x10bfc5 -> mov eax,0x0
0x109fc5 -> mov rdi,rax
0x105fc7 -> mov dword ptr [rbp + -0x34],0x0
0x109fc8 -> call 0x001036fe
0x107fc8 -> mov rdi,rax
0x10bfca -> call g_log
0x103fca -> call fwrite
0x107fcb -> call g_free
0x109fcd -> mov rax,qword ptr [rbp + -0x28]
0x105fce -> mov rax,qword ptr [rbp + -0x28]
0x10bfcf -> mov rax,qword ptr [rbp + -0x88]
0x103fcf -> mov edi,0x1
0x107fd0 -> mov rax,qword ptr [rbp + -0x28]
0x109fd1 -> mov eax,dword ptr [rax + 0x100]
0x105fd2 -> mov eax,dword ptr [rax + 0x8]
0x107fd4 -> mov rax,qword ptr [rax + 0xe8]
0x103fd4 -> call exit
0x105fd5 -> sub eax,0x1
0x10bfd6 -> test rax,rax
0x109fd7 -> cmp eax,-0x1
0x105fd8 -> mov dword ptr [rbp + -0x30],eax
0x10bfd9 -> jz 0x0010bff6
0x103fd9 -> mov rax,qword ptr [0x003111a0]
0x109fda -> jz 0x00109ff9
0x10bfdb -> lea rdx,[0x10f3d8]
0x107fdb -> mov rcx,rax
0x105fdb -> jmp 0x0010604c
0x109fdc -> mov rax,qword ptr [rbp + -0x28]
0x105fdd -> mov edx,dword ptr [rbp + -0x34]
0x107fde -> lea rdx,[0x10e808]
0x109fe0 -> mov eax,dword ptr [rax + 0x100]
0x105fe0 -> mov eax,dword ptr [rbp + -0x30]
0x103fe0 -> mov rdi,rax
0x10bfe2 -> mov esi,0x10
0x105fe3 -> add eax,edx
0x103fe3 -> call strlen
0x107fe5 -> mov esi,0x20
0x105fe5 -> mov edx,eax
0x109fe6 -> mov rcx,qword ptr [rbp + -0x20]
0x10bfe7 -> mov edi,0x0
0x105fe7 -> shr edx,0x1f
0x103fe8 -> sub rax,0x1
0x109fea -> mov edx,0x1c
0x107fea -> mov edi,0x0
0x105fea -> add eax,edx
0x10bfec -> mov eax,0x0
0x105fec -> sar eax,0x1
0x103fec -> mov qword ptr [rbp + -0x188],rax
0x105fee -> mov dword ptr [rbp + -0x2c],eax
0x109fef -> mov rsi,rcx
0x107fef -> mov eax,0x0
0x10bff1 -> call g_log
0x105ff1 -> mov rax,qword ptr [rbp + -0x28]
0x109ff2 -> mov edi,eax
0x103ff3 -> mov rdx,qword ptr [0x003111a0]
0x109ff4 -> call 0x0010d7a5
0x107ff4 -> call g_log
0x105ff5 -> mov rax,qword ptr [rax]
0x10bff6 -> mov rax,qword ptr [rbp + -0x88]
0x105ff8 -> mov edx,dword ptr [rbp + -0x2c]
0x109ff9 -> mov rax,qword ptr [rbp + -0x20]
0x107ff9 -> mov rax,qword ptr [rbp + -0x28]
0x103ffa -> mov rax,qword ptr [rbp + -0x188]
0x105ffb -> movsxd rdx,edx
0x10bffd -> test rax,rax
0x109ffd -> mov rax,qword ptr [rax + 0x10]
0x107ffd -> mov rax,qword ptr [rax + 0xe8]
0x105ffe -> shl rdx,0x4
0x1086eb
0x108b99
0x10953a
0x109558
0x10769f
0x109741
rien pour l'instant
mov rdi,rax
rien pour l'instant
[disasm:info] Starting from default entry point 0x00003590
[disasm:info] Using section until d8be
[disasm:result] Linear disassembly from 0x00003590 to 0x0000d8be
# -- 0x00003590 31 ed                                  xor %ebp,%ebp
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rbp<64> := 0<64>;
 7: goto (0x00003592, 0) 


# -- 0x00003592 49 89 d1                               mov %rdx,%r9
 0: %%0<64> := rdx<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x00003595, 0) 


# -- 0x00003595 5e                                     pop %rsi
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rsi<64> := %%1<64>;
 4: goto (0x00003596, 0) 


# -- 0x00003596 48 89 e2                               mov %rsp,%rdx
 0: %%0<64> := rsp<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003599, 0) 


# -- 0x00003599 48 83 e4 f0                            and $0xfffffffffffffff0,%rsp
 0: %%0<64> := (-16<64> & rsp<64>);
 1: %%1<1> := ! (((rsp<64>{4} ^ rsp<64>{6}) ^ (rsp<64>{5} ^ rsp<64>{7})));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & rsp<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rsp<64> := %%0<64>;
11: goto (0x0000359d, 0) 


# -- 0x0000359d 50                                     push %rax
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rax<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000359e, 0) 


# -- 0x0000359e 54                                     push %rsp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rsp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000359f, 0) 


# -- 0x0000359f 4c 8d 05 ea a2 00 00                   lea 0xa2ea(%rip),%r8
 0: r8<64> := 0x000000000000d890;
 1: goto (0x000035a6, 0) 


# -- 0x000035a6 48 8d 0d 73 a2 00 00                   lea 0xa273(%rip),%rcx
 0: rcx<64> := 0x000000000000d820;
 1: goto (0x000035ad, 0) 


# -- 0x000035ad 48 8d 3d 88 88 00 00                   lea 0x8888(%rip),%rdi
 0: rdi<64> := 0x000000000000be3c;
 1: goto (0x000035b4, 0) 


# -- 0x000035b4 ff 15 0e da 20 00                      call *0x20da0e(%rip)
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := @[0x0000000000210fc8,8];
 2: @[%%0<64>,8] := 0x00000000000035ba;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x000035ba, 0)


# -- 0x000035ba f4                                     hlt
 0: #unsupported hlt


# -- 0x000035bb 0f 1f 44 00 00                         nop
 0: goto (0x000035c0, 0) 


# -- 0x000035c0 48 8d 3d d9 db 20 00                   lea 0x20dbd9(%rip),%rdi
 0: rdi<64> := 0x00000000002111a0;
 1: goto (0x000035c7, 0) 


# -- 0x000035c7 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000035c8, 0) 


# -- 0x000035c8 48 8d 05 d1 db 20 00                   lea 0x20dbd1(%rip),%rax
 0: rax<64> := 0x00000000002111a0;
 1: goto (0x000035cf, 0) 


# -- 0x000035cf 48 39 f8                               cmp %rdi,%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := (rax<64> - rdi<64>);
 2: %%2<64> := (%%0<64> & rdi<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdi<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (rdi<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x000035d2, 0) 


# -- 0x000035d2 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000035d5, 0) 


# -- 0x000035d5 74 19                                  je 0x35f0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000035f0, 0) 
 2: goto (0x000035d7, 0) 


# -- 0x000035d7 48 8b 05 da d9 20 00                   mov 0x20d9da(%rip),%rax
 0: %%0<64> := @[0x0000000000210fb8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000035de, 0) 


# -- 0x000035de 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000035e1, 0) 


# -- 0x000035e1 74 0d                                  je 0x35f0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000035f0, 0) 
 2: goto (0x000035e3, 0) 


# -- 0x000035e3 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000035e4, 0) 


# -- 0x000035e4 ff e0                                  jmp *%rax
 0: %%0<64> := rax<64>;
 1: goto %%0<64> 


# -- 0x000035e6 66 2e 0f 1f 84 00 00 00 00 00          nop
 0: goto (0x000035f0, 0) 


# -- 0x000035f0 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000035f1, 0) 


# -- 0x000035f1 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000035f2 0f 1f 40 00                            nop
 0: goto (0x000035f6, 0) 


# -- 0x000035f6 66 2e 0f 1f 84 00 00 00 00 00          nop
 0: goto (0x00003600, 0) 


# -- 0x00003600 48 8d 3d 99 db 20 00                   lea 0x20db99(%rip),%rdi
 0: rdi<64> := 0x00000000002111a0;
 1: goto (0x00003607, 0) 


# -- 0x00003607 48 8d 35 92 db 20 00                   lea 0x20db92(%rip),%rsi
 0: rsi<64> := 0x00000000002111a0;
 1: goto (0x0000360e, 0) 


# -- 0x0000360e 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000360f, 0) 


# -- 0x0000360f 48 29 fe                               sub %rdi,%rsi
 0: %%0<64> := ! (rsi<64>);
 1: %%1<64> := (rsi<64> - rdi<64>);
 2: %%2<64> := (%%0<64> & rdi<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdi<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rsi<64> & ! (rdi<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rsi<64> := %%1<64>;
17: goto (0x00003612, 0) 


# -- 0x00003612 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003615, 0) 


# -- 0x00003615 48 c1 fe 03                            sar $0x3,%rsi
 0: %%0<64> := (rsi<64> >>s 3<64>);
 1: %%1<1> := rsi<64>{2};
 2: %%2<1> :=
     !
     ((((rsi<64>{3} ^ rsi<64>{7}) ^ (rsi<64>{5} ^ rsi<64>{9})) ^
       ((rsi<64>{4} ^ rsi<64>{8}) ^ (rsi<64>{6} ^ rsi<64>{10}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rsi<64> := %%0<64>;
12: goto (0x00003619, 0) 


# -- 0x00003619 48 89 f0                               mov %rsi,%rax
 0: %%0<64> := rsi<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000361c, 0) 


# -- 0x0000361c 48 c1 e8 3f                            shr $0x3f,%rax
 0: %%0<64> := (rax<64> >>u 63<64>);
 1: %%1<1> := rax<64>{62};
 2: %%2<1> := ! (rax<64>{63});
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00003620, 0) 


# -- 0x00003620 48 01 c6                               add %rax,%rsi
 0: %%0<64> := (rsi<64> & rax<64>);
 1: %%1<64> := (rsi<64> + rax<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rsi<64> | rax<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rsi<64>) & ! (rax<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rsi<64> := %%1<64>;
16: goto (0x00003623, 0) 


# -- 0x00003623 48 d1 fe                               sar $0x1,%rsi
 0: %%0<64> := (rsi<64> >>s 1<64>);
 1: %%1<1> := (0<64> <> (1<64> & rsi<64>));
 2: %%2<1> :=
     !
     ((((rsi<64>{1} ^ rsi<64>{5}) ^ (rsi<64>{3} ^ rsi<64>{7})) ^
       ((rsi<64>{2} ^ rsi<64>{6}) ^ (rsi<64>{4} ^ rsi<64>{8}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := 0<1>;
11: rsi<64> := %%0<64>;
12: goto (0x00003626, 0) 


# -- 0x00003626 74 18                                  je 0x3640
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003640, 0) 
 2: goto (0x00003628, 0) 


# -- 0x00003628 48 8b 05 b9 d9 20 00                   mov 0x20d9b9(%rip),%rax
 0: %%0<64> := @[0x0000000000210fe8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000362f, 0) 


# -- 0x0000362f 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003632, 0) 


# -- 0x00003632 74 0c                                  je 0x3640
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003640, 0) 
 2: goto (0x00003634, 0) 


# -- 0x00003634 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003635, 0) 


# -- 0x00003635 ff e0                                  jmp *%rax
 0: %%0<64> := rax<64>;
 1: goto %%0<64> 


# -- 0x00003637 66 0f 1f 84 00 00 00 00 00             nop
 0: goto (0x00003640, 0) 


# -- 0x00003640 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003641, 0) 


# -- 0x00003641 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003642 0f 1f 40 00                            nop
 0: goto (0x00003646, 0) 


# -- 0x00003646 66 2e 0f 1f 84 00 00 00 00 00          nop
 0: goto (0x00003650, 0) 


# -- 0x00003650 80 3d 71 db 20 00 00                   cmpb $0x0,0x20db71(%rip)
 0: %%0<8> := @[0x00000000002111c8,1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003657, 0) 


# -- 0x00003657 75 2f                                  jne 0x3688
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003688, 0) 
 2: goto (0x00003659, 0) 


# -- 0x00003659 48 83 3d 8f d9 20 00 00                cmpq $0x0,0x20d98f(%rip)
 0: %%0<64> := @[0x0000000000210ff0,8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003661, 0) 


# -- 0x00003661 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003662, 0) 


# -- 0x00003662 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003665, 0) 


# -- 0x00003665 74 0c                                  je 0x3673
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003673, 0) 
 2: goto (0x00003667, 0) 


# -- 0x00003667 48 8b 3d 9a d9 20 00                   mov 0x20d99a(%rip),%rdi
 0: %%0<64> := @[0x0000000000211008,8];
 1: rdi<64> := %%0<64>;
 2: goto (0x0000366e, 0) 


# -- 0x0000366e e8 0d ff ff ff                         call 0x3580
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003673;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003580, 0) #call with return address @ (0x00003673, 0)


# -- 0x00003673 e8 48 ff ff ff                         call 0x35c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003678;
 2: rsp<64> := %%0<64>;
 3: goto (0x000035c0, 0) #call with return address @ (0x00003678, 0)


# -- 0x00003678 c6 05 49 db 20 00 01                   movb $0x1,0x20db49(%rip)
 0: @[0x00000000002111c8,1] := 1<8>;
 1: goto (0x0000367f, 0) 


# -- 0x0000367f 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003680, 0) 


# -- 0x00003680 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003681 0f 1f 80 00 00 00 00                   nop
 0: goto (0x00003688, 0) 


# -- 0x00003688 f3 c3                                  ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000368a 66 0f 1f 44 00 00                      nop
 0: goto (0x00003690, 0) 


# -- 0x00003690 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003691, 0) 


# -- 0x00003691 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003694, 0) 


# -- 0x00003694 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003695, 0) 


# -- 0x00003695 e9 66 ff ff ff                         jmp 0x3600
 0: goto (0x00003600, 0) 


# -- 0x0000369a 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000369b, 0) 


# -- 0x0000369b 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000369e, 0) 


# -- 0x0000369e 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000036a2, 0) 


# -- 0x000036a2 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x000036a6, 0) 


# -- 0x000036a6 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x000036aa, 0) 


# -- 0x000036aa 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x000036ae, 0) 


# -- 0x000036ae 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000036b2, 0) 


# -- 0x000036b2 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000036b8, 0) 


# -- 0x000036b8 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000036bc, 0) 


# -- 0x000036bc 48 8b 4d f0                            mov -0x10(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000036c0, 0) 


# -- 0x000036c0 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000036c3, 0) 


# -- 0x000036c3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000036c5, 0) 


# -- 0x000036c5 e8 4e a0 00 00                         call 0xd718
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000036ca;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d718, 0) #call with return address @ (0x000036ca, 0)


# -- 0x000036ca c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000036cb, 0) 


# -- 0x000036cb c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000036cc 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036cd, 0) 


# -- 0x000036cd 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000036d0, 0) 


# -- 0x000036d0 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000036d4, 0) 


# -- 0x000036d4 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x000036d8, 0) 


# -- 0x000036d8 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x000036dc, 0) 


# -- 0x000036dc 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x000036e0, 0) 


# -- 0x000036e0 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000036e4, 0) 


# -- 0x000036e4 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000036ea, 0) 


# -- 0x000036ea 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000036ee, 0) 


# -- 0x000036ee 48 8b 4d f0                            mov -0x10(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000036f2, 0) 


# -- 0x000036f2 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000036f5, 0) 


# -- 0x000036f5 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000036f7, 0) 


# -- 0x000036f7 e8 a9 a0 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000036fc;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x000036fc, 0)


# -- 0x000036fc c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000036fd, 0) 


# -- 0x000036fd c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000036fe 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036ff, 0) 


# -- 0x000036ff 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003702, 0) 


# -- 0x00003702 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003706, 0) 


# -- 0x00003706 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000370a, 0) 


# -- 0x0000370a 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x0000370e, 0) 


# -- 0x0000370e 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x00003712, 0) 


# -- 0x00003712 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003716, 0) 


# -- 0x00003716 48 8b 80 38 01 00 00                   mov 0x138(%rax),%rax
 0: %%0<64> := @[(rax<64> + 312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000371d, 0) 


# -- 0x0000371d 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003720, 0) 


# -- 0x00003720 75 24                                  jne 0x3746
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003746, 0) 
 2: goto (0x00003722, 0) 


# -- 0x00003722 4c 8d 05 af a1 00 00                   lea 0xa1af(%rip),%r8
 0: r8<64> := 0x000000000000d8d8;
 1: goto (0x00003729, 0) 


# -- 0x00003729 48 8d 0d 38 bd 00 00                   lea 0xbd38(%rip),%rcx
 0: rcx<64> := 0x000000000000f468;
 1: goto (0x00003730, 0) 


# -- 0x00003730 ba 78 01 00 00                         mov $0x178,%edx
 0: rdx<64> := 376<64>;
 1: goto (0x00003735, 0) 


# -- 0x00003735 48 8d 35 b8 a1 00 00                   lea 0xa1b8(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x0000373c, 0) 


# -- 0x0000373c bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00003741, 0) 


# -- 0x00003741 e8 ea f7 ff ff                         call 0x2f30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003746;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f30, 0) #call with return address @ (0x00003746, 0)


# -- 0x00003746 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000374a, 0) 


# -- 0x0000374a 48 8b 80 38 01 00 00                   mov 0x138(%rax),%rax
 0: %%0<64> := @[(rax<64> + 312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003751, 0) 


# -- 0x00003751 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00003755, 0) 


# -- 0x00003755 48 8b 75 f0                            mov -0x10(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00003759, 0) 


# -- 0x00003759 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000375d, 0) 


# -- 0x0000375d 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003760, 0) 


# -- 0x00003760 ff d0                                  call *%rax
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := rax<64>;
 2: @[%%0<64>,8] := 0x0000000000003762;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x00003762, 0)


# -- 0x00003762 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003764, 0) 


# -- 0x00003764 79 48                                  jns 0x37ae
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x000037ae, 0) 
 2: goto (0x00003766, 0) 


# -- 0x00003766 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000376a, 0) 


# -- 0x0000376a 48 8b 80 48 01 00 00                   mov 0x148(%rax),%rax
 0: %%0<64> := @[(rax<64> + 328<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003771, 0) 


# -- 0x00003771 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003774, 0) 


# -- 0x00003774 75 24                                  jne 0x379a
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000379a, 0) 
 2: goto (0x00003776, 0) 


# -- 0x00003776 4c 8d 05 84 a1 00 00                   lea 0xa184(%rip),%r8
 0: r8<64> := 0x000000000000d901;
 1: goto (0x0000377d, 0) 


# -- 0x0000377d 48 8d 0d e4 bc 00 00                   lea 0xbce4(%rip),%rcx
 0: rcx<64> := 0x000000000000f468;
 1: goto (0x00003784, 0) 


# -- 0x00003784 ba 7a 01 00 00                         mov $0x17a,%edx
 0: rdx<64> := 378<64>;
 1: goto (0x00003789, 0) 


# -- 0x00003789 48 8d 35 64 a1 00 00                   lea 0xa164(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00003790, 0) 


# -- 0x00003790 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00003795, 0) 


# -- 0x00003795 e8 96 f7 ff ff                         call 0x2f30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000379a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f30, 0) #call with return address @ (0x0000379a, 0)


# -- 0x0000379a 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000379e, 0) 


# -- 0x0000379e 48 8b 80 48 01 00 00                   mov 0x148(%rax),%rax
 0: %%0<64> := @[(rax<64> + 328<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000037a5, 0) 


# -- 0x000037a5 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000037a9, 0) 


# -- 0x000037a9 48 89 d7                               mov %rdx,%rdi
 0: %%0<64> := rdx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000037ac, 0) 


# -- 0x000037ac ff d0                                  call *%rax
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := rax<64>;
 2: @[%%0<64>,8] := 0x00000000000037ae;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x000037ae, 0)


# -- 0x000037ae 90                                     nop
 0: goto (0x000037af, 0) 


# -- 0x000037af c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000037b0, 0) 


# -- 0x000037b0 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000037b1 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000037b2, 0) 


# -- 0x000037b2 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000037b5, 0) 


# -- 0x000037b5 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000037b9, 0) 


# -- 0x000037b9 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x000037bd, 0) 


# -- 0x000037bd 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x000037c1, 0) 


# -- 0x000037c1 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x000037c5, 0) 


# -- 0x000037c5 48 89 4d d0                            mov %rcx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rcx<64>;
 1: goto (0x000037c9, 0) 


# -- 0x000037c9 eb 30                                  jmp 0x37fb
 0: goto (0x000037fb, 0) 


# -- 0x000037cb 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000037cf, 0) 


# -- 0x000037cf 48 39 45 e0                            cmp %rax,-0x20(%rbp)
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x000037d3, 0) 


# -- 0x000037d3 48 0f 46 45 e0                         cmovbe -0x20(%rbp),%rax
 0: %%0<64> := (cf<1> | zf<1>) ? @[(rbp<64> + -32<64>),8] : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x000037d8, 0) 


# -- 0x000037d8 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000037dc, 0) 


# -- 0x000037dc 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000037e0, 0) 


# -- 0x000037e0 48 8b 4d d8                            mov -0x28(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000037e4, 0) 


# -- 0x000037e4 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000037e8, 0) 


# -- 0x000037e8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000037eb, 0) 


# -- 0x000037eb 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000037ee, 0) 


# -- 0x000037ee e8 0b ff ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000037f3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x000037f3, 0)


# -- 0x000037f3 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000037f7, 0) 


# -- 0x000037f7 48 29 45 e0                            sub %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x000037fb, 0) 


# -- 0x000037fb 48 83 7d e0 00                         cmpq $0x0,-0x20(%rbp)
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003800, 0) 


# -- 0x00003800 75 c9                                  jne 0x37cb
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000037cb, 0) 
 2: goto (0x00003802, 0) 


# -- 0x00003802 90                                     nop
 0: goto (0x00003803, 0) 


# -- 0x00003803 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003804, 0) 


# -- 0x00003804 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003805 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003806, 0) 


# -- 0x00003806 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003809, 0) 


# -- 0x00003809 48 81 ec 30 04 00 00                   sub $0x430,%rsp
 0: %%0<64> := (rsp<64> - 1072<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003810, 0) 


# -- 0x00003810 48 89 bd d8 fb ff ff                   mov %rdi,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),8] := rdi<64>;
 1: goto (0x00003817, 0) 


# -- 0x00003817 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003820, 0) 


# -- 0x00003820 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00003824, 0) 


# -- 0x00003824 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00003826, 0) 


# -- 0x00003826 48 8d 8d ec fb ff ff                   lea -0x414(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1044<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000382d, 0) 


# -- 0x0000382d 48 8b 85 d8 fb ff ff                   mov -0x428(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003834, 0) 


# -- 0x00003834 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00003839, 0) 


# -- 0x00003839 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000383c, 0) 


# -- 0x0000383c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000383f, 0) 


# -- 0x0000383f e8 ba fe ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003844;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00003844, 0)


# -- 0x00003844 8b 85 ec fb ff ff                      mov -0x414(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1044<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000384a, 0) 


# -- 0x0000384a 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000384c, 0) 


# -- 0x0000384c e8 5f fc ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003851;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x00003851, 0)


# -- 0x00003851 89 85 ec fb ff ff                      mov %eax,-0x414(%rbp)
 0: @[(rbp<64> + -1044<64>),4] := rax<64>{0,31};
 1: goto (0x00003857, 0) 


# -- 0x00003857 8b 85 ec fb ff ff                      mov -0x414(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1044<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000385d, 0) 


# -- 0x0000385d 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000385f, 0) 


# -- 0x0000385f 48 8d 95 f0 fb ff ff                   lea -0x410(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -1040<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00003866, 0) 


# -- 0x00003866 48 8b 85 d8 fb ff ff                   mov -0x428(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000386d, 0) 


# -- 0x0000386d b9 00 04 00 00                         mov $0x400,%ecx
 0: rcx<64> := 1024<64>;
 1: goto (0x00003872, 0) 


# -- 0x00003872 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003875, 0) 


# -- 0x00003875 e8 37 ff ff ff                         call 0x37b1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000387a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000037b1, 0) #call with return address @ (0x0000387a, 0)


# -- 0x0000387a 90                                     nop
 0: goto (0x0000387b, 0) 


# -- 0x0000387b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000387f, 0) 


# -- 0x0000387f 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00003888, 0) 


# -- 0x00003888 74 05                                  je 0x388f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000388f, 0) 
 2: goto (0x0000388a, 0) 


# -- 0x0000388a e8 e1 f5 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000388f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000388f, 0)


# -- 0x0000388f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003890, 0) 


# -- 0x00003890 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003891 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003892, 0) 


# -- 0x00003892 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003895, 0) 


# -- 0x00003895 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003899, 0) 


# -- 0x00003899 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000389d, 0) 


# -- 0x0000389d 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x000038a1, 0) 


# -- 0x000038a1 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x000038a5, 0) 


# -- 0x000038a5 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000038a9, 0) 


# -- 0x000038a9 48 8b 80 40 01 00 00                   mov 0x140(%rax),%rax
 0: %%0<64> := @[(rax<64> + 320<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000038b0, 0) 


# -- 0x000038b0 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000038b3, 0) 


# -- 0x000038b3 75 24                                  jne 0x38d9
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000038d9, 0) 
 2: goto (0x000038b5, 0) 


# -- 0x000038b5 4c 8d 05 63 a0 00 00                   lea 0xa063(%rip),%r8
 0: r8<64> := 0x000000000000d91f;
 1: goto (0x000038bc, 0) 


# -- 0x000038bc 48 8d 0d b5 bb 00 00                   lea 0xbbb5(%rip),%rcx
 0: rcx<64> := 0x000000000000f478;
 1: goto (0x000038c3, 0) 


# -- 0x000038c3 ba 9f 01 00 00                         mov $0x19f,%edx
 0: rdx<64> := 415<64>;
 1: goto (0x000038c8, 0) 


# -- 0x000038c8 48 8d 35 25 a0 00 00                   lea 0xa025(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x000038cf, 0) 


# -- 0x000038cf bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000038d4, 0) 


# -- 0x000038d4 e8 57 f6 ff ff                         call 0x2f30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000038d9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f30, 0) #call with return address @ (0x000038d9, 0)


# -- 0x000038d9 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000038dd, 0) 


# -- 0x000038dd 48 8b 80 40 01 00 00                   mov 0x140(%rax),%rax
 0: %%0<64> := @[(rax<64> + 320<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000038e4, 0) 


# -- 0x000038e4 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000038e8, 0) 


# -- 0x000038e8 48 8b 75 f0                            mov -0x10(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000038ec, 0) 


# -- 0x000038ec 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000038f0, 0) 


# -- 0x000038f0 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000038f3, 0) 


# -- 0x000038f3 ff d0                                  call *%rax
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := rax<64>;
 2: @[%%0<64>,8] := 0x00000000000038f5;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x000038f5, 0)


# -- 0x000038f5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000038f7, 0) 


# -- 0x000038f7 79 48                                  jns 0x3941
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00003941, 0) 
 2: goto (0x000038f9, 0) 


# -- 0x000038f9 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000038fd, 0) 


# -- 0x000038fd 48 8b 80 48 01 00 00                   mov 0x148(%rax),%rax
 0: %%0<64> := @[(rax<64> + 328<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003904, 0) 


# -- 0x00003904 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003907, 0) 


# -- 0x00003907 75 24                                  jne 0x392d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000392d, 0) 
 2: goto (0x00003909, 0) 


# -- 0x00003909 4c 8d 05 f1 9f 00 00                   lea 0x9ff1(%rip),%r8
 0: r8<64> := 0x000000000000d901;
 1: goto (0x00003910, 0) 


# -- 0x00003910 48 8d 0d 61 bb 00 00                   lea 0xbb61(%rip),%rcx
 0: rcx<64> := 0x000000000000f478;
 1: goto (0x00003917, 0) 


# -- 0x00003917 ba a1 01 00 00                         mov $0x1a1,%edx
 0: rdx<64> := 417<64>;
 1: goto (0x0000391c, 0) 


# -- 0x0000391c 48 8d 35 d1 9f 00 00                   lea 0x9fd1(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00003923, 0) 


# -- 0x00003923 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00003928, 0) 


# -- 0x00003928 e8 03 f6 ff ff                         call 0x2f30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000392d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f30, 0) #call with return address @ (0x0000392d, 0)


# -- 0x0000392d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003931, 0) 


# -- 0x00003931 48 8b 80 48 01 00 00                   mov 0x148(%rax),%rax
 0: %%0<64> := @[(rax<64> + 328<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003938, 0) 


# -- 0x00003938 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000393c, 0) 


# -- 0x0000393c 48 89 d7                               mov %rdx,%rdi
 0: %%0<64> := rdx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000393f, 0) 


# -- 0x0000393f ff d0                                  call *%rax
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := rax<64>;
 2: @[%%0<64>,8] := 0x0000000000003941;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x00003941, 0)


# -- 0x00003941 90                                     nop
 0: goto (0x00003942, 0) 


# -- 0x00003942 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003943, 0) 


# -- 0x00003943 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003944 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003945, 0) 


# -- 0x00003945 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003948, 0) 


# -- 0x00003948 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000394c, 0) 


# -- 0x0000394c 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x00003950, 0) 


# -- 0x00003950 48 8d 3d e5 9f 00 00                   lea 0x9fe5(%rip),%rdi
 0: rdi<64> := 0x000000000000d93c;
 1: goto (0x00003957, 0) 


# -- 0x00003957 e8 dc 9c 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000395c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000395c, 0)


# -- 0x0000395c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000395d, 0) 


# -- 0x0000395d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003960, 0) 


# -- 0x00003960 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003964, 0) 


# -- 0x00003964 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x00003968, 0) 


# -- 0x00003968 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000396c, 0) 


# -- 0x0000396c c7 45 f4 00 00 00 00                   movl $0x0,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := 0<32>;
 1: goto (0x00003973, 0) 


# -- 0x00003973 48 83 7d e8 00                         cmpq $0x0,-0x18(%rbp)
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003978, 0) 


# -- 0x00003978 74 42                                  je 0x39bc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000039bc, 0) 
 2: goto (0x0000397a, 0) 


# -- 0x0000397a 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000397e, 0) 


# -- 0x0000397e 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003981, 0) 


# -- 0x00003981 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003983, 0) 


# -- 0x00003983 74 37                                  je 0x39bc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000039bc, 0) 
 2: goto (0x00003985, 0) 


# -- 0x00003985 48 8b 55 e0                            mov -0x20(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00003989, 0) 


# -- 0x00003989 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000398d, 0) 


# -- 0x0000398d 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003990, 0) 


# -- 0x00003990 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003993, 0) 


# -- 0x00003993 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003998, 0) 


# -- 0x00003998 e8 53 f7 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000399d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000399d, 0)


# -- 0x0000399d 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000039a1, 0) 


# -- 0x000039a1 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039a5, 0) 


# -- 0x000039a5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000039a8, 0) 


# -- 0x000039a8 e8 e3 f4 ff ff                         call 0x2e90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000039ad;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e90, 0) #call with return address @ (0x000039ad, 0)


# -- 0x000039ad 89 45 f4                               mov %eax,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := rax<64>{0,31};
 1: goto (0x000039b0, 0) 


# -- 0x000039b0 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039b4, 0) 


# -- 0x000039b4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000039b7, 0) 


# -- 0x000039b7 e8 44 f3 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000039bc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000039bc, 0)


# -- 0x000039bc 8b 45 f4                               mov -0xc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000039bf, 0) 


# -- 0x000039bf c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000039c0, 0) 


# -- 0x000039c0 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000039c1 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000039c2, 0) 


# -- 0x000039c2 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000039c5, 0) 


# -- 0x000039c5 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000039c9, 0) 


# -- 0x000039c9 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x000039cd, 0) 


# -- 0x000039cd 48 8b 05 b4 d9 20 00                   mov 0x20d9b4(%rip),%rax
 0: %%0<64> := @[0x0000000000211388,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039d4, 0) 


# -- 0x000039d4 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x000039d9, 0) 


# -- 0x000039d9 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x000039de, 0) 


# -- 0x000039de 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000039e1, 0) 


# -- 0x000039e1 e8 ba f9 ff ff                         call 0x33a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000039e6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033a0, 0) #call with return address @ (0x000039e6, 0)


# -- 0x000039e6 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039ea, 0) 


# -- 0x000039ea 48 8b 90 90 00 00 00                   mov 0x90(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000039f1, 0) 


# -- 0x000039f1 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039f5, 0) 


# -- 0x000039f5 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000039fc, 0) 


# -- 0x000039fc 48 8b 40 38                            mov 0x38(%rax),%rax
 0: %%0<64> := @[(rax<64> + 56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a00, 0) 


# -- 0x00003a00 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003a03, 0) 


# -- 0x00003a03 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003a06, 0) 


# -- 0x00003a06 e8 51 ff ff ff                         call 0x395c
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a0b;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000395c, 0) #call with return address @ (0x00003a0b, 0)


# -- 0x00003a0b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a0f, 0) 


# -- 0x00003a0f 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003a15, 0) 


# -- 0x00003a15 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x00003a18, 0) 


# -- 0x00003a18 74 1f                                  je 0x3a39
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003a39, 0) 
 2: goto (0x00003a1a, 0) 


# -- 0x00003a1a 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a1e, 0) 


# -- 0x00003a1e 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003a24, 0) 


# -- 0x00003a24 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00003a26, 0) 


# -- 0x00003a26 e8 75 f5 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a2b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x00003a2b, 0)


# -- 0x00003a2b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a2f, 0) 


# -- 0x00003a2f c7 80 00 01 00 00 ff ff ff ff          movl $0xffffffff,0x100(%rax)
 0: @[(rax<64> + 256<64>),4] := -1<32>;
 1: goto (0x00003a39, 0) 


# -- 0x00003a39 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a3d, 0) 


# -- 0x00003a3d 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a44, 0) 


# -- 0x00003a44 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003a47, 0) 


# -- 0x00003a47 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00003a4a, 0) 


# -- 0x00003a4a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003a4c, 0) 


# -- 0x00003a4c 74 13                                  je 0x3a61
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003a61, 0) 
 2: goto (0x00003a4e, 0) 


# -- 0x00003a4e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a52, 0) 


# -- 0x00003a52 48 8b 80 e8 00 00 00                   mov 0xe8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 232<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a59, 0) 


# -- 0x00003a59 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003a5c, 0) 


# -- 0x00003a5c e8 3f f2 ff ff                         call 0x2ca0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a61;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ca0, 0) #call with return address @ (0x00003a61, 0)


# -- 0x00003a61 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a65, 0) 


# -- 0x00003a65 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a6c, 0) 


# -- 0x00003a6c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003a6f, 0) 


# -- 0x00003a6f e8 e4 92 00 00                         call 0xcd58
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a74;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd58, 0) #call with return address @ (0x00003a74, 0)


# -- 0x00003a74 90                                     nop
 0: goto (0x00003a75, 0) 


# -- 0x00003a75 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003a76, 0) 


# -- 0x00003a76 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003a77 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003a78, 0) 


# -- 0x00003a78 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003a7b, 0) 


# -- 0x00003a7b 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003a7f, 0) 


# -- 0x00003a7f 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x00003a83, 0) 


# -- 0x00003a83 e8 f8 f1 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a88;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00003a88, 0)


# -- 0x00003a88 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003a8a, 0) 


# -- 0x00003a8a 89 45 fc                               mov %eax,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rax<64>{0,31};
 1: goto (0x00003a8d, 0) 


# -- 0x00003a8d 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003a91, 0) 


# -- 0x00003a91 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003a94, 0) 


# -- 0x00003a94 e8 28 ff ff ff                         call 0x39c1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a99;
 2: rsp<64> := %%0<64>;
 3: goto (0x000039c1, 0) #call with return address @ (0x00003a99, 0)


# -- 0x00003a99 e8 e2 f1 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003a9e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00003a9e, 0)


# -- 0x00003a9e 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003aa1, 0) 


# -- 0x00003aa1 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003aa4, 0) 


# -- 0x00003aa4 89 02                                  mov %eax,(%rdx)
 0: @[rdx<64>,4] := rax<64>{0,31};
 1: goto (0x00003aa6, 0) 


# -- 0x00003aa6 48 8d 3d a6 9e 00 00                   lea 0x9ea6(%rip),%rdi
 0: rdi<64> := 0x000000000000d953;
 1: goto (0x00003aad, 0) 


# -- 0x00003aad e8 86 9b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003ab2;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x00003ab2, 0)


# -- 0x00003ab2 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003ab3, 0) 


# -- 0x00003ab3 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003ab6, 0) 


# -- 0x00003ab6 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003aba, 0) 


# -- 0x00003aba 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x00003abd, 0) 


# -- 0x00003abd 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x00003ac1, 0) 


# -- 0x00003ac1 89 55 e8                               mov %edx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := rdx<64>{0,31};
 1: goto (0x00003ac4, 0) 


# -- 0x00003ac4 48 89 4d d8                            mov %rcx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rcx<64>;
 1: goto (0x00003ac8, 0) 


# -- 0x00003ac8 4c 89 45 d0                            mov %r8,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := r8<64>;
 1: goto (0x00003acc, 0) 


# -- 0x00003acc eb 41                                  jmp 0x3b0f
 0: goto (0x00003b0f, 0) 


# -- 0x00003ace 48 8b 7d d0                            mov -0x30(%rbp),%rdi
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x00003ad2, 0) 


# -- 0x00003ad2 48 8b 4d d8                            mov -0x28(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00003ad6, 0) 


# -- 0x00003ad6 8b 55 e8                               mov -0x18(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00003ad9, 0) 


# -- 0x00003ad9 48 8b 75 e0                            mov -0x20(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00003add, 0) 


# -- 0x00003add 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003ae0, 0) 


# -- 0x00003ae0 41 b9 01 00 00 00                      mov $0x1,%r9d
 0: r9<64> := 1<64>;
 1: goto (0x00003ae6, 0) 


# -- 0x00003ae6 49 89 f8                               mov %rdi,%r8
 0: %%0<64> := rdi<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00003ae9, 0) 


# -- 0x00003ae9 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00003aeb, 0) 


# -- 0x00003aeb e8 00 f2 ff ff                         call 0x2cf0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003af0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cf0, 0) #call with return address @ (0x00003af0, 0)


# -- 0x00003af0 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00003af4, 0) 


# -- 0x00003af4 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003af9, 0) 


# -- 0x00003af9 7f 0c                                  jg 0x3b07
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00003b07, 0) 
 2: goto (0x00003afb, 0) 


# -- 0x00003afb 48 8d 3d 68 9e 00 00                   lea 0x9e68(%rip),%rdi
 0: rdi<64> := 0x000000000000d96a;
 1: goto (0x00003b02, 0) 


# -- 0x00003b02 e8 31 9b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b07;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x00003b07, 0)


# -- 0x00003b07 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003b0b, 0) 


# -- 0x00003b0b 48 29 45 d0                            sub %rax,-0x30(%rbp)
 0: %%0<64> := (rbp<64> + -48<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00003b0f, 0) 


# -- 0x00003b0f 48 83 7d d0 00                         cmpq $0x0,-0x30(%rbp)
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003b14, 0) 


# -- 0x00003b14 75 b8                                  jne 0x3ace
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003ace, 0) 
 2: goto (0x00003b16, 0) 


# -- 0x00003b16 90                                     nop
 0: goto (0x00003b17, 0) 


# -- 0x00003b17 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003b18, 0) 


# -- 0x00003b18 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003b19 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003b1a, 0) 


# -- 0x00003b1a 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003b1d, 0) 


# -- 0x00003b1d 48 8d 3d 5c 9e 00 00                   lea 0x9e5c(%rip),%rdi
 0: rdi<64> := 0x000000000000d980;
 1: goto (0x00003b24, 0) 


# -- 0x00003b24 e8 27 f2 ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b29;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x00003b29, 0)


# -- 0x00003b29 48 8d 3d 70 9e 00 00                   lea 0x9e70(%rip),%rdi
 0: rdi<64> := 0x000000000000d9a0;
 1: goto (0x00003b30, 0) 


# -- 0x00003b30 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003b35, 0) 


# -- 0x00003b35 e8 96 f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b3a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003b3a, 0)


# -- 0x00003b3a 48 8d 35 4f a2 00 00                   lea 0xa24f(%rip),%rsi
 0: rsi<64> := 0x000000000000dd90;
 1: goto (0x00003b41, 0) 


# -- 0x00003b41 48 8d 3d 69 a2 00 00                   lea 0xa269(%rip),%rdi
 0: rdi<64> := 0x000000000000ddb1;
 1: goto (0x00003b48, 0) 


# -- 0x00003b48 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003b4d, 0) 


# -- 0x00003b4d e8 7e f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b52;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003b52, 0)


# -- 0x00003b52 48 8d 35 75 a2 00 00                   lea 0xa275(%rip),%rsi
 0: rsi<64> := 0x000000000000ddce;
 1: goto (0x00003b59, 0) 


# -- 0x00003b59 48 8d 3d 88 a2 00 00                   lea 0xa288(%rip),%rdi
 0: rdi<64> := 0x000000000000dde8;
 1: goto (0x00003b60, 0) 


# -- 0x00003b60 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003b65, 0) 


# -- 0x00003b65 e8 66 f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b6a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003b6a, 0)


# -- 0x00003b6a 90                                     nop
 0: goto (0x00003b6b, 0) 


# -- 0x00003b6b 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00003b6c, 0) 


# -- 0x00003b6c c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00003b6d 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003b6e, 0) 


# -- 0x00003b6e 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003b71, 0) 


# -- 0x00003b71 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003b75, 0) 


# -- 0x00003b75 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x00003b79, 0) 


# -- 0x00003b79 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x00003b7d, 0) 


# -- 0x00003b7d 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003b81, 0) 


# -- 0x00003b81 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003b84, 0) 


# -- 0x00003b84 48 8d 3d 95 a2 00 00                   lea 0xa295(%rip),%rdi
 0: rdi<64> := 0x000000000000de20;
 1: goto (0x00003b8b, 0) 


# -- 0x00003b8b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003b90, 0) 


# -- 0x00003b90 e8 3b f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003b95;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003b95, 0)


# -- 0x00003b95 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003b99, 0) 


# -- 0x00003b99 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003b9c, 0) 


# -- 0x00003b9c 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003b9f, 0) 


# -- 0x00003b9f 48 8d 3d 80 a2 00 00                   lea 0xa280(%rip),%rdi
 0: rdi<64> := 0x000000000000de26;
 1: goto (0x00003ba6, 0) 


# -- 0x00003ba6 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003bab, 0) 


# -- 0x00003bab e8 20 f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003bb0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003bb0, 0)


# -- 0x00003bb0 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003bb4, 0) 


# -- 0x00003bb4 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003bb8, 0) 


# -- 0x00003bb8 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003bbb, 0) 


# -- 0x00003bbb 48 8d 3d 76 a2 00 00                   lea 0xa276(%rip),%rdi
 0: rdi<64> := 0x000000000000de38;
 1: goto (0x00003bc2, 0) 


# -- 0x00003bc2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003bc7, 0) 


# -- 0x00003bc7 e8 04 f3 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003bcc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003bcc, 0)


# -- 0x00003bcc 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003bd0, 0) 


# -- 0x00003bd0 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003bd3, 0) 


# -- 0x00003bd3 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00003bd6, 0) 


# -- 0x00003bd6 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003bd8, 0) 


# -- 0x00003bd8 74 0c                                  je 0x3be6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003be6, 0) 
 2: goto (0x00003bda, 0) 


# -- 0x00003bda 48 8d 3d 69 a2 00 00                   lea 0xa269(%rip),%rdi
 0: rdi<64> := 0x000000000000de4a;
 1: goto (0x00003be1, 0) 


# -- 0x00003be1 e8 6a f1 ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003be6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x00003be6, 0)


# -- 0x00003be6 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003bea, 0) 


# -- 0x00003bea 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003bed, 0) 


# -- 0x00003bed 83 e0 02                               and $0x2,%eax
 0: %%0<32> := (2<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{1});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00003bf0, 0) 


# -- 0x00003bf0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003bf2, 0) 


# -- 0x00003bf2 74 0c                                  je 0x3c00
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003c00, 0) 
 2: goto (0x00003bf4, 0) 


# -- 0x00003bf4 48 8d 3d 60 a2 00 00                   lea 0xa260(%rip),%rdi
 0: rdi<64> := 0x000000000000de5b;
 1: goto (0x00003bfb, 0) 


# -- 0x00003bfb e8 50 f1 ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c00;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x00003c00, 0)


# -- 0x00003c00 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c04, 0) 


# -- 0x00003c04 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003c07, 0) 


# -- 0x00003c07 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00003c0c, 0) 


# -- 0x00003c0c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003c0e, 0) 


# -- 0x00003c0e 74 0c                                  je 0x3c1c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003c1c, 0) 
 2: goto (0x00003c10, 0) 


# -- 0x00003c10 48 8d 3d 56 a2 00 00                   lea 0xa256(%rip),%rdi
 0: rdi<64> := 0x000000000000de6d;
 1: goto (0x00003c17, 0) 


# -- 0x00003c17 e8 34 f1 ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c1c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x00003c1c, 0)


# -- 0x00003c1c 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c20, 0) 


# -- 0x00003c20 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003c23, 0) 


# -- 0x00003c23 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00003c26, 0) 


# -- 0x00003c26 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003c28, 0) 


# -- 0x00003c28 74 0c                                  je 0x3c36
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003c36, 0) 
 2: goto (0x00003c2a, 0) 


# -- 0x00003c2a 48 8d 3d 4e a2 00 00                   lea 0xa24e(%rip),%rdi
 0: rdi<64> := 0x000000000000de7f;
 1: goto (0x00003c31, 0) 


# -- 0x00003c31 e8 1a f1 ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c36;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x00003c36, 0)


# -- 0x00003c36 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c3a, 0) 


# -- 0x00003c3a 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c3e, 0) 


# -- 0x00003c3e 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003c41, 0) 


# -- 0x00003c41 74 1c                                  je 0x3c5f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003c5f, 0) 
 2: goto (0x00003c43, 0) 


# -- 0x00003c43 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c47, 0) 


# -- 0x00003c47 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c4b, 0) 


# -- 0x00003c4b 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003c4e, 0) 


# -- 0x00003c4e 48 8d 3d 3e a2 00 00                   lea 0xa23e(%rip),%rdi
 0: rdi<64> := 0x000000000000de93;
 1: goto (0x00003c55, 0) 


# -- 0x00003c55 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003c5a, 0) 


# -- 0x00003c5a e8 71 f2 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c5f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003c5f, 0)


# -- 0x00003c5f 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c63, 0) 


# -- 0x00003c63 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c67, 0) 


# -- 0x00003c67 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003c6a, 0) 


# -- 0x00003c6a 74 1c                                  je 0x3c88
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003c88, 0) 
 2: goto (0x00003c6c, 0) 


# -- 0x00003c6c 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c70, 0) 


# -- 0x00003c70 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003c74, 0) 


# -- 0x00003c74 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003c77, 0) 


# -- 0x00003c77 48 8d 3d 27 a2 00 00                   lea 0xa227(%rip),%rdi
 0: rdi<64> := 0x000000000000dea5;
 1: goto (0x00003c7e, 0) 


# -- 0x00003c7e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003c83, 0) 


# -- 0x00003c83 e8 48 f2 ff ff                         call 0x2ed0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c88;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ed0, 0) #call with return address @ (0x00003c88, 0)


# -- 0x00003c88 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00003c8d, 0) 


# -- 0x00003c8d e8 be f7 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003c92;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x00003c92, 0)


# -- 0x00003c92 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003c93, 0) 


# -- 0x00003c93 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00003c96, 0) 


# -- 0x00003c96 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003c97, 0) 


# -- 0x00003c97 48 81 ec d8 01 00 00                   sub $0x1d8,%rsp
 0: %%0<64> := (rsp<64> - 472<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00003c9e, 0) 


# -- 0x00003c9e 89 bd 3c fe ff ff                      mov %edi,-0x1c4(%rbp)
 0: @[(rbp<64> + -452<64>),4] := rdi<64>{0,31};
 1: goto (0x00003ca4, 0) 


# -- 0x00003ca4 48 89 b5 30 fe ff ff                   mov %rsi,-0x1d0(%rbp)
 0: @[(rbp<64> + -464<64>),8] := rsi<64>;
 1: goto (0x00003cab, 0) 


# -- 0x00003cab 48 89 95 28 fe ff ff                   mov %rdx,-0x1d8(%rbp)
 0: @[(rbp<64> + -472<64>),8] := rdx<64>;
 1: goto (0x00003cb2, 0) 


# -- 0x00003cb2 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003cbb, 0) 


# -- 0x00003cbb 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00003cbf, 0) 


# -- 0x00003cbf 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00003cc1, 0) 


# -- 0x00003cc1 c7 85 4c fe ff ff 00 00 00 00          movl $0x0,-0x1b4(%rbp)
 0: @[(rbp<64> + -436<64>),4] := 0<32>;
 1: goto (0x00003ccb, 0) 


# -- 0x00003ccb c7 85 50 fe ff ff 00 00 00 00          movl $0x0,-0x1b0(%rbp)
 0: @[(rbp<64> + -432<64>),4] := 0<32>;
 1: goto (0x00003cd5, 0) 


# -- 0x00003cd5 48 8d 85 80 fe ff ff                   lea -0x180(%rbp),%rax
 0: %%0<64> := (rbp<64> + -384<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00003cdc, 0) 


# -- 0x00003cdc 48 8d 15 5d d3 20 00                   lea 0x20d35d(%rip),%rdx
 0: rdx<64> := 0x0000000000211040;
 1: goto (0x00003ce3, 0) 


# -- 0x00003ce3 b9 2c 00 00 00                         mov $0x2c,%ecx
 0: rcx<64> := 44<64>;
 1: goto (0x00003ce8, 0) 


# -- 0x00003ce8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003ceb, 0) 


# -- 0x00003ceb 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00003cee, 0) 


# -- 0x00003cee f3 48 a5                               rep movsq (%rsi),%es:(%rdi)
 0: if (0<64> <> rcx<64>) goto 1 else goto 2
 1: %%0<64> := (rcx<64> - 1<64>); goto 3
 2: goto (0x00003cf1, 0) 
 3: @[rdi<64>,8] := @[rsi<64>,8];
 4: if df<1> goto 6 else goto 7
 5: rcx<64> := %%0<64>; goto 14
 6: %%1<64> := (rsi<64> + -8<64>); goto 8
 7: %%1<64> := (rsi<64> + 8<64>); goto 11
 8: %%2<64> := (rdi<64> + -8<64>);
 9: rsi<64> := %%1<64>;
10: rdi<64> := %%2<64>; goto 5
11: %%2<64> := (rdi<64> + 8<64>);
12: rsi<64> := %%1<64>;
13: rdi<64> := %%2<64>; goto 5
14: goto (0x00003cee, 0) 


# -- 0x00003cf1 c6 85 4a fe ff ff 00                   movb $0x0,-0x1b6(%rbp)
 0: @[(rbp<64> + -438<64>),1] := 0<8>;
 1: goto (0x00003cf8, 0) 


# -- 0x00003cf8 48 8d 05 b6 a1 00 00                   lea 0xa1b6(%rip),%rax
 0: rax<64> := 0x000000000000deb5;
 1: goto (0x00003cff, 0) 


# -- 0x00003cff 48 89 85 68 fe ff ff                   mov %rax,-0x198(%rbp)
 0: @[(rbp<64> + -408<64>),8] := rax<64>;
 1: goto (0x00003d06, 0) 


# -- 0x00003d06 83 bd 3c fe ff ff 01                   cmpl $0x1,-0x1c4(%rbp)
 0: %%0<32> := @[(rbp<64> + -452<64>),4];
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d0d, 0) 


# -- 0x00003d0d 75 0a                                  jne 0x3d19
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003d19, 0) 
 2: goto (0x00003d0f, 0) 


# -- 0x00003d0f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00003d14, 0) 


# -- 0x00003d14 e9 ba 05 00 00                         jmp 0x42d3
 0: goto (0x000042d3, 0) 


# -- 0x00003d19 be 68 00 00 00                         mov $0x68,%esi
 0: rsi<64> := 104<64>;
 1: goto (0x00003d1e, 0) 


# -- 0x00003d1e bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00003d23, 0) 


# -- 0x00003d23 e8 58 f6 ff ff                         call 0x3380
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003d28;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003380, 0) #call with return address @ (0x00003d28, 0)


# -- 0x00003d28 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003d2b, 0) 


# -- 0x00003d2b e8 e7 8f 00 00                         call 0xcd17
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003d30;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd17, 0) #call with return address @ (0x00003d30, 0)


# -- 0x00003d30 48 89 85 58 fe ff ff                   mov %rax,-0x1a8(%rbp)
 0: @[(rbp<64> + -424<64>),8] := rax<64>;
 1: goto (0x00003d37, 0) 


# -- 0x00003d37 48 8d 3d e2 d2 20 00                   lea 0x20d2e2(%rip),%rdi
 0: rdi<64> := 0x0000000000211020;
 1: goto (0x00003d3e, 0) 


# -- 0x00003d3e e8 ed f6 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003d43;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00003d43, 0)


# -- 0x00003d43 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003d46, 0) 


# -- 0x00003d46 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003d4d, 0) 


# -- 0x00003d4d 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x00003d51, 0) 


# -- 0x00003d51 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003d58, 0) 


# -- 0x00003d58 c7 40 24 01 00 00 00                   movl $0x1,0x24(%rax)
 0: @[(rax<64> + 36<64>),4] := 1<32>;
 1: goto (0x00003d5f, 0) 


# -- 0x00003d5f e9 a2 04 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x00003d64 8b 85 54 fe ff ff                      mov -0x1ac(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -428<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003d6a, 0) 


# -- 0x00003d6a 83 f8 64                               cmp $0x64,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 100<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d6d, 0) 


# -- 0x00003d6d 0f 84 d7 03 00 00                      je 0x414a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000414a, 0) 
 2: goto (0x00003d73, 0) 


# -- 0x00003d73 83 f8 64                               cmp $0x64,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 100<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d76, 0) 


# -- 0x00003d76 7f 38                                  jg 0x3db0
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00003db0, 0) 
 2: goto (0x00003d78, 0) 


# -- 0x00003d78 83 f8 4d                               cmp $0x4d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 77<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d7b, 0) 


# -- 0x00003d7b 0f 84 34 04 00 00                      je 0x41b5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000041b5, 0) 
 2: goto (0x00003d81, 0) 


# -- 0x00003d81 83 f8 4d                               cmp $0x4d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 77<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d84, 0) 


# -- 0x00003d84 7f 13                                  jg 0x3d99
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00003d99, 0) 
 2: goto (0x00003d86, 0) 


# -- 0x00003d86 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d89, 0) 


# -- 0x00003d89 74 61                                  je 0x3dec
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003dec, 0) 
 2: goto (0x00003d8b, 0) 


# -- 0x00003d8b 83 f8 43                               cmp $0x43,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 67<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d8e, 0) 


# -- 0x00003d8e 0f 84 c5 03 00 00                      je 0x4159
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004159, 0) 
 2: goto (0x00003d94, 0) 


# -- 0x00003d94 e9 59 04 00 00                         jmp 0x41f2
 0: goto (0x000041f2, 0) 


# -- 0x00003d99 83 f8 56                               cmp $0x56,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 86<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003d9c, 0) 


# -- 0x00003d9c 0f 84 3a 04 00 00                      je 0x41dc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000041dc, 0) 
 2: goto (0x00003da2, 0) 


# -- 0x00003da2 83 f8 63                               cmp $0x63,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 99<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003da5, 0) 


# -- 0x00003da5 0f 84 81 03 00 00                      je 0x412c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000412c, 0) 
 2: goto (0x00003dab, 0) 


# -- 0x00003dab e9 42 04 00 00                         jmp 0x41f2
 0: goto (0x000041f2, 0) 


# -- 0x00003db0 83 f8 6f                               cmp $0x6f,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 111<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003db3, 0) 


# -- 0x00003db3 0f 84 2a 03 00 00                      je 0x40e3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000040e3, 0) 
 2: goto (0x00003db9, 0) 


# -- 0x00003db9 83 f8 6f                               cmp $0x6f,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 111<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003dbc, 0) 


# -- 0x00003dbc 7f 17                                  jg 0x3dd5
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00003dd5, 0) 
 2: goto (0x00003dbe, 0) 


# -- 0x00003dbe 83 f8 6c                               cmp $0x6c,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 108<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003dc1, 0) 


# -- 0x00003dc1 0f 84 bc 03 00 00                      je 0x4183
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004183, 0) 
 2: goto (0x00003dc7, 0) 


# -- 0x00003dc7 83 f8 6d                               cmp $0x6d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 109<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003dca, 0) 


# -- 0x00003dca 0f 84 f5 02 00 00                      je 0x40c5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000040c5, 0) 
 2: goto (0x00003dd0, 0) 


# -- 0x00003dd0 e9 1d 04 00 00                         jmp 0x41f2
 0: goto (0x000041f2, 0) 


# -- 0x00003dd5 83 f8 70                               cmp $0x70,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 112<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003dd8, 0) 


# -- 0x00003dd8 0f 84 27 03 00 00                      je 0x4105
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004105, 0) 
 2: goto (0x00003dde, 0) 


# -- 0x00003dde 83 f8 72                               cmp $0x72,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 114<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003de1, 0) 


# -- 0x00003de1 0f 84 c0 02 00 00                      je 0x40a7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000040a7, 0) 
 2: goto (0x00003de7, 0) 


# -- 0x00003de7 e9 06 04 00 00                         jmp 0x41f2
 0: goto (0x000041f2, 0) 


# -- 0x00003dec 8b 85 50 fe ff ff                      mov -0x1b0(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -432<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003df2, 0) 


# -- 0x00003df2 8d 50 01                               lea 0x1(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 1<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x00003df5, 0) 


# -- 0x00003df5 89 95 50 fe ff ff                      mov %edx,-0x1b0(%rbp)
 0: @[(rbp<64> + -432<64>),4] := rdx<64>{0,31};
 1: goto (0x00003dfb, 0) 


# -- 0x00003dfb 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003dfe, 0) 


# -- 0x00003dfe 0f 84 7a 01 00 00                      je 0x3f7e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003f7e, 0) 
 2: goto (0x00003e04, 0) 


# -- 0x00003e04 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003e07, 0) 


# -- 0x00003e07 0f 84 cc 01 00 00                      je 0x3fd9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003fd9, 0) 
 2: goto (0x00003e0d, 0) 


# -- 0x00003e0d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00003e0f, 0) 


# -- 0x00003e0f 0f 85 8d 02 00 00                      jne 0x40a2
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000040a2, 0) 
 2: goto (0x00003e15, 0) 


# -- 0x00003e15 48 8b 05 84 d3 20 00                   mov 0x20d384(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e1c, 0) 


# -- 0x00003e1c be 3a 00 00 00                         mov $0x3a,%esi
 0: rsi<64> := 58<64>;
 1: goto (0x00003e21, 0) 


# -- 0x00003e21 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003e24, 0) 


# -- 0x00003e24 e8 97 f0 ff ff                         call 0x2ec0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003e29;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ec0, 0) #call with return address @ (0x00003e29, 0)


# -- 0x00003e29 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x00003e2c, 0) 


# -- 0x00003e2c 48 8b 05 6d d3 20 00                   mov 0x20d36d(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e33, 0) 


# -- 0x00003e33 be 3a 00 00 00                         mov $0x3a,%esi
 0: rsi<64> := 58<64>;
 1: goto (0x00003e38, 0) 


# -- 0x00003e38 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003e3b, 0) 


# -- 0x00003e3b e8 d0 f0 ff ff                         call 0x2f10
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003e40;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f10, 0) #call with return address @ (0x00003e40, 0)


# -- 0x00003e40 48 39 c3                               cmp %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x00003e43, 0) 


# -- 0x00003e43 75 68                                  jne 0x3ead
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003ead, 0) 
 2: goto (0x00003e45, 0) 


# -- 0x00003e45 48 8b 05 54 d3 20 00                   mov 0x20d354(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e4c, 0) 


# -- 0x00003e4c ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00003e51, 0) 


# -- 0x00003e51 48 8d 35 5e a0 00 00                   lea 0xa05e(%rip),%rsi
 0: rsi<64> := 0x000000000000deb6;
 1: goto (0x00003e58, 0) 


# -- 0x00003e58 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003e5b, 0) 


# -- 0x00003e5b e8 e0 ee ff ff                         call 0x2d40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003e60;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d40, 0) #call with return address @ (0x00003e60, 0)


# -- 0x00003e60 48 89 85 70 fe ff ff                   mov %rax,-0x190(%rbp)
 0: @[(rbp<64> + -400<64>),8] := rax<64>;
 1: goto (0x00003e67, 0) 


# -- 0x00003e67 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e6e, 0) 


# -- 0x00003e6e 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00003e72, 0) 


# -- 0x00003e72 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e75, 0) 


# -- 0x00003e75 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003e78, 0) 


# -- 0x00003e78 75 55                                  jne 0x3ecf
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00003ecf, 0) 
 2: goto (0x00003e7a, 0) 


# -- 0x00003e7a 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e81, 0) 


# -- 0x00003e81 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003e84, 0) 


# -- 0x00003e84 e8 f7 f3 ff ff                         call 0x3280
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003e89;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003280, 0) #call with return address @ (0x00003e89, 0)


# -- 0x00003e89 48 8b 05 10 d3 20 00                   mov 0x20d310(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003e90, 0) 


# -- 0x00003e90 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00003e95, 0) 


# -- 0x00003e95 48 8d 35 1c a0 00 00                   lea 0xa01c(%rip),%rsi
 0: rsi<64> := 0x000000000000deb8;
 1: goto (0x00003e9c, 0) 


# -- 0x00003e9c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003e9f, 0) 


# -- 0x00003e9f e8 9c ee ff ff                         call 0x2d40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003ea4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d40, 0) #call with return address @ (0x00003ea4, 0)


# -- 0x00003ea4 48 89 85 70 fe ff ff                   mov %rax,-0x190(%rbp)
 0: @[(rbp<64> + -400<64>),8] := rax<64>;
 1: goto (0x00003eab, 0) 


# -- 0x00003eab eb 22                                  jmp 0x3ecf
 0: goto (0x00003ecf, 0) 


# -- 0x00003ead 48 8b 05 ec d2 20 00                   mov 0x20d2ec(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003eb4, 0) 


# -- 0x00003eb4 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00003eb9, 0) 


# -- 0x00003eb9 48 8d 35 f8 9f 00 00                   lea 0x9ff8(%rip),%rsi
 0: rsi<64> := 0x000000000000deb8;
 1: goto (0x00003ec0, 0) 


# -- 0x00003ec0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003ec3, 0) 


# -- 0x00003ec3 e8 78 ee ff ff                         call 0x2d40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003ec8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d40, 0) #call with return address @ (0x00003ec8, 0)


# -- 0x00003ec8 48 89 85 70 fe ff ff                   mov %rax,-0x190(%rbp)
 0: @[(rbp<64> + -400<64>),8] := rax<64>;
 1: goto (0x00003ecf, 0) 


# -- 0x00003ecf 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003ed6, 0) 


# -- 0x00003ed6 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00003eda, 0) 


# -- 0x00003eda 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003edd, 0) 


# -- 0x00003edd 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00003ee0, 0) 


# -- 0x00003ee0 74 46                                  je 0x3f28
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00003f28, 0) 
 2: goto (0x00003ee2, 0) 


# -- 0x00003ee2 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003ee9, 0) 


# -- 0x00003ee9 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00003eed, 0) 


# -- 0x00003eed 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003ef0, 0) 


# -- 0x00003ef0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003ef3, 0) 


# -- 0x00003ef3 e8 38 f5 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003ef8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00003ef8, 0)


# -- 0x00003ef8 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003efb, 0) 


# -- 0x00003efb 48 8b 85 28 fe ff ff                   mov -0x1d8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f02, 0) 


# -- 0x00003f02 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x00003f06, 0) 


# -- 0x00003f06 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f0d, 0) 


# -- 0x00003f0d 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f10, 0) 


# -- 0x00003f10 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003f13, 0) 


# -- 0x00003f13 e8 18 f5 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003f18;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00003f18, 0)


# -- 0x00003f18 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003f1b, 0) 


# -- 0x00003f1b 48 8b 85 28 fe ff ff                   mov -0x1d8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f22, 0) 


# -- 0x00003f22 48 89 50 10                            mov %rdx,0x10(%rax)
 0: @[(rax<64> + 16<64>),8] := rdx<64>;
 1: goto (0x00003f26, 0) 


# -- 0x00003f26 eb 42                                  jmp 0x3f6a
 0: goto (0x00003f6a, 0) 


# -- 0x00003f28 48 8b 85 28 fe ff ff                   mov -0x1d8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f2f, 0) 


# -- 0x00003f2f 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f33, 0) 


# -- 0x00003f33 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003f36, 0) 


# -- 0x00003f36 e8 c5 ed ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003f3b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00003f3b, 0)


# -- 0x00003f3b 48 8b 85 28 fe ff ff                   mov -0x1d8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f42, 0) 


# -- 0x00003f42 48 c7 40 10 00 00 00 00                movq $0x0,0x10(%rax)
 0: @[(rax<64> + 16<64>),8] := 0<64>;
 1: goto (0x00003f4a, 0) 


# -- 0x00003f4a 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f51, 0) 


# -- 0x00003f51 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f54, 0) 


# -- 0x00003f54 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003f57, 0) 


# -- 0x00003f57 e8 d4 f4 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003f5c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00003f5c, 0)


# -- 0x00003f5c 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003f5f, 0) 


# -- 0x00003f5f 48 8b 85 28 fe ff ff                   mov -0x1d8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f66, 0) 


# -- 0x00003f66 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x00003f6a, 0) 


# -- 0x00003f6a 48 8b 85 70 fe ff ff                   mov -0x190(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -400<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f71, 0) 


# -- 0x00003f71 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003f74, 0) 


# -- 0x00003f74 e8 07 f3 ff ff                         call 0x3280
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003f79;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003280, 0) #call with return address @ (0x00003f79, 0)


# -- 0x00003f79 e9 24 01 00 00                         jmp 0x40a2
 0: goto (0x000040a2, 0) 


# -- 0x00003f7e 48 8b 05 1b d2 20 00                   mov 0x20d21b(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f85, 0) 


# -- 0x00003f85 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003f88, 0) 


# -- 0x00003f88 e8 a3 f4 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003f8d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00003f8d, 0)


# -- 0x00003f8d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00003f90, 0) 


# -- 0x00003f90 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003f97, 0) 


# -- 0x00003f97 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00003f9a, 0) 


# -- 0x00003f9a 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003fa1, 0) 


# -- 0x00003fa1 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003fa4, 0) 


# -- 0x00003fa4 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00003fa7, 0) 


# -- 0x00003fa7 3c 2f                                  cmp $0x2f,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<8> := (%%0<8> - 47<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00003fa9, 0) 


# -- 0x00003fa9 0f 84 f2 00 00 00                      je 0x40a1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000040a1, 0) 
 2: goto (0x00003faf, 0) 


# -- 0x00003faf 48 8b 05 0a d2 20 00                   mov 0x20d20a(%rip),%rax
 0: %%0<64> := @[0x00000000002111c0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003fb6, 0) 


# -- 0x00003fb6 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00003fb9, 0) 


# -- 0x00003fb9 ba 3d 00 00 00                         mov $0x3d,%edx
 0: rdx<64> := 61<64>;
 1: goto (0x00003fbe, 0) 


# -- 0x00003fbe be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00003fc3, 0) 


# -- 0x00003fc3 48 8d 3d f6 9e 00 00                   lea 0x9ef6(%rip),%rdi
 0: rdi<64> := 0x000000000000dec0;
 1: goto (0x00003fca, 0) 


# -- 0x00003fca e8 91 f4 ff ff                         call 0x3460
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003fcf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003460, 0) #call with return address @ (0x00003fcf, 0)


# -- 0x00003fcf bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00003fd4, 0) 


# -- 0x00003fd4 e8 77 f4 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003fd9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x00003fd9, 0)


# -- 0x00003fd9 48 8b 05 c0 d1 20 00                   mov 0x20d1c0(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00003fe0, 0) 


# -- 0x00003fe0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00003fe3, 0) 


# -- 0x00003fe3 e8 68 ee ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000003fe8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x00003fe8, 0)


# -- 0x00003fe8 48 83 e8 01                            sub $0x1,%rax
 0: %%0<64> := (rax<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00003fec, 0) 


# -- 0x00003fec 48 89 85 78 fe ff ff                   mov %rax,-0x188(%rbp)
 0: @[(rbp<64> + -392<64>),8] := rax<64>;
 1: goto (0x00003ff3, 0) 


# -- 0x00003ff3 48 8b 15 a6 d1 20 00                   mov 0x20d1a6(%rip),%rdx
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00003ffa, 0) 


# -- 0x00003ffa 48 8b 85 78 fe ff ff                   mov -0x188(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -392<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004001, 0) 


# -- 0x00004001 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00004004, 0) 


# -- 0x00004004 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004007, 0) 


# -- 0x00004007 88 85 4b fe ff ff                      mov %al,-0x1b5(%rbp)
 0: @[(rbp<64> + -437<64>),1] := rax<64>{0,7};
 1: goto (0x0000400d, 0) 


# -- 0x0000400d 80 bd 4b fe ff ff 6b                   cmpb $0x6b,-0x1b5(%rbp)
 0: %%0<8> := @[(rbp<64> + -437<64>),1];
 1: %%1<8> := (%%0<8> - 107<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004014, 0) 


# -- 0x00004014 74 1b                                  je 0x4031
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004031, 0) 
 2: goto (0x00004016, 0) 


# -- 0x00004016 80 bd 4b fe ff ff 4b                   cmpb $0x4b,-0x1b5(%rbp)
 0: %%0<8> := @[(rbp<64> + -437<64>),1];
 1: %%1<8> := (%%0<8> - 75<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000401d, 0) 


# -- 0x0000401d 74 12                                  je 0x4031
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004031, 0) 
 2: goto (0x0000401f, 0) 


# -- 0x0000401f 80 bd 4b fe ff ff 6d                   cmpb $0x6d,-0x1b5(%rbp)
 0: %%0<8> := @[(rbp<64> + -437<64>),1];
 1: %%1<8> := (%%0<8> - 109<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004026, 0) 


# -- 0x00004026 74 09                                  je 0x4031
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004031, 0) 
 2: goto (0x00004028, 0) 


# -- 0x00004028 80 bd 4b fe ff ff 4d                   cmpb $0x4d,-0x1b5(%rbp)
 0: %%0<8> := @[(rbp<64> + -437<64>),1];
 1: %%1<8> := (%%0<8> - 77<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000402f, 0) 


# -- 0x0000402f 75 14                                  jne 0x4045
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00004045, 0) 
 2: goto (0x00004031, 0) 


# -- 0x00004031 48 8b 15 68 d1 20 00                   mov 0x20d168(%rip),%rdx
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00004038, 0) 


# -- 0x00004038 48 8b 85 78 fe ff ff                   mov -0x188(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -392<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000403f, 0) 


# -- 0x0000403f 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00004042, 0) 


# -- 0x00004042 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x00004045, 0) 


# -- 0x00004045 48 8b 05 54 d1 20 00                   mov 0x20d154(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000404c, 0) 


# -- 0x0000404c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000404f, 0) 


# -- 0x0000404f e8 3c f0 ff ff                         call 0x3090
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004054;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003090, 0) #call with return address @ (0x00004054, 0)


# -- 0x00004054 48 89 85 60 fe ff ff                   mov %rax,-0x1a0(%rbp)
 0: @[(rbp<64> + -416<64>),8] := rax<64>;
 1: goto (0x0000405b, 0) 


# -- 0x0000405b 0f be 85 4b fe ff ff                   movsbl -0x1b5(%rbp),%eax
 0: %%0<64> := (extu (exts @[(rbp<64> + -437<64>),1] 32) 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004062, 0) 


# -- 0x00004062 83 f8 4d                               cmp $0x4d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 77<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004065, 0) 


# -- 0x00004065 74 16                                  je 0x407d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000407d, 0) 
 2: goto (0x00004067, 0) 


# -- 0x00004067 83 f8 4d                               cmp $0x4d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 77<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000406a, 0) 


# -- 0x0000406a 7f 07                                  jg 0x4073
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00004073, 0) 
 2: goto (0x0000406c, 0) 


# -- 0x0000406c 83 f8 4b                               cmp $0x4b,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 75<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000406f, 0) 


# -- 0x0000406f 74 14                                  je 0x4085
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004085, 0) 
 2: goto (0x00004071, 0) 


# -- 0x00004071 eb 1a                                  jmp 0x408d
 0: goto (0x0000408d, 0) 


# -- 0x00004073 83 f8 6b                               cmp $0x6b,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 107<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004076, 0) 


# -- 0x00004076 74 0d                                  je 0x4085
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004085, 0) 
 2: goto (0x00004078, 0) 


# -- 0x00004078 83 f8 6d                               cmp $0x6d,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 109<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000407b, 0) 


# -- 0x0000407b 75 10                                  jne 0x408d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000408d, 0) 
 2: goto (0x0000407d, 0) 


# -- 0x0000407d 48 c1 a5 60 fe ff ff 0a                shlq $0xa,-0x1a0(%rbp)
 0: %%0<64> := (rbp<64> + -416<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> << 10<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & (%%1<64> << 9<64>)));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%2<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 7: @[%%0<64>,8] := %%2<64>;
 8: cf<1> := %%3<1>;
 9: pf<1> := -1<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%4<1>;
14: goto (0x00004085, 0) 


# -- 0x00004085 48 c1 a5 60 fe ff ff 0a                shlq $0xa,-0x1a0(%rbp)
 0: %%0<64> := (rbp<64> + -416<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> << 10<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & (%%1<64> << 9<64>)));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%2<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 7: @[%%0<64>,8] := %%2<64>;
 8: cf<1> := %%3<1>;
 9: pf<1> := -1<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%4<1>;
14: goto (0x0000408d, 0) 


# -- 0x0000408d 48 8b 95 60 fe ff ff                   mov -0x1a0(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -416<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00004094, 0) 


# -- 0x00004094 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000409b, 0) 


# -- 0x0000409b 48 89 50 08                            mov %rdx,0x8(%rax)
 0: @[(rax<64> + 8<64>),8] := rdx<64>;
 1: goto (0x0000409f, 0) 


# -- 0x0000409f eb 01                                  jmp 0x40a2
 0: goto (0x000040a2, 0) 


# -- 0x000040a1 90                                     nop
 0: goto (0x000040a2, 0) 


# -- 0x000040a2 e9 5f 01 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x000040a7 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000040ae, 0) 


# -- 0x000040ae 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000040b1, 0) 


# -- 0x000040b1 83 c8 01                               or $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (1<32> | %%0<32>);
 2: %%2<1> :=
     !
     (((! (rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x000040b4, 0) 


# -- 0x000040b4 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000040b6, 0) 


# -- 0x000040b6 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000040bd, 0) 


# -- 0x000040bd 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x000040c0, 0) 


# -- 0x000040c0 e9 41 01 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x000040c5 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000040cc, 0) 


# -- 0x000040cc 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000040cf, 0) 


# -- 0x000040cf 83 c8 02                               or $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (2<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       (! (rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x000040d2, 0) 


# -- 0x000040d2 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000040d4, 0) 


# -- 0x000040d4 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000040db, 0) 


# -- 0x000040db 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x000040de, 0) 


# -- 0x000040de e9 23 01 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x000040e3 c6 85 4a fe ff ff 01                   movb $0x1,-0x1b6(%rbp)
 0: @[(rbp<64> + -438<64>),1] := 1<8>;
 1: goto (0x000040ea, 0) 


# -- 0x000040ea 48 8b 05 af d0 20 00                   mov 0x20d0af(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000040f1, 0) 


# -- 0x000040f1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000040f4, 0) 


# -- 0x000040f4 e8 37 f3 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000040f9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x000040f9, 0)


# -- 0x000040f9 48 89 85 68 fe ff ff                   mov %rax,-0x198(%rbp)
 0: @[(rbp<64> + -408<64>),8] := rax<64>;
 1: goto (0x00004100, 0) 


# -- 0x00004100 e9 01 01 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x00004105 48 8b 05 94 d0 20 00                   mov 0x20d094(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000410c, 0) 


# -- 0x0000410c ba 00 01 00 00                         mov $0x100,%edx
 0: rdx<64> := 256<64>;
 1: goto (0x00004111, 0) 


# -- 0x00004111 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00004114, 0) 


# -- 0x00004114 48 8d 3d 65 d1 20 00                   lea 0x20d165(%rip),%rdi
 0: rdi<64> := 0x0000000000211280;
 1: goto (0x0000411b, 0) 


# -- 0x0000411b e8 a0 eb ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004120;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x00004120, 0)


# -- 0x00004120 c6 05 58 d2 20 00 00                   movb $0x0,0x20d258(%rip)
 0: @[0x000000000021137f,1] := 0<8>;
 1: goto (0x00004127, 0) 


# -- 0x00004127 e9 da 00 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x0000412c 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004133, 0) 


# -- 0x00004133 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004136, 0) 


# -- 0x00004136 83 c8 04                               or $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (4<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ ! (rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x00004139, 0) 


# -- 0x00004139 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000413b, 0) 


# -- 0x0000413b 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004142, 0) 


# -- 0x00004142 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x00004145, 0) 


# -- 0x00004145 e9 bc 00 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x0000414a c7 05 90 d0 20 00 01 00 00 00          movl $0x1,0x20d090(%rip)
 0: @[0x00000000002111e4,4] := 1<32>;
 1: goto (0x00004154, 0) 


# -- 0x00004154 e9 ad 00 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x00004159 48 8b 05 10 d1 20 00                   mov 0x20d110(%rip),%rax
 0: %%0<64> := @[0x0000000000211270,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004160, 0) 


# -- 0x00004160 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004163, 0) 


# -- 0x00004163 e8 98 eb ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004168;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00004168, 0)


# -- 0x00004168 48 8b 05 31 d0 20 00                   mov 0x20d031(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000416f, 0) 


# -- 0x0000416f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004172, 0) 


# -- 0x00004172 e8 b9 f2 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004177;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00004177, 0)


# -- 0x00004177 48 89 05 f2 d0 20 00                   mov %rax,0x20d0f2(%rip)
 0: @[0x0000000000211270,8] := rax<64>;
 1: goto (0x0000417e, 0) 


# -- 0x0000417e e9 83 00 00 00                         jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x00004183 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000418a, 0) 


# -- 0x0000418a 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000418e, 0) 


# -- 0x0000418e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004191, 0) 


# -- 0x00004191 e8 6a eb ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004196;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00004196, 0)


# -- 0x00004196 48 8b 05 03 d0 20 00                   mov 0x20d003(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000419d, 0) 


# -- 0x0000419d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000041a0, 0) 


# -- 0x000041a0 e8 8b f2 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000041a5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x000041a5, 0)


# -- 0x000041a5 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000041a8, 0) 


# -- 0x000041a8 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000041af, 0) 


# -- 0x000041af 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x000041b3, 0) 


# -- 0x000041b3 eb 51                                  jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x000041b5 48 8b 05 e4 cf 20 00                   mov 0x20cfe4(%rip),%rax
 0: %%0<64> := @[0x00000000002111a0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000041bc, 0) 


# -- 0x000041bc ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x000041c1, 0) 


# -- 0x000041c1 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x000041c6, 0) 


# -- 0x000041c6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000041c9, 0) 


# -- 0x000041c9 e8 a2 ef ff ff                         call 0x3170
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000041ce;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003170, 0) #call with return address @ (0x000041ce, 0)


# -- 0x000041ce 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000041d0, 0) 


# -- 0x000041d0 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000041d7, 0) 


# -- 0x000041d7 89 50 48                               mov %edx,0x48(%rax)
 0: @[(rax<64> + 72<64>),4] := rdx<64>{0,31};
 1: goto (0x000041da, 0) 


# -- 0x000041da eb 2a                                  jmp 0x4206
 0: goto (0x00004206, 0) 


# -- 0x000041dc 48 8d 3d 9d 97 00 00                   lea 0x979d(%rip),%rdi
 0: rdi<64> := 0x000000000000d980;
 1: goto (0x000041e3, 0) 


# -- 0x000041e3 e8 68 eb ff ff                         call 0x2d50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000041e8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d50, 0) #call with return address @ (0x000041e8, 0)


# -- 0x000041e8 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000041ed, 0) 


# -- 0x000041ed e8 5e f2 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000041f2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x000041f2, 0)


# -- 0x000041f2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000041f7, 0) 


# -- 0x000041f7 e8 1d f9 ff ff                         call 0x3b19
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000041fc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003b19, 0) #call with return address @ (0x000041fc, 0)


# -- 0x000041fc bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00004201, 0) 


# -- 0x00004201 e8 4a f2 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004206;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x00004206, 0)


# -- 0x00004206 48 8d 8d 4c fe ff ff                   lea -0x1b4(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -436<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000420d, 0) 


# -- 0x0000420d 48 8d 95 80 fe ff ff                   lea -0x180(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -384<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00004214, 0) 


# -- 0x00004214 48 8b b5 30 fe ff ff                   mov -0x1d0(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -464<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000421b, 0) 


# -- 0x0000421b 8b 85 3c fe ff ff                      mov -0x1c4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -452<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004221, 0) 


# -- 0x00004221 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00004224, 0) 


# -- 0x00004224 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00004227, 0) 


# -- 0x00004227 48 8d 15 d0 9c 00 00                   lea 0x9cd0(%rip),%rdx
 0: rdx<64> := 0x000000000000defe;
 1: goto (0x0000422e, 0) 


# -- 0x0000422e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00004230, 0) 


# -- 0x00004230 e8 4b ec ff ff                         call 0x2e80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004235;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e80, 0) #call with return address @ (0x00004235, 0)


# -- 0x00004235 89 85 54 fe ff ff                      mov %eax,-0x1ac(%rbp)
 0: @[(rbp<64> + -428<64>),4] := rax<64>{0,31};
 1: goto (0x0000423b, 0) 


# -- 0x0000423b 83 bd 54 fe ff ff 00                   cmpl $0x0,-0x1ac(%rbp)
 0: %%0<32> := @[(rbp<64> + -428<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004242, 0) 


# -- 0x00004242 0f 89 1c fb ff ff                      jns 0x3d64
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00003d64, 0) 
 2: goto (0x00004248, 0) 


# -- 0x00004248 83 bd 50 fe ff ff 01                   cmpl $0x1,-0x1b0(%rbp)
 0: %%0<32> := @[(rbp<64> + -432<64>),4];
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000424f, 0) 


# -- 0x0000424f 7f 18                                  jg 0x4269
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00004269, 0) 
 2: goto (0x00004251, 0) 


# -- 0x00004251 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004258, 0) 


# -- 0x00004258 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000425b, 0) 


# -- 0x0000425b e8 f8 8a 00 00                         call 0xcd58
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004260;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd58, 0) #call with return address @ (0x00004260, 0)


# -- 0x00004260 48 89 85 58 fe ff ff                   mov %rax,-0x1a8(%rbp)
 0: @[(rbp<64> + -424<64>),8] := rax<64>;
 1: goto (0x00004267, 0) 


# -- 0x00004267 eb 12                                  jmp 0x427b
 0: goto (0x0000427b, 0) 


# -- 0x00004269 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004270, 0) 


# -- 0x00004270 48 8d 15 3e 9c 00 00                   lea 0x9c3e(%rip),%rdx
 0: rdx<64> := 0x000000000000deb5;
 1: goto (0x00004277, 0) 


# -- 0x00004277 48 89 50 40                            mov %rdx,0x40(%rax)
 0: @[(rax<64> + 64<64>),8] := rdx<64>;
 1: goto (0x0000427b, 0) 


# -- 0x0000427b 80 bd 4a fe ff ff 00                   cmpb $0x0,-0x1b6(%rbp)
 0: %%0<8> := @[(rbp<64> + -438<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004282, 0) 


# -- 0x00004282 74 48                                  je 0x42cc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000042cc, 0) 
 2: goto (0x00004284, 0) 


# -- 0x00004284 48 83 bd 58 fe ff ff 00                cmpq $0x0,-0x1a8(%rbp)
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000428c, 0) 


# -- 0x0000428c 75 25                                  jne 0x42b3
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000042b3, 0) 
 2: goto (0x0000428e, 0) 


# -- 0x0000428e 48 8d 15 7b 9c 00 00                   lea 0x9c7b(%rip),%rdx
 0: rdx<64> := 0x000000000000df10;
 1: goto (0x00004295, 0) 


# -- 0x00004295 be 08 00 00 00                         mov $0x8,%esi
 0: rsi<64> := 8<64>;
 1: goto (0x0000429a, 0) 


# -- 0x0000429a bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000429f, 0) 


# -- 0x0000429f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000042a4, 0) 


# -- 0x000042a4 e8 f7 ef ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000042a9;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000042a9, 0)


# -- 0x000042a9 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x000042ae, 0) 


# -- 0x000042ae e8 9d f1 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000042b3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x000042b3, 0)


# -- 0x000042b3 48 8b 95 68 fe ff ff                   mov -0x198(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -408<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000042ba, 0) 


# -- 0x000042ba 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000042c1, 0) 


# -- 0x000042c1 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000042c4, 0) 


# -- 0x000042c4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000042c7, 0) 


# -- 0x000042c7 e8 a1 f8 ff ff                         call 0x3b6d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000042cc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003b6d, 0) #call with return address @ (0x000042cc, 0)


# -- 0x000042cc 48 8b 85 58 fe ff ff                   mov -0x1a8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000042d3, 0) 


# -- 0x000042d3 48 8b 5d e8                            mov -0x18(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x000042d7, 0) 


# -- 0x000042d7 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x000042e0, 0) 


# -- 0x000042e0 74 05                                  je 0x42e7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000042e7, 0) 
 2: goto (0x000042e2, 0) 


# -- 0x000042e2 e8 89 eb ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000042e7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x000042e7, 0)


# -- 0x000042e7 48 81 c4 d8 01 00 00                   add $0x1d8,%rsp
 0: %%0<64> := (rsp<64> + 472<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000042ee, 0) 


# -- 0x000042ee 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x000042ef, 0) 


# -- 0x000042ef 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000042f0, 0) 


# -- 0x000042f0 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000042f1 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000042f2, 0) 


# -- 0x000042f2 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000042f5, 0) 


# -- 0x000042f5 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000042f6, 0) 


# -- 0x000042f6 48 81 ec f8 00 00 00                   sub $0xf8,%rsp
 0: %%0<64> := (rsp<64> - 248<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000042fd, 0) 


# -- 0x000042fd 48 89 bd 18 ff ff ff                   mov %rdi,-0xe8(%rbp)
 0: @[(rbp<64> + -232<64>),8] := rdi<64>;
 1: goto (0x00004304, 0) 


# -- 0x00004304 48 89 b5 10 ff ff ff                   mov %rsi,-0xf0(%rbp)
 0: @[(rbp<64> + -240<64>),8] := rsi<64>;
 1: goto (0x0000430b, 0) 


# -- 0x0000430b 48 89 95 08 ff ff ff                   mov %rdx,-0xf8(%rbp)
 0: @[(rbp<64> + -248<64>),8] := rdx<64>;
 1: goto (0x00004312, 0) 


# -- 0x00004312 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000431b, 0) 


# -- 0x0000431b 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000431f, 0) 


# -- 0x0000431f 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00004321, 0) 


# -- 0x00004321 48 8b 85 18 ff ff ff                   mov -0xe8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -232<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004328, 0) 


# -- 0x00004328 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000432b, 0) 


# -- 0x0000432b e8 00 eb ff ff                         call 0x2e30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004330;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e30, 0) #call with return address @ (0x00004330, 0)


# -- 0x00004330 48 89 85 30 ff ff ff                   mov %rax,-0xd0(%rbp)
 0: @[(rbp<64> + -208<64>),8] := rax<64>;
 1: goto (0x00004337, 0) 


# -- 0x00004337 48 c7 85 28 ff ff ff 00 00 00 00       movq $0x0,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),8] := 0<64>;
 1: goto (0x00004342, 0) 


# -- 0x00004342 48 83 bd 30 ff ff ff 00                cmpq $0x0,-0xd0(%rbp)
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000434a, 0) 


# -- 0x0000434a 75 4c                                  jne 0x4398
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00004398, 0) 
 2: goto (0x0000434c, 0) 


# -- 0x0000434c e8 2f e9 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004351;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00004351, 0)


# -- 0x00004351 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004353, 0) 


# -- 0x00004353 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00004355, 0) 


# -- 0x00004355 e8 76 f1 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000435a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000435a, 0)


# -- 0x0000435a 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000435d, 0) 


# -- 0x0000435d 48 8d 3d 75 9c 00 00                   lea 0x9c75(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00004364, 0) 


# -- 0x00004364 e8 87 ec ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004369;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00004369, 0)


# -- 0x00004369 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000436b, 0) 


# -- 0x0000436b 48 8b 85 08 ff ff ff                   mov -0xf8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004372, 0) 


# -- 0x00004372 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00004375, 0) 


# -- 0x00004375 48 8d 0d 74 9c 00 00                   lea 0x9c74(%rip),%rcx
 0: rcx<64> := 0x000000000000dff0;
 1: goto (0x0000437c, 0) 


# -- 0x0000437c ba 07 00 00 00                         mov $0x7,%edx
 0: rdx<64> := 7<64>;
 1: goto (0x00004381, 0) 


# -- 0x00004381 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004384, 0) 


# -- 0x00004384 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00004389, 0) 


# -- 0x00004389 e8 52 eb ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000438e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000438e, 0)


# -- 0x0000438e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00004393, 0) 


# -- 0x00004393 e9 6e 02 00 00                         jmp 0x4606
 0: goto (0x00004606, 0) 


# -- 0x00004398 e8 e3 e8 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000439d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000439d, 0)


# -- 0x0000439d c7 00 00 00 00 00                      movl $0x0,(%rax)
 0: @[rax<64>,4] := 0<32>;
 1: goto (0x000043a3, 0) 


# -- 0x000043a3 e9 a1 01 00 00                         jmp 0x4549
 0: goto (0x00004549, 0) 


# -- 0x000043a8 e8 d3 e8 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000043ad;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x000043ad, 0)


# -- 0x000043ad 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000043af, 0) 


# -- 0x000043af 89 85 24 ff ff ff                      mov %eax,-0xdc(%rbp)
 0: @[(rbp<64> + -220<64>),4] := rax<64>{0,31};
 1: goto (0x000043b5, 0) 


# -- 0x000043b5 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000043bc, 0) 


# -- 0x000043bc 48 8d 48 13                            lea 0x13(%rax),%rcx
 0: %%0<64> := (rax<64> + 19<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000043c0, 0) 


# -- 0x000043c0 48 8b 85 18 ff ff ff                   mov -0xe8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -232<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000043c7, 0) 


# -- 0x000043c7 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x000043cc, 0) 


# -- 0x000043cc 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000043cf, 0) 


# -- 0x000043cf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000043d2, 0) 


# -- 0x000043d2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000043d7, 0) 


# -- 0x000043d7 e8 54 e8 ff ff                         call 0x2c30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000043dc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c30, 0) #call with return address @ (0x000043dc, 0)


# -- 0x000043dc 48 89 85 40 ff ff ff                   mov %rax,-0xc0(%rbp)
 0: @[(rbp<64> + -192<64>),8] := rax<64>;
 1: goto (0x000043e3, 0) 


# -- 0x000043e3 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000043ea, 0) 


# -- 0x000043ea 0f b6 40 12                            movzbl 0x12(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 18<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000043ee, 0) 


# -- 0x000043ee 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000043f1, 0) 


# -- 0x000043f1 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000043f3, 0) 


# -- 0x000043f3 74 0a                                  je 0x43ff
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000043ff, 0) 
 2: goto (0x000043f5, 0) 


# -- 0x000043f5 83 f8 08                               cmp $0x8,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 8<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000043f8, 0) 


# -- 0x000043f8 74 49                                  je 0x4443
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00004443, 0) 
 2: goto (0x000043fa, 0) 


# -- 0x000043fa e9 3b 01 00 00                         jmp 0x453a
 0: goto (0x0000453a, 0) 


# -- 0x000043ff 48 8d 95 50 ff ff ff                   lea -0xb0(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00004406, 0) 


# -- 0x00004406 48 8b 85 40 ff ff ff                   mov -0xc0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -192<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000440d, 0) 


# -- 0x0000440d 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00004410, 0) 


# -- 0x00004410 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004413, 0) 


# -- 0x00004413 e8 88 94 00 00                         call 0xd8a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004418;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d8a0, 0) #call with return address @ (0x00004418, 0)


# -- 0x00004418 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000441a, 0) 


# -- 0x0000441a 74 11                                  je 0x442d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000442d, 0) 
 2: goto (0x0000441c, 0) 


# -- 0x0000441c 48 8d 3d ed 9b 00 00                   lea 0x9bed(%rip),%rdi
 0: rdi<64> := 0x000000000000e010;
 1: goto (0x00004423, 0) 


# -- 0x00004423 e8 a8 ef ff ff                         call 0x33d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004428;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033d0, 0) #call with return address @ (0x00004428, 0)


# -- 0x00004428 e9 90 01 00 00                         jmp 0x45bd
 0: goto (0x000045bd, 0) 


# -- 0x0000442d 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004433, 0) 


# -- 0x00004433 25 00 f0 00 00                         and $0xf000,%eax
 0: %%0<32> := (0x0000f000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00004438, 0) 


# -- 0x00004438 3d 00 80 00 00                         cmp $0x8000,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 0x00008000);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000443d, 0) 


# -- 0x0000443d 0f 85 f3 00 00 00                      jne 0x4536
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00004536, 0) 
 2: goto (0x00004443, 0) 


# -- 0x00004443 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000444a, 0) 


# -- 0x0000444a 48 8d 58 13                            lea 0x13(%rax),%rbx
 0: %%0<64> := (rax<64> + 19<64>);
 1: rbx<64> := %%0<64>;
 2: goto (0x0000444e, 0) 


# -- 0x0000444e 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004455, 0) 


# -- 0x00004455 48 83 c0 13                            add $0x13,%rax
 0: %%0<64> := (rax<64> + 19<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004459, 0) 


# -- 0x00004459 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000445c, 0) 


# -- 0x0000445c e8 ef e9 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004461;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x00004461, 0)


# -- 0x00004461 48 83 e8 05                            sub $0x5,%rax
 0: %%0<64> := (rax<64> - 5<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004465, 0) 


# -- 0x00004465 48 01 d8                               add %rbx,%rax
 0: %%0<64> := (rax<64> & rbx<64>);
 1: %%1<64> := (rax<64> + rbx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rbx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rbx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00004468, 0) 


# -- 0x00004468 48 8d 35 a6 9b 00 00                   lea 0x9ba6(%rip),%rsi
 0: rsi<64> := 0x000000000000e015;
 1: goto (0x0000446f, 0) 


# -- 0x0000446f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004472, 0) 


# -- 0x00004472 e8 49 ec ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004477;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x00004477, 0)


# -- 0x00004477 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00004479, 0) 


# -- 0x00004479 0f 85 ba 00 00 00                      jne 0x4539
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00004539, 0) 
 2: goto (0x0000447f, 0) 


# -- 0x0000447f 48 8b 95 08 ff ff ff                   mov -0xf8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -248<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00004486, 0) 


# -- 0x00004486 48 8b b5 10 ff ff ff                   mov -0xf0(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -240<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000448d, 0) 


# -- 0x0000448d 48 8b 85 40 ff ff ff                   mov -0xc0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -192<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004494, 0) 


# -- 0x00004494 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00004497, 0) 


# -- 0x00004497 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000449c, 0) 


# -- 0x0000449c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000449f, 0) 


# -- 0x0000449f e8 80 01 00 00                         call 0x4624
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000044a4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00004624, 0) #call with return address @ (0x000044a4, 0)


# -- 0x000044a4 48 89 85 48 ff ff ff                   mov %rax,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),8] := rax<64>;
 1: goto (0x000044ab, 0) 


# -- 0x000044ab e8 d0 e7 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000044b0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x000044b0, 0)


# -- 0x000044b0 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000044b3, 0) 


# -- 0x000044b3 8b 85 24 ff ff ff                      mov -0xdc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -220<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000044b9, 0) 


# -- 0x000044b9 89 02                                  mov %eax,(%rdx)
 0: @[rdx<64>,4] := rax<64>{0,31};
 1: goto (0x000044bb, 0) 


# -- 0x000044bb 48 8b 85 08 ff ff ff                   mov -0xf8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000044c2, 0) 


# -- 0x000044c2 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000044c5, 0) 


# -- 0x000044c5 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000044c8, 0) 


# -- 0x000044c8 0f 85 ee 00 00 00                      jne 0x45bc
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000045bc, 0) 
 2: goto (0x000044ce, 0) 


# -- 0x000044ce 48 83 bd 28 ff ff ff 00                cmpq $0x0,-0xd8(%rbp)
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000044d6, 0) 


# -- 0x000044d6 75 1b                                  jne 0x44f3
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000044f3, 0) 
 2: goto (0x000044d8, 0) 


# -- 0x000044d8 ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x000044dd, 0) 


# -- 0x000044dd be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x000044e2, 0) 


# -- 0x000044e2 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000044e7, 0) 


# -- 0x000044e7 e8 74 ea ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000044ec;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x000044ec, 0)


# -- 0x000044ec 48 89 85 28 ff ff ff                   mov %rax,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),8] := rax<64>;
 1: goto (0x000044f3, 0) 


# -- 0x000044f3 48 8b 85 48 ff ff ff                   mov -0xb8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000044fa, 0) 


# -- 0x000044fa 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000044fd, 0) 


# -- 0x000044fd 48 8b 85 48 ff ff ff                   mov -0xb8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004504, 0) 


# -- 0x00004504 48 8b 08                               mov (%rax),%rcx
 0: %%0<64> := @[rax<64>,8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00004507, 0) 


# -- 0x00004507 48 8b 85 28 ff ff ff                   mov -0xd8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000450e, 0) 


# -- 0x0000450e 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00004511, 0) 


# -- 0x00004511 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004514, 0) 


# -- 0x00004514 e8 97 ec ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004519;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x00004519, 0)


# -- 0x00004519 48 89 85 28 ff ff ff                   mov %rax,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),8] := rax<64>;
 1: goto (0x00004520, 0) 


# -- 0x00004520 48 8b 85 48 ff ff ff                   mov -0xb8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004527, 0) 


# -- 0x00004527 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000452c, 0) 


# -- 0x0000452c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000452f, 0) 


# -- 0x0000452f e8 6c eb ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004534;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00004534, 0)


# -- 0x00004534 eb 04                                  jmp 0x453a
 0: goto (0x0000453a, 0) 


# -- 0x00004536 90                                     nop
 0: goto (0x00004537, 0) 


# -- 0x00004537 eb 01                                  jmp 0x453a
 0: goto (0x0000453a, 0) 


# -- 0x00004539 90                                     nop
 0: goto (0x0000453a, 0) 


# -- 0x0000453a 48 8b 85 40 ff ff ff                   mov -0xc0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -192<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004541, 0) 


# -- 0x00004541 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004544, 0) 


# -- 0x00004544 e8 b7 e7 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004549;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00004549, 0)


# -- 0x00004549 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004550, 0) 


# -- 0x00004550 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00004553, 0) 


# -- 0x00004553 e8 e8 ed ff ff                         call 0x3340
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004558;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003340, 0) #call with return address @ (0x00004558, 0)


# -- 0x00004558 48 89 85 38 ff ff ff                   mov %rax,-0xc8(%rbp)
 0: @[(rbp<64> + -200<64>),8] := rax<64>;
 1: goto (0x0000455f, 0) 


# -- 0x0000455f 48 83 bd 38 ff ff ff 00                cmpq $0x0,-0xc8(%rbp)
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00004567, 0) 


# -- 0x00004567 0f 85 3b fe ff ff                      jne 0x43a8
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000043a8, 0) 
 2: goto (0x0000456d, 0) 


# -- 0x0000456d e8 0e e7 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004572;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00004572, 0)


# -- 0x00004572 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00004574, 0) 


# -- 0x00004574 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00004576, 0) 


# -- 0x00004576 74 6e                                  je 0x45e6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000045e6, 0) 
 2: goto (0x00004578, 0) 


# -- 0x00004578 e8 03 e7 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000457d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000457d, 0)


# -- 0x0000457d 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000457f, 0) 


# -- 0x0000457f 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00004581, 0) 


# -- 0x00004581 e8 4a ef ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004586;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x00004586, 0)


# -- 0x00004586 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x00004589, 0) 


# -- 0x00004589 48 8d 3d 49 9a 00 00                   lea 0x9a49(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00004590, 0) 


# -- 0x00004590 e8 5b ea ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000004595;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00004595, 0)


# -- 0x00004595 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00004597, 0) 


# -- 0x00004597 48 8b 85 08 ff ff ff                   mov -0xf8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000459e, 0) 


# -- 0x0000459e 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000045a1, 0) 


# -- 0x000045a1 48 8d 0d 78 9a 00 00                   lea 0x9a78(%rip),%rcx
 0: rcx<64> := 0x000000000000e020;
 1: goto (0x000045a8, 0) 


# -- 0x000045a8 ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x000045ad, 0) 


# -- 0x000045ad 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000045b0, 0) 


# -- 0x000045b0 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000045b5, 0) 


# -- 0x000045b5 e8 26 e9 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000045ba;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x000045ba, 0)


# -- 0x000045ba eb 01                                  jmp 0x45bd
 0: goto (0x000045bd, 0) 


# -- 0x000045bc 90                                     nop
 0: goto (0x000045bd, 0) 


# -- 0x000045bd 48 83 bd 28 ff ff ff 00                cmpq $0x0,-0xd8(%rbp)
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000045c5, 0) 


# -- 0x000045c5 74 14                                  je 0x45db
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000045db, 0) 
 2: goto (0x000045c7, 0) 


# -- 0x000045c7 48 8b 85 28 ff ff ff                   mov -0xd8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000045ce, 0) 


# -- 0x000045ce be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x000045d3, 0) 


# -- 0x000045d3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000045d6, 0) 


# -- 0x000045d6 e8 c5 ea ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000045db;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x000045db, 0)


# -- 0x000045db 48 c7 85 28 ff ff ff 00 00 00 00       movq $0x0,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),8] := 0<64>;
 1: goto (0x000045e6, 0) 


# -- 0x000045e6 48 83 bd 30 ff ff ff 00                cmpq $0x0,-0xd0(%rbp)
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000045ee, 0) 


# -- 0x000045ee 74 0f                                  je 0x45ff
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000045ff, 0) 
 2: goto (0x000045f0, 0) 


# -- 0x000045f0 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000045f7, 0) 


# -- 0x000045f7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000045fa, 0) 


# -- 0x000045fa e8 e1 e9 ff ff                         call 0x2fe0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000045ff;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fe0, 0) #call with return address @ (0x000045ff, 0)


# -- 0x000045ff 48 8b 85 28 ff ff ff                   mov -0xd8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00004606, 0) 


# -- 0x00004606 48 8b 5d e8                            mov -0x18(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000460a, 0) 


# -- 0x0000460a 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x00004613, 0) 


# -- 0x00004613 74 05                                  je 0x461a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000461a, 0) 
 2: goto (0x00004615, 0) 


# -- 0x00004615 e8 56 e8 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000461a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000461a, 0)


# -- 0x0000461a 48 81 c4 f8 00 00 00                   add $0xf8,%rsp
 0: %%0<64> := (rsp<64> + 248<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00004621, 0) 


# -- 0x00004621 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x00004622, 0) 


# -- 0x00004622 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00004623, 0) 


# -- 0x00004623 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00004624 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00004625, 0) 


# -- 0x00004625 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00004628, 0) 


# -- 0x00004628 41 55                                  push %r13
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r13<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000462a, 0) 


# -- 0x0000462a 41 54                                  push %r12
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r12<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000462c, 0) 


# -- 0x0000462c 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000462d, 0) 


# -- 0x0000462d 48 81 ec 88 06 00 00                   sub $0x688,%rsp
 0: %%0<64> := (rsp<64> - 1672<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00004634, 0) 


# -- 0x00004634 48 89 bd 78 f9 ff ff                   mov %rdi,-0x688(%rbp)
 0: @[(rbp<64> + -1672<64>),8] := rdi<64>;
 1: goto (0x0000463b, 0) 


# -- 0x0000463b 48 89 b5 70 f9 ff ff                   mov %rsi,-0x690(%rbp)
 0: @[(rbp<64> + -1680<64>),8] := rsi<64>;
 1: goto (0x00004642, 0) 


# -- 0x00004642 89 d0                                  mov %edx,%eax
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004644, 0) 


# -- 0x00004644 48 89 8d 60 f9 ff ff                   mov %rcx,-0x6a0(%rbp)
 0: @[(rbp<64> + -1696<64>),8] := rcx<64>;
 1: goto (0x0000464b, 0) 


# -- 0x0000464b 88 85 6c f9 ff ff                      mov %al,-0x694(%rbp)
 0: @[(rbp<64> + -1684<64>),1] := rax<64>{0,7};
 1: goto (0x00004651, 0) 


# -- 0x00004651 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000465a, 0) 


# -- 0x0000465a 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000465e, 0) 


# -- 0x0000465e 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00004660, 0) 


# -- 0x00004660 48 8d 05 e1 99 00 00                   lea 0x99e1(%rip),%rax
 0: rax<64> := 0x000000000000e048;
 1: goto (0x00004667, 0) 


# -- 0x00004667 48 89 85 d0 f9 ff ff                   mov %rax,-0x630(%rbp)
 0: @[(rbp<64> + -1584<64>),8] := rax<64>;
 1: goto (0x0000466e, 0) 


# -- 0x0000466e 48 8d 05 fb 99 00 00                   lea 0x99fb(%rip),%rax
 0: rax<64> := 0x000000000000e070;
 1: goto (0x00004675, 0) 


# -- 0x00004675 48 89 85 d8 f9 ff ff                   mov %rax,-0x628(%rbp)
 0: @[(rbp<64> + -1576<64>),8] := rax<64>;
 1: goto (0x0000467c, 0) 


# -- 0x0000467c 48 c7 85 98 f9 ff ff 00 00 00 00       movq $0x0,-0x668(%rbp)
 0: @[(rbp<64> + -1640<64>),8] := 0<64>;
 1: goto (0x00004687, 0) 


# -- 0x00004687 48 c7 85 a0 f9 ff ff 00 00 00 00       movq $0x0,-0x660(%rbp)
 0: @[(rbp<64> + -1632<64>),8] := 0<64>;
 1: goto (0x00004692, 0) 


# -- 0x00004692 48 8d 05 08 9a 00 00                   lea 0x9a08(%rip),%rax
 0: rax<64> := 0x000000000000e0a1;
 1: goto (0x00004699, 0) 


# -- 0x00004699 48 89 85 b0 fc ff ff                   mov %rax,-0x350(%rbp)
 0: @[(rbp<64> + -848<64>),8] := rax<64>;
 1: goto (0x000046a0, 0) 


# -- 0x000046a0 c7 85 b8 fc ff ff 01 00 00 00          movl $0x1,-0x348(%rbp)
 0: @[(rbp<64> + -840<64>),4] := 1<32>;
 1: goto (0x000046aa, 0) 


# -- 0x000046aa c7 85 bc fc ff ff 02 00 00 00          movl $0x2,-0x344(%rbp)
 0: @[(rbp<64> + -836<64>),4] := 2<32>;
 1: goto (0x000046b4, 0) 


# -- 0x000046b4 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000046bb, 0) 


# -- 0x000046bb 48 89 85 c0 fc ff ff                   mov %rax,-0x340(%rbp)
 0: @[(rbp<64> + -832<64>),8] := rax<64>;
 1: goto (0x000046c2, 0) 


# -- 0x000046c2 c7 85 c8 fc ff ff 00 00 00 00          movl $0x0,-0x338(%rbp)
 0: @[(rbp<64> + -824<64>),4] := 0<32>;
 1: goto (0x000046cc, 0) 


# -- 0x000046cc 48 8d 05 d9 99 00 00                   lea 0x99d9(%rip),%rax
 0: rax<64> := 0x000000000000e0ac;
 1: goto (0x000046d3, 0) 


# -- 0x000046d3 48 89 85 d0 fc ff ff                   mov %rax,-0x330(%rbp)
 0: @[(rbp<64> + -816<64>),8] := rax<64>;
 1: goto (0x000046da, 0) 


# -- 0x000046da c7 85 d8 fc ff ff 00 00 00 00          movl $0x0,-0x328(%rbp)
 0: @[(rbp<64> + -808<64>),4] := 0<32>;
 1: goto (0x000046e4, 0) 


# -- 0x000046e4 c7 85 dc fc ff ff 02 00 00 00          movl $0x2,-0x324(%rbp)
 0: @[(rbp<64> + -804<64>),4] := 2<32>;
 1: goto (0x000046ee, 0) 


# -- 0x000046ee 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000046f5, 0) 


# -- 0x000046f5 48 83 c0 18                            add $0x18,%rax
 0: %%0<64> := (rax<64> + 24<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000046f9, 0) 


# -- 0x000046f9 48 89 85 e0 fc ff ff                   mov %rax,-0x320(%rbp)
 0: @[(rbp<64> + -800<64>),8] := rax<64>;
 1: goto (0x00004700, 0) 


# -- 0x00004700 c7 85 e8 fc ff ff 00 00 00 00          movl $0x0,-0x318(%rbp)
 0: @[(rbp<64> + -792<64>),4] := 0<32>;
 1: goto (0x0000470a, 0) 


# -- 0x0000470a 48 8d 05 a4 99 00 00                   lea 0x99a4(%rip),%rax
 0: rax<64> := 0x000000000000e0b5;
 1: goto (0x00004711, 0) 


# -- 0x00004711 48 89 85 f0 fc ff ff                   mov %rax,-0x310(%rbp)
 0: @[(rbp<64> + -784<64>),8] := rax<64>;
 1: goto (0x00004718, 0) 


# -- 0x00004718 c7 85 f8 fc ff ff 00 00 00 00          movl $0x0,-0x308(%rbp)
 0: @[(rbp<64> + -776<64>),4] := 0<32>;
 1: goto (0x00004722, 0) 


# -- 0x00004722 c7 85 fc fc ff ff 01 00 00 00          movl $0x1,-0x304(%rbp)
 0: @[(rbp<64> + -772<64>),4] := 1<32>;
 1: goto (0x0000472c, 0) 


# -- 0x0000472c 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004733, 0) 


# -- 0x00004733 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004737, 0) 


# -- 0x00004737 48 89 85 00 fd ff ff                   mov %rax,-0x300(%rbp)
 0: @[(rbp<64> + -768<64>),8] := rax<64>;
 1: goto (0x0000473e, 0) 


# -- 0x0000473e c7 85 08 fd ff ff 00 00 00 00          movl $0x0,-0x2f8(%rbp)
 0: @[(rbp<64> + -760<64>),4] := 0<32>;
 1: goto (0x00004748, 0) 


# -- 0x00004748 48 8d 05 6f 99 00 00                   lea 0x996f(%rip),%rax
 0: rax<64> := 0x000000000000e0be;
 1: goto (0x0000474f, 0) 


# -- 0x0000474f 48 89 85 10 fd ff ff                   mov %rax,-0x2f0(%rbp)
 0: @[(rbp<64> + -752<64>),8] := rax<64>;
 1: goto (0x00004756, 0) 


# -- 0x00004756 c7 85 18 fd ff ff 00 00 00 00          movl $0x0,-0x2e8(%rbp)
 0: @[(rbp<64> + -744<64>),4] := 0<32>;
 1: goto (0x00004760, 0) 


# -- 0x00004760 c7 85 1c fd ff ff 02 00 00 00          movl $0x2,-0x2e4(%rbp)
 0: @[(rbp<64> + -740<64>),4] := 2<32>;
 1: goto (0x0000476a, 0) 


# -- 0x0000476a 48 8d 85 a0 f9 ff ff                   lea -0x660(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1632<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004771, 0) 


# -- 0x00004771 48 89 85 20 fd ff ff                   mov %rax,-0x2e0(%rbp)
 0: @[(rbp<64> + -736<64>),8] := rax<64>;
 1: goto (0x00004778, 0) 


# -- 0x00004778 c7 85 28 fd ff ff 00 00 00 00          movl $0x0,-0x2d8(%rbp)
 0: @[(rbp<64> + -728<64>),4] := 0<32>;
 1: goto (0x00004782, 0) 


# -- 0x00004782 48 8d 05 3f 99 00 00                   lea 0x993f(%rip),%rax
 0: rax<64> := 0x000000000000e0c8;
 1: goto (0x00004789, 0) 


# -- 0x00004789 48 89 85 30 fd ff ff                   mov %rax,-0x2d0(%rbp)
 0: @[(rbp<64> + -720<64>),8] := rax<64>;
 1: goto (0x00004790, 0) 


# -- 0x00004790 c7 85 38 fd ff ff 00 00 00 00          movl $0x0,-0x2c8(%rbp)
 0: @[(rbp<64> + -712<64>),4] := 0<32>;
 1: goto (0x0000479a, 0) 


# -- 0x0000479a c7 85 3c fd ff ff 02 00 00 00          movl $0x2,-0x2c4(%rbp)
 0: @[(rbp<64> + -708<64>),4] := 2<32>;
 1: goto (0x000047a4, 0) 


# -- 0x000047a4 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000047ab, 0) 


# -- 0x000047ab 48 83 c0 30                            add $0x30,%rax
 0: %%0<64> := (rax<64> + 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000047af, 0) 


# -- 0x000047af 48 89 85 40 fd ff ff                   mov %rax,-0x2c0(%rbp)
 0: @[(rbp<64> + -704<64>),8] := rax<64>;
 1: goto (0x000047b6, 0) 


# -- 0x000047b6 c7 85 48 fd ff ff 00 00 00 00          movl $0x0,-0x2b8(%rbp)
 0: @[(rbp<64> + -696<64>),4] := 0<32>;
 1: goto (0x000047c0, 0) 


# -- 0x000047c0 48 8d 05 08 99 00 00                   lea 0x9908(%rip),%rax
 0: rax<64> := 0x000000000000e0cf;
 1: goto (0x000047c7, 0) 


# -- 0x000047c7 48 89 85 50 fd ff ff                   mov %rax,-0x2b0(%rbp)
 0: @[(rbp<64> + -688<64>),8] := rax<64>;
 1: goto (0x000047ce, 0) 


# -- 0x000047ce c7 85 58 fd ff ff 00 00 00 00          movl $0x0,-0x2a8(%rbp)
 0: @[(rbp<64> + -680<64>),4] := 0<32>;
 1: goto (0x000047d8, 0) 


# -- 0x000047d8 c7 85 5c fd ff ff 02 00 00 00          movl $0x2,-0x2a4(%rbp)
 0: @[(rbp<64> + -676<64>),4] := 2<32>;
 1: goto (0x000047e2, 0) 


# -- 0x000047e2 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000047e9, 0) 


# -- 0x000047e9 48 83 c0 38                            add $0x38,%rax
 0: %%0<64> := (rax<64> + 56<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000047ed, 0) 


# -- 0x000047ed 48 89 85 60 fd ff ff                   mov %rax,-0x2a0(%rbp)
 0: @[(rbp<64> + -672<64>),8] := rax<64>;
 1: goto (0x000047f4, 0) 


# -- 0x000047f4 c7 85 68 fd ff ff 00 00 00 00          movl $0x0,-0x298(%rbp)
 0: @[(rbp<64> + -664<64>),4] := 0<32>;
 1: goto (0x000047fe, 0) 


# -- 0x000047fe 48 8d 05 d2 98 00 00                   lea 0x98d2(%rip),%rax
 0: rax<64> := 0x000000000000e0d7;
 1: goto (0x00004805, 0) 


# -- 0x00004805 48 89 85 70 fd ff ff                   mov %rax,-0x290(%rbp)
 0: @[(rbp<64> + -656<64>),8] := rax<64>;
 1: goto (0x0000480c, 0) 


# -- 0x0000480c c7 85 78 fd ff ff 00 00 00 00          movl $0x0,-0x288(%rbp)
 0: @[(rbp<64> + -648<64>),4] := 0<32>;
 1: goto (0x00004816, 0) 


# -- 0x00004816 c7 85 7c fd ff ff 02 00 00 00          movl $0x2,-0x284(%rbp)
 0: @[(rbp<64> + -644<64>),4] := 2<32>;
 1: goto (0x00004820, 0) 


# -- 0x00004820 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004827, 0) 


# -- 0x00004827 48 83 c0 50                            add $0x50,%rax
 0: %%0<64> := (rax<64> + 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000482b, 0) 


# -- 0x0000482b 48 89 85 80 fd ff ff                   mov %rax,-0x280(%rbp)
 0: @[(rbp<64> + -640<64>),8] := rax<64>;
 1: goto (0x00004832, 0) 


# -- 0x00004832 c7 85 88 fd ff ff 00 00 00 00          movl $0x0,-0x278(%rbp)
 0: @[(rbp<64> + -632<64>),4] := 0<32>;
 1: goto (0x0000483c, 0) 


# -- 0x0000483c 48 8d 05 a3 98 00 00                   lea 0x98a3(%rip),%rax
 0: rax<64> := 0x000000000000e0e6;
 1: goto (0x00004843, 0) 


# -- 0x00004843 48 89 85 90 fd ff ff                   mov %rax,-0x270(%rbp)
 0: @[(rbp<64> + -624<64>),8] := rax<64>;
 1: goto (0x0000484a, 0) 


# -- 0x0000484a c7 85 98 fd ff ff 00 00 00 00          movl $0x0,-0x268(%rbp)
 0: @[(rbp<64> + -616<64>),4] := 0<32>;
 1: goto (0x00004854, 0) 


# -- 0x00004854 c7 85 9c fd ff ff 02 00 00 00          movl $0x2,-0x264(%rbp)
 0: @[(rbp<64> + -612<64>),4] := 2<32>;
 1: goto (0x0000485e, 0) 


# -- 0x0000485e 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004865, 0) 


# -- 0x00004865 48 83 c0 58                            add $0x58,%rax
 0: %%0<64> := (rax<64> + 88<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004869, 0) 


# -- 0x00004869 48 89 85 a0 fd ff ff                   mov %rax,-0x260(%rbp)
 0: @[(rbp<64> + -608<64>),8] := rax<64>;
 1: goto (0x00004870, 0) 


# -- 0x00004870 c7 85 a8 fd ff ff 00 00 00 00          movl $0x0,-0x258(%rbp)
 0: @[(rbp<64> + -600<64>),4] := 0<32>;
 1: goto (0x0000487a, 0) 


# -- 0x0000487a 48 8d 05 6c 98 00 00                   lea 0x986c(%rip),%rax
 0: rax<64> := 0x000000000000e0ed;
 1: goto (0x00004881, 0) 


# -- 0x00004881 48 89 85 b0 fd ff ff                   mov %rax,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),8] := rax<64>;
 1: goto (0x00004888, 0) 


# -- 0x00004888 c7 85 b8 fd ff ff 00 00 00 00          movl $0x0,-0x248(%rbp)
 0: @[(rbp<64> + -584<64>),4] := 0<32>;
 1: goto (0x00004892, 0) 


# -- 0x00004892 c7 85 bc fd ff ff 03 00 00 00          movl $0x3,-0x244(%rbp)
 0: @[(rbp<64> + -580<64>),4] := 3<32>;
 1: goto (0x0000489c, 0) 


# -- 0x0000489c 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000048a3, 0) 


# -- 0x000048a3 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000048a7, 0) 


# -- 0x000048a7 48 89 85 c0 fd ff ff                   mov %rax,-0x240(%rbp)
 0: @[(rbp<64> + -576<64>),8] := rax<64>;
 1: goto (0x000048ae, 0) 


# -- 0x000048ae c7 85 c8 fd ff ff 01 00 00 00          movl $0x1,-0x238(%rbp)
 0: @[(rbp<64> + -568<64>),4] := 1<32>;
 1: goto (0x000048b8, 0) 


# -- 0x000048b8 48 8d 05 37 98 00 00                   lea 0x9837(%rip),%rax
 0: rax<64> := 0x000000000000e0f6;
 1: goto (0x000048bf, 0) 


# -- 0x000048bf 48 89 85 d0 fd ff ff                   mov %rax,-0x230(%rbp)
 0: @[(rbp<64> + -560<64>),8] := rax<64>;
 1: goto (0x000048c6, 0) 


# -- 0x000048c6 c7 85 d8 fd ff ff 00 00 00 00          movl $0x0,-0x228(%rbp)
 0: @[(rbp<64> + -552<64>),4] := 0<32>;
 1: goto (0x000048d0, 0) 


# -- 0x000048d0 c7 85 dc fd ff ff 03 00 00 00          movl $0x3,-0x224(%rbp)
 0: @[(rbp<64> + -548<64>),4] := 3<32>;
 1: goto (0x000048da, 0) 


# -- 0x000048da 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000048e1, 0) 


# -- 0x000048e1 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000048e5, 0) 


# -- 0x000048e5 48 89 85 e0 fd ff ff                   mov %rax,-0x220(%rbp)
 0: @[(rbp<64> + -544<64>),8] := rax<64>;
 1: goto (0x000048ec, 0) 


# -- 0x000048ec c7 85 e8 fd ff ff 02 00 00 00          movl $0x2,-0x218(%rbp)
 0: @[(rbp<64> + -536<64>),4] := 2<32>;
 1: goto (0x000048f6, 0) 


# -- 0x000048f6 48 8d 05 03 98 00 00                   lea 0x9803(%rip),%rax
 0: rax<64> := 0x000000000000e100;
 1: goto (0x000048fd, 0) 


# -- 0x000048fd 48 89 85 f0 fd ff ff                   mov %rax,-0x210(%rbp)
 0: @[(rbp<64> + -528<64>),8] := rax<64>;
 1: goto (0x00004904, 0) 


# -- 0x00004904 c7 85 f8 fd ff ff 00 00 00 00          movl $0x0,-0x208(%rbp)
 0: @[(rbp<64> + -520<64>),4] := 0<32>;
 1: goto (0x0000490e, 0) 


# -- 0x0000490e c7 85 fc fd ff ff 03 00 00 00          movl $0x3,-0x204(%rbp)
 0: @[(rbp<64> + -516<64>),4] := 3<32>;
 1: goto (0x00004918, 0) 


# -- 0x00004918 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000491f, 0) 


# -- 0x0000491f 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004923, 0) 


# -- 0x00004923 48 89 85 00 fe ff ff                   mov %rax,-0x200(%rbp)
 0: @[(rbp<64> + -512<64>),8] := rax<64>;
 1: goto (0x0000492a, 0) 


# -- 0x0000492a c7 85 08 fe ff ff 00 20 00 00          movl $0x2000,-0x1f8(%rbp)
 0: @[(rbp<64> + -504<64>),4] := 0x00002000;
 1: goto (0x00004934, 0) 


# -- 0x00004934 48 8d 05 cf 97 00 00                   lea 0x97cf(%rip),%rax
 0: rax<64> := 0x000000000000e10a;
 1: goto (0x0000493b, 0) 


# -- 0x0000493b 48 89 85 10 fe ff ff                   mov %rax,-0x1f0(%rbp)
 0: @[(rbp<64> + -496<64>),8] := rax<64>;
 1: goto (0x00004942, 0) 


# -- 0x00004942 c7 85 18 fe ff ff 00 00 00 00          movl $0x0,-0x1e8(%rbp)
 0: @[(rbp<64> + -488<64>),4] := 0<32>;
 1: goto (0x0000494c, 0) 


# -- 0x0000494c c7 85 1c fe ff ff 03 00 00 00          movl $0x3,-0x1e4(%rbp)
 0: @[(rbp<64> + -484<64>),4] := 3<32>;
 1: goto (0x00004956, 0) 


# -- 0x00004956 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000495d, 0) 


# -- 0x0000495d 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004961, 0) 


# -- 0x00004961 48 89 85 20 fe ff ff                   mov %rax,-0x1e0(%rbp)
 0: @[(rbp<64> + -480<64>),8] := rax<64>;
 1: goto (0x00004968, 0) 


# -- 0x00004968 c7 85 28 fe ff ff 04 00 00 00          movl $0x4,-0x1d8(%rbp)
 0: @[(rbp<64> + -472<64>),4] := 4<32>;
 1: goto (0x00004972, 0) 


# -- 0x00004972 48 8d 05 9d 97 00 00                   lea 0x979d(%rip),%rax
 0: rax<64> := 0x000000000000e116;
 1: goto (0x00004979, 0) 


# -- 0x00004979 48 89 85 30 fe ff ff                   mov %rax,-0x1d0(%rbp)
 0: @[(rbp<64> + -464<64>),8] := rax<64>;
 1: goto (0x00004980, 0) 


# -- 0x00004980 c7 85 38 fe ff ff 00 00 00 00          movl $0x0,-0x1c8(%rbp)
 0: @[(rbp<64> + -456<64>),4] := 0<32>;
 1: goto (0x0000498a, 0) 


# -- 0x0000498a c7 85 3c fe ff ff 03 00 00 00          movl $0x3,-0x1c4(%rbp)
 0: @[(rbp<64> + -452<64>),4] := 3<32>;
 1: goto (0x00004994, 0) 


# -- 0x00004994 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000499b, 0) 


# -- 0x0000499b 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000499f, 0) 


# -- 0x0000499f 48 89 85 40 fe ff ff                   mov %rax,-0x1c0(%rbp)
 0: @[(rbp<64> + -448<64>),8] := rax<64>;
 1: goto (0x000049a6, 0) 


# -- 0x000049a6 c7 85 48 fe ff ff 00 00 01 00          movl $0x10000,-0x1b8(%rbp)
 0: @[(rbp<64> + -440<64>),4] := 0x00010000;
 1: goto (0x000049b0, 0) 


# -- 0x000049b0 48 8d 05 68 97 00 00                   lea 0x9768(%rip),%rax
 0: rax<64> := 0x000000000000e11f;
 1: goto (0x000049b7, 0) 


# -- 0x000049b7 48 89 85 50 fe ff ff                   mov %rax,-0x1b0(%rbp)
 0: @[(rbp<64> + -432<64>),8] := rax<64>;
 1: goto (0x000049be, 0) 


# -- 0x000049be c7 85 58 fe ff ff 00 00 00 00          movl $0x0,-0x1a8(%rbp)
 0: @[(rbp<64> + -424<64>),4] := 0<32>;
 1: goto (0x000049c8, 0) 


# -- 0x000049c8 c7 85 5c fe ff ff 03 00 00 00          movl $0x3,-0x1a4(%rbp)
 0: @[(rbp<64> + -420<64>),4] := 3<32>;
 1: goto (0x000049d2, 0) 


# -- 0x000049d2 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000049d9, 0) 


# -- 0x000049d9 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000049dd, 0) 


# -- 0x000049dd 48 89 85 60 fe ff ff                   mov %rax,-0x1a0(%rbp)
 0: @[(rbp<64> + -416<64>),8] := rax<64>;
 1: goto (0x000049e4, 0) 


# -- 0x000049e4 c7 85 68 fe ff ff 10 00 00 00          movl $0x10,-0x198(%rbp)
 0: @[(rbp<64> + -408<64>),4] := 16<32>;
 1: goto (0x000049ee, 0) 


# -- 0x000049ee 48 8d 05 35 97 00 00                   lea 0x9735(%rip),%rax
 0: rax<64> := 0x000000000000e12a;
 1: goto (0x000049f5, 0) 


# -- 0x000049f5 48 89 85 70 fe ff ff                   mov %rax,-0x190(%rbp)
 0: @[(rbp<64> + -400<64>),8] := rax<64>;
 1: goto (0x000049fc, 0) 


# -- 0x000049fc c7 85 78 fe ff ff 00 00 00 00          movl $0x0,-0x188(%rbp)
 0: @[(rbp<64> + -392<64>),4] := 0<32>;
 1: goto (0x00004a06, 0) 


# -- 0x00004a06 c7 85 7c fe ff ff 03 00 00 00          movl $0x3,-0x184(%rbp)
 0: @[(rbp<64> + -388<64>),4] := 3<32>;
 1: goto (0x00004a10, 0) 


# -- 0x00004a10 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004a17, 0) 


# -- 0x00004a17 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004a1b, 0) 


# -- 0x00004a1b 48 89 85 80 fe ff ff                   mov %rax,-0x180(%rbp)
 0: @[(rbp<64> + -384<64>),8] := rax<64>;
 1: goto (0x00004a22, 0) 


# -- 0x00004a22 c7 85 88 fe ff ff 20 00 00 00          movl $0x20,-0x178(%rbp)
 0: @[(rbp<64> + -376<64>),4] := 32<32>;
 1: goto (0x00004a2c, 0) 


# -- 0x00004a2c 48 8d 05 fb 96 00 00                   lea 0x96fb(%rip),%rax
 0: rax<64> := 0x000000000000e12e;
 1: goto (0x00004a33, 0) 


# -- 0x00004a33 48 89 85 90 fe ff ff                   mov %rax,-0x170(%rbp)
 0: @[(rbp<64> + -368<64>),8] := rax<64>;
 1: goto (0x00004a3a, 0) 


# -- 0x00004a3a c7 85 98 fe ff ff 00 00 00 00          movl $0x0,-0x168(%rbp)
 0: @[(rbp<64> + -360<64>),4] := 0<32>;
 1: goto (0x00004a44, 0) 


# -- 0x00004a44 c7 85 9c fe ff ff 03 00 00 00          movl $0x3,-0x164(%rbp)
 0: @[(rbp<64> + -356<64>),4] := 3<32>;
 1: goto (0x00004a4e, 0) 


# -- 0x00004a4e 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004a55, 0) 


# -- 0x00004a55 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004a59, 0) 


# -- 0x00004a59 48 89 85 a0 fe ff ff                   mov %rax,-0x160(%rbp)
 0: @[(rbp<64> + -352<64>),8] := rax<64>;
 1: goto (0x00004a60, 0) 


# -- 0x00004a60 c7 85 a8 fe ff ff 40 00 00 00          movl $0x40,-0x158(%rbp)
 0: @[(rbp<64> + -344<64>),4] := 64<32>;
 1: goto (0x00004a6a, 0) 


# -- 0x00004a6a 48 8d 05 c2 96 00 00                   lea 0x96c2(%rip),%rax
 0: rax<64> := 0x000000000000e133;
 1: goto (0x00004a71, 0) 


# -- 0x00004a71 48 89 85 b0 fe ff ff                   mov %rax,-0x150(%rbp)
 0: @[(rbp<64> + -336<64>),8] := rax<64>;
 1: goto (0x00004a78, 0) 


# -- 0x00004a78 c7 85 b8 fe ff ff 00 00 00 00          movl $0x0,-0x148(%rbp)
 0: @[(rbp<64> + -328<64>),4] := 0<32>;
 1: goto (0x00004a82, 0) 


# -- 0x00004a82 c7 85 bc fe ff ff 03 00 00 00          movl $0x3,-0x144(%rbp)
 0: @[(rbp<64> + -324<64>),4] := 3<32>;
 1: goto (0x00004a8c, 0) 


# -- 0x00004a8c 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004a93, 0) 


# -- 0x00004a93 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004a97, 0) 


# -- 0x00004a97 48 89 85 c0 fe ff ff                   mov %rax,-0x140(%rbp)
 0: @[(rbp<64> + -320<64>),8] := rax<64>;
 1: goto (0x00004a9e, 0) 


# -- 0x00004a9e c7 85 c8 fe ff ff 80 00 00 00          movl $0x80,-0x138(%rbp)
 0: @[(rbp<64> + -312<64>),4] := 128<32>;
 1: goto (0x00004aa8, 0) 


# -- 0x00004aa8 48 8d 05 8a 96 00 00                   lea 0x968a(%rip),%rax
 0: rax<64> := 0x000000000000e139;
 1: goto (0x00004aaf, 0) 


# -- 0x00004aaf 48 89 85 d0 fe ff ff                   mov %rax,-0x130(%rbp)
 0: @[(rbp<64> + -304<64>),8] := rax<64>;
 1: goto (0x00004ab6, 0) 


# -- 0x00004ab6 c7 85 d8 fe ff ff 00 00 00 00          movl $0x0,-0x128(%rbp)
 0: @[(rbp<64> + -296<64>),4] := 0<32>;
 1: goto (0x00004ac0, 0) 


# -- 0x00004ac0 c7 85 dc fe ff ff 03 00 00 00          movl $0x3,-0x124(%rbp)
 0: @[(rbp<64> + -292<64>),4] := 3<32>;
 1: goto (0x00004aca, 0) 


# -- 0x00004aca 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004ad1, 0) 


# -- 0x00004ad1 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004ad5, 0) 


# -- 0x00004ad5 48 89 85 e0 fe ff ff                   mov %rax,-0x120(%rbp)
 0: @[(rbp<64> + -288<64>),8] := rax<64>;
 1: goto (0x00004adc, 0) 


# -- 0x00004adc c7 85 e8 fe ff ff 00 01 00 00          movl $0x100,-0x118(%rbp)
 0: @[(rbp<64> + -280<64>),4] := 256<32>;
 1: goto (0x00004ae6, 0) 


# -- 0x00004ae6 48 8d 05 50 96 00 00                   lea 0x9650(%rip),%rax
 0: rax<64> := 0x000000000000e13d;
 1: goto (0x00004aed, 0) 


# -- 0x00004aed 48 89 85 f0 fe ff ff                   mov %rax,-0x110(%rbp)
 0: @[(rbp<64> + -272<64>),8] := rax<64>;
 1: goto (0x00004af4, 0) 


# -- 0x00004af4 c7 85 f8 fe ff ff 00 00 00 00          movl $0x0,-0x108(%rbp)
 0: @[(rbp<64> + -264<64>),4] := 0<32>;
 1: goto (0x00004afe, 0) 


# -- 0x00004afe c7 85 fc fe ff ff 03 00 00 00          movl $0x3,-0x104(%rbp)
 0: @[(rbp<64> + -260<64>),4] := 3<32>;
 1: goto (0x00004b08, 0) 


# -- 0x00004b08 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004b0f, 0) 


# -- 0x00004b0f 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004b13, 0) 


# -- 0x00004b13 48 89 85 00 ff ff ff                   mov %rax,-0x100(%rbp)
 0: @[(rbp<64> + -256<64>),8] := rax<64>;
 1: goto (0x00004b1a, 0) 


# -- 0x00004b1a c7 85 08 ff ff ff 00 02 00 00          movl $0x200,-0xf8(%rbp)
 0: @[(rbp<64> + -248<64>),4] := 512<32>;
 1: goto (0x00004b24, 0) 


# -- 0x00004b24 48 8d 05 1d 96 00 00                   lea 0x961d(%rip),%rax
 0: rax<64> := 0x000000000000e148;
 1: goto (0x00004b2b, 0) 


# -- 0x00004b2b 48 89 85 10 ff ff ff                   mov %rax,-0xf0(%rbp)
 0: @[(rbp<64> + -240<64>),8] := rax<64>;
 1: goto (0x00004b32, 0) 


# -- 0x00004b32 c7 85 18 ff ff ff 00 00 00 00          movl $0x0,-0xe8(%rbp)
 0: @[(rbp<64> + -232<64>),4] := 0<32>;
 1: goto (0x00004b3c, 0) 


# -- 0x00004b3c c7 85 1c ff ff ff 03 00 00 00          movl $0x3,-0xe4(%rbp)
 0: @[(rbp<64> + -228<64>),4] := 3<32>;
 1: goto (0x00004b46, 0) 


# -- 0x00004b46 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004b4d, 0) 


# -- 0x00004b4d 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004b51, 0) 


# -- 0x00004b51 48 89 85 20 ff ff ff                   mov %rax,-0xe0(%rbp)
 0: @[(rbp<64> + -224<64>),8] := rax<64>;
 1: goto (0x00004b58, 0) 


# -- 0x00004b58 c7 85 28 ff ff ff 00 04 00 00          movl $0x400,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),4] := 1024<32>;
 1: goto (0x00004b62, 0) 


# -- 0x00004b62 48 8d 05 e9 95 00 00                   lea 0x95e9(%rip),%rax
 0: rax<64> := 0x000000000000e152;
 1: goto (0x00004b69, 0) 


# -- 0x00004b69 48 89 85 30 ff ff ff                   mov %rax,-0xd0(%rbp)
 0: @[(rbp<64> + -208<64>),8] := rax<64>;
 1: goto (0x00004b70, 0) 


# -- 0x00004b70 c7 85 38 ff ff ff 00 00 00 00          movl $0x0,-0xc8(%rbp)
 0: @[(rbp<64> + -200<64>),4] := 0<32>;
 1: goto (0x00004b7a, 0) 


# -- 0x00004b7a c7 85 3c ff ff ff 03 00 00 00          movl $0x3,-0xc4(%rbp)
 0: @[(rbp<64> + -196<64>),4] := 3<32>;
 1: goto (0x00004b84, 0) 


# -- 0x00004b84 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004b8b, 0) 


# -- 0x00004b8b 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004b8f, 0) 


# -- 0x00004b8f 48 89 85 40 ff ff ff                   mov %rax,-0xc0(%rbp)
 0: @[(rbp<64> + -192<64>),8] := rax<64>;
 1: goto (0x00004b96, 0) 


# -- 0x00004b96 c7 85 48 ff ff ff 00 08 00 00          movl $0x800,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),4] := 2048<32>;
 1: goto (0x00004ba0, 0) 


# -- 0x00004ba0 48 8d 05 b0 95 00 00                   lea 0x95b0(%rip),%rax
 0: rax<64> := 0x000000000000e157;
 1: goto (0x00004ba7, 0) 


# -- 0x00004ba7 48 89 85 50 ff ff ff                   mov %rax,-0xb0(%rbp)
 0: @[(rbp<64> + -176<64>),8] := rax<64>;
 1: goto (0x00004bae, 0) 


# -- 0x00004bae c7 85 58 ff ff ff 00 00 00 00          movl $0x0,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),4] := 0<32>;
 1: goto (0x00004bb8, 0) 


# -- 0x00004bb8 c7 85 5c ff ff ff 02 00 00 00          movl $0x2,-0xa4(%rbp)
 0: @[(rbp<64> + -164<64>),4] := 2<32>;
 1: goto (0x00004bc2, 0) 


# -- 0x00004bc2 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004bc9, 0) 


# -- 0x00004bc9 48 83 c0 10                            add $0x10,%rax
 0: %%0<64> := (rax<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004bcd, 0) 


# -- 0x00004bcd 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x00004bd4, 0) 


# -- 0x00004bd4 c7 85 68 ff ff ff 00 00 00 00          movl $0x0,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),4] := 0<32>;
 1: goto (0x00004bde, 0) 


# -- 0x00004bde 48 8d 05 7d 95 00 00                   lea 0x957d(%rip),%rax
 0: rax<64> := 0x000000000000e162;
 1: goto (0x00004be5, 0) 


# -- 0x00004be5 48 89 85 70 ff ff ff                   mov %rax,-0x90(%rbp)
 0: @[(rbp<64> + -144<64>),8] := rax<64>;
 1: goto (0x00004bec, 0) 


# -- 0x00004bec c7 85 78 ff ff ff 00 00 00 00          movl $0x0,-0x88(%rbp)
 0: @[(rbp<64> + -136<64>),4] := 0<32>;
 1: goto (0x00004bf6, 0) 


# -- 0x00004bf6 c7 85 7c ff ff ff 00 00 00 00          movl $0x0,-0x84(%rbp)
 0: @[(rbp<64> + -132<64>),4] := 0<32>;
 1: goto (0x00004c00, 0) 


# -- 0x00004c00 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004c07, 0) 


# -- 0x00004c07 48 83 c0 48                            add $0x48,%rax
 0: %%0<64> := (rax<64> + 72<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004c0b, 0) 


# -- 0x00004c0b 48 89 45 80                            mov %rax,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),8] := rax<64>;
 1: goto (0x00004c0f, 0) 


# -- 0x00004c0f c7 45 88 00 00 00 00                   movl $0x0,-0x78(%rbp)
 0: @[(rbp<64> + -120<64>),4] := 0<32>;
 1: goto (0x00004c16, 0) 


# -- 0x00004c16 48 8d 05 54 95 00 00                   lea 0x9554(%rip),%rax
 0: rax<64> := 0x000000000000e171;
 1: goto (0x00004c1d, 0) 


# -- 0x00004c1d 48 89 45 90                            mov %rax,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),8] := rax<64>;
 1: goto (0x00004c21, 0) 


# -- 0x00004c21 c7 45 98 00 00 00 00                   movl $0x0,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),4] := 0<32>;
 1: goto (0x00004c28, 0) 


# -- 0x00004c28 c7 45 9c 03 00 00 00                   movl $0x3,-0x64(%rbp)
 0: @[(rbp<64> + -100<64>),4] := 3<32>;
 1: goto (0x00004c2f, 0) 


# -- 0x00004c2f 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004c36, 0) 


# -- 0x00004c36 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004c3a, 0) 


# -- 0x00004c3a 48 89 45 a0                            mov %rax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),8] := rax<64>;
 1: goto (0x00004c3e, 0) 


# -- 0x00004c3e c7 45 a8 00 40 00 00                   movl $0x4000,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),4] := 0x00004000;
 1: goto (0x00004c45, 0) 


# -- 0x00004c45 48 8d 05 2f 95 00 00                   lea 0x952f(%rip),%rax
 0: rax<64> := 0x000000000000e17b;
 1: goto (0x00004c4c, 0) 


# -- 0x00004c4c 48 89 45 b0                            mov %rax,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rax<64>;
 1: goto (0x00004c50, 0) 


# -- 0x00004c50 c7 45 b8 00 00 00 00                   movl $0x0,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),4] := 0<32>;
 1: goto (0x00004c57, 0) 


# -- 0x00004c57 c7 45 bc 03 00 00 00                   movl $0x3,-0x44(%rbp)
 0: @[(rbp<64> + -68<64>),4] := 3<32>;
 1: goto (0x00004c5e, 0) 


# -- 0x00004c5e 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004c65, 0) 


# -- 0x00004c65 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004c69, 0) 


# -- 0x00004c69 48 89 45 c0                            mov %rax,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rax<64>;
 1: goto (0x00004c6d, 0) 


# -- 0x00004c6d c7 45 c8 00 80 00 00                   movl $0x8000,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),4] := 0x00008000;
 1: goto (0x00004c74, 0) 


# -- 0x00004c74 c7 85 8c f9 ff ff 19 00 00 00          movl $0x19,-0x674(%rbp)
 0: @[(rbp<64> + -1652<64>),4] := 25<32>;
 1: goto (0x00004c7e, 0) 


# -- 0x00004c7e 48 8d 05 fd 94 00 00                   lea 0x94fd(%rip),%rax
 0: rax<64> := 0x000000000000e182;
 1: goto (0x00004c85, 0) 


# -- 0x00004c85 48 89 85 d0 fa ff ff                   mov %rax,-0x530(%rbp)
 0: @[(rbp<64> + -1328<64>),8] := rax<64>;
 1: goto (0x00004c8c, 0) 


# -- 0x00004c8c c7 85 d8 fa ff ff 00 00 00 00          movl $0x0,-0x528(%rbp)
 0: @[(rbp<64> + -1320<64>),4] := 0<32>;
 1: goto (0x00004c96, 0) 


# -- 0x00004c96 c7 85 dc fa ff ff 02 00 00 00          movl $0x2,-0x524(%rbp)
 0: @[(rbp<64> + -1316<64>),4] := 2<32>;
 1: goto (0x00004ca0, 0) 


# -- 0x00004ca0 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004ca7, 0) 


# -- 0x00004ca7 48 89 85 e0 fa ff ff                   mov %rax,-0x520(%rbp)
 0: @[(rbp<64> + -1312<64>),8] := rax<64>;
 1: goto (0x00004cae, 0) 


# -- 0x00004cae c7 85 e8 fa ff ff 00 00 00 00          movl $0x0,-0x518(%rbp)
 0: @[(rbp<64> + -1304<64>),4] := 0<32>;
 1: goto (0x00004cb8, 0) 


# -- 0x00004cb8 48 8d 05 c8 94 00 00                   lea 0x94c8(%rip),%rax
 0: rax<64> := 0x000000000000e187;
 1: goto (0x00004cbf, 0) 


# -- 0x00004cbf 48 89 85 f0 fa ff ff                   mov %rax,-0x510(%rbp)
 0: @[(rbp<64> + -1296<64>),8] := rax<64>;
 1: goto (0x00004cc6, 0) 


# -- 0x00004cc6 c7 85 f8 fa ff ff 00 00 00 00          movl $0x0,-0x508(%rbp)
 0: @[(rbp<64> + -1288<64>),4] := 0<32>;
 1: goto (0x00004cd0, 0) 


# -- 0x00004cd0 c7 85 fc fa ff ff 02 00 00 00          movl $0x2,-0x504(%rbp)
 0: @[(rbp<64> + -1284<64>),4] := 2<32>;
 1: goto (0x00004cda, 0) 


# -- 0x00004cda 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004ce1, 0) 


# -- 0x00004ce1 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004ce5, 0) 


# -- 0x00004ce5 48 89 85 00 fb ff ff                   mov %rax,-0x500(%rbp)
 0: @[(rbp<64> + -1280<64>),8] := rax<64>;
 1: goto (0x00004cec, 0) 


# -- 0x00004cec c7 85 08 fb ff ff 00 00 00 00          movl $0x0,-0x4f8(%rbp)
 0: @[(rbp<64> + -1272<64>),4] := 0<32>;
 1: goto (0x00004cf6, 0) 


# -- 0x00004cf6 48 8d 05 90 94 00 00                   lea 0x9490(%rip),%rax
 0: rax<64> := 0x000000000000e18d;
 1: goto (0x00004cfd, 0) 


# -- 0x00004cfd 48 89 85 10 fb ff ff                   mov %rax,-0x4f0(%rbp)
 0: @[(rbp<64> + -1264<64>),8] := rax<64>;
 1: goto (0x00004d04, 0) 


# -- 0x00004d04 c7 85 18 fb ff ff 00 00 00 00          movl $0x0,-0x4e8(%rbp)
 0: @[(rbp<64> + -1256<64>),4] := 0<32>;
 1: goto (0x00004d0e, 0) 


# -- 0x00004d0e c7 85 1c fb ff ff 03 00 00 00          movl $0x3,-0x4e4(%rbp)
 0: @[(rbp<64> + -1252<64>),4] := 3<32>;
 1: goto (0x00004d18, 0) 


# -- 0x00004d18 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004d1f, 0) 


# -- 0x00004d1f 48 83 c0 48                            add $0x48,%rax
 0: %%0<64> := (rax<64> + 72<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004d23, 0) 


# -- 0x00004d23 48 89 85 20 fb ff ff                   mov %rax,-0x4e0(%rbp)
 0: @[(rbp<64> + -1248<64>),8] := rax<64>;
 1: goto (0x00004d2a, 0) 


# -- 0x00004d2a c7 85 28 fb ff ff 01 00 00 00          movl $0x1,-0x4d8(%rbp)
 0: @[(rbp<64> + -1240<64>),4] := 1<32>;
 1: goto (0x00004d34, 0) 


# -- 0x00004d34 48 8d 05 1c 94 00 00                   lea 0x941c(%rip),%rax
 0: rax<64> := 0x000000000000e157;
 1: goto (0x00004d3b, 0) 


# -- 0x00004d3b 48 89 85 30 fb ff ff                   mov %rax,-0x4d0(%rbp)
 0: @[(rbp<64> + -1232<64>),8] := rax<64>;
 1: goto (0x00004d42, 0) 


# -- 0x00004d42 c7 85 38 fb ff ff 00 00 00 00          movl $0x0,-0x4c8(%rbp)
 0: @[(rbp<64> + -1224<64>),4] := 0<32>;
 1: goto (0x00004d4c, 0) 


# -- 0x00004d4c c7 85 3c fb ff ff 02 00 00 00          movl $0x2,-0x4c4(%rbp)
 0: @[(rbp<64> + -1220<64>),4] := 2<32>;
 1: goto (0x00004d56, 0) 


# -- 0x00004d56 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004d5d, 0) 


# -- 0x00004d5d 48 83 c0 10                            add $0x10,%rax
 0: %%0<64> := (rax<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004d61, 0) 


# -- 0x00004d61 48 89 85 40 fb ff ff                   mov %rax,-0x4c0(%rbp)
 0: @[(rbp<64> + -1216<64>),8] := rax<64>;
 1: goto (0x00004d68, 0) 


# -- 0x00004d68 c7 85 48 fb ff ff 00 00 00 00          movl $0x0,-0x4b8(%rbp)
 0: @[(rbp<64> + -1208<64>),4] := 0<32>;
 1: goto (0x00004d72, 0) 


# -- 0x00004d72 48 8d 05 1d 94 00 00                   lea 0x941d(%rip),%rax
 0: rax<64> := 0x000000000000e196;
 1: goto (0x00004d79, 0) 


# -- 0x00004d79 48 89 85 50 fb ff ff                   mov %rax,-0x4b0(%rbp)
 0: @[(rbp<64> + -1200<64>),8] := rax<64>;
 1: goto (0x00004d80, 0) 


# -- 0x00004d80 c7 85 58 fb ff ff 00 00 00 00          movl $0x0,-0x4a8(%rbp)
 0: @[(rbp<64> + -1192<64>),4] := 0<32>;
 1: goto (0x00004d8a, 0) 


# -- 0x00004d8a c7 85 5c fb ff ff 02 00 00 00          movl $0x2,-0x4a4(%rbp)
 0: @[(rbp<64> + -1188<64>),4] := 2<32>;
 1: goto (0x00004d94, 0) 


# -- 0x00004d94 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004d9b, 0) 


# -- 0x00004d9b 48 83 c0 18                            add $0x18,%rax
 0: %%0<64> := (rax<64> + 24<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004d9f, 0) 


# -- 0x00004d9f 48 89 85 60 fb ff ff                   mov %rax,-0x4a0(%rbp)
 0: @[(rbp<64> + -1184<64>),8] := rax<64>;
 1: goto (0x00004da6, 0) 


# -- 0x00004da6 c7 85 68 fb ff ff 00 00 00 00          movl $0x0,-0x498(%rbp)
 0: @[(rbp<64> + -1176<64>),4] := 0<32>;
 1: goto (0x00004db0, 0) 


# -- 0x00004db0 48 8d 05 e4 93 00 00                   lea 0x93e4(%rip),%rax
 0: rax<64> := 0x000000000000e19b;
 1: goto (0x00004db7, 0) 


# -- 0x00004db7 48 89 85 70 fb ff ff                   mov %rax,-0x490(%rbp)
 0: @[(rbp<64> + -1168<64>),8] := rax<64>;
 1: goto (0x00004dbe, 0) 


# -- 0x00004dbe c7 85 78 fb ff ff 00 00 00 00          movl $0x0,-0x488(%rbp)
 0: @[(rbp<64> + -1160<64>),4] := 0<32>;
 1: goto (0x00004dc8, 0) 


# -- 0x00004dc8 c7 85 7c fb ff ff 02 00 00 00          movl $0x2,-0x484(%rbp)
 0: @[(rbp<64> + -1156<64>),4] := 2<32>;
 1: goto (0x00004dd2, 0) 


# -- 0x00004dd2 48 8d 85 98 f9 ff ff                   lea -0x668(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1640<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004dd9, 0) 


# -- 0x00004dd9 48 89 85 80 fb ff ff                   mov %rax,-0x480(%rbp)
 0: @[(rbp<64> + -1152<64>),8] := rax<64>;
 1: goto (0x00004de0, 0) 


# -- 0x00004de0 c7 85 88 fb ff ff 00 00 00 00          movl $0x0,-0x478(%rbp)
 0: @[(rbp<64> + -1144<64>),4] := 0<32>;
 1: goto (0x00004dea, 0) 


# -- 0x00004dea 48 8d 05 b5 93 00 00                   lea 0x93b5(%rip),%rax
 0: rax<64> := 0x000000000000e1a6;
 1: goto (0x00004df1, 0) 


# -- 0x00004df1 48 89 85 90 fb ff ff                   mov %rax,-0x470(%rbp)
 0: @[(rbp<64> + -1136<64>),8] := rax<64>;
 1: goto (0x00004df8, 0) 


# -- 0x00004df8 c7 85 98 fb ff ff 00 00 00 00          movl $0x0,-0x468(%rbp)
 0: @[(rbp<64> + -1128<64>),4] := 0<32>;
 1: goto (0x00004e02, 0) 


# -- 0x00004e02 c7 85 9c fb ff ff 03 00 00 00          movl $0x3,-0x464(%rbp)
 0: @[(rbp<64> + -1124<64>),4] := 3<32>;
 1: goto (0x00004e0c, 0) 


# -- 0x00004e0c 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004e13, 0) 


# -- 0x00004e13 48 83 c0 48                            add $0x48,%rax
 0: %%0<64> := (rax<64> + 72<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004e17, 0) 


# -- 0x00004e17 48 89 85 a0 fb ff ff                   mov %rax,-0x460(%rbp)
 0: @[(rbp<64> + -1120<64>),8] := rax<64>;
 1: goto (0x00004e1e, 0) 


# -- 0x00004e1e c7 85 a8 fb ff ff 02 00 00 00          movl $0x2,-0x458(%rbp)
 0: @[(rbp<64> + -1112<64>),4] := 2<32>;
 1: goto (0x00004e28, 0) 


# -- 0x00004e28 48 8d 05 81 93 00 00                   lea 0x9381(%rip),%rax
 0: rax<64> := 0x000000000000e1b0;
 1: goto (0x00004e2f, 0) 


# -- 0x00004e2f 48 89 85 b0 fb ff ff                   mov %rax,-0x450(%rbp)
 0: @[(rbp<64> + -1104<64>),8] := rax<64>;
 1: goto (0x00004e36, 0) 


# -- 0x00004e36 c7 85 b8 fb ff ff 00 00 00 00          movl $0x0,-0x448(%rbp)
 0: @[(rbp<64> + -1096<64>),4] := 0<32>;
 1: goto (0x00004e40, 0) 


# -- 0x00004e40 c7 85 bc fb ff ff 02 00 00 00          movl $0x2,-0x444(%rbp)
 0: @[(rbp<64> + -1092<64>),4] := 2<32>;
 1: goto (0x00004e4a, 0) 


# -- 0x00004e4a 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004e51, 0) 


# -- 0x00004e51 48 83 c0 20                            add $0x20,%rax
 0: %%0<64> := (rax<64> + 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004e55, 0) 


# -- 0x00004e55 48 89 85 c0 fb ff ff                   mov %rax,-0x440(%rbp)
 0: @[(rbp<64> + -1088<64>),8] := rax<64>;
 1: goto (0x00004e5c, 0) 


# -- 0x00004e5c c7 85 c8 fb ff ff 00 00 00 00          movl $0x0,-0x438(%rbp)
 0: @[(rbp<64> + -1080<64>),4] := 0<32>;
 1: goto (0x00004e66, 0) 


# -- 0x00004e66 48 8d 05 4c 93 00 00                   lea 0x934c(%rip),%rax
 0: rax<64> := 0x000000000000e1b9;
 1: goto (0x00004e6d, 0) 


# -- 0x00004e6d 48 89 85 d0 fb ff ff                   mov %rax,-0x430(%rbp)
 0: @[(rbp<64> + -1072<64>),8] := rax<64>;
 1: goto (0x00004e74, 0) 


# -- 0x00004e74 c7 85 d8 fb ff ff 00 00 00 00          movl $0x0,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),4] := 0<32>;
 1: goto (0x00004e7e, 0) 


# -- 0x00004e7e c7 85 dc fb ff ff 03 00 00 00          movl $0x3,-0x424(%rbp)
 0: @[(rbp<64> + -1060<64>),4] := 3<32>;
 1: goto (0x00004e88, 0) 


# -- 0x00004e88 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004e8f, 0) 


# -- 0x00004e8f 48 83 c0 48                            add $0x48,%rax
 0: %%0<64> := (rax<64> + 72<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004e93, 0) 


# -- 0x00004e93 48 89 85 e0 fb ff ff                   mov %rax,-0x420(%rbp)
 0: @[(rbp<64> + -1056<64>),8] := rax<64>;
 1: goto (0x00004e9a, 0) 


# -- 0x00004e9a c7 85 e8 fb ff ff 08 00 00 00          movl $0x8,-0x418(%rbp)
 0: @[(rbp<64> + -1048<64>),4] := 8<32>;
 1: goto (0x00004ea4, 0) 


# -- 0x00004ea4 48 8d 05 19 93 00 00                   lea 0x9319(%rip),%rax
 0: rax<64> := 0x000000000000e1c4;
 1: goto (0x00004eab, 0) 


# -- 0x00004eab 48 89 85 f0 fb ff ff                   mov %rax,-0x410(%rbp)
 0: @[(rbp<64> + -1040<64>),8] := rax<64>;
 1: goto (0x00004eb2, 0) 


# -- 0x00004eb2 c7 85 f8 fb ff ff 00 00 00 00          movl $0x0,-0x408(%rbp)
 0: @[(rbp<64> + -1032<64>),4] := 0<32>;
 1: goto (0x00004ebc, 0) 


# -- 0x00004ebc c7 85 fc fb ff ff 00 00 00 00          movl $0x0,-0x404(%rbp)
 0: @[(rbp<64> + -1028<64>),4] := 0<32>;
 1: goto (0x00004ec6, 0) 


# -- 0x00004ec6 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004ecd, 0) 


# -- 0x00004ecd 48 83 c0 4c                            add $0x4c,%rax
 0: %%0<64> := (rax<64> + 76<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004ed1, 0) 


# -- 0x00004ed1 48 89 85 00 fc ff ff                   mov %rax,-0x400(%rbp)
 0: @[(rbp<64> + -1024<64>),8] := rax<64>;
 1: goto (0x00004ed8, 0) 


# -- 0x00004ed8 c7 85 08 fc ff ff 00 00 00 00          movl $0x0,-0x3f8(%rbp)
 0: @[(rbp<64> + -1016<64>),4] := 0<32>;
 1: goto (0x00004ee2, 0) 


# -- 0x00004ee2 48 8d 05 88 92 00 00                   lea 0x9288(%rip),%rax
 0: rax<64> := 0x000000000000e171;
 1: goto (0x00004ee9, 0) 


# -- 0x00004ee9 48 89 85 10 fc ff ff                   mov %rax,-0x3f0(%rbp)
 0: @[(rbp<64> + -1008<64>),8] := rax<64>;
 1: goto (0x00004ef0, 0) 


# -- 0x00004ef0 c7 85 18 fc ff ff 00 00 00 00          movl $0x0,-0x3e8(%rbp)
 0: @[(rbp<64> + -1000<64>),4] := 0<32>;
 1: goto (0x00004efa, 0) 


# -- 0x00004efa c7 85 1c fc ff ff 03 00 00 00          movl $0x3,-0x3e4(%rbp)
 0: @[(rbp<64> + -996<64>),4] := 3<32>;
 1: goto (0x00004f04, 0) 


# -- 0x00004f04 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004f0b, 0) 


# -- 0x00004f0b 48 83 c0 48                            add $0x48,%rax
 0: %%0<64> := (rax<64> + 72<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004f0f, 0) 


# -- 0x00004f0f 48 89 85 20 fc ff ff                   mov %rax,-0x3e0(%rbp)
 0: @[(rbp<64> + -992<64>),8] := rax<64>;
 1: goto (0x00004f16, 0) 


# -- 0x00004f16 c7 85 28 fc ff ff 00 40 00 00          movl $0x4000,-0x3d8(%rbp)
 0: @[(rbp<64> + -984<64>),4] := 0x00004000;
 1: goto (0x00004f20, 0) 


# -- 0x00004f20 48 8d 05 a9 92 00 00                   lea 0x92a9(%rip),%rax
 0: rax<64> := 0x000000000000e1d0;
 1: goto (0x00004f27, 0) 


# -- 0x00004f27 48 89 85 30 fc ff ff                   mov %rax,-0x3d0(%rbp)
 0: @[(rbp<64> + -976<64>),8] := rax<64>;
 1: goto (0x00004f2e, 0) 


# -- 0x00004f2e c7 85 38 fc ff ff 00 00 00 00          movl $0x0,-0x3c8(%rbp)
 0: @[(rbp<64> + -968<64>),4] := 0<32>;
 1: goto (0x00004f38, 0) 


# -- 0x00004f38 c7 85 3c fc ff ff 02 00 00 00          movl $0x2,-0x3c4(%rbp)
 0: @[(rbp<64> + -964<64>),4] := 2<32>;
 1: goto (0x00004f42, 0) 


# -- 0x00004f42 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004f49, 0) 


# -- 0x00004f49 48 83 c0 28                            add $0x28,%rax
 0: %%0<64> := (rax<64> + 40<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004f4d, 0) 


# -- 0x00004f4d 48 89 85 40 fc ff ff                   mov %rax,-0x3c0(%rbp)
 0: @[(rbp<64> + -960<64>),8] := rax<64>;
 1: goto (0x00004f54, 0) 


# -- 0x00004f54 c7 85 48 fc ff ff 00 00 00 00          movl $0x0,-0x3b8(%rbp)
 0: @[(rbp<64> + -952<64>),4] := 0<32>;
 1: goto (0x00004f5e, 0) 


# -- 0x00004f5e 48 8d 05 74 92 00 00                   lea 0x9274(%rip),%rax
 0: rax<64> := 0x000000000000e1d9;
 1: goto (0x00004f65, 0) 


# -- 0x00004f65 48 89 85 50 fc ff ff                   mov %rax,-0x3b0(%rbp)
 0: @[(rbp<64> + -944<64>),8] := rax<64>;
 1: goto (0x00004f6c, 0) 


# -- 0x00004f6c c7 85 58 fc ff ff 00 00 00 00          movl $0x0,-0x3a8(%rbp)
 0: @[(rbp<64> + -936<64>),4] := 0<32>;
 1: goto (0x00004f76, 0) 


# -- 0x00004f76 c7 85 5c fc ff ff 02 00 00 00          movl $0x2,-0x3a4(%rbp)
 0: @[(rbp<64> + -932<64>),4] := 2<32>;
 1: goto (0x00004f80, 0) 


# -- 0x00004f80 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004f87, 0) 


# -- 0x00004f87 48 83 c0 30                            add $0x30,%rax
 0: %%0<64> := (rax<64> + 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004f8b, 0) 


# -- 0x00004f8b 48 89 85 60 fc ff ff                   mov %rax,-0x3a0(%rbp)
 0: @[(rbp<64> + -928<64>),8] := rax<64>;
 1: goto (0x00004f92, 0) 


# -- 0x00004f92 c7 85 68 fc ff ff 00 00 00 00          movl $0x0,-0x398(%rbp)
 0: @[(rbp<64> + -920<64>),4] := 0<32>;
 1: goto (0x00004f9c, 0) 


# -- 0x00004f9c 48 8d 05 3e 92 00 00                   lea 0x923e(%rip),%rax
 0: rax<64> := 0x000000000000e1e1;
 1: goto (0x00004fa3, 0) 


# -- 0x00004fa3 48 89 85 70 fc ff ff                   mov %rax,-0x390(%rbp)
 0: @[(rbp<64> + -912<64>),8] := rax<64>;
 1: goto (0x00004faa, 0) 


# -- 0x00004faa c7 85 78 fc ff ff 00 00 00 00          movl $0x0,-0x388(%rbp)
 0: @[(rbp<64> + -904<64>),4] := 0<32>;
 1: goto (0x00004fb4, 0) 


# -- 0x00004fb4 c7 85 7c fc ff ff 02 00 00 00          movl $0x2,-0x384(%rbp)
 0: @[(rbp<64> + -900<64>),4] := 2<32>;
 1: goto (0x00004fbe, 0) 


# -- 0x00004fbe 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00004fc5, 0) 


# -- 0x00004fc5 48 83 c0 38                            add $0x38,%rax
 0: %%0<64> := (rax<64> + 56<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00004fc9, 0) 


# -- 0x00004fc9 48 89 85 80 fc ff ff                   mov %rax,-0x380(%rbp)
 0: @[(rbp<64> + -896<64>),8] := rax<64>;
 1: goto (0x00004fd0, 0) 


# -- 0x00004fd0 c7 85 88 fc ff ff 00 00 00 00          movl $0x0,-0x378(%rbp)
 0: @[(rbp<64> + -888<64>),4] := 0<32>;
 1: goto (0x00004fda, 0) 


# -- 0x00004fda 48 8d 05 0b 92 00 00                   lea 0x920b(%rip),%rax
 0: rax<64> := 0x000000000000e1ec;
 1: goto (0x00004fe1, 0) 


# -- 0x00004fe1 48 89 85 90 fc ff ff                   mov %rax,-0x370(%rbp)
 0: @[(rbp<64> + -880<64>),8] := rax<64>;
 1: goto (0x00004fe8, 0) 


# -- 0x00004fe8 c7 85 98 fc ff ff 00 00 00 00          movl $0x0,-0x368(%rbp)
 0: @[(rbp<64> + -872<64>),4] := 0<32>;
 1: goto (0x00004ff2, 0) 


# -- 0x00004ff2 c7 85 9c fc ff ff 02 00 00 00          movl $0x2,-0x364(%rbp)
 0: @[(rbp<64> + -868<64>),4] := 2<32>;
 1: goto (0x00004ffc, 0) 


# -- 0x00004ffc 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00005003, 0) 


# -- 0x00005003 48 83 c0 40                            add $0x40,%rax
 0: %%0<64> := (rax<64> + 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00005007, 0) 


# -- 0x00005007 48 89 85 a0 fc ff ff                   mov %rax,-0x360(%rbp)
 0: @[(rbp<64> + -864<64>),8] := rax<64>;
 1: goto (0x0000500e, 0) 


# -- 0x0000500e c7 85 a8 fc ff ff 00 00 00 00          movl $0x0,-0x358(%rbp)
 0: @[(rbp<64> + -856<64>),4] := 0<32>;
 1: goto (0x00005018, 0) 


# -- 0x00005018 48 8d 85 d0 fa ff ff                   lea -0x530(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1328<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000501f, 0) 


# -- 0x0000501f 48 89 85 b8 f9 ff ff                   mov %rax,-0x648(%rbp)
 0: @[(rbp<64> + -1608<64>),8] := rax<64>;
 1: goto (0x00005026, 0) 


# -- 0x00005026 c7 85 80 f9 ff ff 0f 00 00 00          movl $0xf,-0x680(%rbp)
 0: @[(rbp<64> + -1664<64>),4] := 15<32>;
 1: goto (0x00005030, 0) 


# -- 0x00005030 48 c7 85 a8 f9 ff ff 00 00 00 00       movq $0x0,-0x658(%rbp)
 0: @[(rbp<64> + -1624<64>),8] := 0<64>;
 1: goto (0x0000503b, 0) 


# -- 0x0000503b 48 c7 85 c0 f9 ff ff 00 00 00 00       movq $0x0,-0x640(%rbp)
 0: @[(rbp<64> + -1600<64>),8] := 0<64>;
 1: goto (0x00005046, 0) 


# -- 0x00005046 48 c7 85 c8 f9 ff ff 00 00 00 00       movq $0x0,-0x638(%rbp)
 0: @[(rbp<64> + -1592<64>),8] := 0<64>;
 1: goto (0x00005051, 0) 


# -- 0x00005051 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00005058, 0) 


# -- 0x00005058 ba 50 00 00 00                         mov $0x50,%edx
 0: rdx<64> := 80<64>;
 1: goto (0x0000505d, 0) 


# -- 0x0000505d be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00005062, 0) 


# -- 0x00005062 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005065, 0) 


# -- 0x00005065 e8 06 df ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000506a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x0000506a, 0)


# -- 0x0000506a 48 8d 05 87 91 00 00                   lea 0x9187(%rip),%rax
 0: rax<64> := 0x000000000000e1f8;
 1: goto (0x00005071, 0) 


# -- 0x00005071 48 89 85 50 fa ff ff                   mov %rax,-0x5b0(%rbp)
 0: @[(rbp<64> + -1456<64>),8] := rax<64>;
 1: goto (0x00005078, 0) 


# -- 0x00005078 48 83 bd 70 f9 ff ff 00                cmpq $0x0,-0x690(%rbp)
 0: %%0<64> := @[(rbp<64> + -1680<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005080, 0) 


# -- 0x00005080 74 1e                                  je 0x50a0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000050a0, 0) 
 2: goto (0x00005082, 0) 


# -- 0x00005082 48 8b 8d 70 f9 ff ff                   mov -0x690(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -1680<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00005089, 0) 


# -- 0x00005089 48 8d 85 10 fa ff ff                   lea -0x5f0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00005090, 0) 


# -- 0x00005090 ba 50 00 00 00                         mov $0x50,%edx
 0: rdx<64> := 80<64>;
 1: goto (0x00005095, 0) 


# -- 0x00005095 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005098, 0) 


# -- 0x00005098 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000509b, 0) 


# -- 0x0000509b e8 e0 e0 ff ff                         call 0x3180
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000050a0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003180, 0) #call with return address @ (0x000050a0, 0)


# -- 0x000050a0 e8 fb dc ff ff                         call 0x2da0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000050a5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002da0, 0) #call with return address @ (0x000050a5, 0)


# -- 0x000050a5 48 89 85 e0 f9 ff ff                   mov %rax,-0x620(%rbp)
 0: @[(rbp<64> + -1568<64>),8] := rax<64>;
 1: goto (0x000050ac, 0) 


# -- 0x000050ac ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x000050b1, 0) 


# -- 0x000050b1 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x000050b6, 0) 


# -- 0x000050b6 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000050bb, 0) 


# -- 0x000050bb e8 a0 de ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000050c0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x000050c0, 0)


# -- 0x000050c0 48 89 85 c8 f9 ff ff                   mov %rax,-0x638(%rbp)
 0: @[(rbp<64> + -1592<64>),8] := rax<64>;
 1: goto (0x000050c7, 0) 


# -- 0x000050c7 80 bd 6c f9 ff ff 00                   cmpb $0x0,-0x694(%rbp)
 0: %%0<8> := @[(rbp<64> + -1684<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000050ce, 0) 


# -- 0x000050ce 74 19                                  je 0x50e9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000050e9, 0) 
 2: goto (0x000050d0, 0) 


# -- 0x000050d0 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000050d7, 0) 


# -- 0x000050d7 48 8d 15 7a 7c 00 00                   lea 0x7c7a(%rip),%rdx
 0: rdx<64> := 0x000000000000cd58;
 1: goto (0x000050de, 0) 


# -- 0x000050de 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000050e1, 0) 


# -- 0x000050e1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000050e4, 0) 


# -- 0x000050e4 e8 27 dc ff ff                         call 0x2d10
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000050e9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d10, 0) #call with return address @ (0x000050e9, 0)


# -- 0x000050e9 48 8d 95 a8 f9 ff ff                   lea -0x658(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000050f0, 0) 


# -- 0x000050f0 48 8b b5 78 f9 ff ff                   mov -0x688(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -1672<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000050f7, 0) 


# -- 0x000050f7 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000050fe, 0) 


# -- 0x000050fe 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00005101, 0) 


# -- 0x00005101 ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x00005106, 0) 


# -- 0x00005106 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005109, 0) 


# -- 0x00005109 e8 02 e1 ff ff                         call 0x3210
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000510e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003210, 0) #call with return address @ (0x0000510e, 0)


# -- 0x0000510e 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005110, 0) 


# -- 0x00005110 75 61                                  jne 0x5173
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005173, 0) 
 2: goto (0x00005112, 0) 


# -- 0x00005112 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005119, 0) 


# -- 0x00005119 48 8b 58 08                            mov 0x8(%rax),%rbx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000511d, 0) 


# -- 0x0000511d 48 8d 3d b5 8e 00 00                   lea 0x8eb5(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005124, 0) 


# -- 0x00005124 e8 c7 de ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005129;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005129, 0)


# -- 0x00005129 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000512b, 0) 


# -- 0x0000512b 48 8b 95 78 f9 ff ff                   mov -0x688(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1672<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005132, 0) 


# -- 0x00005132 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005139, 0) 


# -- 0x00005139 49 89 d9                               mov %rbx,%r9
 0: %%0<64> := rbx<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x0000513c, 0) 


# -- 0x0000513c 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000513f, 0) 


# -- 0x0000513f 48 8d 0d ea 90 00 00                   lea 0x90ea(%rip),%rcx
 0: rcx<64> := 0x000000000000e230;
 1: goto (0x00005146, 0) 


# -- 0x00005146 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000514b, 0) 


# -- 0x0000514b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000514e, 0) 


# -- 0x0000514e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005153, 0) 


# -- 0x00005153 e8 88 dd ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005158;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005158, 0)


# -- 0x00005158 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000515f, 0) 


# -- 0x0000515f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005162, 0) 


# -- 0x00005162 e8 49 e1 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005167;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005167, 0)


# -- 0x00005167 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000516e, 0) 


# -- 0x0000516e e9 89 0c 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005173 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000517a, 0) 


# -- 0x0000517a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000517d, 0) 


# -- 0x0000517d e8 be e2 ff ff                         call 0x3440
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005182;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003440, 0) #call with return address @ (0x00005182, 0)


# -- 0x00005182 48 89 85 e8 f9 ff ff                   mov %rax,-0x618(%rbp)
 0: @[(rbp<64> + -1560<64>),8] := rax<64>;
 1: goto (0x00005189, 0) 


# -- 0x00005189 48 83 bd e8 f9 ff ff 00                cmpq $0x0,-0x618(%rbp)
 0: %%0<64> := @[(rbp<64> + -1560<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005191, 0) 


# -- 0x00005191 74 1a                                  je 0x51ad
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000051ad, 0) 
 2: goto (0x00005193, 0) 


# -- 0x00005193 48 8b 85 e8 f9 ff ff                   mov -0x618(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1560<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000519a, 0) 


# -- 0x0000519a 48 8d 35 b1 90 00 00                   lea 0x90b1(%rip),%rsi
 0: rsi<64> := 0x000000000000e252;
 1: goto (0x000051a1, 0) 


# -- 0x000051a1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000051a4, 0) 


# -- 0x000051a4 e8 17 df ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000051a9;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x000051a9, 0)


# -- 0x000051a9 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000051ab, 0) 


# -- 0x000051ab 74 50                                  je 0x51fd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000051fd, 0) 
 2: goto (0x000051ad, 0) 


# -- 0x000051ad 80 bd 6c f9 ff ff 00                   cmpb $0x0,-0x694(%rbp)
 0: %%0<8> := @[(rbp<64> + -1684<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000051b4, 0) 


# -- 0x000051b4 74 47                                  je 0x51fd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000051fd, 0) 
 2: goto (0x000051b6, 0) 


# -- 0x000051b6 48 8d 3d 1c 8e 00 00                   lea 0x8e1c(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x000051bd, 0) 


# -- 0x000051bd e8 2e de ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000051c2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x000051c2, 0)


# -- 0x000051c2 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x000051c4, 0) 


# -- 0x000051c4 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000051cb, 0) 


# -- 0x000051cb 48 8d 0d 8e 90 00 00                   lea 0x908e(%rip),%rcx
 0: rcx<64> := 0x000000000000e260;
 1: goto (0x000051d2, 0) 


# -- 0x000051d2 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x000051d7, 0) 


# -- 0x000051d7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000051da, 0) 


# -- 0x000051da b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000051df, 0) 


# -- 0x000051df e8 fc dc ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000051e4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x000051e4, 0)


# -- 0x000051e4 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000051eb, 0) 


# -- 0x000051eb 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000051ee, 0) 


# -- 0x000051ee e8 bd e0 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000051f3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x000051f3, 0)


# -- 0x000051f3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000051f8, 0) 


# -- 0x000051f8 e9 ff 0b 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x000051fd 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005204, 0) 


# -- 0x00005204 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00005209, 0) 


# -- 0x00005209 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000520c, 0) 


# -- 0x0000520c e8 af e1 ff ff                         call 0x33c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005211;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033c0, 0) #call with return address @ (0x00005211, 0)


# -- 0x00005211 48 89 85 f0 f9 ff ff                   mov %rax,-0x610(%rbp)
 0: @[(rbp<64> + -1552<64>),8] := rax<64>;
 1: goto (0x00005218, 0) 


# -- 0x00005218 c7 85 84 f9 ff ff 00 00 00 00          movl $0x0,-0x67c(%rbp)
 0: @[(rbp<64> + -1660<64>),4] := 0<32>;
 1: goto (0x00005222, 0) 


# -- 0x00005222 e9 6b 0a 00 00                         jmp 0x5c92
 0: goto (0x00005c92, 0) 


# -- 0x00005227 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000522e, 0) 


# -- 0x0000522e ba 68 00 00 00                         mov $0x68,%edx
 0: rdx<64> := 104<64>;
 1: goto (0x00005233, 0) 


# -- 0x00005233 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00005238, 0) 


# -- 0x00005238 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000523b, 0) 


# -- 0x0000523b e8 30 dd ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005240;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x00005240, 0)


# -- 0x00005240 83 bd 84 f9 ff ff 01                   cmpl $0x1,-0x67c(%rbp)
 0: %%0<32> := @[(rbp<64> + -1660<64>),4];
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005247, 0) 


# -- 0x00005247 74 0e                                  je 0x5257
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005257, 0) 
 2: goto (0x00005249, 0) 


# -- 0x00005249 0f b6 85 6c f9 ff ff                   movzbl -0x694(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1684<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005250, 0) 


# -- 0x00005250 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00005253, 0) 


# -- 0x00005253 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005255, 0) 


# -- 0x00005255 74 1a                                  je 0x5271
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005271, 0) 
 2: goto (0x00005257, 0) 


# -- 0x00005257 48 8d 85 b0 fc ff ff                   lea -0x350(%rbp),%rax
 0: %%0<64> := (rbp<64> + -848<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000525e, 0) 


# -- 0x0000525e 48 89 85 b8 f9 ff ff                   mov %rax,-0x648(%rbp)
 0: @[(rbp<64> + -1608<64>),8] := rax<64>;
 1: goto (0x00005265, 0) 


# -- 0x00005265 8b 85 8c f9 ff ff                      mov -0x674(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1652<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000526b, 0) 


# -- 0x0000526b 89 85 80 f9 ff ff                      mov %eax,-0x680(%rbp)
 0: @[(rbp<64> + -1664<64>),4] := rax<64>{0,31};
 1: goto (0x00005271, 0) 


# -- 0x00005271 c7 85 88 f9 ff ff 00 00 00 00          movl $0x0,-0x678(%rbp)
 0: @[(rbp<64> + -1656<64>),4] := 0<32>;
 1: goto (0x0000527b, 0) 


# -- 0x0000527b e9 4b 05 00 00                         jmp 0x57cb
 0: goto (0x000057cb, 0) 


# -- 0x00005280 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005286, 0) 


# -- 0x00005286 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005288, 0) 


# -- 0x00005288 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x0000528c, 0) 


# -- 0x0000528c 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000528f, 0) 


# -- 0x0000528f 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005296, 0) 


# -- 0x00005296 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005299, 0) 


# -- 0x00005299 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000529d, 0) 


# -- 0x0000529d 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000052a0, 0) 


# -- 0x000052a0 75 1f                                  jne 0x52c1
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000052c1, 0) 
 2: goto (0x000052a2, 0) 


# -- 0x000052a2 48 8d 0d df a1 00 00                   lea 0xa1df(%rip),%rcx
 0: rcx<64> := 0x000000000000f488;
 1: goto (0x000052a9, 0) 


# -- 0x000052a9 ba 7c 03 00 00                         mov $0x37c,%edx
 0: rdx<64> := 892<64>;
 1: goto (0x000052ae, 0) 


# -- 0x000052ae 48 8d 35 3f 86 00 00                   lea 0x863f(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x000052b5, 0) 


# -- 0x000052b5 48 8d 3d d6 8f 00 00                   lea 0x8fd6(%rip),%rdi
 0: rdi<64> := 0x000000000000e292;
 1: goto (0x000052bc, 0) 


# -- 0x000052bc e8 7f dc ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000052c1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x000052c1, 0)


# -- 0x000052c1 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000052c7, 0) 


# -- 0x000052c7 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000052c9, 0) 


# -- 0x000052c9 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000052cd, 0) 


# -- 0x000052cd 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000052d0, 0) 


# -- 0x000052d0 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000052d7, 0) 


# -- 0x000052d7 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000052da, 0) 


# -- 0x000052da 8b 40 0c                               mov 0xc(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000052dd, 0) 


# -- 0x000052dd 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000052df, 0) 


# -- 0x000052df 0f 84 82 00 00 00                      je 0x5367
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005367, 0) 
 2: goto (0x000052e5, 0) 


# -- 0x000052e5 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000052eb, 0) 


# -- 0x000052eb 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000052ed, 0) 


# -- 0x000052ed 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000052f1, 0) 


# -- 0x000052f1 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000052f4, 0) 


# -- 0x000052f4 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000052fb, 0) 


# -- 0x000052fb 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000052fe, 0) 


# -- 0x000052fe 8b 40 0c                               mov 0xc(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005301, 0) 


# -- 0x00005301 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005304, 0) 


# -- 0x00005304 74 61                                  je 0x5367
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005367, 0) 
 2: goto (0x00005306, 0) 


# -- 0x00005306 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000530c, 0) 


# -- 0x0000530c 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000530e, 0) 


# -- 0x0000530e 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005312, 0) 


# -- 0x00005312 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005315, 0) 


# -- 0x00005315 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000531c, 0) 


# -- 0x0000531c 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000531f, 0) 


# -- 0x0000531f 8b 40 0c                               mov 0xc(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005322, 0) 


# -- 0x00005322 83 f8 03                               cmp $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 3<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005325, 0) 


# -- 0x00005325 74 40                                  je 0x5367
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005367, 0) 
 2: goto (0x00005327, 0) 


# -- 0x00005327 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000532d, 0) 


# -- 0x0000532d 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000532f, 0) 


# -- 0x0000532f 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005333, 0) 


# -- 0x00005333 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005336, 0) 


# -- 0x00005336 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000533d, 0) 


# -- 0x0000533d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005340, 0) 


# -- 0x00005340 8b 40 0c                               mov 0xc(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005343, 0) 


# -- 0x00005343 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005346, 0) 


# -- 0x00005346 74 1f                                  je 0x5367
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005367, 0) 
 2: goto (0x00005348, 0) 


# -- 0x00005348 48 8d 0d 39 a1 00 00                   lea 0xa139(%rip),%rcx
 0: rcx<64> := 0x000000000000f488;
 1: goto (0x0000534f, 0) 


# -- 0x0000534f ba 7d 03 00 00                         mov $0x37d,%edx
 0: rdx<64> := 893<64>;
 1: goto (0x00005354, 0) 


# -- 0x00005354 48 8d 35 99 85 00 00                   lea 0x8599(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x0000535b, 0) 


# -- 0x0000535b 48 8d 3d 46 8f 00 00                   lea 0x8f46(%rip),%rdi
 0: rdi<64> := 0x000000000000e2a8;
 1: goto (0x00005362, 0) 


# -- 0x00005362 e8 d9 db ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005367;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x00005367, 0)


# -- 0x00005367 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000536d, 0) 


# -- 0x0000536d 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000536f, 0) 


# -- 0x0000536f 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005373, 0) 


# -- 0x00005373 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005376, 0) 


# -- 0x00005376 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000537d, 0) 


# -- 0x0000537d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005380, 0) 


# -- 0x00005380 8b 40 0c                               mov 0xc(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005383, 0) 


# -- 0x00005383 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005386, 0) 


# -- 0x00005386 0f 84 ab 00 00 00                      je 0x5437
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005437, 0) 
 2: goto (0x0000538c, 0) 


# -- 0x0000538c 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000538f, 0) 


# -- 0x0000538f 72 17                                  jb 0x53a8
 0: if cf<1> goto 1 else goto 2
 1: goto (0x000053a8, 0) 
 2: goto (0x00005391, 0) 


# -- 0x00005391 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005394, 0) 


# -- 0x00005394 0f 84 2f 01 00 00                      je 0x54c9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000054c9, 0) 
 2: goto (0x0000539a, 0) 


# -- 0x0000539a 83 f8 03                               cmp $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 3<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000539d, 0) 


# -- 0x0000539d 0f 84 b8 01 00 00                      je 0x555b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000555b, 0) 
 2: goto (0x000053a3, 0) 


# -- 0x000053a3 e9 eb 02 00 00                         jmp 0x5693
 0: goto (0x00005693, 0) 


# -- 0x000053a8 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000053ae, 0) 


# -- 0x000053ae 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000053b0, 0) 


# -- 0x000053b0 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000053b4, 0) 


# -- 0x000053b4 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000053b7, 0) 


# -- 0x000053b7 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000053be, 0) 


# -- 0x000053be 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000053c1, 0) 


# -- 0x000053c1 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000053c4, 0) 


# -- 0x000053c4 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000053ca, 0) 


# -- 0x000053ca 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000053cc, 0) 


# -- 0x000053cc 48 8d 0c c5 00 00 00 00                lea 0x0(,%rax,8),%rcx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000053d4, 0) 


# -- 0x000053d4 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000053db, 0) 


# -- 0x000053db 48 01 c8                               add %rcx,%rax
 0: %%0<64> := (rax<64> & rcx<64>);
 1: %%1<64> := (rax<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000053de, 0) 


# -- 0x000053de 48 8b 30                               mov (%rax),%rsi
 0: %%0<64> := @[rax<64>,8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000053e1, 0) 


# -- 0x000053e1 48 8d 8d a8 f9 ff ff                   lea -0x658(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000053e8, 0) 


# -- 0x000053e8 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000053ef, 0) 


# -- 0x000053ef 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000053f2, 0) 


# -- 0x000053f2 e8 f9 e0 ff ff                         call 0x34f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000053f7;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034f0, 0) #call with return address @ (0x000053f7, 0)


# -- 0x000053f7 89 85 94 f9 ff ff                      mov %eax,-0x66c(%rbp)
 0: @[(rbp<64> + -1644<64>),4] := rax<64>{0,31};
 1: goto (0x000053fd, 0) 


# -- 0x000053fd 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005404, 0) 


# -- 0x00005404 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005407, 0) 


# -- 0x00005407 0f 85 7c 02 00 00                      jne 0x5689
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005689, 0) 
 2: goto (0x0000540d, 0) 


# -- 0x0000540d 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005413, 0) 


# -- 0x00005413 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005415, 0) 


# -- 0x00005415 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005419, 0) 


# -- 0x00005419 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000541c, 0) 


# -- 0x0000541c 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005423, 0) 


# -- 0x00005423 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005426, 0) 


# -- 0x00005426 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000542a, 0) 


# -- 0x0000542a 8b 95 94 f9 ff ff                      mov -0x66c(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -1644<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005430, 0) 


# -- 0x00005430 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x00005432, 0) 


# -- 0x00005432 e9 52 02 00 00                         jmp 0x5689
 0: goto (0x00005689, 0) 


# -- 0x00005437 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000543d, 0) 


# -- 0x0000543d 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000543f, 0) 


# -- 0x0000543f 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005443, 0) 


# -- 0x00005443 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005446, 0) 


# -- 0x00005446 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000544d, 0) 


# -- 0x0000544d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005450, 0) 


# -- 0x00005450 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005453, 0) 


# -- 0x00005453 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005459, 0) 


# -- 0x00005459 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000545b, 0) 


# -- 0x0000545b 48 8d 0c c5 00 00 00 00                lea 0x0(,%rax,8),%rcx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005463, 0) 


# -- 0x00005463 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000546a, 0) 


# -- 0x0000546a 48 01 c8                               add %rcx,%rax
 0: %%0<64> := (rax<64> & rcx<64>);
 1: %%1<64> := (rax<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000546d, 0) 


# -- 0x0000546d 48 8b 30                               mov (%rax),%rsi
 0: %%0<64> := @[rax<64>,8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00005470, 0) 


# -- 0x00005470 48 8d 8d a8 f9 ff ff                   lea -0x658(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005477, 0) 


# -- 0x00005477 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000547e, 0) 


# -- 0x0000547e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005481, 0) 


# -- 0x00005481 e8 ea d7 ff ff                         call 0x2c70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005486;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c70, 0) #call with return address @ (0x00005486, 0)


# -- 0x00005486 48 89 85 08 fa ff ff                   mov %rax,-0x5f8(%rbp)
 0: @[(rbp<64> + -1528<64>),8] := rax<64>;
 1: goto (0x0000548d, 0) 


# -- 0x0000548d 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005494, 0) 


# -- 0x00005494 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005497, 0) 


# -- 0x00005497 0f 85 ef 01 00 00                      jne 0x568c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000568c, 0) 
 2: goto (0x0000549d, 0) 


# -- 0x0000549d 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054a3, 0) 


# -- 0x000054a3 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054a5, 0) 


# -- 0x000054a5 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000054a9, 0) 


# -- 0x000054a9 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000054ac, 0) 


# -- 0x000054ac 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000054b3, 0) 


# -- 0x000054b3 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000054b6, 0) 


# -- 0x000054b6 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000054ba, 0) 


# -- 0x000054ba 48 8b 95 08 fa ff ff                   mov -0x5f8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1528<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000054c1, 0) 


# -- 0x000054c1 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x000054c4, 0) 


# -- 0x000054c4 e9 c3 01 00 00                         jmp 0x568c
 0: goto (0x0000568c, 0) 


# -- 0x000054c9 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054cf, 0) 


# -- 0x000054cf 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054d1, 0) 


# -- 0x000054d1 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000054d5, 0) 


# -- 0x000054d5 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000054d8, 0) 


# -- 0x000054d8 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000054df, 0) 


# -- 0x000054df 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000054e2, 0) 


# -- 0x000054e2 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000054e5, 0) 


# -- 0x000054e5 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054eb, 0) 


# -- 0x000054eb 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000054ed, 0) 


# -- 0x000054ed 48 8d 0c c5 00 00 00 00                lea 0x0(,%rax,8),%rcx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000054f5, 0) 


# -- 0x000054f5 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000054fc, 0) 


# -- 0x000054fc 48 01 c8                               add %rcx,%rax
 0: %%0<64> := (rax<64> & rcx<64>);
 1: %%1<64> := (rax<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000054ff, 0) 


# -- 0x000054ff 48 8b 30                               mov (%rax),%rsi
 0: %%0<64> := @[rax<64>,8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00005502, 0) 


# -- 0x00005502 48 8d 8d a8 f9 ff ff                   lea -0x658(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005509, 0) 


# -- 0x00005509 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005510, 0) 


# -- 0x00005510 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005513, 0) 


# -- 0x00005513 e8 08 de ff ff                         call 0x3320
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005518;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003320, 0) #call with return address @ (0x00005518, 0)


# -- 0x00005518 48 89 85 00 fa ff ff                   mov %rax,-0x600(%rbp)
 0: @[(rbp<64> + -1536<64>),8] := rax<64>;
 1: goto (0x0000551f, 0) 


# -- 0x0000551f 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005526, 0) 


# -- 0x00005526 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005529, 0) 


# -- 0x00005529 0f 85 60 01 00 00                      jne 0x568f
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000568f, 0) 
 2: goto (0x0000552f, 0) 


# -- 0x0000552f 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005535, 0) 


# -- 0x00005535 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005537, 0) 


# -- 0x00005537 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x0000553b, 0) 


# -- 0x0000553b 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000553e, 0) 


# -- 0x0000553e 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005545, 0) 


# -- 0x00005545 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005548, 0) 


# -- 0x00005548 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000554c, 0) 


# -- 0x0000554c 48 8b 95 00 fa ff ff                   mov -0x600(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1536<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005553, 0) 


# -- 0x00005553 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00005556, 0) 


# -- 0x00005556 e9 34 01 00 00                         jmp 0x568f
 0: goto (0x0000568f, 0) 


# -- 0x0000555b 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005561, 0) 


# -- 0x00005561 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005563, 0) 


# -- 0x00005563 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005567, 0) 


# -- 0x00005567 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000556a, 0) 


# -- 0x0000556a 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005571, 0) 


# -- 0x00005571 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005574, 0) 


# -- 0x00005574 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005577, 0) 


# -- 0x00005577 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000557d, 0) 


# -- 0x0000557d 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000557f, 0) 


# -- 0x0000557f 48 8d 0c c5 00 00 00 00                lea 0x0(,%rax,8),%rcx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005587, 0) 


# -- 0x00005587 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000558e, 0) 


# -- 0x0000558e 48 01 c8                               add %rcx,%rax
 0: %%0<64> := (rax<64> & rcx<64>);
 1: %%1<64> := (rax<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005591, 0) 


# -- 0x00005591 48 8b 30                               mov (%rax),%rsi
 0: %%0<64> := @[rax<64>,8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00005594, 0) 


# -- 0x00005594 48 8d 8d a8 f9 ff ff                   lea -0x658(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000559b, 0) 


# -- 0x0000559b 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000055a2, 0) 


# -- 0x000055a2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000055a5, 0) 


# -- 0x000055a5 e8 36 d7 ff ff                         call 0x2ce0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000055aa;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ce0, 0) #call with return address @ (0x000055aa, 0)


# -- 0x000055aa 89 85 90 f9 ff ff                      mov %eax,-0x670(%rbp)
 0: @[(rbp<64> + -1648<64>),4] := rax<64>{0,31};
 1: goto (0x000055b0, 0) 


# -- 0x000055b0 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000055b7, 0) 


# -- 0x000055b7 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000055ba, 0) 


# -- 0x000055ba 0f 85 d2 00 00 00                      jne 0x5692
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005692, 0) 
 2: goto (0x000055c0, 0) 


# -- 0x000055c0 83 bd 90 f9 ff ff 00                   cmpl $0x0,-0x670(%rbp)
 0: %%0<32> := @[(rbp<64> + -1648<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000055c7, 0) 


# -- 0x000055c7 74 5e                                  je 0x5627
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005627, 0) 
 2: goto (0x000055c9, 0) 


# -- 0x000055c9 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000055cf, 0) 


# -- 0x000055cf 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000055d1, 0) 


# -- 0x000055d1 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000055d5, 0) 


# -- 0x000055d5 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000055d8, 0) 


# -- 0x000055d8 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000055df, 0) 


# -- 0x000055df 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000055e2, 0) 


# -- 0x000055e2 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000055e6, 0) 


# -- 0x000055e6 8b 08                                  mov (%rax),%ecx
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x000055e8, 0) 


# -- 0x000055e8 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000055ee, 0) 


# -- 0x000055ee 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000055f0, 0) 


# -- 0x000055f0 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000055f4, 0) 


# -- 0x000055f4 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000055f7, 0) 


# -- 0x000055f7 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000055fe, 0) 


# -- 0x000055fe 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005601, 0) 


# -- 0x00005601 8b 50 18                               mov 0x18(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005604, 0) 


# -- 0x00005604 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000560a, 0) 


# -- 0x0000560a 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000560c, 0) 


# -- 0x0000560c 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005610, 0) 


# -- 0x00005610 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005613, 0) 


# -- 0x00005613 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000561a, 0) 


# -- 0x0000561a 48 01 f0                               add %rsi,%rax
 0: %%0<64> := (rax<64> & rsi<64>);
 1: %%1<64> := (rax<64> + rsi<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rsi<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rsi<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000561d, 0) 


# -- 0x0000561d 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005621, 0) 


# -- 0x00005621 09 ca                                  or %ecx,%edx
 0: %%0<32> := (rdx<64>{0,31} | rcx<64>{0,31});
 1: %%1<1> :=
     !
     (((((rdx<64>{0} | rcx<64>{0}) ^ (rdx<64>{4} | rcx<64>{4})) ^
        ((rdx<64>{2} | rcx<64>{2}) ^ (rdx<64>{6} | rcx<64>{6}))) ^
       (((rdx<64>{1} | rcx<64>{1}) ^ (rdx<64>{5} | rcx<64>{5})) ^
        ((rdx<64>{3} | rcx<64>{3}) ^ (rdx<64>{7} | rcx<64>{7})))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rdx<64> := %%4<64>;
12: goto (0x00005623, 0) 


# -- 0x00005623 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x00005625, 0) 


# -- 0x00005625 eb 6b                                  jmp 0x5692
 0: goto (0x00005692, 0) 


# -- 0x00005627 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000562d, 0) 


# -- 0x0000562d 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000562f, 0) 


# -- 0x0000562f 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005633, 0) 


# -- 0x00005633 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005636, 0) 


# -- 0x00005636 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000563d, 0) 


# -- 0x0000563d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005640, 0) 


# -- 0x00005640 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005644, 0) 


# -- 0x00005644 8b 10                                  mov (%rax),%edx
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005646, 0) 


# -- 0x00005646 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000564c, 0) 


# -- 0x0000564c 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000564e, 0) 


# -- 0x0000564e 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005652, 0) 


# -- 0x00005652 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00005655, 0) 


# -- 0x00005655 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000565c, 0) 


# -- 0x0000565c 48 01 c8                               add %rcx,%rax
 0: %%0<64> := (rax<64> & rcx<64>);
 1: %%1<64> := (rax<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000565f, 0) 


# -- 0x0000565f 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005662, 0) 


# -- 0x00005662 f7 d0                                  not %eax
 0: %%0<64> := (extu ! (rax<64>{0,31}) 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005664, 0) 


# -- 0x00005664 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005666, 0) 


# -- 0x00005666 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000566c, 0) 


# -- 0x0000566c 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000566e, 0) 


# -- 0x0000566e 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005672, 0) 


# -- 0x00005672 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005675, 0) 


# -- 0x00005675 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000567c, 0) 


# -- 0x0000567c 48 01 f0                               add %rsi,%rax
 0: %%0<64> := (rax<64> & rsi<64>);
 1: %%1<64> := (rax<64> + rsi<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rsi<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rsi<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000567f, 0) 


# -- 0x0000567f 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005683, 0) 


# -- 0x00005683 21 ca                                  and %ecx,%edx
 0: %%0<32> := (rdx<64>{0,31} & rcx<64>{0,31});
 1: %%1<1> :=
     !
     (((((rdx<64>{0} & rcx<64>{0}) ^ (rdx<64>{4} & rcx<64>{4})) ^
        ((rdx<64>{2} & rcx<64>{2}) ^ (rdx<64>{6} & rcx<64>{6}))) ^
       (((rdx<64>{1} & rcx<64>{1}) ^ (rdx<64>{5} & rcx<64>{5})) ^
        ((rdx<64>{3} & rcx<64>{3}) ^ (rdx<64>{7} & rcx<64>{7})))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rdx<64> := %%4<64>;
12: goto (0x00005685, 0) 


# -- 0x00005685 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x00005687, 0) 


# -- 0x00005687 eb 09                                  jmp 0x5692
 0: goto (0x00005692, 0) 


# -- 0x00005689 90                                     nop
 0: goto (0x0000568a, 0) 


# -- 0x0000568a eb 07                                  jmp 0x5693
 0: goto (0x00005693, 0) 


# -- 0x0000568c 90                                     nop
 0: goto (0x0000568d, 0) 


# -- 0x0000568d eb 04                                  jmp 0x5693
 0: goto (0x00005693, 0) 


# -- 0x0000568f 90                                     nop
 0: goto (0x00005690, 0) 


# -- 0x00005690 eb 01                                  jmp 0x5693
 0: goto (0x00005693, 0) 


# -- 0x00005692 90                                     nop
 0: goto (0x00005693, 0) 


# -- 0x00005693 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000569a, 0) 


# -- 0x0000569a 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000569d, 0) 


# -- 0x0000569d 0f 84 21 01 00 00                      je 0x57c4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000057c4, 0) 
 2: goto (0x000056a3, 0) 


# -- 0x000056a3 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000056aa, 0) 


# -- 0x000056aa 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000056ad, 0) 


# -- 0x000056ad 83 f8 03                               cmp $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 3<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000056b0, 0) 


# -- 0x000056b0 75 44                                  jne 0x56f6
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000056f6, 0) 
 2: goto (0x000056b2, 0) 


# -- 0x000056b2 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000056b8, 0) 


# -- 0x000056b8 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000056ba, 0) 


# -- 0x000056ba 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x000056be, 0) 


# -- 0x000056be 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000056c1, 0) 


# -- 0x000056c1 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000056c8, 0) 


# -- 0x000056c8 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000056cb, 0) 


# -- 0x000056cb 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000056ce, 0) 


# -- 0x000056ce 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000056d0, 0) 


# -- 0x000056d0 75 14                                  jne 0x56e6
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000056e6, 0) 
 2: goto (0x000056d2, 0) 


# -- 0x000056d2 48 8d 85 a8 f9 ff ff                   lea -0x658(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1624<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000056d9, 0) 


# -- 0x000056d9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000056dc, 0) 


# -- 0x000056dc e8 3f dd ff ff                         call 0x3420
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000056e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003420, 0) #call with return address @ (0x000056e1, 0)


# -- 0x000056e1 e9 de 00 00 00                         jmp 0x57c4
 0: goto (0x000057c4, 0) 


# -- 0x000056e6 48 8b 85 d8 f9 ff ff                   mov -0x628(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1576<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000056ed, 0) 


# -- 0x000056ed 48 89 85 c0 f9 ff ff                   mov %rax,-0x640(%rbp)
 0: @[(rbp<64> + -1600<64>),8] := rax<64>;
 1: goto (0x000056f4, 0) 


# -- 0x000056f4 eb 0e                                  jmp 0x5704
 0: goto (0x00005704, 0) 


# -- 0x000056f6 48 8b 85 d0 f9 ff ff                   mov -0x630(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1584<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000056fd, 0) 


# -- 0x000056fd 48 89 85 c0 f9 ff ff                   mov %rax,-0x640(%rbp)
 0: @[(rbp<64> + -1600<64>),8] := rax<64>;
 1: goto (0x00005704, 0) 


# -- 0x00005704 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000570b, 0) 


# -- 0x0000570b 48 8b 58 08                            mov 0x8(%rax),%rbx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000570f, 0) 


# -- 0x0000570f 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005715, 0) 


# -- 0x00005715 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005717, 0) 


# -- 0x00005717 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000571f, 0) 


# -- 0x0000571f 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005726, 0) 


# -- 0x00005726 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005729, 0) 


# -- 0x00005729 4c 8b 28                               mov (%rax),%r13
 0: %%0<64> := @[rax<64>,8];
 1: r13<64> := %%0<64>;
 2: goto (0x0000572c, 0) 


# -- 0x0000572c 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005732, 0) 


# -- 0x00005732 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005734, 0) 


# -- 0x00005734 48 c1 e0 05                            shl $0x5,%rax
 0: %%0<64> := (rax<64> << 5<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 4<64>)));
 2: %%2<1> := ! ((rax<64>{1} ^ (rax<64>{0} ^ rax<64>{2})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%0<64>;
13: goto (0x00005738, 0) 


# -- 0x00005738 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000573b, 0) 


# -- 0x0000573b 48 8b 85 b8 f9 ff ff                   mov -0x648(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1608<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005742, 0) 


# -- 0x00005742 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005745, 0) 


# -- 0x00005745 4c 8b 20                               mov (%rax),%r12
 0: %%0<64> := @[rax<64>,8];
 1: r12<64> := %%0<64>;
 2: goto (0x00005748, 0) 


# -- 0x00005748 48 8d 3d 8a 88 00 00                   lea 0x888a(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000574f, 0) 


# -- 0x0000574f e8 9c d8 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005754;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005754, 0)


# -- 0x00005754 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00005756, 0) 


# -- 0x00005756 48 8b 95 c0 f9 ff ff                   mov -0x640(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1600<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000575d, 0) 


# -- 0x0000575d 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005764, 0) 


# -- 0x00005764 48 83 ec 08                            sub $0x8,%rsp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00005768, 0) 


# -- 0x00005768 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005769, 0) 


# -- 0x00005769 4d 89 e9                               mov %r13,%r9
 0: %%0<64> := r13<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x0000576c, 0) 


# -- 0x0000576c 4d 89 e0                               mov %r12,%r8
 0: %%0<64> := r12<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000576f, 0) 


# -- 0x0000576f 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00005772, 0) 


# -- 0x00005772 ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x00005777, 0) 


# -- 0x00005777 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000577a, 0) 


# -- 0x0000577a b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000577f, 0) 


# -- 0x0000577f e8 5c d7 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005784;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005784, 0)


# -- 0x00005784 48 83 c4 10                            add $0x10,%rsp
 0: %%0<64> := (rsp<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00005788, 0) 


# -- 0x00005788 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000578f, 0) 


# -- 0x0000578f be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005794, 0) 


# -- 0x00005794 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005797, 0) 


# -- 0x00005797 e8 04 d9 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000579c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x0000579c, 0)


# -- 0x0000579c 48 8b 85 a8 f9 ff ff                   mov -0x658(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1624<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000057a3, 0) 


# -- 0x000057a3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000057a6, 0) 


# -- 0x000057a6 e8 95 dd ff ff                         call 0x3540
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000057ab;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003540, 0) #call with return address @ (0x000057ab, 0)


# -- 0x000057ab 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000057b2, 0) 


# -- 0x000057b2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000057b5, 0) 


# -- 0x000057b5 e8 f6 da ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000057ba;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x000057ba, 0)


# -- 0x000057ba b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000057bf, 0) 


# -- 0x000057bf e9 38 06 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x000057c4 83 85 88 f9 ff ff 01                   addl $0x1,-0x678(%rbp)
 0: %%0<64> := (rbp<64> + -1656<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000057cb, 0) 


# -- 0x000057cb 8b 85 88 f9 ff ff                      mov -0x678(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1656<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000057d1, 0) 


# -- 0x000057d1 3b 85 80 f9 ff ff                      cmp -0x680(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -1664<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x000057d7, 0) 


# -- 0x000057d7 0f 8c a3 fa ff ff                      jl 0x5280
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x00005280, 0) 
 2: goto (0x000057dd, 0) 


# -- 0x000057dd 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000057e4, 0) 


# -- 0x000057e4 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000057e7, 0) 


# -- 0x000057e7 0f 84 02 02 00 00                      je 0x59ef
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000059ef, 0) 
 2: goto (0x000057ed, 0) 


# -- 0x000057ed 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000057f4, 0) 


# -- 0x000057f4 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x000057f9, 0) 


# -- 0x000057f9 48 8d 35 09 8b 00 00                   lea 0x8b09(%rip),%rsi
 0: rsi<64> := 0x000000000000e309;
 1: goto (0x00005800, 0) 


# -- 0x00005800 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005803, 0) 


# -- 0x00005803 e8 c8 d4 ff ff                         call 0x2cd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005808;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cd0, 0) #call with return address @ (0x00005808, 0)


# -- 0x00005808 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000580a, 0) 


# -- 0x0000580a 75 0f                                  jne 0x581b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000581b, 0) 
 2: goto (0x0000580c, 0) 


# -- 0x0000580c c7 85 84 fa ff ff 00 00 00 00          movl $0x0,-0x57c(%rbp)
 0: @[(rbp<64> + -1404<64>),4] := 0<32>;
 1: goto (0x00005816, 0) 


# -- 0x00005816 e9 de 01 00 00                         jmp 0x59f9
 0: goto (0x000059f9, 0) 


# -- 0x0000581b 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005822, 0) 


# -- 0x00005822 ba 09 00 00 00                         mov $0x9,%edx
 0: rdx<64> := 9<64>;
 1: goto (0x00005827, 0) 


# -- 0x00005827 48 8d 35 e0 8a 00 00                   lea 0x8ae0(%rip),%rsi
 0: rsi<64> := 0x000000000000e30e;
 1: goto (0x0000582e, 0) 


# -- 0x0000582e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005831, 0) 


# -- 0x00005831 e8 9a d4 ff ff                         call 0x2cd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005836;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cd0, 0) #call with return address @ (0x00005836, 0)


# -- 0x00005836 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005838, 0) 


# -- 0x00005838 75 0f                                  jne 0x5849
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005849, 0) 
 2: goto (0x0000583a, 0) 


# -- 0x0000583a c7 85 84 fa ff ff 01 00 00 00          movl $0x1,-0x57c(%rbp)
 0: @[(rbp<64> + -1404<64>),4] := 1<32>;
 1: goto (0x00005844, 0) 


# -- 0x00005844 e9 b0 01 00 00                         jmp 0x59f9
 0: goto (0x000059f9, 0) 


# -- 0x00005849 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005850, 0) 


# -- 0x00005850 ba 06 00 00 00                         mov $0x6,%edx
 0: rdx<64> := 6<64>;
 1: goto (0x00005855, 0) 


# -- 0x00005855 48 8d 35 bc 8a 00 00                   lea 0x8abc(%rip),%rsi
 0: rsi<64> := 0x000000000000e318;
 1: goto (0x0000585c, 0) 


# -- 0x0000585c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000585f, 0) 


# -- 0x0000585f e8 6c d4 ff ff                         call 0x2cd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005864;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cd0, 0) #call with return address @ (0x00005864, 0)


# -- 0x00005864 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005866, 0) 


# -- 0x00005866 75 0f                                  jne 0x5877
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005877, 0) 
 2: goto (0x00005868, 0) 


# -- 0x00005868 c7 85 84 fa ff ff 02 00 00 00          movl $0x2,-0x57c(%rbp)
 0: @[(rbp<64> + -1404<64>),4] := 2<32>;
 1: goto (0x00005872, 0) 


# -- 0x00005872 e9 82 01 00 00                         jmp 0x59f9
 0: goto (0x000059f9, 0) 


# -- 0x00005877 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000587e, 0) 


# -- 0x0000587e ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x00005883, 0) 


# -- 0x00005883 48 8d 35 95 8a 00 00                   lea 0x8a95(%rip),%rsi
 0: rsi<64> := 0x000000000000e31f;
 1: goto (0x0000588a, 0) 


# -- 0x0000588a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000588d, 0) 


# -- 0x0000588d e8 3e d4 ff ff                         call 0x2cd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005892;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cd0, 0) #call with return address @ (0x00005892, 0)


# -- 0x00005892 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005894, 0) 


# -- 0x00005894 0f 85 d0 00 00 00                      jne 0x596a
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000596a, 0) 
 2: goto (0x0000589a, 0) 


# -- 0x0000589a c7 85 84 fa ff ff 03 00 00 00          movl $0x3,-0x57c(%rbp)
 0: @[(rbp<64> + -1404<64>),4] := 3<32>;
 1: goto (0x000058a4, 0) 


# -- 0x000058a4 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000058ab, 0) 


# -- 0x000058ab 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000058ae, 0) 


# -- 0x000058ae e8 9d d5 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000058b3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x000058b3, 0)


# -- 0x000058b3 48 83 f8 09                            cmp $0x9,%rax
 0: %%0<64> := (rax<64> - 9<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: goto (0x000058b7, 0) 


# -- 0x000058b7 0f 87 85 00 00 00                      ja 0x5942
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00005942, 0) 
 2: goto (0x000058bd, 0) 


# -- 0x000058bd 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000058c3, 0) 


# -- 0x000058c3 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000058c5, 0) 


# -- 0x000058c5 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000058cd, 0) 


# -- 0x000058cd 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000058d4, 0) 


# -- 0x000058d4 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000058d7, 0) 


# -- 0x000058d7 4c 8b 20                               mov (%rax),%r12
 0: %%0<64> := @[rax<64>,8];
 1: r12<64> := %%0<64>;
 2: goto (0x000058da, 0) 


# -- 0x000058da 48 8b 9d a0 f9 ff ff                   mov -0x660(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x000058e1, 0) 


# -- 0x000058e1 48 8d 3d f1 86 00 00                   lea 0x86f1(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x000058e8, 0) 


# -- 0x000058e8 e8 03 d7 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000058ed;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x000058ed, 0)


# -- 0x000058ed 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x000058ef, 0) 


# -- 0x000058ef 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000058f6, 0) 


# -- 0x000058f6 4d 89 e1                               mov %r12,%r9
 0: %%0<64> := r12<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x000058f9, 0) 


# -- 0x000058f9 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000058fc, 0) 


# -- 0x000058fc 48 8d 0d 25 8a 00 00                   lea 0x8a25(%rip),%rcx
 0: rcx<64> := 0x000000000000e328;
 1: goto (0x00005903, 0) 


# -- 0x00005903 ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x00005908, 0) 


# -- 0x00005908 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000590b, 0) 


# -- 0x0000590b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005910, 0) 


# -- 0x00005910 e8 cb d5 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005915;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005915, 0)


# -- 0x00005915 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000591c, 0) 


# -- 0x0000591c be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005921, 0) 


# -- 0x00005921 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005924, 0) 


# -- 0x00005924 e8 77 d7 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005929;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005929, 0)


# -- 0x00005929 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005930, 0) 


# -- 0x00005930 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005933, 0) 


# -- 0x00005933 e8 78 d9 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005938;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005938, 0)


# -- 0x00005938 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000593d, 0) 


# -- 0x0000593d e9 ba 04 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005942 48 8b 85 a0 f9 ff ff                   mov -0x660(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005949, 0) 


# -- 0x00005949 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000594d, 0) 


# -- 0x0000594d ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x00005952, 0) 


# -- 0x00005952 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00005957, 0) 


# -- 0x00005957 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000595a, 0) 


# -- 0x0000595a e8 11 d8 ff ff                         call 0x3170
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000595f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003170, 0) #call with return address @ (0x0000595f, 0)


# -- 0x0000595f 88 85 88 fa ff ff                      mov %al,-0x578(%rbp)
 0: @[(rbp<64> + -1400<64>),1] := rax<64>{0,7};
 1: goto (0x00005965, 0) 


# -- 0x00005965 e9 8f 00 00 00                         jmp 0x59f9
 0: goto (0x000059f9, 0) 


# -- 0x0000596a 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005970, 0) 


# -- 0x00005970 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005972, 0) 


# -- 0x00005972 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000597a, 0) 


# -- 0x0000597a 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005981, 0) 


# -- 0x00005981 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005984, 0) 


# -- 0x00005984 4c 8b 20                               mov (%rax),%r12
 0: %%0<64> := @[rax<64>,8];
 1: r12<64> := %%0<64>;
 2: goto (0x00005987, 0) 


# -- 0x00005987 48 8b 9d a0 f9 ff ff                   mov -0x660(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -1632<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000598e, 0) 


# -- 0x0000598e 48 8d 3d 44 86 00 00                   lea 0x8644(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005995, 0) 


# -- 0x00005995 e8 56 d6 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000599a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000599a, 0)


# -- 0x0000599a 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000599c, 0) 


# -- 0x0000599c 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000059a3, 0) 


# -- 0x000059a3 4d 89 e1                               mov %r12,%r9
 0: %%0<64> := r12<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x000059a6, 0) 


# -- 0x000059a6 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000059a9, 0) 


# -- 0x000059a9 48 8d 0d c0 89 00 00                   lea 0x89c0(%rip),%rcx
 0: rcx<64> := 0x000000000000e370;
 1: goto (0x000059b0, 0) 


# -- 0x000059b0 ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x000059b5, 0) 


# -- 0x000059b5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000059b8, 0) 


# -- 0x000059b8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000059bd, 0) 


# -- 0x000059bd e8 1e d5 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000059c2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x000059c2, 0)


# -- 0x000059c2 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000059c9, 0) 


# -- 0x000059c9 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x000059ce, 0) 


# -- 0x000059ce 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000059d1, 0) 


# -- 0x000059d1 e8 ca d6 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000059d6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x000059d6, 0)


# -- 0x000059d6 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000059dd, 0) 


# -- 0x000059dd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000059e0, 0) 


# -- 0x000059e0 e8 cb d8 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000059e5;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x000059e5, 0)


# -- 0x000059e5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000059ea, 0) 


# -- 0x000059ea e9 0d 04 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x000059ef c7 85 84 fa ff ff 01 00 00 00          movl $0x1,-0x57c(%rbp)
 0: @[(rbp<64> + -1404<64>),4] := 1<32>;
 1: goto (0x000059f9, 0) 


# -- 0x000059f9 8b 85 58 fa ff ff                      mov -0x5a8(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1448<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000059ff, 0) 


# -- 0x000059ff 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005a02, 0) 


# -- 0x00005a02 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005a04, 0) 


# -- 0x00005a04 74 40                                  je 0x5a46
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005a46, 0) 
 2: goto (0x00005a06, 0) 


# -- 0x00005a06 48 8d 15 9b 89 00 00                   lea 0x899b(%rip),%rdx
 0: rdx<64> := 0x000000000000e3a8;
 1: goto (0x00005a0d, 0) 


# -- 0x00005a0d be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00005a12, 0) 


# -- 0x00005a12 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00005a17, 0) 


# -- 0x00005a17 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005a1c, 0) 


# -- 0x00005a1c e8 7f d8 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005a21;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00005a21, 0)


# -- 0x00005a21 48 8d 15 e3 89 00 00                   lea 0x89e3(%rip),%rdx
 0: rdx<64> := 0x000000000000e40b;
 1: goto (0x00005a28, 0) 


# -- 0x00005a28 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00005a2d, 0) 


# -- 0x00005a2d bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00005a32, 0) 


# -- 0x00005a32 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005a37, 0) 


# -- 0x00005a37 e8 64 d8 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005a3c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00005a3c, 0)


# -- 0x00005a3c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005a41, 0) 


# -- 0x00005a41 e9 b6 03 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005a46 8b 85 80 fa ff ff                      mov -0x580(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1408<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005a4c, 0) 


# -- 0x00005a4c 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00005a4f, 0) 


# -- 0x00005a4f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005a51, 0) 


# -- 0x00005a51 0f 84 8a 00 00 00                      je 0x5ae1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005ae1, 0) 
 2: goto (0x00005a57, 0) 


# -- 0x00005a57 8b 85 80 fa ff ff                      mov -0x580(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1408<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005a5d, 0) 


# -- 0x00005a5d 25 00 80 00 00                         and $0x8000,%eax
 0: %%0<32> := (0x00008000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005a62, 0) 


# -- 0x00005a62 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005a64, 0) 


# -- 0x00005a64 74 7b                                  je 0x5ae1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005ae1, 0) 
 2: goto (0x00005a66, 0) 


# -- 0x00005a66 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005a6c, 0) 


# -- 0x00005a6c 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005a6e, 0) 


# -- 0x00005a6e 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005a76, 0) 


# -- 0x00005a76 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005a7d, 0) 


# -- 0x00005a7d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005a80, 0) 


# -- 0x00005a80 48 8b 18                               mov (%rax),%rbx
 0: %%0<64> := @[rax<64>,8];
 1: rbx<64> := %%0<64>;
 2: goto (0x00005a83, 0) 


# -- 0x00005a83 48 8d 3d 4f 85 00 00                   lea 0x854f(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005a8a, 0) 


# -- 0x00005a8a e8 61 d5 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005a8f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005a8f, 0)


# -- 0x00005a8f 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00005a91, 0) 


# -- 0x00005a91 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005a98, 0) 


# -- 0x00005a98 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00005a9b, 0) 


# -- 0x00005a9b 48 8d 0d 76 89 00 00                   lea 0x8976(%rip),%rcx
 0: rcx<64> := 0x000000000000e418;
 1: goto (0x00005aa2, 0) 


# -- 0x00005aa2 ba 09 00 00 00                         mov $0x9,%edx
 0: rdx<64> := 9<64>;
 1: goto (0x00005aa7, 0) 


# -- 0x00005aa7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005aaa, 0) 


# -- 0x00005aaa b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005aaf, 0) 


# -- 0x00005aaf e8 2c d4 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005ab4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005ab4, 0)


# -- 0x00005ab4 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005abb, 0) 


# -- 0x00005abb be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005ac0, 0) 


# -- 0x00005ac0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005ac3, 0) 


# -- 0x00005ac3 e8 d8 d5 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005ac8;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005ac8, 0)


# -- 0x00005ac8 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005acf, 0) 


# -- 0x00005acf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005ad2, 0) 


# -- 0x00005ad2 e8 d9 d7 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005ad7;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005ad7, 0)


# -- 0x00005ad7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005adc, 0) 


# -- 0x00005adc e9 1b 03 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005ae1 8b 85 80 fa ff ff                      mov -0x580(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1408<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005ae7, 0) 


# -- 0x00005ae7 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00005aea, 0) 


# -- 0x00005aea 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005aec, 0) 


# -- 0x00005aec 0f 84 8a 00 00 00                      je 0x5b7c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005b7c, 0) 
 2: goto (0x00005af2, 0) 


# -- 0x00005af2 8b 85 80 fa ff ff                      mov -0x580(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1408<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005af8, 0) 


# -- 0x00005af8 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005afd, 0) 


# -- 0x00005afd 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005aff, 0) 


# -- 0x00005aff 74 7b                                  je 0x5b7c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005b7c, 0) 
 2: goto (0x00005b01, 0) 


# -- 0x00005b01 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005b07, 0) 


# -- 0x00005b07 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005b09, 0) 


# -- 0x00005b09 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005b11, 0) 


# -- 0x00005b11 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005b18, 0) 


# -- 0x00005b18 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005b1b, 0) 


# -- 0x00005b1b 48 8b 18                               mov (%rax),%rbx
 0: %%0<64> := @[rax<64>,8];
 1: rbx<64> := %%0<64>;
 2: goto (0x00005b1e, 0) 


# -- 0x00005b1e 48 8d 3d b4 84 00 00                   lea 0x84b4(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005b25, 0) 


# -- 0x00005b25 e8 c6 d4 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005b2a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005b2a, 0)


# -- 0x00005b2a 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00005b2c, 0) 


# -- 0x00005b2c 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005b33, 0) 


# -- 0x00005b33 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00005b36, 0) 


# -- 0x00005b36 48 8d 0d 1b 89 00 00                   lea 0x891b(%rip),%rcx
 0: rcx<64> := 0x000000000000e458;
 1: goto (0x00005b3d, 0) 


# -- 0x00005b3d ba 12 00 00 00                         mov $0x12,%edx
 0: rdx<64> := 18<64>;
 1: goto (0x00005b42, 0) 


# -- 0x00005b42 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005b45, 0) 


# -- 0x00005b45 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005b4a, 0) 


# -- 0x00005b4a e8 91 d3 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005b4f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005b4f, 0)


# -- 0x00005b4f 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005b56, 0) 


# -- 0x00005b56 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005b5b, 0) 


# -- 0x00005b5b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005b5e, 0) 


# -- 0x00005b5e e8 3d d5 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005b63;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005b63, 0)


# -- 0x00005b63 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005b6a, 0) 


# -- 0x00005b6a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005b6d, 0) 


# -- 0x00005b6d e8 3e d7 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005b72;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005b72, 0)


# -- 0x00005b72 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005b77, 0) 


# -- 0x00005b77 e9 80 02 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005b7c 48 c7 85 a0 f9 ff ff 00 00 00 00       movq $0x0,-0x660(%rbp)
 0: @[(rbp<64> + -1632<64>),8] := 0<64>;
 1: goto (0x00005b87, 0) 


# -- 0x00005b87 83 bd 84 f9 ff ff 00                   cmpl $0x0,-0x67c(%rbp)
 0: %%0<32> := @[(rbp<64> + -1660<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005b8e, 0) 


# -- 0x00005b8e 7f 0e                                  jg 0x5b9e
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00005b9e, 0) 
 2: goto (0x00005b90, 0) 


# -- 0x00005b90 0f b6 85 6c f9 ff ff                   movzbl -0x694(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1684<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005b97, 0) 


# -- 0x00005b97 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00005b9a, 0) 


# -- 0x00005b9a 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005b9c, 0) 


# -- 0x00005b9c 74 65                                  je 0x5c03
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005c03, 0) 
 2: goto (0x00005b9e, 0) 


# -- 0x00005b9e 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005ba4, 0) 


# -- 0x00005ba4 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005ba6, 0) 


# -- 0x00005ba6 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005bae, 0) 


# -- 0x00005bae 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005bb5, 0) 


# -- 0x00005bb5 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005bb8, 0) 


# -- 0x00005bb8 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005bbb, 0) 


# -- 0x00005bbb 48 89 85 a0 fa ff ff                   mov %rax,-0x560(%rbp)
 0: @[(rbp<64> + -1376<64>),8] := rax<64>;
 1: goto (0x00005bc2, 0) 


# -- 0x00005bc2 48 8d 85 60 fa ff ff                   lea -0x5a0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1440<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00005bc9, 0) 


# -- 0x00005bc9 be 68 00 00 00                         mov $0x68,%esi
 0: rsi<64> := 104<64>;
 1: goto (0x00005bce, 0) 


# -- 0x00005bce 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005bd1, 0) 


# -- 0x00005bd1 e8 da d7 ff ff                         call 0x33b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005bd6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033b0, 0) #call with return address @ (0x00005bd6, 0)


# -- 0x00005bd6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005bd9, 0) 


# -- 0x00005bd9 e8 39 71 00 00                         call 0xcd17
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005bde;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd17, 0) #call with return address @ (0x00005bde, 0)


# -- 0x00005bde 48 89 85 b0 f9 ff ff                   mov %rax,-0x650(%rbp)
 0: @[(rbp<64> + -1616<64>),8] := rax<64>;
 1: goto (0x00005be5, 0) 


# -- 0x00005be5 48 8d 8d b0 f9 ff ff                   lea -0x650(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1616<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005bec, 0) 


# -- 0x00005bec 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005bf3, 0) 


# -- 0x00005bf3 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x00005bf8, 0) 


# -- 0x00005bf8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005bfb, 0) 


# -- 0x00005bfb 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005bfe, 0) 


# -- 0x00005bfe e8 ad d5 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005c03;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x00005c03, 0)


# -- 0x00005c03 8b 85 80 fa ff ff                      mov -0x580(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1408<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005c09, 0) 


# -- 0x00005c09 83 e0 20                               and $0x20,%eax
 0: %%0<32> := (32<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{5});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00005c0c, 0) 


# -- 0x00005c0c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005c0e, 0) 


# -- 0x00005c0e 74 7b                                  je 0x5c8b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005c8b, 0) 
 2: goto (0x00005c10, 0) 


# -- 0x00005c10 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005c16, 0) 


# -- 0x00005c16 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005c18, 0) 


# -- 0x00005c18 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005c20, 0) 


# -- 0x00005c20 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005c27, 0) 


# -- 0x00005c27 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005c2a, 0) 


# -- 0x00005c2a 48 8b 18                               mov (%rax),%rbx
 0: %%0<64> := @[rax<64>,8];
 1: rbx<64> := %%0<64>;
 2: goto (0x00005c2d, 0) 


# -- 0x00005c2d 48 8d 3d a5 83 00 00                   lea 0x83a5(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005c34, 0) 


# -- 0x00005c34 e8 b7 d3 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005c39;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005c39, 0)


# -- 0x00005c39 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00005c3b, 0) 


# -- 0x00005c3b 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005c42, 0) 


# -- 0x00005c42 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00005c45, 0) 


# -- 0x00005c45 48 8d 0d 4c 88 00 00                   lea 0x884c(%rip),%rcx
 0: rcx<64> := 0x000000000000e498;
 1: goto (0x00005c4c, 0) 


# -- 0x00005c4c ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00005c51, 0) 


# -- 0x00005c51 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005c54, 0) 


# -- 0x00005c54 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005c59, 0) 


# -- 0x00005c59 e8 82 d2 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005c5e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005c5e, 0)


# -- 0x00005c5e 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005c65, 0) 


# -- 0x00005c65 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005c6a, 0) 


# -- 0x00005c6a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005c6d, 0) 


# -- 0x00005c6d e8 2e d4 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005c72;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005c72, 0)


# -- 0x00005c72 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005c79, 0) 


# -- 0x00005c79 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005c7c, 0) 


# -- 0x00005c7c e8 2f d6 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005c81;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005c81, 0)


# -- 0x00005c81 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005c86, 0) 


# -- 0x00005c86 e9 71 01 00 00                         jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005c8b 83 85 84 f9 ff ff 01                   addl $0x1,-0x67c(%rbp)
 0: %%0<64> := (rbp<64> + -1660<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00005c92, 0) 


# -- 0x00005c92 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005c98, 0) 


# -- 0x00005c98 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005c9a, 0) 


# -- 0x00005c9a 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005ca2, 0) 


# -- 0x00005ca2 48 8b 85 f0 f9 ff ff                   mov -0x610(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005ca9, 0) 


# -- 0x00005ca9 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005cac, 0) 


# -- 0x00005cac 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005caf, 0) 


# -- 0x00005caf 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005cb2, 0) 


# -- 0x00005cb2 0f 85 6f f5 ff ff                      jne 0x5227
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005227, 0) 
 2: goto (0x00005cb8, 0) 


# -- 0x00005cb8 48 8b 85 e0 f9 ff ff                   mov -0x620(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1568<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005cbf, 0) 


# -- 0x00005cbf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005cc2, 0) 


# -- 0x00005cc2 e8 e9 d5 ff ff                         call 0x32b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005cc7;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032b0, 0) #call with return address @ (0x00005cc7, 0)


# -- 0x00005cc7 48 8b 85 98 f9 ff ff                   mov -0x668(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1640<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005cce, 0) 


# -- 0x00005cce 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005cd1, 0) 


# -- 0x00005cd1 0f 84 b6 00 00 00                      je 0x5d8d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005d8d, 0) 
 2: goto (0x00005cd7, 0) 


# -- 0x00005cd7 48 8b 85 98 f9 ff ff                   mov -0x668(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1640<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005cde, 0) 


# -- 0x00005cde 48 8b 95 60 f9 ff ff                   mov -0x6a0(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005ce5, 0) 


# -- 0x00005ce5 48 8d 8d 10 fa ff ff                   lea -0x5f0(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005cec, 0) 


# -- 0x00005cec 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005cef, 0) 


# -- 0x00005cef 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005cf2, 0) 


# -- 0x00005cf2 e8 fa e5 ff ff                         call 0x42f1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005cf7;
 2: rsp<64> := %%0<64>;
 3: goto (0x000042f1, 0) #call with return address @ (0x00005cf7, 0)


# -- 0x00005cf7 48 89 85 f8 f9 ff ff                   mov %rax,-0x608(%rbp)
 0: @[(rbp<64> + -1544<64>),8] := rax<64>;
 1: goto (0x00005cfe, 0) 


# -- 0x00005cfe 48 83 bd f8 f9 ff ff 00                cmpq $0x0,-0x608(%rbp)
 0: %%0<64> := @[(rbp<64> + -1544<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005d06, 0) 


# -- 0x00005d06 74 5b                                  je 0x5d63
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005d63, 0) 
 2: goto (0x00005d08, 0) 


# -- 0x00005d08 48 8b 85 f8 f9 ff ff                   mov -0x608(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1544<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d0f, 0) 


# -- 0x00005d0f 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005d12, 0) 


# -- 0x00005d12 48 8b 85 f8 f9 ff ff                   mov -0x608(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1544<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d19, 0) 


# -- 0x00005d19 48 8b 08                               mov (%rax),%rcx
 0: %%0<64> := @[rax<64>,8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00005d1c, 0) 


# -- 0x00005d1c 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d23, 0) 


# -- 0x00005d23 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005d26, 0) 


# -- 0x00005d26 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005d29, 0) 


# -- 0x00005d29 e8 82 d4 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005d2e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x00005d2e, 0)


# -- 0x00005d2e 48 89 85 c8 f9 ff ff                   mov %rax,-0x638(%rbp)
 0: @[(rbp<64> + -1592<64>),8] := rax<64>;
 1: goto (0x00005d35, 0) 


# -- 0x00005d35 48 8b 85 f8 f9 ff ff                   mov -0x608(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1544<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d3c, 0) 


# -- 0x00005d3c 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005d3f, 0) 


# -- 0x00005d3f 8b 85 84 f9 ff ff                      mov -0x67c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1660<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005d45, 0) 


# -- 0x00005d45 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x00005d47, 0) 


# -- 0x00005d47 89 85 84 f9 ff ff                      mov %eax,-0x67c(%rbp)
 0: @[(rbp<64> + -1660<64>),4] := rax<64>{0,31};
 1: goto (0x00005d4d, 0) 


# -- 0x00005d4d 48 8b 85 f8 f9 ff ff                   mov -0x608(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1544<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d54, 0) 


# -- 0x00005d54 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005d59, 0) 


# -- 0x00005d59 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005d5c, 0) 


# -- 0x00005d5c e8 3f d3 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005d61;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005d61, 0)


# -- 0x00005d61 eb 2a                                  jmp 0x5d8d
 0: goto (0x00005d8d, 0) 


# -- 0x00005d63 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d6a, 0) 


# -- 0x00005d6a 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d6d, 0) 


# -- 0x00005d6d 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005d70, 0) 


# -- 0x00005d70 74 1b                                  je 0x5d8d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005d8d, 0) 
 2: goto (0x00005d72, 0) 


# -- 0x00005d72 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005d79, 0) 


# -- 0x00005d79 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00005d7e, 0) 


# -- 0x00005d7e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005d81, 0) 


# -- 0x00005d81 e8 1a d3 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005d86;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x00005d86, 0)


# -- 0x00005d86 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005d8b, 0) 


# -- 0x00005d8b eb 6f                                  jmp 0x5dfc
 0: goto (0x00005dfc, 0) 


# -- 0x00005d8d 83 bd 84 f9 ff ff 01                   cmpl $0x1,-0x67c(%rbp)
 0: %%0<32> := @[(rbp<64> + -1660<64>),4];
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005d94, 0) 


# -- 0x00005d94 75 37                                  jne 0x5dcd
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00005dcd, 0) 
 2: goto (0x00005d96, 0) 


# -- 0x00005d96 80 bd 6c f9 ff ff 00                   cmpb $0x0,-0x694(%rbp)
 0: %%0<8> := @[(rbp<64> + -1684<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005d9d, 0) 


# -- 0x00005d9d 74 2e                                  je 0x5dcd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005dcd, 0) 
 2: goto (0x00005d9f, 0) 


# -- 0x00005d9f 48 8d 3d 33 82 00 00                   lea 0x8233(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x00005da6, 0) 


# -- 0x00005da6 e8 45 d2 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005dab;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x00005dab, 0)


# -- 0x00005dab 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00005dad, 0) 


# -- 0x00005dad 48 8b 85 60 f9 ff ff                   mov -0x6a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1696<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005db4, 0) 


# -- 0x00005db4 48 8d 0d 25 87 00 00                   lea 0x8725(%rip),%rcx
 0: rcx<64> := 0x000000000000e4e0;
 1: goto (0x00005dbb, 0) 


# -- 0x00005dbb ba 05 00 00 00                         mov $0x5,%edx
 0: rdx<64> := 5<64>;
 1: goto (0x00005dc0, 0) 


# -- 0x00005dc0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005dc3, 0) 


# -- 0x00005dc3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005dc8, 0) 


# -- 0x00005dc8 e8 13 d1 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005dcd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x00005dcd, 0)


# -- 0x00005dcd 48 83 bd 70 f9 ff ff 00                cmpq $0x0,-0x690(%rbp)
 0: %%0<64> := @[(rbp<64> + -1680<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005dd5, 0) 


# -- 0x00005dd5 74 1e                                  je 0x5df5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005df5, 0) 
 2: goto (0x00005dd7, 0) 


# -- 0x00005dd7 48 8d 8d 10 fa ff ff                   lea -0x5f0(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1520<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005dde, 0) 


# -- 0x00005dde 48 8b 85 70 f9 ff ff                   mov -0x690(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1680<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005de5, 0) 


# -- 0x00005de5 ba 50 00 00 00                         mov $0x50,%edx
 0: rdx<64> := 80<64>;
 1: goto (0x00005dea, 0) 


# -- 0x00005dea 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00005ded, 0) 


# -- 0x00005ded 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005df0, 0) 


# -- 0x00005df0 e8 8b d3 ff ff                         call 0x3180
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005df5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003180, 0) #call with return address @ (0x00005df5, 0)


# -- 0x00005df5 48 8b 85 c8 f9 ff ff                   mov -0x638(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1592<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005dfc, 0) 


# -- 0x00005dfc 48 8b 5d d8                            mov -0x28(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x00005e00, 0) 


# -- 0x00005e00 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x00005e09, 0) 


# -- 0x00005e09 74 05                                  je 0x5e10
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005e10, 0) 
 2: goto (0x00005e0b, 0) 


# -- 0x00005e0b e8 60 d0 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005e10;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00005e10, 0)


# -- 0x00005e10 48 8d 65 e8                            lea -0x18(%rbp),%rsp
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rsp<64> := %%0<64>;
 2: goto (0x00005e14, 0) 


# -- 0x00005e14 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x00005e15, 0) 


# -- 0x00005e15 41 5c                                  pop %r12
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r12<64> := %%1<64>;
 4: goto (0x00005e17, 0) 


# -- 0x00005e17 41 5d                                  pop %r13
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r13<64> := %%1<64>;
 4: goto (0x00005e19, 0) 


# -- 0x00005e19 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005e1a, 0) 


# -- 0x00005e1a c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005e1b 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005e1c, 0) 


# -- 0x00005e1c 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005e1f, 0) 


# -- 0x00005e1f 89 7d fc                               mov %edi,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rdi<64>{0,31};
 1: goto (0x00005e22, 0) 


# -- 0x00005e22 c7 05 c0 b3 20 00 01 00 00 00          movl $0x1,0x20b3c0(%rip)
 0: @[0x00000000002111ec,4] := 1<32>;
 1: goto (0x00005e2c, 0) 


# -- 0x00005e2c 90                                     nop
 0: goto (0x00005e2d, 0) 


# -- 0x00005e2d 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005e2e, 0) 


# -- 0x00005e2e c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005e2f 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005e30, 0) 


# -- 0x00005e30 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005e33, 0) 


# -- 0x00005e33 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00005e37, 0) 


# -- 0x00005e37 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x00005e3b, 0) 


# -- 0x00005e3b 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x00005e3f, 0) 


# -- 0x00005e3f 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x00005e43, 0) 


# -- 0x00005e43 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005e47, 0) 


# -- 0x00005e47 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00005e4b, 0) 


# -- 0x00005e4b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005e4f, 0) 


# -- 0x00005e4f 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005e51, 0) 


# -- 0x00005e51 be 0f 00 00 00                         mov $0xf,%esi
 0: rsi<64> := 15<64>;
 1: goto (0x00005e56, 0) 


# -- 0x00005e56 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00005e58, 0) 


# -- 0x00005e58 e8 63 d3 ff ff                         call 0x31c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005e5d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031c0, 0) #call with return address @ (0x00005e5d, 0)


# -- 0x00005e5d 90                                     nop
 0: goto (0x00005e5e, 0) 


# -- 0x00005e5e c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005e5f, 0) 


# -- 0x00005e5f c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005e60 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005e61, 0) 


# -- 0x00005e61 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005e64, 0) 


# -- 0x00005e64 89 7d fc                               mov %edi,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rdi<64>{0,31};
 1: goto (0x00005e67, 0) 


# -- 0x00005e67 c7 05 7f b3 20 00 01 00 00 00          movl $0x1,0x20b37f(%rip)
 0: @[0x00000000002111f0,4] := 1<32>;
 1: goto (0x00005e71, 0) 


# -- 0x00005e71 90                                     nop
 0: goto (0x00005e72, 0) 


# -- 0x00005e72 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005e73, 0) 


# -- 0x00005e73 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005e74 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005e75, 0) 


# -- 0x00005e75 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005e78, 0) 


# -- 0x00005e78 89 7d fc                               mov %edi,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rdi<64>{0,31};
 1: goto (0x00005e7b, 0) 


# -- 0x00005e7b c7 05 6f b3 20 00 01 00 00 00          movl $0x1,0x20b36f(%rip)
 0: @[0x00000000002111f4,4] := 1<32>;
 1: goto (0x00005e85, 0) 


# -- 0x00005e85 90                                     nop
 0: goto (0x00005e86, 0) 


# -- 0x00005e86 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005e87, 0) 


# -- 0x00005e87 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005e88 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005e89, 0) 


# -- 0x00005e89 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005e8c, 0) 


# -- 0x00005e8c 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00005e90, 0) 


# -- 0x00005e90 89 7d fc                               mov %edi,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rdi<64>{0,31};
 1: goto (0x00005e93, 0) 


# -- 0x00005e93 48 8d 15 73 86 00 00                   lea 0x8673(%rip),%rdx
 0: rdx<64> := 0x000000000000e50d;
 1: goto (0x00005e9a, 0) 


# -- 0x00005e9a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00005e9f, 0) 


# -- 0x00005e9f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00005ea4, 0) 


# -- 0x00005ea4 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005ea9, 0) 


# -- 0x00005ea9 e8 f2 d3 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005eae;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00005eae, 0)


# -- 0x00005eae 48 8d 3d 4b b3 20 00                   lea 0x20b34b(%rip),%rdi
 0: rdi<64> := 0x0000000000211200;
 1: goto (0x00005eb5, 0) 


# -- 0x00005eb5 e8 d6 d3 ff ff                         call 0x3290
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005eba;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003290, 0) #call with return address @ (0x00005eba, 0)


# -- 0x00005eba 90                                     nop
 0: goto (0x00005ebb, 0) 


# -- 0x00005ebb c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00005ebc, 0) 


# -- 0x00005ebc c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00005ebd 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005ebe, 0) 


# -- 0x00005ebe 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00005ec1, 0) 


# -- 0x00005ec1 48 83 ec 70                            sub $0x70,%rsp
 0: %%0<64> := (rsp<64> - 112<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00005ec5, 0) 


# -- 0x00005ec5 48 89 7d b8                            mov %rdi,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdi<64>;
 1: goto (0x00005ec9, 0) 


# -- 0x00005ec9 48 89 75 b0                            mov %rsi,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rsi<64>;
 1: goto (0x00005ecd, 0) 


# -- 0x00005ecd 48 89 55 a8                            mov %rdx,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),8] := rdx<64>;
 1: goto (0x00005ed1, 0) 


# -- 0x00005ed1 48 89 4d a0                            mov %rcx,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),8] := rcx<64>;
 1: goto (0x00005ed5, 0) 


# -- 0x00005ed5 4c 89 45 98                            mov %r8,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := r8<64>;
 1: goto (0x00005ed9, 0) 


# -- 0x00005ed9 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005edd, 0) 


# -- 0x00005edd 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005ee4, 0) 


# -- 0x00005ee4 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00005ee8, 0) 


# -- 0x00005ee8 48 83 7d b0 00                         cmpq $0x0,-0x50(%rbp)
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00005eed, 0) 


# -- 0x00005eed 79 0a                                  jns 0x5ef9
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00005ef9, 0) 
 2: goto (0x00005eef, 0) 


# -- 0x00005eef b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00005ef4, 0) 


# -- 0x00005ef4 e9 1a 02 00 00                         jmp 0x6113
 0: goto (0x00006113, 0) 


# -- 0x00005ef9 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005efd, 0) 


# -- 0x00005efd 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f04, 0) 


# -- 0x00005f04 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005f07, 0) 


# -- 0x00005f07 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005f0c, 0) 


# -- 0x00005f0c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005f0e, 0) 


# -- 0x00005f0e 0f 84 b3 00 00 00                      je 0x5fc7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005fc7, 0) 
 2: goto (0x00005f14, 0) 


# -- 0x00005f14 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f18, 0) 


# -- 0x00005f18 48 99                                  cqto
 0: %%0<64> := (rax<64> >>s 63<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005f1a, 0) 


# -- 0x00005f1a 48 c1 ea 34                            shr $0x34,%rdx
 0: %%0<64> := (rdx<64> >>u 52<64>);
 1: %%1<1> := rdx<64>{51};
 2: %%2<1> :=
     !
     ((((rdx<64>{52} ^ rdx<64>{56}) ^ (rdx<64>{54} ^ rdx<64>{58})) ^
       ((rdx<64>{53} ^ rdx<64>{57}) ^ (rdx<64>{55} ^ rdx<64>{59}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rdx<64> := %%0<64>;
12: goto (0x00005f1e, 0) 


# -- 0x00005f1e 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00005f21, 0) 


# -- 0x00005f21 25 ff 0f 00 00                         and $0xfff,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<12> = rax<64>{0,11});
 2: %%2<64> := (4095<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005f26, 0) 


# -- 0x00005f26 48 29 d0                               sub %rdx,%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := (rax<64> - rdx<64>);
 2: %%2<64> := (%%0<64> & rdx<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdx<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (rdx<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rax<64> := %%1<64>;
17: goto (0x00005f29, 0) 


# -- 0x00005f29 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005f2c, 0) 


# -- 0x00005f2c 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f30, 0) 


# -- 0x00005f30 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00005f33, 0) 


# -- 0x00005f33 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f37, 0) 


# -- 0x00005f37 48 8d 90 ff 0f 00 00                   lea 0xfff(%rax),%rdx
 0: %%0<64> := (rax<64> + 4095<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005f3e, 0) 


# -- 0x00005f3e 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00005f41, 0) 


# -- 0x00005f41 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x00005f45, 0) 


# -- 0x00005f45 48 c1 f8 0c                            sar $0xc,%rax
 0: %%0<64> := (rax<64> >>s 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00005f49, 0) 


# -- 0x00005f49 48 83 c0 01                            add $0x1,%rax
 0: %%0<64> := (rax<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00005f4d, 0) 


# -- 0x00005f4d 48 c1 e0 0c                            shl $0xc,%rax
 0: %%0<64> := (rax<64> << 12<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 11<64>)));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<64> = %%0<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 5: cf<1> := %%1<1>;
 6: pf<1> := -1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := %%2<1>;
11: rax<64> := %%0<64>;
12: goto (0x00005f51, 0) 


# -- 0x00005f51 48 2b 45 b0                            sub -0x50(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -80<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x00005f55, 0) 


# -- 0x00005f55 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005f58, 0) 


# -- 0x00005f58 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f5c, 0) 


# -- 0x00005f5c 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00005f5f, 0) 


# -- 0x00005f5f 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f63, 0) 


# -- 0x00005f63 48 8d 88 08 01 00 00                   lea 0x108(%rax),%rcx
 0: %%0<64> := (rax<64> + 264<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00005f6a, 0) 


# -- 0x00005f6a 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f6e, 0) 


# -- 0x00005f6e 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f71, 0) 


# -- 0x00005f71 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005f74, 0) 


# -- 0x00005f74 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f78, 0) 


# -- 0x00005f78 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f7f, 0) 


# -- 0x00005f7f 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005f82, 0) 


# -- 0x00005f82 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00005f85, 0) 


# -- 0x00005f85 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00005f87, 0) 


# -- 0x00005f87 74 07                                  je 0x5f90
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00005f90, 0) 
 2: goto (0x00005f89, 0) 


# -- 0x00005f89 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00005f8e, 0) 


# -- 0x00005f8e eb 05                                  jmp 0x5f95
 0: goto (0x00005f95, 0) 


# -- 0x00005f90 be 02 00 00 00                         mov $0x2,%esi
 0: rsi<64> := 2<64>;
 1: goto (0x00005f95, 0) 


# -- 0x00005f95 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005f99, 0) 


# -- 0x00005f99 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005fa0, 0) 


# -- 0x00005fa0 48 8b 55 b0                            mov -0x50(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00005fa4, 0) 


# -- 0x00005fa4 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00005fa7, 0) 


# -- 0x00005fa7 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00005faa, 0) 


# -- 0x00005faa 48 89 fa                               mov %rdi,%rdx
 0: %%0<64> := rdi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00005fad, 0) 


# -- 0x00005fad 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00005fb0, 0) 


# -- 0x00005fb0 e8 0d 71 00 00                         call 0xd0c2
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000005fb5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0c2, 0) #call with return address @ (0x00005fb5, 0)


# -- 0x00005fb5 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005fb7, 0) 


# -- 0x00005fb7 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005fbb, 0) 


# -- 0x00005fbb 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x00005fbd, 0) 


# -- 0x00005fbd b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00005fc2, 0) 


# -- 0x00005fc2 e9 4c 01 00 00                         jmp 0x6113
 0: goto (0x00006113, 0) 


# -- 0x00005fc7 c7 45 cc 00 00 00 00                   movl $0x0,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 0<32>;
 1: goto (0x00005fce, 0) 


# -- 0x00005fce 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005fd2, 0) 


# -- 0x00005fd2 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005fd5, 0) 


# -- 0x00005fd5 83 e8 01                               sub $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x00005fd8, 0) 


# -- 0x00005fd8 89 45 d0                               mov %eax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rax<64>{0,31};
 1: goto (0x00005fdb, 0) 


# -- 0x00005fdb eb 6f                                  jmp 0x604c
 0: goto (0x0000604c, 0) 


# -- 0x00005fdd 8b 55 cc                               mov -0x34(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005fe0, 0) 


# -- 0x00005fe0 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00005fe3, 0) 


# -- 0x00005fe3 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x00005fe5, 0) 


# -- 0x00005fe5 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005fe7, 0) 


# -- 0x00005fe7 c1 ea 1f                               shr $0x1f,%edx
 0: %%0<1> := rdx<64>{30};
 1: %%1<1> := ! (rdx<64>{31});
 2: %%2<1> := \undef;
 3: %%3<1> := ! (rdx<64>{31});
 4: %%4<64> := (extu rdx<64>{31} 64);
 5: cf<1> := %%0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%2<1>;
11: rdx<64> := %%4<64>;
12: goto (0x00005fea, 0) 


# -- 0x00005fea 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x00005fec, 0) 


# -- 0x00005fec d1 f8                                  sar $0x1,%eax
 0: %%0<32> := (exts rax<64>{1,31} 32);
 1: %%1<1> := rax<64>{0};
 2: %%2<1> :=
     !
     ((((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7})) ^
       ((rax<64>{2} ^ rax<64>{6}) ^ (rax<64>{4} ^ rax<64>{8}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x00005fee, 0) 


# -- 0x00005fee 89 45 d4                               mov %eax,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rax<64>{0,31};
 1: goto (0x00005ff1, 0) 


# -- 0x00005ff1 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005ff5, 0) 


# -- 0x00005ff5 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00005ff8, 0) 


# -- 0x00005ff8 8b 55 d4                               mov -0x2c(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005ffb, 0) 


# -- 0x00005ffb 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00005ffe, 0) 


# -- 0x00005ffe 48 c1 e2 04                            shl $0x4,%rdx
 0: %%0<64> := (rdx<64> << 4<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 3<64>)));
 2: %%2<1> := ! (((rdx<64>{0} ^ rdx<64>{2}) ^ (rdx<64>{1} ^ rdx<64>{3})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x00006002, 0) 


# -- 0x00006002 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00006005, 0) 


# -- 0x00006005 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006009, 0) 


# -- 0x00006009 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000600c, 0) 


# -- 0x0000600c 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006010, 0) 


# -- 0x00006010 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x00006014, 0) 


# -- 0x00006014 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006018, 0) 


# -- 0x00006018 48 39 45 b0                            cmp %rax,-0x50(%rbp)
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x0000601c, 0) 


# -- 0x0000601c 7e 0b                                  jle 0x6029
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x00006029, 0) 
 2: goto (0x0000601e, 0) 


# -- 0x0000601e 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006021, 0) 


# -- 0x00006021 83 c0 01                               add $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> + 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x00006024, 0) 


# -- 0x00006024 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x00006027, 0) 


# -- 0x00006027 eb 23                                  jmp 0x604c
 0: goto (0x0000604c, 0) 


# -- 0x00006029 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000602d, 0) 


# -- 0x0000602d 48 39 45 b0                            cmp %rax,-0x50(%rbp)
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006031, 0) 


# -- 0x00006031 7d 0b                                  jge 0x603e
 0: if ! ((sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000603e, 0) 
 2: goto (0x00006033, 0) 


# -- 0x00006033 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006036, 0) 


# -- 0x00006036 83 e8 01                               sub $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x00006039, 0) 


# -- 0x00006039 89 45 d0                               mov %eax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rax<64>{0,31};
 1: goto (0x0000603c, 0) 


# -- 0x0000603c eb 0e                                  jmp 0x604c
 0: goto (0x0000604c, 0) 


# -- 0x0000603e 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006041, 0) 


# -- 0x00006041 89 45 d0                               mov %eax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rax<64>{0,31};
 1: goto (0x00006044, 0) 


# -- 0x00006044 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006047, 0) 


# -- 0x00006047 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x0000604a, 0) 


# -- 0x0000604a eb 08                                  jmp 0x6054
 0: goto (0x00006054, 0) 


# -- 0x0000604c 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000604f, 0) 


# -- 0x0000604f 3b 45 d0                               cmp -0x30(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -48<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00006052, 0) 


# -- 0x00006052 7e 89                                  jle 0x5fdd
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x00005fdd, 0) 
 2: goto (0x00006054, 0) 


# -- 0x00006054 83 7d d0 00                            cmpl $0x0,-0x30(%rbp)
 0: %%0<32> := @[(rbp<64> + -48<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006058, 0) 


# -- 0x00006058 79 1f                                  jns 0x6079
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00006079, 0) 
 2: goto (0x0000605a, 0) 


# -- 0x0000605a 48 8d 0d 37 94 00 00                   lea 0x9437(%rip),%rcx
 0: rcx<64> := 0x000000000000f498;
 1: goto (0x00006061, 0) 


# -- 0x00006061 ba 84 04 00 00                         mov $0x484,%edx
 0: rdx<64> := 1156<64>;
 1: goto (0x00006066, 0) 


# -- 0x00006066 48 8d 35 87 78 00 00                   lea 0x7887(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x0000606d, 0) 


# -- 0x0000606d 48 8d 3d a5 84 00 00                   lea 0x84a5(%rip),%rdi
 0: rdi<64> := 0x000000000000e519;
 1: goto (0x00006074, 0) 


# -- 0x00006074 e8 c7 ce ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006079;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x00006079, 0)


# -- 0x00006079 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000607d, 0) 


# -- 0x0000607d 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006080, 0) 


# -- 0x00006080 8b 55 d0                               mov -0x30(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006083, 0) 


# -- 0x00006083 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006086, 0) 


# -- 0x00006086 48 c1 e2 04                            shl $0x4,%rdx
 0: %%0<64> := (rdx<64> << 4<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 3<64>)));
 2: %%2<1> := ! (((rdx<64>{0} ^ rdx<64>{2}) ^ (rdx<64>{1} ^ rdx<64>{3})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000608a, 0) 


# -- 0x0000608a 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000608d, 0) 


# -- 0x0000608d 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006091, 0) 


# -- 0x00006091 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006094, 0) 


# -- 0x00006094 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006098, 0) 


# -- 0x00006098 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x0000609c, 0) 


# -- 0x0000609c 8b 55 e0                               mov -0x20(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000609f, 0) 


# -- 0x0000609f 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060a3, 0) 


# -- 0x000060a3 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x000060a5, 0) 


# -- 0x000060a5 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060a9, 0) 


# -- 0x000060a9 48 8b 55 b0                            mov -0x50(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000060ad, 0) 


# -- 0x000060ad 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x000060b0, 0) 


# -- 0x000060b0 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060b4, 0) 


# -- 0x000060b4 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x000060b7, 0) 


# -- 0x000060b7 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060bb, 0) 


# -- 0x000060bb 48 c7 00 00 00 00 00                   movq $0x0,(%rax)
 0: @[rax<64>,8] := 0<64>;
 1: goto (0x000060c2, 0) 


# -- 0x000060c2 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000060c5, 0) 


# -- 0x000060c5 83 c0 01                               add $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> + 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x000060c8, 0) 


# -- 0x000060c8 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000060ca, 0) 


# -- 0x000060ca 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060ce, 0) 


# -- 0x000060ce 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000060d1, 0) 


# -- 0x000060d1 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x000060d3, 0) 


# -- 0x000060d3 73 39                                  jae 0x610e
 0: if ! (cf<1>) goto 1 else goto 2
 1: goto (0x0000610e, 0) 
 2: goto (0x000060d5, 0) 


# -- 0x000060d5 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060d9, 0) 


# -- 0x000060d9 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060dc, 0) 


# -- 0x000060dc 8b 55 d0                               mov -0x30(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000060df, 0) 


# -- 0x000060df 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000060e2, 0) 


# -- 0x000060e2 48 83 c2 01                            add $0x1,%rdx
 0: %%0<64> := (rdx<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x000060e6, 0) 


# -- 0x000060e6 48 c1 e2 04                            shl $0x4,%rdx
 0: %%0<64> := (rdx<64> << 4<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 3<64>)));
 2: %%2<1> := ! (((rdx<64>{0} ^ rdx<64>{2}) ^ (rdx<64>{1} ^ rdx<64>{3})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000060ea, 0) 


# -- 0x000060ea 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000060ed, 0) 


# -- 0x000060ed 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000060f1, 0) 


# -- 0x000060f1 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000060f4, 0) 


# -- 0x000060f4 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x000060f8, 0) 


# -- 0x000060f8 48 89 55 f8                            mov %rdx,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdx<64>;
 1: goto (0x000060fc, 0) 


# -- 0x000060fc 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006100, 0) 


# -- 0x00006100 48 2b 45 b0                            sub -0x50(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -80<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x00006104, 0) 


# -- 0x00006104 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00006107, 0) 


# -- 0x00006107 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000610b, 0) 


# -- 0x0000610b 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x0000610e, 0) 


# -- 0x0000610e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006113, 0) 


# -- 0x00006113 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006114, 0) 


# -- 0x00006114 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006115 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006116, 0) 


# -- 0x00006116 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006119, 0) 


# -- 0x00006119 48 83 ec 60                            sub $0x60,%rsp
 0: %%0<64> := (rsp<64> - 96<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000611d, 0) 


# -- 0x0000611d 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x00006121, 0) 


# -- 0x00006121 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x00006125, 0) 


# -- 0x00006125 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x00006129, 0) 


# -- 0x00006129 48 89 4d b0                            mov %rcx,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rcx<64>;
 1: goto (0x0000612d, 0) 


# -- 0x0000612d 44 89 45 ac                            mov %r8d,-0x54(%rbp)
 0: @[(rbp<64> + -84<64>),4] := r8<64>{0,31};
 1: goto (0x00006131, 0) 


# -- 0x00006131 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000613a, 0) 


# -- 0x0000613a 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000613e, 0) 


# -- 0x0000613e 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00006140, 0) 


# -- 0x00006140 48 8d 7d e8                            lea -0x18(%rbp),%rdi
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006144, 0) 


# -- 0x00006144 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00006148, 0) 


# -- 0x00006148 48 8d 55 dc                            lea -0x24(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -36<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000614c, 0) 


# -- 0x0000614c 48 8b 75 c8                            mov -0x38(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006150, 0) 


# -- 0x00006150 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006154, 0) 


# -- 0x00006154 49 89 f8                               mov %rdi,%r8
 0: %%0<64> := rdi<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00006157, 0) 


# -- 0x00006157 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000615a, 0) 


# -- 0x0000615a e8 5e fd ff ff                         call 0x5ebd
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000615f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005ebd, 0) #call with return address @ (0x0000615f, 0)


# -- 0x0000615f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006161, 0) 


# -- 0x00006161 74 0c                                  je 0x616f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000616f, 0) 
 2: goto (0x00006163, 0) 


# -- 0x00006163 48 c7 c0 ff ff ff ff                   mov $0xffffffffffffffff,%rax
 0: rax<64> := -1<64>;
 1: goto (0x0000616a, 0) 


# -- 0x0000616a e9 8b 00 00 00                         jmp 0x61fa
 0: goto (0x000061fa, 0) 


# -- 0x0000616f 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006173, 0) 


# -- 0x00006173 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00006176, 0) 


# -- 0x00006176 74 12                                  je 0x618a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000618a, 0) 
 2: goto (0x00006178, 0) 


# -- 0x00006178 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000617c, 0) 


# -- 0x0000617c 48 39 45 b8                            cmp %rax,-0x48(%rbp)
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006180, 0) 


# -- 0x00006180 76 08                                  jbe 0x618a
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000618a, 0) 
 2: goto (0x00006182, 0) 


# -- 0x00006182 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006186, 0) 


# -- 0x00006186 48 89 45 b8                            mov %rax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rax<64>;
 1: goto (0x0000618a, 0) 


# -- 0x0000618a 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000618e, 0) 


# -- 0x0000618e 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006191, 0) 


# -- 0x00006191 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006195, 0) 


# -- 0x00006195 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006199, 0) 


# -- 0x00006199 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000619b, 0) 


# -- 0x0000619b e8 40 d0 ff ff                         call 0x31e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000061a0;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031e0, 0) #call with return address @ (0x000061a0, 0)


# -- 0x000061a0 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x000061a4, 0) 


# -- 0x000061a4 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000061a8, 0) 


# -- 0x000061a8 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000061af, 0) 


# -- 0x000061af 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000061b2, 0) 


# -- 0x000061b2 83 e0 40                               and $0x40,%eax
 0: %%0<32> := (64<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{6});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000061b5, 0) 


# -- 0x000061b5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000061b7, 0) 


# -- 0x000061b7 74 0c                                  je 0x61c5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000061c5, 0) 
 2: goto (0x000061b9, 0) 


# -- 0x000061b9 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000061bc, 0) 


# -- 0x000061bc 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000061be, 0) 


# -- 0x000061be e8 8d d1 ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000061c3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x000061c3, 0)


# -- 0x000061c3 eb 10                                  jmp 0x61d5
 0: goto (0x000061d5, 0) 


# -- 0x000061c5 83 7d ac 00                            cmpl $0x0,-0x54(%rbp)
 0: %%0<32> := @[(rbp<64> + -84<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000061c9, 0) 


# -- 0x000061c9 74 0a                                  je 0x61d5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000061d5, 0) 
 2: goto (0x000061cb, 0) 


# -- 0x000061cb 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000061ce, 0) 


# -- 0x000061ce 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000061d0, 0) 


# -- 0x000061d0 e8 bb ca ff ff                         call 0x2c90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000061d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c90, 0) #call with return address @ (0x000061d5, 0)


# -- 0x000061d5 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000061d9, 0) 


# -- 0x000061d9 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000061e0, 0) 


# -- 0x000061e0 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000061e3, 0) 


# -- 0x000061e3 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000061e8, 0) 


# -- 0x000061e8 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000061ea, 0) 


# -- 0x000061ea 74 0a                                  je 0x61f6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000061f6, 0) 
 2: goto (0x000061ec, 0) 


# -- 0x000061ec 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000061ef, 0) 


# -- 0x000061ef 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000061f1, 0) 


# -- 0x000061f1 e8 aa cd ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000061f6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x000061f6, 0)


# -- 0x000061f6 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000061fa, 0) 


# -- 0x000061fa 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000061fe, 0) 


# -- 0x000061fe 64 48 33 14 25 28 00 00 00             xor %fs:0x28,%rdx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rdx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rdx<64>{0} ^ %%0<64>{0}) ^ (rdx<64>{4} ^ %%0<64>{4})) ^
        ((rdx<64>{2} ^ %%0<64>{2}) ^ (rdx<64>{6} ^ %%0<64>{6}))) ^
       (((rdx<64>{1} ^ %%0<64>{1}) ^ (rdx<64>{5} ^ %%0<64>{5})) ^
        ((rdx<64>{3} ^ %%0<64>{3}) ^ (rdx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rdx<64> := %%1<64>;
12: goto (0x00006207, 0) 


# -- 0x00006207 74 05                                  je 0x620e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000620e, 0) 
 2: goto (0x00006209, 0) 


# -- 0x00006209 e8 62 cc ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000620e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000620e, 0)


# -- 0x0000620e c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000620f, 0) 


# -- 0x0000620f c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006210 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006211, 0) 


# -- 0x00006211 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006214, 0) 


# -- 0x00006214 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006218, 0) 


# -- 0x00006218 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000621c, 0) 


# -- 0x0000621c 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x00006220, 0) 


# -- 0x00006220 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x00006224, 0) 


# -- 0x00006224 48 89 4d d0                            mov %rcx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rcx<64>;
 1: goto (0x00006228, 0) 


# -- 0x00006228 44 89 45 cc                            mov %r8d,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := r8<64>{0,31};
 1: goto (0x0000622c, 0) 


# -- 0x0000622c 48 c7 45 f8 00 00 00 00                movq $0x0,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := 0<64>;
 1: goto (0x00006234, 0) 


# -- 0x00006234 eb 18                                  jmp 0x624e
 0: goto (0x0000624e, 0) 


# -- 0x00006236 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000623a, 0) 


# -- 0x0000623a 48 01 45 e8                            add %rax,-0x18(%rbp)
 0: %%0<64> := (rbp<64> + -24<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000623e, 0) 


# -- 0x0000623e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006242, 0) 


# -- 0x00006242 48 01 45 e0                            add %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x00006246, 0) 


# -- 0x00006246 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000624a, 0) 


# -- 0x0000624a 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x0000624e, 0) 


# -- 0x0000624e 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006253, 0) 


# -- 0x00006253 74 29                                  je 0x627e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000627e, 0) 
 2: goto (0x00006255, 0) 


# -- 0x00006255 8b 7d cc                               mov -0x34(%rbp),%edi
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006258, 0) 


# -- 0x00006258 48 8b 4d d0                            mov -0x30(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000625c, 0) 


# -- 0x0000625c 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006260, 0) 


# -- 0x00006260 48 8b 75 e0                            mov -0x20(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006264, 0) 


# -- 0x00006264 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006268, 0) 


# -- 0x00006268 41 89 f8                               mov %edi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x0000626b, 0) 


# -- 0x0000626b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000626e, 0) 


# -- 0x0000626e e8 a2 fe ff ff                         call 0x6115
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006273;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006115, 0) #call with return address @ (0x00006273, 0)


# -- 0x00006273 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006277, 0) 


# -- 0x00006277 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000627c, 0) 


# -- 0x0000627c 7f b8                                  jg 0x6236
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00006236, 0) 
 2: goto (0x0000627e, 0) 


# -- 0x0000627e 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006283, 0) 


# -- 0x00006283 78 07                                  js 0x628c
 0: if sf<1> goto 1 else goto 2
 1: goto (0x0000628c, 0) 
 2: goto (0x00006285, 0) 


# -- 0x00006285 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000628a, 0) 


# -- 0x0000628a 74 07                                  je 0x6293
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006293, 0) 
 2: goto (0x0000628c, 0) 


# -- 0x0000628c b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00006291, 0) 


# -- 0x00006291 eb 05                                  jmp 0x6298
 0: goto (0x00006298, 0) 


# -- 0x00006293 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006298, 0) 


# -- 0x00006298 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006299, 0) 


# -- 0x00006299 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000629a 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000629b, 0) 


# -- 0x0000629b 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000629e, 0) 


# -- 0x0000629e 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000062a2, 0) 


# -- 0x000062a2 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x000062a6, 0) 


# -- 0x000062a6 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x000062aa, 0) 


# -- 0x000062aa 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x000062ae, 0) 


# -- 0x000062ae 48 89 4d b0                            mov %rcx,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rcx<64>;
 1: goto (0x000062b2, 0) 


# -- 0x000062b2 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000062bb, 0) 


# -- 0x000062bb 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000062bf, 0) 


# -- 0x000062bf 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000062c1, 0) 


# -- 0x000062c1 48 8d 7d e8                            lea -0x18(%rbp),%rdi
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000062c5, 0) 


# -- 0x000062c5 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000062c9, 0) 


# -- 0x000062c9 48 8d 55 dc                            lea -0x24(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -36<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000062cd, 0) 


# -- 0x000062cd 48 8b 75 c8                            mov -0x38(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000062d1, 0) 


# -- 0x000062d1 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000062d5, 0) 


# -- 0x000062d5 49 89 f8                               mov %rdi,%r8
 0: %%0<64> := rdi<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000062d8, 0) 


# -- 0x000062d8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000062db, 0) 


# -- 0x000062db e8 dd fb ff ff                         call 0x5ebd
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000062e0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005ebd, 0) #call with return address @ (0x000062e0, 0)


# -- 0x000062e0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000062e2, 0) 


# -- 0x000062e2 74 09                                  je 0x62ed
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000062ed, 0) 
 2: goto (0x000062e4, 0) 


# -- 0x000062e4 48 c7 c0 ff ff ff ff                   mov $0xffffffffffffffff,%rax
 0: rax<64> := -1<64>;
 1: goto (0x000062eb, 0) 


# -- 0x000062eb eb 5a                                  jmp 0x6347
 0: goto (0x00006347, 0) 


# -- 0x000062ed 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000062f1, 0) 


# -- 0x000062f1 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000062f4, 0) 


# -- 0x000062f4 74 12                                  je 0x6308
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006308, 0) 
 2: goto (0x000062f6, 0) 


# -- 0x000062f6 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000062fa, 0) 


# -- 0x000062fa 48 39 45 b8                            cmp %rax,-0x48(%rbp)
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x000062fe, 0) 


# -- 0x000062fe 76 08                                  jbe 0x6308
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x00006308, 0) 
 2: goto (0x00006300, 0) 


# -- 0x00006300 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006304, 0) 


# -- 0x00006304 48 89 45 b8                            mov %rax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rax<64>;
 1: goto (0x00006308, 0) 


# -- 0x00006308 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000630c, 0) 


# -- 0x0000630c 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000630f, 0) 


# -- 0x0000630f 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006313, 0) 


# -- 0x00006313 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006317, 0) 


# -- 0x00006317 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006319, 0) 


# -- 0x00006319 e8 42 d0 ff ff                         call 0x3360
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000631e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003360, 0) #call with return address @ (0x0000631e, 0)


# -- 0x0000631e 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00006322, 0) 


# -- 0x00006322 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006326, 0) 


# -- 0x00006326 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000632d, 0) 


# -- 0x0000632d 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006330, 0) 


# -- 0x00006330 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006335, 0) 


# -- 0x00006335 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006337, 0) 


# -- 0x00006337 74 0a                                  je 0x6343
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006343, 0) 
 2: goto (0x00006339, 0) 


# -- 0x00006339 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000633c, 0) 


# -- 0x0000633c 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000633e, 0) 


# -- 0x0000633e e8 5d cc ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006343;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x00006343, 0)


# -- 0x00006343 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006347, 0) 


# -- 0x00006347 48 8b 7d f8                            mov -0x8(%rbp),%rdi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x0000634b, 0) 


# -- 0x0000634b 64 48 33 3c 25 28 00 00 00             xor %fs:0x28,%rdi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rdi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rdi<64>{0} ^ %%0<64>{0}) ^ (rdi<64>{4} ^ %%0<64>{4})) ^
        ((rdi<64>{2} ^ %%0<64>{2}) ^ (rdi<64>{6} ^ %%0<64>{6}))) ^
       (((rdi<64>{1} ^ %%0<64>{1}) ^ (rdi<64>{5} ^ %%0<64>{5})) ^
        ((rdi<64>{3} ^ %%0<64>{3}) ^ (rdi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rdi<64> := %%1<64>;
12: goto (0x00006354, 0) 


# -- 0x00006354 74 05                                  je 0x635b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000635b, 0) 
 2: goto (0x00006356, 0) 


# -- 0x00006356 e8 15 cb ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000635b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000635b, 0)


# -- 0x0000635b c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000635c, 0) 


# -- 0x0000635c c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000635d 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000635e, 0) 


# -- 0x0000635e 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006361, 0) 


# -- 0x00006361 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006365, 0) 


# -- 0x00006365 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x00006369, 0) 


# -- 0x00006369 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000636d, 0) 


# -- 0x0000636d 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x00006371, 0) 


# -- 0x00006371 48 89 4d d0                            mov %rcx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rcx<64>;
 1: goto (0x00006375, 0) 


# -- 0x00006375 48 c7 45 f8 00 00 00 00                movq $0x0,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := 0<64>;
 1: goto (0x0000637d, 0) 


# -- 0x0000637d eb 18                                  jmp 0x6397
 0: goto (0x00006397, 0) 


# -- 0x0000637f 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006383, 0) 


# -- 0x00006383 48 01 45 e8                            add %rax,-0x18(%rbp)
 0: %%0<64> := (rbp<64> + -24<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x00006387, 0) 


# -- 0x00006387 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000638b, 0) 


# -- 0x0000638b 48 01 45 e0                            add %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000638f, 0) 


# -- 0x0000638f 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006393, 0) 


# -- 0x00006393 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00006397, 0) 


# -- 0x00006397 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000639c, 0) 


# -- 0x0000639c 74 23                                  je 0x63c1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000063c1, 0) 
 2: goto (0x0000639e, 0) 


# -- 0x0000639e 48 8b 4d d0                            mov -0x30(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000063a2, 0) 


# -- 0x000063a2 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000063a6, 0) 


# -- 0x000063a6 48 8b 75 e0                            mov -0x20(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000063aa, 0) 


# -- 0x000063aa 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000063ae, 0) 


# -- 0x000063ae 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000063b1, 0) 


# -- 0x000063b1 e8 e4 fe ff ff                         call 0x629a
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000063b6;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000629a, 0) #call with return address @ (0x000063b6, 0)


# -- 0x000063b6 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000063ba, 0) 


# -- 0x000063ba 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000063bf, 0) 


# -- 0x000063bf 7f be                                  jg 0x637f
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000637f, 0) 
 2: goto (0x000063c1, 0) 


# -- 0x000063c1 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000063c6, 0) 


# -- 0x000063c6 78 07                                  js 0x63cf
 0: if sf<1> goto 1 else goto 2
 1: goto (0x000063cf, 0) 
 2: goto (0x000063c8, 0) 


# -- 0x000063c8 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000063cd, 0) 


# -- 0x000063cd 74 07                                  je 0x63d6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000063d6, 0) 
 2: goto (0x000063cf, 0) 


# -- 0x000063cf b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x000063d4, 0) 


# -- 0x000063d4 eb 05                                  jmp 0x63db
 0: goto (0x000063db, 0) 


# -- 0x000063d6 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000063db, 0) 


# -- 0x000063db c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000063dc, 0) 


# -- 0x000063dc c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000063dd 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000063de, 0) 


# -- 0x000063de 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000063e1, 0) 


# -- 0x000063e1 48 83 ec 60                            sub $0x60,%rsp
 0: %%0<64> := (rsp<64> - 96<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000063e5, 0) 


# -- 0x000063e5 89 7d cc                               mov %edi,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rdi<64>{0,31};
 1: goto (0x000063e8, 0) 


# -- 0x000063e8 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x000063ec, 0) 


# -- 0x000063ec 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x000063f0, 0) 


# -- 0x000063f0 48 89 4d b0                            mov %rcx,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rcx<64>;
 1: goto (0x000063f4, 0) 


# -- 0x000063f4 44 89 45 c8                            mov %r8d,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),4] := r8<64>{0,31};
 1: goto (0x000063f8, 0) 


# -- 0x000063f8 44 89 4d ac                            mov %r9d,-0x54(%rbp)
 0: @[(rbp<64> + -84<64>),4] := r9<64>{0,31};
 1: goto (0x000063fc, 0) 


# -- 0x000063fc 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006405, 0) 


# -- 0x00006405 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006409, 0) 


# -- 0x00006409 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000640b, 0) 


# -- 0x0000640b 48 8d 7d e8                            lea -0x18(%rbp),%rdi
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000640f, 0) 


# -- 0x0000640f 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00006413, 0) 


# -- 0x00006413 48 8d 55 dc                            lea -0x24(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -36<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006417, 0) 


# -- 0x00006417 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000641b, 0) 


# -- 0x0000641b 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000641f, 0) 


# -- 0x0000641f 49 89 f8                               mov %rdi,%r8
 0: %%0<64> := rdi<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00006422, 0) 


# -- 0x00006422 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006425, 0) 


# -- 0x00006425 e8 93 fa ff ff                         call 0x5ebd
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000642a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00005ebd, 0) #call with return address @ (0x0000642a, 0)


# -- 0x0000642a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000642c, 0) 


# -- 0x0000642c 74 0a                                  je 0x6438
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006438, 0) 
 2: goto (0x0000642e, 0) 


# -- 0x0000642e b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00006433, 0) 


# -- 0x00006433 e9 c7 00 00 00                         jmp 0x64ff
 0: goto (0x000064ff, 0) 


# -- 0x00006438 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000643c, 0) 


# -- 0x0000643c 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000643f, 0) 


# -- 0x0000643f 74 12                                  je 0x6453
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006453, 0) 
 2: goto (0x00006441, 0) 


# -- 0x00006441 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006445, 0) 


# -- 0x00006445 48 39 45 b8                            cmp %rax,-0x48(%rbp)
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006449, 0) 


# -- 0x00006449 76 08                                  jbe 0x6453
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x00006453, 0) 
 2: goto (0x0000644b, 0) 


# -- 0x0000644b 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000644f, 0) 


# -- 0x0000644f 48 89 45 b8                            mov %rax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rax<64>;
 1: goto (0x00006453, 0) 


# -- 0x00006453 83 7d c8 00                            cmpl $0x0,-0x38(%rbp)
 0: %%0<32> := @[(rbp<64> + -56<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006457, 0) 


# -- 0x00006457 75 29                                  jne 0x6482
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006482, 0) 
 2: goto (0x00006459, 0) 


# -- 0x00006459 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000645c, 0) 


# -- 0x0000645c 48 8b 4d b8                            mov -0x48(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006460, 0) 


# -- 0x00006460 8b 55 cc                               mov -0x34(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006463, 0) 


# -- 0x00006463 48 8d 75 e0                            lea -0x20(%rbp),%rsi
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00006467, 0) 


# -- 0x00006467 41 b9 01 00 00 00                      mov $0x1,%r9d
 0: r9<64> := 1<64>;
 1: goto (0x0000646d, 0) 


# -- 0x0000646d 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00006470, 0) 


# -- 0x00006470 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x00006475, 0) 


# -- 0x00006475 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006477, 0) 


# -- 0x00006477 e8 74 c8 ff ff                         call 0x2cf0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000647c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cf0, 0) #call with return address @ (0x0000647c, 0)


# -- 0x0000647c 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00006480, 0) 


# -- 0x00006480 eb 58                                  jmp 0x64da
 0: goto (0x000064da, 0) 


# -- 0x00006482 8b 55 dc                               mov -0x24(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006485, 0) 


# -- 0x00006485 48 8b 75 b8                            mov -0x48(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006489, 0) 


# -- 0x00006489 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000648d, 0) 


# -- 0x0000648d 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006490, 0) 


# -- 0x00006490 41 b9 01 00 00 00                      mov $0x1,%r9d
 0: r9<64> := 1<64>;
 1: goto (0x00006496, 0) 


# -- 0x00006496 49 89 f0                               mov %rsi,%r8
 0: %%0<64> := rsi<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00006499, 0) 


# -- 0x00006499 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000649e, 0) 


# -- 0x0000649e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000064a0, 0) 


# -- 0x000064a0 e8 4b c8 ff ff                         call 0x2cf0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000064a5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cf0, 0) #call with return address @ (0x000064a5, 0)


# -- 0x000064a5 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x000064a9, 0) 


# -- 0x000064a9 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000064ad, 0) 


# -- 0x000064ad 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000064b4, 0) 


# -- 0x000064b4 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000064b7, 0) 


# -- 0x000064b7 83 e0 40                               and $0x40,%eax
 0: %%0<32> := (64<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{6});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000064ba, 0) 


# -- 0x000064ba 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000064bc, 0) 


# -- 0x000064bc 74 0c                                  je 0x64ca
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000064ca, 0) 
 2: goto (0x000064be, 0) 


# -- 0x000064be 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000064c1, 0) 


# -- 0x000064c1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000064c3, 0) 


# -- 0x000064c3 e8 88 ce ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000064c8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x000064c8, 0)


# -- 0x000064c8 eb 10                                  jmp 0x64da
 0: goto (0x000064da, 0) 


# -- 0x000064ca 83 7d ac 00                            cmpl $0x0,-0x54(%rbp)
 0: %%0<32> := @[(rbp<64> + -84<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000064ce, 0) 


# -- 0x000064ce 74 0a                                  je 0x64da
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000064da, 0) 
 2: goto (0x000064d0, 0) 


# -- 0x000064d0 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000064d3, 0) 


# -- 0x000064d3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000064d5, 0) 


# -- 0x000064d5 e8 b6 c7 ff ff                         call 0x2c90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000064da;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c90, 0) #call with return address @ (0x000064da, 0)


# -- 0x000064da 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000064de, 0) 


# -- 0x000064de 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000064e5, 0) 


# -- 0x000064e5 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000064e8, 0) 


# -- 0x000064e8 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000064ed, 0) 


# -- 0x000064ed 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000064ef, 0) 


# -- 0x000064ef 74 0a                                  je 0x64fb
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000064fb, 0) 
 2: goto (0x000064f1, 0) 


# -- 0x000064f1 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000064f4, 0) 


# -- 0x000064f4 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000064f6, 0) 


# -- 0x000064f6 e8 a5 ca ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000064fb;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x000064fb, 0)


# -- 0x000064fb 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000064ff, 0) 


# -- 0x000064ff 48 8b 7d f8                            mov -0x8(%rbp),%rdi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x00006503, 0) 


# -- 0x00006503 64 48 33 3c 25 28 00 00 00             xor %fs:0x28,%rdi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rdi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rdi<64>{0} ^ %%0<64>{0}) ^ (rdi<64>{4} ^ %%0<64>{4})) ^
        ((rdi<64>{2} ^ %%0<64>{2}) ^ (rdi<64>{6} ^ %%0<64>{6}))) ^
       (((rdi<64>{1} ^ %%0<64>{1}) ^ (rdi<64>{5} ^ %%0<64>{5})) ^
        ((rdi<64>{3} ^ %%0<64>{3}) ^ (rdi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rdi<64> := %%1<64>;
12: goto (0x0000650c, 0) 


# -- 0x0000650c 74 05                                  je 0x6513
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006513, 0) 
 2: goto (0x0000650e, 0) 


# -- 0x0000650e e8 5d c9 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006513;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00006513, 0)


# -- 0x00006513 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006514, 0) 


# -- 0x00006514 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006515 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006516, 0) 


# -- 0x00006516 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006519, 0) 


# -- 0x00006519 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000651d, 0) 


# -- 0x0000651d 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x00006520, 0) 


# -- 0x00006520 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x00006524, 0) 


# -- 0x00006524 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x00006528, 0) 


# -- 0x00006528 48 89 4d d0                            mov %rcx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rcx<64>;
 1: goto (0x0000652c, 0) 


# -- 0x0000652c 44 89 45 e8                            mov %r8d,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := r8<64>{0,31};
 1: goto (0x00006530, 0) 


# -- 0x00006530 44 89 4d cc                            mov %r9d,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := r9<64>{0,31};
 1: goto (0x00006534, 0) 


# -- 0x00006534 eb 10                                  jmp 0x6546
 0: goto (0x00006546, 0) 


# -- 0x00006536 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000653a, 0) 


# -- 0x0000653a 48 01 45 e0                            add %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000653e, 0) 


# -- 0x0000653e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006542, 0) 


# -- 0x00006542 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00006546, 0) 


# -- 0x00006546 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000654b, 0) 


# -- 0x0000654b 74 30                                  je 0x657d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000657d, 0) 
 2: goto (0x0000654d, 0) 


# -- 0x0000654d 44 8b 45 cc                            mov -0x34(%rbp),%r8d
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: r8<64> := %%0<64>;
 2: goto (0x00006551, 0) 


# -- 0x00006551 8b 7d e8                               mov -0x18(%rbp),%edi
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006554, 0) 


# -- 0x00006554 48 8b 4d d0                            mov -0x30(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006558, 0) 


# -- 0x00006558 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000655c, 0) 


# -- 0x0000655c 48 8b 75 e0                            mov -0x20(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006560, 0) 


# -- 0x00006560 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006563, 0) 


# -- 0x00006563 45 89 c1                               mov %r8d,%r9d
 0: %%0<64> := (0x00000000ffffffff & r8<64>);
 1: r9<64> := %%0<64>;
 2: goto (0x00006566, 0) 


# -- 0x00006566 41 89 f8                               mov %edi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00006569, 0) 


# -- 0x00006569 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000656b, 0) 


# -- 0x0000656b e8 6d fe ff ff                         call 0x63dd
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006570;
 2: rsp<64> := %%0<64>;
 3: goto (0x000063dd, 0) #call with return address @ (0x00006570, 0)


# -- 0x00006570 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006572, 0) 


# -- 0x00006572 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006576, 0) 


# -- 0x00006576 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000657b, 0) 


# -- 0x0000657b 7f b9                                  jg 0x6536
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00006536, 0) 
 2: goto (0x0000657d, 0) 


# -- 0x0000657d 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006582, 0) 


# -- 0x00006582 78 07                                  js 0x658b
 0: if sf<1> goto 1 else goto 2
 1: goto (0x0000658b, 0) 
 2: goto (0x00006584, 0) 


# -- 0x00006584 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006589, 0) 


# -- 0x00006589 74 07                                  je 0x6592
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006592, 0) 
 2: goto (0x0000658b, 0) 


# -- 0x0000658b b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00006590, 0) 


# -- 0x00006590 eb 05                                  jmp 0x6597
 0: goto (0x00006597, 0) 


# -- 0x00006592 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006597, 0) 


# -- 0x00006597 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006598, 0) 


# -- 0x00006598 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006599 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000659a, 0) 


# -- 0x0000659a 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000659d, 0) 


# -- 0x0000659d 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000065a1, 0) 


# -- 0x000065a1 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x000065a5, 0) 


# -- 0x000065a5 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x000065a9, 0) 


# -- 0x000065a9 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x000065ad, 0) 


# -- 0x000065ad 48 89 4d b0                            mov %rcx,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rcx<64>;
 1: goto (0x000065b1, 0) 


# -- 0x000065b1 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065b5, 0) 


# -- 0x000065b5 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065bc, 0) 


# -- 0x000065bc 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000065bf, 0) 


# -- 0x000065bf 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000065c2, 0) 


# -- 0x000065c2 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000065c4, 0) 


# -- 0x000065c4 75 44                                  jne 0x660a
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000660a, 0) 
 2: goto (0x000065c6, 0) 


# -- 0x000065c6 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065ca, 0) 


# -- 0x000065ca 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065d1, 0) 


# -- 0x000065d1 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000065d4, 0) 


# -- 0x000065d4 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000065d9, 0) 


# -- 0x000065d9 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000065db, 0) 


# -- 0x000065db 74 10                                  je 0x65ed
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000065ed, 0) 
 2: goto (0x000065dd, 0) 


# -- 0x000065dd 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065e1, 0) 


# -- 0x000065e1 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065e8, 0) 


# -- 0x000065e8 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000065eb, 0) 


# -- 0x000065eb 74 1d                                  je 0x660a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000660a, 0) 
 2: goto (0x000065ed, 0) 


# -- 0x000065ed 48 8b 4d b0                            mov -0x50(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000065f1, 0) 


# -- 0x000065f1 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000065f5, 0) 


# -- 0x000065f5 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x000065f9, 0) 


# -- 0x000065f9 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000065fd, 0) 


# -- 0x000065fd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006600, 0) 


# -- 0x00006600 e8 58 fd ff ff                         call 0x635d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006605;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000635d, 0) #call with return address @ (0x00006605, 0)


# -- 0x00006605 e9 e5 01 00 00                         jmp 0x67ef
 0: goto (0x000067ef, 0) 


# -- 0x0000660a 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000660e, 0) 


# -- 0x0000660e 48 8d 90 ff 0f 00 00                   lea 0xfff(%rax),%rdx
 0: %%0<64> := (rax<64> + 4095<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006615, 0) 


# -- 0x00006615 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00006618, 0) 


# -- 0x00006618 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000661c, 0) 


# -- 0x0000661c 48 c1 f8 0c                            sar $0xc,%rax
 0: %%0<64> := (rax<64> >>s 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00006620, 0) 


# -- 0x00006620 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00006624, 0) 


# -- 0x00006624 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006628, 0) 


# -- 0x00006628 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000662c, 0) 


# -- 0x0000662c 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000662f, 0) 


# -- 0x0000662f 48 83 e8 01                            sub $0x1,%rax
 0: %%0<64> := (rax<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00006633, 0) 


# -- 0x00006633 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00006637, 0) 


# -- 0x00006637 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x0000663b, 0) 


# -- 0x0000663b 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000663f, 0) 


# -- 0x0000663f 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x00006643, 0) 


# -- 0x00006643 e9 62 01 00 00                         jmp 0x67aa
 0: goto (0x000067aa, 0) 


# -- 0x00006648 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000664c, 0) 


# -- 0x0000664c 48 c1 e0 0c                            shl $0xc,%rax
 0: %%0<64> := (rax<64> << 12<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 11<64>)));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<64> = %%0<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 5: cf<1> := %%1<1>;
 6: pf<1> := -1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := %%2<1>;
11: rax<64> := %%0<64>;
12: goto (0x00006650, 0) 


# -- 0x00006650 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00006654, 0) 


# -- 0x00006654 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006658, 0) 


# -- 0x00006658 48 2b 45 e8                            sub -0x18(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -24<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x0000665c, 0) 


# -- 0x0000665c 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00006660, 0) 


# -- 0x00006660 b8 00 10 00 00                         mov $0x1000,%eax
 0: rax<64> := 4096<64>;
 1: goto (0x00006665, 0) 


# -- 0x00006665 48 2b 45 f0                            sub -0x10(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -16<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x00006669, 0) 


# -- 0x00006669 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000666c, 0) 


# -- 0x0000666c 7e 0f                                  jle 0x667d
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000667d, 0) 
 2: goto (0x0000666e, 0) 


# -- 0x0000666e b8 00 10 00 00                         mov $0x1000,%eax
 0: rax<64> := 4096<64>;
 1: goto (0x00006673, 0) 


# -- 0x00006673 48 2b 45 f0                            sub -0x10(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -16<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x00006677, 0) 


# -- 0x00006677 48 39 45 b8                            cmp %rax,-0x48(%rbp)
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x0000667b, 0) 


# -- 0x0000667b 72 11                                  jb 0x668e
 0: if cf<1> goto 1 else goto 2
 1: goto (0x0000668e, 0) 
 2: goto (0x0000667d, 0) 


# -- 0x0000667d 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006681, 0) 


# -- 0x00006681 ba 00 10 00 00                         mov $0x1000,%edx
 0: rdx<64> := 4096<64>;
 1: goto (0x00006686, 0) 


# -- 0x00006686 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x00006689, 0) 


# -- 0x00006689 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000668c, 0) 


# -- 0x0000668c eb 04                                  jmp 0x6692
 0: goto (0x00006692, 0) 


# -- 0x0000668e 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006692, 0) 


# -- 0x00006692 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006696, 0) 


# -- 0x00006696 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000669a, 0) 


# -- 0x0000669a 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066a1, 0) 


# -- 0x000066a1 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000066a4, 0) 


# -- 0x000066a4 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000066a7, 0) 


# -- 0x000066a7 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000066a9, 0) 


# -- 0x000066a9 75 12                                  jne 0x66bd
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000066bd, 0) 
 2: goto (0x000066ab, 0) 


# -- 0x000066ab 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066af, 0) 


# -- 0x000066af 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000066b5, 0) 


# -- 0x000066b5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000066b8, 0) 


# -- 0x000066b8 e8 a3 c9 ff ff                         call 0x3060
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000066bd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003060, 0) #call with return address @ (0x000066bd, 0)


# -- 0x000066bd 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066c1, 0) 


# -- 0x000066c1 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066c8, 0) 


# -- 0x000066c8 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000066cc, 0) 


# -- 0x000066cc 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000066d0, 0) 


# -- 0x000066d0 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000066d3, 0) 


# -- 0x000066d3 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000066d5, 0) 


# -- 0x000066d5 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x000066d8, 0) 


# -- 0x000066d8 74 49                                  je 0x6723
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006723, 0) 
 2: goto (0x000066da, 0) 


# -- 0x000066da 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066de, 0) 


# -- 0x000066de 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066e5, 0) 


# -- 0x000066e5 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000066e9, 0) 


# -- 0x000066e9 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000066ed, 0) 


# -- 0x000066ed 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000066f0, 0) 


# -- 0x000066f0 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000066f2, 0) 


# -- 0x000066f2 c1 e0 0c                               shl $0xc,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> << 12<32>);
 2: %%2<1> := (0<32> <> (0x80000000 & (%%0<32> << 11<32>)));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%1<32>);
 5: %%5<1> := (0<32> <> (0x80000000 & %%1<32>));
 6: %%6<64> := (extu %%1<32> 64);
 7: cf<1> := %%2<1>;
 8: pf<1> := -1<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%3<1>;
13: rax<64> := %%6<64>;
14: goto (0x000066f5, 0) 


# -- 0x000066f5 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000066f7, 0) 


# -- 0x000066f7 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000066fb, 0) 


# -- 0x000066fb 48 8d 0c 02                            lea (%rdx,%rax,1),%rcx
 0: %%0<64> := (rdx<64> + rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000066ff, 0) 


# -- 0x000066ff 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006703, 0) 


# -- 0x00006703 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006707, 0) 


# -- 0x00006707 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000670d, 0) 


# -- 0x0000670d 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006711, 0) 


# -- 0x00006711 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006713, 0) 


# -- 0x00006713 e8 48 cc ff ff                         call 0x3360
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006718;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003360, 0) #call with return address @ (0x00006718, 0)


# -- 0x00006718 48 39 45 f8                            cmp %rax,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x0000671c, 0) 


# -- 0x0000671c 74 48                                  je 0x6766
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006766, 0) 
 2: goto (0x0000671e, 0) 


# -- 0x0000671e e9 a0 00 00 00                         jmp 0x67c3
 0: goto (0x000067c3, 0) 


# -- 0x00006723 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006727, 0) 


# -- 0x00006727 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000672e, 0) 


# -- 0x0000672e 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006731, 0) 


# -- 0x00006731 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006736, 0) 


# -- 0x00006736 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006738, 0) 


# -- 0x00006738 74 10                                  je 0x674a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000674a, 0) 
 2: goto (0x0000673a, 0) 


# -- 0x0000673a 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000673e, 0) 


# -- 0x0000673e 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006745, 0) 


# -- 0x00006745 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00006748, 0) 


# -- 0x00006748 74 75                                  je 0x67bf
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000067bf, 0) 
 2: goto (0x0000674a, 0) 


# -- 0x0000674a 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000674e, 0) 


# -- 0x0000674e 48 8b 4d b0                            mov -0x50(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006752, 0) 


# -- 0x00006752 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006756, 0) 


# -- 0x00006756 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000675a, 0) 


# -- 0x0000675a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000675d, 0) 


# -- 0x0000675d e8 fb fb ff ff                         call 0x635d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006762;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000635d, 0) #call with return address @ (0x00006762, 0)


# -- 0x00006762 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006764, 0) 


# -- 0x00006764 75 5c                                  jne 0x67c2
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000067c2, 0) 
 2: goto (0x00006766, 0) 


# -- 0x00006766 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000676a, 0) 


# -- 0x0000676a 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006771, 0) 


# -- 0x00006771 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006774, 0) 


# -- 0x00006774 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006777, 0) 


# -- 0x00006777 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006779, 0) 


# -- 0x00006779 75 12                                  jne 0x678d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000678d, 0) 
 2: goto (0x0000677b, 0) 


# -- 0x0000677b 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000677f, 0) 


# -- 0x0000677f 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00006785, 0) 


# -- 0x00006785 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006788, 0) 


# -- 0x00006788 e8 d3 ca ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000678d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x0000678d, 0)


# -- 0x0000678d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006791, 0) 


# -- 0x00006791 48 29 45 b8                            sub %rax,-0x48(%rbp)
 0: %%0<64> := (rbp<64> + -72<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00006795, 0) 


# -- 0x00006795 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006799, 0) 


# -- 0x00006799 48 01 45 c8                            add %rax,-0x38(%rbp)
 0: %%0<64> := (rbp<64> + -56<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000679d, 0) 


# -- 0x0000679d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000067a1, 0) 


# -- 0x000067a1 48 01 45 c0                            add %rax,-0x40(%rbp)
 0: %%0<64> := (rbp<64> + -64<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x000067a5, 0) 


# -- 0x000067a5 48 83 45 d0 01                         addq $0x1,-0x30(%rbp)
 0: %%0<64> := (rbp<64> + -48<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000067aa, 0) 


# -- 0x000067aa 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000067ae, 0) 


# -- 0x000067ae 48 3b 45 e0                            cmp -0x20(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -32<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x000067b2, 0) 


# -- 0x000067b2 0f 8e 90 fe ff ff                      jle 0x6648
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x00006648, 0) 
 2: goto (0x000067b8, 0) 


# -- 0x000067b8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000067bd, 0) 


# -- 0x000067bd eb 30                                  jmp 0x67ef
 0: goto (0x000067ef, 0) 


# -- 0x000067bf 90                                     nop
 0: goto (0x000067c0, 0) 


# -- 0x000067c0 eb 01                                  jmp 0x67c3
 0: goto (0x000067c3, 0) 


# -- 0x000067c2 90                                     nop
 0: goto (0x000067c3, 0) 


# -- 0x000067c3 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000067c7, 0) 


# -- 0x000067c7 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000067ce, 0) 


# -- 0x000067ce 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000067d1, 0) 


# -- 0x000067d1 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000067d4, 0) 


# -- 0x000067d4 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000067d6, 0) 


# -- 0x000067d6 75 12                                  jne 0x67ea
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000067ea, 0) 
 2: goto (0x000067d8, 0) 


# -- 0x000067d8 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000067dc, 0) 


# -- 0x000067dc 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000067e2, 0) 


# -- 0x000067e2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000067e5, 0) 


# -- 0x000067e5 e8 76 ca ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000067ea;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x000067ea, 0)


# -- 0x000067ea b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x000067ef, 0) 


# -- 0x000067ef c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000067f0, 0) 


# -- 0x000067f0 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000067f1 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000067f2, 0) 


# -- 0x000067f2 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000067f5, 0) 


# -- 0x000067f5 48 81 ec 80 10 00 00                   sub $0x1080,%rsp
 0: %%0<64> := (rsp<64> - 0x0000000000001080);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000067fc, 0) 


# -- 0x000067fc 48 89 bd a8 ef ff ff                   mov %rdi,-0x1058(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefa8),8] := rdi<64>;
 1: goto (0x00006803, 0) 


# -- 0x00006803 48 89 b5 a0 ef ff ff                   mov %rsi,-0x1060(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefa0),8] := rsi<64>;
 1: goto (0x0000680a, 0) 


# -- 0x0000680a 48 89 95 98 ef ff ff                   mov %rdx,-0x1068(%rbp)
 0: @[(rbp<64> + 0xffffffffffffef98),8] := rdx<64>;
 1: goto (0x00006811, 0) 


# -- 0x00006811 48 89 8d 90 ef ff ff                   mov %rcx,-0x1070(%rbp)
 0: @[(rbp<64> + 0xffffffffffffef90),8] := rcx<64>;
 1: goto (0x00006818, 0) 


# -- 0x00006818 44 89 85 8c ef ff ff                   mov %r8d,-0x1074(%rbp)
 0: @[(rbp<64> + 0xffffffffffffef8c),4] := r8<64>{0,31};
 1: goto (0x0000681f, 0) 


# -- 0x0000681f 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006828, 0) 


# -- 0x00006828 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000682c, 0) 


# -- 0x0000682c 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000682e, 0) 


# -- 0x0000682e 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006835, 0) 


# -- 0x00006835 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000683c, 0) 


# -- 0x0000683c 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000683f, 0) 


# -- 0x0000683f 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006842, 0) 


# -- 0x00006842 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006844, 0) 


# -- 0x00006844 75 5f                                  jne 0x68a5
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000068a5, 0) 
 2: goto (0x00006846, 0) 


# -- 0x00006846 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000684d, 0) 


# -- 0x0000684d 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006854, 0) 


# -- 0x00006854 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006857, 0) 


# -- 0x00006857 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000685c, 0) 


# -- 0x0000685c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000685e, 0) 


# -- 0x0000685e 74 13                                  je 0x6873
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006873, 0) 
 2: goto (0x00006860, 0) 


# -- 0x00006860 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006867, 0) 


# -- 0x00006867 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000686e, 0) 


# -- 0x0000686e 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00006871, 0) 


# -- 0x00006871 74 32                                  je 0x68a5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000068a5, 0) 
 2: goto (0x00006873, 0) 


# -- 0x00006873 8b bd 8c ef ff ff                      mov -0x1074(%rbp),%edi
 0: %%0<64> := (extu @[(rbp<64> + 0xffffffffffffef8c),4] 64);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006879, 0) 


# -- 0x00006879 48 8b 8d 90 ef ff ff                   mov -0x1070(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006880, 0) 


# -- 0x00006880 48 8b 95 98 ef ff ff                   mov -0x1068(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef98),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006887, 0) 


# -- 0x00006887 48 8b b5 a0 ef ff ff                   mov -0x1060(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa0),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000688e, 0) 


# -- 0x0000688e 48 8b 85 a8 ef ff ff                   mov -0x1058(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006895, 0) 


# -- 0x00006895 41 89 f8                               mov %edi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00006898, 0) 


# -- 0x00006898 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000689b, 0) 


# -- 0x0000689b e8 70 f9 ff ff                         call 0x6210
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000068a0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006210, 0) #call with return address @ (0x000068a0, 0)


# -- 0x000068a0 e9 a6 03 00 00                         jmp 0x6c4b
 0: goto (0x00006c4b, 0) 


# -- 0x000068a5 48 8b 85 a8 ef ff ff                   mov -0x1058(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000068ac, 0) 


# -- 0x000068ac 48 8d 90 ff 0f 00 00                   lea 0xfff(%rax),%rdx
 0: %%0<64> := (rax<64> + 4095<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000068b3, 0) 


# -- 0x000068b3 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000068b6, 0) 


# -- 0x000068b6 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x000068ba, 0) 


# -- 0x000068ba 48 c1 f8 0c                            sar $0xc,%rax
 0: %%0<64> := (rax<64> >>s 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x000068be, 0) 


# -- 0x000068be 48 89 85 c0 ef ff ff                   mov %rax,-0x1040(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefc0),8] := rax<64>;
 1: goto (0x000068c5, 0) 


# -- 0x000068c5 48 8b 95 a8 ef ff ff                   mov -0x1058(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa8),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000068cc, 0) 


# -- 0x000068cc 48 8b 85 98 ef ff ff                   mov -0x1068(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef98),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000068d3, 0) 


# -- 0x000068d3 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000068d6, 0) 


# -- 0x000068d6 48 83 e8 01                            sub $0x1,%rax
 0: %%0<64> := (rax<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000068da, 0) 


# -- 0x000068da 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x000068de, 0) 


# -- 0x000068de 48 89 85 c8 ef ff ff                   mov %rax,-0x1038(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefc8),8] := rax<64>;
 1: goto (0x000068e5, 0) 


# -- 0x000068e5 48 8b 85 c0 ef ff ff                   mov -0x1040(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefc0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000068ec, 0) 


# -- 0x000068ec 48 89 85 b8 ef ff ff                   mov %rax,-0x1048(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefb8),8] := rax<64>;
 1: goto (0x000068f3, 0) 


# -- 0x000068f3 e9 b4 02 00 00                         jmp 0x6bac
 0: goto (0x00006bac, 0) 


# -- 0x000068f8 48 8b 85 b8 ef ff ff                   mov -0x1048(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000068ff, 0) 


# -- 0x000068ff 48 c1 e0 0c                            shl $0xc,%rax
 0: %%0<64> := (rax<64> << 12<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 11<64>)));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<64> = %%0<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 5: cf<1> := %%1<1>;
 6: pf<1> := -1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := %%2<1>;
11: rax<64> := %%0<64>;
12: goto (0x00006903, 0) 


# -- 0x00006903 48 89 85 d0 ef ff ff                   mov %rax,-0x1030(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefd0),8] := rax<64>;
 1: goto (0x0000690a, 0) 


# -- 0x0000690a 48 8b 85 a8 ef ff ff                   mov -0x1058(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006911, 0) 


# -- 0x00006911 48 2b 85 d0 ef ff ff                   sub -0x1030(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + 0xffffffffffffefd0),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x00006918, 0) 


# -- 0x00006918 48 89 85 d8 ef ff ff                   mov %rax,-0x1028(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefd8),8] := rax<64>;
 1: goto (0x0000691f, 0) 


# -- 0x0000691f b8 00 10 00 00                         mov $0x1000,%eax
 0: rax<64> := 4096<64>;
 1: goto (0x00006924, 0) 


# -- 0x00006924 48 2b 85 d8 ef ff ff                   sub -0x1028(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x0000692b, 0) 


# -- 0x0000692b 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000692e, 0) 


# -- 0x0000692e 7e 15                                  jle 0x6945
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x00006945, 0) 
 2: goto (0x00006930, 0) 


# -- 0x00006930 b8 00 10 00 00                         mov $0x1000,%eax
 0: rax<64> := 4096<64>;
 1: goto (0x00006935, 0) 


# -- 0x00006935 48 2b 85 d8 ef ff ff                   sub -0x1028(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x0000693c, 0) 


# -- 0x0000693c 48 39 85 98 ef ff ff                   cmp %rax,-0x1068(%rbp)
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef98),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006943, 0) 


# -- 0x00006943 72 14                                  jb 0x6959
 0: if cf<1> goto 1 else goto 2
 1: goto (0x00006959, 0) 
 2: goto (0x00006945, 0) 


# -- 0x00006945 48 8b 85 d8 ef ff ff                   mov -0x1028(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000694c, 0) 


# -- 0x0000694c ba 00 10 00 00                         mov $0x1000,%edx
 0: rdx<64> := 4096<64>;
 1: goto (0x00006951, 0) 


# -- 0x00006951 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x00006954, 0) 


# -- 0x00006954 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x00006957, 0) 


# -- 0x00006957 eb 07                                  jmp 0x6960
 0: goto (0x00006960, 0) 


# -- 0x00006959 48 8b 85 98 ef ff ff                   mov -0x1068(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef98),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006960, 0) 


# -- 0x00006960 48 89 85 e0 ef ff ff                   mov %rax,-0x1020(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefe0),8] := rax<64>;
 1: goto (0x00006967, 0) 


# -- 0x00006967 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000696e, 0) 


# -- 0x0000696e 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006975, 0) 


# -- 0x00006975 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006978, 0) 


# -- 0x00006978 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000697b, 0) 


# -- 0x0000697b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000697d, 0) 


# -- 0x0000697d 75 15                                  jne 0x6994
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006994, 0) 
 2: goto (0x0000697f, 0) 


# -- 0x0000697f 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006986, 0) 


# -- 0x00006986 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000698c, 0) 


# -- 0x0000698c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000698f, 0) 


# -- 0x0000698f e8 cc c6 ff ff                         call 0x3060
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006994;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003060, 0) #call with return address @ (0x00006994, 0)


# -- 0x00006994 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000699b, 0) 


# -- 0x0000699b 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000069a2, 0) 


# -- 0x000069a2 48 8b 95 b8 ef ff ff                   mov -0x1048(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000069a9, 0) 


# -- 0x000069a9 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000069ad, 0) 


# -- 0x000069ad 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000069b0, 0) 


# -- 0x000069b0 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000069b2, 0) 


# -- 0x000069b2 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x000069b5, 0) 


# -- 0x000069b5 74 62                                  je 0x6a19
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006a19, 0) 
 2: goto (0x000069b7, 0) 


# -- 0x000069b7 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000069be, 0) 


# -- 0x000069be 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000069c5, 0) 


# -- 0x000069c5 48 8b 95 b8 ef ff ff                   mov -0x1048(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000069cc, 0) 


# -- 0x000069cc 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000069d0, 0) 


# -- 0x000069d0 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000069d3, 0) 


# -- 0x000069d3 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000069d5, 0) 


# -- 0x000069d5 c1 e0 0c                               shl $0xc,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> << 12<32>);
 2: %%2<1> := (0<32> <> (0x80000000 & (%%0<32> << 11<32>)));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%1<32>);
 5: %%5<1> := (0<32> <> (0x80000000 & %%1<32>));
 6: %%6<64> := (extu %%1<32> 64);
 7: cf<1> := %%2<1>;
 8: pf<1> := -1<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%3<1>;
13: rax<64> := %%6<64>;
14: goto (0x000069d8, 0) 


# -- 0x000069d8 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000069da, 0) 


# -- 0x000069da 48 8b 85 d8 ef ff ff                   mov -0x1028(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000069e1, 0) 


# -- 0x000069e1 48 8d 0c 02                            lea (%rdx,%rax,1),%rcx
 0: %%0<64> := (rdx<64> + rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000069e5, 0) 


# -- 0x000069e5 48 8b 95 e0 ef ff ff                   mov -0x1020(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000069ec, 0) 


# -- 0x000069ec 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000069f3, 0) 


# -- 0x000069f3 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000069f9, 0) 


# -- 0x000069f9 48 8b b5 a0 ef ff ff                   mov -0x1060(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa0),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006a00, 0) 


# -- 0x00006a00 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006a02, 0) 


# -- 0x00006a02 e8 d9 c7 ff ff                         call 0x31e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006a07;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031e0, 0) #call with return address @ (0x00006a07, 0)


# -- 0x00006a07 48 39 85 e0 ef ff ff                   cmp %rax,-0x1020(%rbp)
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: %%1<64> := ! (%%0<64>);
 2: %%2<64> := (%%0<64> - rax<64>);
 3: %%3<64> := (%%1<64> & rax<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> & ! (rax<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006a0e, 0) 


# -- 0x00006a0e 0f 84 39 01 00 00                      je 0x6b4d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006b4d, 0) 
 2: goto (0x00006a14, 0) 


# -- 0x00006a14 e9 00 02 00 00                         jmp 0x6c19
 0: goto (0x00006c19, 0) 


# -- 0x00006a19 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a20, 0) 


# -- 0x00006a20 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a27, 0) 


# -- 0x00006a27 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006a2a, 0) 


# -- 0x00006a2a 83 e0 10                               and $0x10,%eax
 0: %%0<32> := (16<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{4});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006a2d, 0) 


# -- 0x00006a2d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006a2f, 0) 


# -- 0x00006a2f 75 1f                                  jne 0x6a50
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006a50, 0) 
 2: goto (0x00006a31, 0) 


# -- 0x00006a31 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a38, 0) 


# -- 0x00006a38 8b 80 f4 00 00 00                      mov 0xf4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 244<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006a3e, 0) 


# -- 0x00006a3e 8d 48 01                               lea 0x1(%rax),%ecx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 1<64>));
 1: rcx<64> := %%0<64>;
 2: goto (0x00006a41, 0) 


# -- 0x00006a41 48 8b 95 90 ef ff ff                   mov -0x1070(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006a48, 0) 


# -- 0x00006a48 89 8a f4 00 00 00                      mov %ecx,0xf4(%rdx)
 0: @[(rdx<64> + 244<64>),4] := rcx<64>{0,31};
 1: goto (0x00006a4e, 0) 


# -- 0x00006a4e eb 07                                  jmp 0x6a57
 0: goto (0x00006a57, 0) 


# -- 0x00006a50 48 8b 85 b8 ef ff ff                   mov -0x1048(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a57, 0) 


# -- 0x00006a57 48 8b 95 90 ef ff ff                   mov -0x1070(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006a5e, 0) 


# -- 0x00006a5e 48 8b 92 f8 00 00 00                   mov 0xf8(%rdx),%rdx
 0: %%0<64> := @[(rdx<64> + 248<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006a65, 0) 


# -- 0x00006a65 48 8b 8d b8 ef ff ff                   mov -0x1048(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006a6c, 0) 


# -- 0x00006a6c 48 c1 e1 02                            shl $0x2,%rcx
 0: %%0<64> := (rcx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rcx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rcx<64>{2} ^ (rcx<64>{0} ^ rcx<64>{4})) ^
       (rcx<64>{3} ^ (rcx<64>{1} ^ rcx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rcx<64> := %%0<64>;
13: goto (0x00006a70, 0) 


# -- 0x00006a70 48 01 ca                               add %rcx,%rdx
 0: %%0<64> := (rdx<64> & rcx<64>);
 1: %%1<64> := (rdx<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rdx<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rdx<64> := %%1<64>;
16: goto (0x00006a73, 0) 


# -- 0x00006a73 89 02                                  mov %eax,(%rdx)
 0: @[rdx<64>,4] := rax<64>{0,31};
 1: goto (0x00006a75, 0) 


# -- 0x00006a75 48 83 bd d8 ef ff ff 00                cmpq $0x0,-0x1028(%rbp)
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006a7d, 0) 


# -- 0x00006a7d 75 0d                                  jne 0x6a8c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006a8c, 0) 
 2: goto (0x00006a7f, 0) 


# -- 0x00006a7f 48 81 bd e0 ef ff ff 00 10 00 00       cmpq $0x1000,-0x1020(%rbp)
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: %%1<64> := (%%0<64> - 4096<64>);
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006a8a, 0) 


# -- 0x00006a8a 74 68                                  je 0x6af4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006af4, 0) 
 2: goto (0x00006a8c, 0) 


# -- 0x00006a8c 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a93, 0) 


# -- 0x00006a93 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006a9a, 0) 


# -- 0x00006a9a 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006a9d, 0) 


# -- 0x00006a9d 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006aa2, 0) 


# -- 0x00006aa2 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006aa4, 0) 


# -- 0x00006aa4 74 17                                  je 0x6abd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006abd, 0) 
 2: goto (0x00006aa6, 0) 


# -- 0x00006aa6 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006aad, 0) 


# -- 0x00006aad 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006ab4, 0) 


# -- 0x00006ab4 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00006ab7, 0) 


# -- 0x00006ab7 0f 84 55 01 00 00                      je 0x6c12
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006c12, 0) 
 2: goto (0x00006abd, 0) 


# -- 0x00006abd 48 c7 85 e8 ef ff ff 00 10 00 00       movq $0x1000,-0x1018(%rbp)
 0: @[(rbp<64> + 0xffffffffffffefe8),8] := 4096<64>;
 1: goto (0x00006ac8, 0) 


# -- 0x00006ac8 48 8b 95 e8 ef ff ff                   mov -0x1018(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe8),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006acf, 0) 


# -- 0x00006acf 48 8b 8d 90 ef ff ff                   mov -0x1070(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006ad6, 0) 


# -- 0x00006ad6 48 8d b5 f0 ef ff ff                   lea -0x1010(%rbp),%rsi
 0: %%0<64> := (rbp<64> + 0xffffffffffffeff0);
 1: rsi<64> := %%0<64>;
 2: goto (0x00006add, 0) 


# -- 0x00006add 48 8b 85 d0 ef ff ff                   mov -0x1030(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefd0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006ae4, 0) 


# -- 0x00006ae4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006ae7, 0) 


# -- 0x00006ae7 e8 71 f8 ff ff                         call 0x635d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006aec;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000635d, 0) #call with return address @ (0x00006aec, 0)


# -- 0x00006aec 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006aee, 0) 


# -- 0x00006aee 0f 85 21 01 00 00                      jne 0x6c15
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006c15, 0) 
 2: goto (0x00006af4, 0) 


# -- 0x00006af4 48 8b 95 e0 ef ff ff                   mov -0x1020(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006afb, 0) 


# -- 0x00006afb 48 8b 85 d8 ef ff ff                   mov -0x1028(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefd8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b02, 0) 


# -- 0x00006b02 48 8d 8d f0 ef ff ff                   lea -0x1010(%rbp),%rcx
 0: %%0<64> := (rbp<64> + 0xffffffffffffeff0);
 1: rcx<64> := %%0<64>;
 2: goto (0x00006b09, 0) 


# -- 0x00006b09 48 01 c1                               add %rax,%rcx
 0: %%0<64> := (rcx<64> & rax<64>);
 1: %%1<64> := (rcx<64> + rax<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rcx<64> | rax<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rcx<64>) & ! (rax<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rcx<64> := %%1<64>;
16: goto (0x00006b0c, 0) 


# -- 0x00006b0c 48 8b 85 a0 ef ff ff                   mov -0x1060(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefa0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b13, 0) 


# -- 0x00006b13 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00006b16, 0) 


# -- 0x00006b16 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006b19, 0) 


# -- 0x00006b19 e8 62 c6 ff ff                         call 0x3180
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006b1e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003180, 0) #call with return address @ (0x00006b1e, 0)


# -- 0x00006b1e 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b25, 0) 


# -- 0x00006b25 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006b2b, 0) 


# -- 0x00006b2b 48 8d 8d f0 ef ff ff                   lea -0x1010(%rbp),%rcx
 0: %%0<64> := (rbp<64> + 0xffffffffffffeff0);
 1: rcx<64> := %%0<64>;
 2: goto (0x00006b32, 0) 


# -- 0x00006b32 ba 00 10 00 00                         mov $0x1000,%edx
 0: rdx<64> := 4096<64>;
 1: goto (0x00006b37, 0) 


# -- 0x00006b37 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00006b3a, 0) 


# -- 0x00006b3a 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006b3c, 0) 


# -- 0x00006b3c e8 6f c2 ff ff                         call 0x2db0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006b41;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002db0, 0) #call with return address @ (0x00006b41, 0)


# -- 0x00006b41 48 3d 00 10 00 00                      cmp $0x1000,%rax
 0: %%0<64> := (rax<64> - 4096<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: goto (0x00006b47, 0) 


# -- 0x00006b47 0f 85 cb 00 00 00                      jne 0x6c18
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006c18, 0) 
 2: goto (0x00006b4d, 0) 


# -- 0x00006b4d 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b54, 0) 


# -- 0x00006b54 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b5b, 0) 


# -- 0x00006b5b 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006b5e, 0) 


# -- 0x00006b5e 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006b61, 0) 


# -- 0x00006b61 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006b63, 0) 


# -- 0x00006b63 75 15                                  jne 0x6b7a
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006b7a, 0) 
 2: goto (0x00006b65, 0) 


# -- 0x00006b65 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b6c, 0) 


# -- 0x00006b6c 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00006b72, 0) 


# -- 0x00006b72 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006b75, 0) 


# -- 0x00006b75 e8 e6 c6 ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006b7a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x00006b7a, 0)


# -- 0x00006b7a 48 8b 85 e0 ef ff ff                   mov -0x1020(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b81, 0) 


# -- 0x00006b81 48 29 85 98 ef ff ff                   sub %rax,-0x1068(%rbp)
 0: %%0<64> := (rbp<64> + 0xffffffffffffef98);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00006b88, 0) 


# -- 0x00006b88 48 8b 85 e0 ef ff ff                   mov -0x1020(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b8f, 0) 


# -- 0x00006b8f 48 01 85 a8 ef ff ff                   add %rax,-0x1058(%rbp)
 0: %%0<64> := (rbp<64> + 0xffffffffffffefa8);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x00006b96, 0) 


# -- 0x00006b96 48 8b 85 e0 ef ff ff                   mov -0x1020(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefe0),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006b9d, 0) 


# -- 0x00006b9d 48 01 85 a0 ef ff ff                   add %rax,-0x1060(%rbp)
 0: %%0<64> := (rbp<64> + 0xffffffffffffefa0);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x00006ba4, 0) 


# -- 0x00006ba4 48 83 85 b8 ef ff ff 01                addq $0x1,-0x1048(%rbp)
 0: %%0<64> := (rbp<64> + 0xffffffffffffefb8);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00006bac, 0) 


# -- 0x00006bac 48 8b 85 b8 ef ff ff                   mov -0x1048(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffefb8),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006bb3, 0) 


# -- 0x00006bb3 48 3b 85 c8 ef ff ff                   cmp -0x1038(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + 0xffffffffffffefc8),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006bba, 0) 


# -- 0x00006bba 0f 8e 38 fd ff ff                      jle 0x68f8
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x000068f8, 0) 
 2: goto (0x00006bc0, 0) 


# -- 0x00006bc0 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006bc7, 0) 


# -- 0x00006bc7 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006bce, 0) 


# -- 0x00006bce 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006bd1, 0) 


# -- 0x00006bd1 83 e0 40                               and $0x40,%eax
 0: %%0<32> := (64<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{6});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006bd4, 0) 


# -- 0x00006bd4 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006bd6, 0) 


# -- 0x00006bd6 74 16                                  je 0x6bee
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006bee, 0) 
 2: goto (0x00006bd8, 0) 


# -- 0x00006bd8 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006bdf, 0) 


# -- 0x00006bdf 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006be5, 0) 


# -- 0x00006be5 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006be7, 0) 


# -- 0x00006be7 e8 64 c7 ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006bec;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x00006bec, 0)


# -- 0x00006bec eb 1d                                  jmp 0x6c0b
 0: goto (0x00006c0b, 0) 


# -- 0x00006bee 83 bd 8c ef ff ff 00                   cmpl $0x0,-0x1074(%rbp)
 0: %%0<32> := @[(rbp<64> + 0xffffffffffffef8c),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006bf5, 0) 


# -- 0x00006bf5 74 14                                  je 0x6c0b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006c0b, 0) 
 2: goto (0x00006bf7, 0) 


# -- 0x00006bf7 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006bfe, 0) 


# -- 0x00006bfe 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006c04, 0) 


# -- 0x00006c04 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006c06, 0) 


# -- 0x00006c06 e8 85 c0 ff ff                         call 0x2c90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006c0b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c90, 0) #call with return address @ (0x00006c0b, 0)


# -- 0x00006c0b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006c10, 0) 


# -- 0x00006c10 eb 39                                  jmp 0x6c4b
 0: goto (0x00006c4b, 0) 


# -- 0x00006c12 90                                     nop
 0: goto (0x00006c13, 0) 


# -- 0x00006c13 eb 04                                  jmp 0x6c19
 0: goto (0x00006c19, 0) 


# -- 0x00006c15 90                                     nop
 0: goto (0x00006c16, 0) 


# -- 0x00006c16 eb 01                                  jmp 0x6c19
 0: goto (0x00006c19, 0) 


# -- 0x00006c18 90                                     nop
 0: goto (0x00006c19, 0) 


# -- 0x00006c19 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c20, 0) 


# -- 0x00006c20 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c27, 0) 


# -- 0x00006c27 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006c2a, 0) 


# -- 0x00006c2a 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006c2d, 0) 


# -- 0x00006c2d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006c2f, 0) 


# -- 0x00006c2f 75 15                                  jne 0x6c46
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006c46, 0) 
 2: goto (0x00006c31, 0) 


# -- 0x00006c31 48 8b 85 90 ef ff ff                   mov -0x1070(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + 0xffffffffffffef90),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c38, 0) 


# -- 0x00006c38 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00006c3e, 0) 


# -- 0x00006c3e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006c41, 0) 


# -- 0x00006c41 e8 1a c6 ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006c46;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x00006c46, 0)


# -- 0x00006c46 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00006c4b, 0) 


# -- 0x00006c4b 48 8b 75 f8                            mov -0x8(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006c4f, 0) 


# -- 0x00006c4f 64 48 33 34 25 28 00 00 00             xor %fs:0x28,%rsi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rsi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rsi<64>{0} ^ %%0<64>{0}) ^ (rsi<64>{4} ^ %%0<64>{4})) ^
        ((rsi<64>{2} ^ %%0<64>{2}) ^ (rsi<64>{6} ^ %%0<64>{6}))) ^
       (((rsi<64>{1} ^ %%0<64>{1}) ^ (rsi<64>{5} ^ %%0<64>{5})) ^
        ((rsi<64>{3} ^ %%0<64>{3}) ^ (rsi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rsi<64> := %%1<64>;
12: goto (0x00006c58, 0) 


# -- 0x00006c58 74 05                                  je 0x6c5f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006c5f, 0) 
 2: goto (0x00006c5a, 0) 


# -- 0x00006c5a e8 11 c2 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006c5f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00006c5f, 0)


# -- 0x00006c5f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006c60, 0) 


# -- 0x00006c60 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006c61 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006c62, 0) 


# -- 0x00006c62 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006c65, 0) 


# -- 0x00006c65 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006c69, 0) 


# -- 0x00006c69 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x00006c6d, 0) 


# -- 0x00006c6d 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x00006c71, 0) 


# -- 0x00006c71 89 55 bc                               mov %edx,-0x44(%rbp)
 0: @[(rbp<64> + -68<64>),4] := rdx<64>{0,31};
 1: goto (0x00006c74, 0) 


# -- 0x00006c74 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c78, 0) 


# -- 0x00006c78 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c7c, 0) 


# -- 0x00006c7c 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00006c80, 0) 


# -- 0x00006c80 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c84, 0) 


# -- 0x00006c84 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006c87, 0) 


# -- 0x00006c87 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00006c89, 0) 


# -- 0x00006c89 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00006c8d, 0) 


# -- 0x00006c8d 48 c7 45 f0 00 00 00 04                movq $0x4000000,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := 0x0000000004000000;
 1: goto (0x00006c95, 0) 


# -- 0x00006c95 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006c99, 0) 


# -- 0x00006c99 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00006c9c, 0) 


# -- 0x00006c9c bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00006ca1, 0) 


# -- 0x00006ca1 e8 ca c3 ff ff                         call 0x3070
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006ca6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003070, 0) #call with return address @ (0x00006ca6, 0)


# -- 0x00006ca6 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006caa, 0) 


# -- 0x00006caa eb 5a                                  jmp 0x6d06
 0: goto (0x00006d06, 0) 


# -- 0x00006cac 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006cb0, 0) 


# -- 0x00006cb0 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006cb4, 0) 


# -- 0x00006cb4 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006cb8, 0) 


# -- 0x00006cb8 48 3b 45 f0                            cmp -0x10(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -16<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x00006cbc, 0) 


# -- 0x00006cbc 76 08                                  jbe 0x6cc6
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x00006cc6, 0) 
 2: goto (0x00006cbe, 0) 


# -- 0x00006cbe 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006cc2, 0) 


# -- 0x00006cc2 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006cc6, 0) 


# -- 0x00006cc6 8b 7d bc                               mov -0x44(%rbp),%edi
 0: %%0<64> := (extu @[(rbp<64> + -68<64>),4] 64);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006cc9, 0) 


# -- 0x00006cc9 48 8b 4d c0                            mov -0x40(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006ccd, 0) 


# -- 0x00006ccd 48 8b 55 e0                            mov -0x20(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006cd1, 0) 


# -- 0x00006cd1 48 8b 75 f8                            mov -0x8(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00006cd5, 0) 


# -- 0x00006cd5 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006cd9, 0) 


# -- 0x00006cd9 41 89 f8                               mov %edi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00006cdc, 0) 


# -- 0x00006cdc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006cdf, 0) 


# -- 0x00006cdf e8 0d fb ff ff                         call 0x67f1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006ce4;
 2: rsp<64> := %%0<64>;
 3: goto (0x000067f1, 0) #call with return address @ (0x00006ce4, 0)


# -- 0x00006ce4 89 45 d4                               mov %eax,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rax<64>{0,31};
 1: goto (0x00006ce7, 0) 


# -- 0x00006ce7 83 7d d4 00                            cmpl $0x0,-0x2c(%rbp)
 0: %%0<32> := @[(rbp<64> + -44<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006ceb, 0) 


# -- 0x00006ceb 74 11                                  je 0x6cfe
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006cfe, 0) 
 2: goto (0x00006ced, 0) 


# -- 0x00006ced 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006cf1, 0) 


# -- 0x00006cf1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006cf4, 0) 


# -- 0x00006cf4 e8 57 bf ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006cf9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x00006cf9, 0)


# -- 0x00006cf9 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006cfc, 0) 


# -- 0x00006cfc eb 20                                  jmp 0x6d1e
 0: goto (0x00006d1e, 0) 


# -- 0x00006cfe 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d02, 0) 


# -- 0x00006d02 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x00006d06, 0) 


# -- 0x00006d06 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006d0b, 0) 


# -- 0x00006d0b 75 9f                                  jne 0x6cac
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00006cac, 0) 
 2: goto (0x00006d0d, 0) 


# -- 0x00006d0d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d11, 0) 


# -- 0x00006d11 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006d14, 0) 


# -- 0x00006d14 e8 37 bf ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006d19;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x00006d19, 0)


# -- 0x00006d19 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006d1e, 0) 


# -- 0x00006d1e c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006d1f, 0) 


# -- 0x00006d1f c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006d20 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006d21, 0) 


# -- 0x00006d21 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006d24, 0) 


# -- 0x00006d24 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006d28, 0) 


# -- 0x00006d28 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x00006d2c, 0) 


# -- 0x00006d2c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d30, 0) 


# -- 0x00006d30 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d37, 0) 


# -- 0x00006d37 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006d3a, 0) 


# -- 0x00006d3a 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00006d3d, 0) 


# -- 0x00006d3d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006d3f, 0) 


# -- 0x00006d3f 74 16                                  je 0x6d57
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006d57, 0) 
 2: goto (0x00006d41, 0) 


# -- 0x00006d41 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d45, 0) 


# -- 0x00006d45 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006d4b, 0) 


# -- 0x00006d4b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006d4d, 0) 


# -- 0x00006d4d e8 fe c5 ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006d52;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x00006d52, 0)


# -- 0x00006d52 e9 d2 00 00 00                         jmp 0x6e29
 0: goto (0x00006e29, 0) 


# -- 0x00006d57 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d5b, 0) 


# -- 0x00006d5b 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d62, 0) 


# -- 0x00006d62 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006d65, 0) 


# -- 0x00006d65 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006d6a, 0) 


# -- 0x00006d6a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006d6c, 0) 


# -- 0x00006d6c 74 16                                  je 0x6d84
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006d84, 0) 
 2: goto (0x00006d6e, 0) 


# -- 0x00006d6e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d72, 0) 


# -- 0x00006d72 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006d78, 0) 


# -- 0x00006d78 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006d7a, 0) 


# -- 0x00006d7a e8 d1 c5 ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006d7f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x00006d7f, 0)


# -- 0x00006d7f e9 a5 00 00 00                         jmp 0x6e29
 0: goto (0x00006e29, 0) 


# -- 0x00006d84 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d88, 0) 


# -- 0x00006d88 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d8f, 0) 


# -- 0x00006d8f 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006d92, 0) 


# -- 0x00006d92 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006d97, 0) 


# -- 0x00006d97 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006d99, 0) 


# -- 0x00006d99 74 28                                  je 0x6dc3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006dc3, 0) 
 2: goto (0x00006d9b, 0) 


# -- 0x00006d9b 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006d9f, 0) 


# -- 0x00006d9f 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006da6, 0) 


# -- 0x00006da6 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006da9, 0) 


# -- 0x00006da9 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00006dac, 0) 


# -- 0x00006dac 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006dae, 0) 


# -- 0x00006dae 74 07                                  je 0x6db7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006db7, 0) 
 2: goto (0x00006db0, 0) 


# -- 0x00006db0 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006db5, 0) 


# -- 0x00006db5 eb 72                                  jmp 0x6e29
 0: goto (0x00006e29, 0) 


# -- 0x00006db7 e8 34 c4 ff ff                         call 0x31f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006dbc;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031f0, 0) #call with return address @ (0x00006dbc, 0)


# -- 0x00006dbc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006dc1, 0) 


# -- 0x00006dc1 eb 66                                  jmp 0x6e29
 0: goto (0x00006e29, 0) 


# -- 0x00006dc3 c7 45 ec 00 00 00 00                   movl $0x0,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := 0<32>;
 1: goto (0x00006dca, 0) 


# -- 0x00006dca eb 43                                  jmp 0x6e0f
 0: goto (0x00006e0f, 0) 


# -- 0x00006dcc 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006dd0, 0) 


# -- 0x00006dd0 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006dd7, 0) 


# -- 0x00006dd7 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006dda, 0) 


# -- 0x00006dda 8b 55 ec                               mov -0x14(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006ddd, 0) 


# -- 0x00006ddd 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006de0, 0) 


# -- 0x00006de0 48 c1 e2 04                            shl $0x4,%rdx
 0: %%0<64> := (rdx<64> << 4<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 3<64>)));
 2: %%2<1> := ! (((rdx<64>{0} ^ rdx<64>{2}) ^ (rdx<64>{1} ^ rdx<64>{3})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x00006de4, 0) 


# -- 0x00006de4 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00006de7, 0) 


# -- 0x00006de7 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006deb, 0) 


# -- 0x00006deb 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006dee, 0) 


# -- 0x00006dee 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00006df2, 0) 


# -- 0x00006df2 48 89 55 f8                            mov %rdx,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdx<64>;
 1: goto (0x00006df6, 0) 


# -- 0x00006df6 8b 45 f0                               mov -0x10(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006df9, 0) 


# -- 0x00006df9 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006dfb, 0) 


# -- 0x00006dfb e8 50 c5 ff ff                         call 0x3350
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006e00;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003350, 0) #call with return address @ (0x00006e00, 0)


# -- 0x00006e00 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006e02, 0) 


# -- 0x00006e02 79 07                                  jns 0x6e0b
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00006e0b, 0) 
 2: goto (0x00006e04, 0) 


# -- 0x00006e04 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00006e09, 0) 


# -- 0x00006e09 eb 1e                                  jmp 0x6e29
 0: goto (0x00006e29, 0) 


# -- 0x00006e0b 83 45 ec 01                            addl $0x1,-0x14(%rbp)
 0: %%0<64> := (rbp<64> + -20<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00006e0f, 0) 


# -- 0x00006e0f 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006e13, 0) 


# -- 0x00006e13 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006e1a, 0) 


# -- 0x00006e1a 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006e1d, 0) 


# -- 0x00006e1d 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006e20, 0) 


# -- 0x00006e20 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00006e22, 0) 


# -- 0x00006e22 77 a8                                  ja 0x6dcc
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00006dcc, 0) 
 2: goto (0x00006e24, 0) 


# -- 0x00006e24 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006e29, 0) 


# -- 0x00006e29 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006e2a, 0) 


# -- 0x00006e2a c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006e2b 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006e2c, 0) 


# -- 0x00006e2c 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006e2f, 0) 


# -- 0x00006e2f 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006e33, 0) 


# -- 0x00006e33 89 7d dc                               mov %edi,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := rdi<64>{0,31};
 1: goto (0x00006e36, 0) 


# -- 0x00006e36 48 89 75 d0                            mov %rsi,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rsi<64>;
 1: goto (0x00006e3a, 0) 


# -- 0x00006e3a 48 89 55 c8                            mov %rdx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdx<64>;
 1: goto (0x00006e3e, 0) 


# -- 0x00006e3e 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006e47, 0) 


# -- 0x00006e47 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006e4b, 0) 


# -- 0x00006e4b 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00006e4d, 0) 


# -- 0x00006e4d e8 2e be ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006e52;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00006e52, 0)


# -- 0x00006e52 c7 00 00 00 00 00                      movl $0x0,(%rax)
 0: @[rax<64>,4] := 0<32>;
 1: goto (0x00006e58, 0) 


# -- 0x00006e58 48 8b 4d c8                            mov -0x38(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006e5c, 0) 


# -- 0x00006e5c 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006e60, 0) 


# -- 0x00006e60 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006e63, 0) 


# -- 0x00006e63 be 03 00 00 00                         mov $0x3,%esi
 0: rsi<64> := 3<64>;
 1: goto (0x00006e68, 0) 


# -- 0x00006e68 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006e6a, 0) 


# -- 0x00006e6a e8 f1 bf ff ff                         call 0x2e60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006e6f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e60, 0) #call with return address @ (0x00006e6f, 0)


# -- 0x00006e6f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006e71, 0) 


# -- 0x00006e71 74 4b                                  je 0x6ebe
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006ebe, 0) 
 2: goto (0x00006e73, 0) 


# -- 0x00006e73 e8 08 be ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006e78;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00006e78, 0)


# -- 0x00006e78 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006e7a, 0) 


# -- 0x00006e7a 83 f8 04                               cmp $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 4<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006e7d, 0) 


# -- 0x00006e7d 74 d9                                  je 0x6e58
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006e58, 0) 
 2: goto (0x00006e7f, 0) 


# -- 0x00006e7f 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006e83, 0) 


# -- 0x00006e83 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006e87, 0) 


# -- 0x00006e87 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006e8b, 0) 


# -- 0x00006e8b 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00006e8f, 0) 


# -- 0x00006e8f 48 8d 55 e0                            lea -0x20(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00006e93, 0) 


# -- 0x00006e93 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006e96, 0) 


# -- 0x00006e96 be 77 12 00 00                         mov $0x1277,%esi
 0: rsi<64> := 0x0000000000001277;
 1: goto (0x00006e9b, 0) 


# -- 0x00006e9b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006e9d, 0) 


# -- 0x00006e9d b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00006ea2, 0) 


# -- 0x00006ea2 e8 e9 c0 ff ff                         call 0x2f90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006ea7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f90, 0) #call with return address @ (0x00006ea7, 0)


# -- 0x00006ea7 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00006ea9, 0) 


# -- 0x00006ea9 74 16                                  je 0x6ec1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006ec1, 0) 
 2: goto (0x00006eab, 0) 


# -- 0x00006eab e8 d0 bd ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006eb0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00006eb0, 0)


# -- 0x00006eb0 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006eb2, 0) 


# -- 0x00006eb2 83 f8 04                               cmp $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 4<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006eb5, 0) 


# -- 0x00006eb5 74 d8                                  je 0x6e8f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006e8f, 0) 
 2: goto (0x00006eb7, 0) 


# -- 0x00006eb7 e8 c4 bd ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006ebc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00006ebc, 0)


# -- 0x00006ebc eb 04                                  jmp 0x6ec2
 0: goto (0x00006ec2, 0) 


# -- 0x00006ebe 90                                     nop
 0: goto (0x00006ebf, 0) 


# -- 0x00006ebf eb 01                                  jmp 0x6ec2
 0: goto (0x00006ec2, 0) 


# -- 0x00006ec1 90                                     nop
 0: goto (0x00006ec2, 0) 


# -- 0x00006ec2 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006ec6, 0) 


# -- 0x00006ec6 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00006ecf, 0) 


# -- 0x00006ecf 74 05                                  je 0x6ed6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006ed6, 0) 
 2: goto (0x00006ed1, 0) 


# -- 0x00006ed1 e8 9a bf ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006ed6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00006ed6, 0)


# -- 0x00006ed6 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006ed7, 0) 


# -- 0x00006ed7 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006ed8 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed9, 0) 


# -- 0x00006ed9 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006edc, 0) 


# -- 0x00006edc 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006ee0, 0) 


# -- 0x00006ee0 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x00006ee4, 0) 


# -- 0x00006ee4 89 75 d4                               mov %esi,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rsi<64>{0,31};
 1: goto (0x00006ee7, 0) 


# -- 0x00006ee7 89 55 d0                               mov %edx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rdx<64>{0,31};
 1: goto (0x00006eea, 0) 


# -- 0x00006eea 48 89 4d c8                            mov %rcx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rcx<64>;
 1: goto (0x00006eee, 0) 


# -- 0x00006eee 4c 89 45 c0                            mov %r8,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := r8<64>;
 1: goto (0x00006ef2, 0) 


# -- 0x00006ef2 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006efb, 0) 


# -- 0x00006efb 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00006eff, 0) 


# -- 0x00006eff 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00006f01, 0) 


# -- 0x00006f01 48 bf a9 65 55 04 89 e8 03 00          mov $0x3e889045565a9,%rdi
 0: rdi<64> := 0x0003e889045565a9;
 1: goto (0x00006f0b, 0) 


# -- 0x00006f0b e8 be 67 00 00                         call 0xd6ce
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f10;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6ce, 0) #call with return address @ (0x00006f10, 0)


# -- 0x00006f10 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00006f14, 0) 


# -- 0x00006f14 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006f17, 0) 


# -- 0x00006f17 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f19, 0) 


# -- 0x00006f19 e8 32 c0 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f1e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00006f1e, 0)


# -- 0x00006f1e 89 45 e8                               mov %eax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := rax<64>{0,31};
 1: goto (0x00006f21, 0) 


# -- 0x00006f21 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00006f24, 0) 


# -- 0x00006f24 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f26, 0) 


# -- 0x00006f26 e8 25 c0 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f2b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00006f2b, 0)


# -- 0x00006f2b 89 45 ec                               mov %eax,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rax<64>{0,31};
 1: goto (0x00006f2e, 0) 


# -- 0x00006f2e 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f32, 0) 


# -- 0x00006f32 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f34, 0) 


# -- 0x00006f34 e8 17 c0 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f39;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00006f39, 0)


# -- 0x00006f39 89 45 f0                               mov %eax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),4] := rax<64>{0,31};
 1: goto (0x00006f3c, 0) 


# -- 0x00006f3c 48 83 7d c8 00                         cmpq $0x0,-0x38(%rbp)
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006f41, 0) 


# -- 0x00006f41 79 1e                                  jns 0x6f61
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00006f61, 0) 
 2: goto (0x00006f43, 0) 


# -- 0x00006f43 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f47, 0) 


# -- 0x00006f47 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f4a, 0) 


# -- 0x00006f4a e8 01 bf ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f4f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x00006f4f, 0)


# -- 0x00006f4f 48 89 45 c8                            mov %rax,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rax<64>;
 1: goto (0x00006f53, 0) 


# -- 0x00006f53 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f57, 0) 


# -- 0x00006f57 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f59, 0) 


# -- 0x00006f59 e8 f2 bf ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f5e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00006f5e, 0)


# -- 0x00006f5e 89 45 f0                               mov %eax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),4] := rax<64>{0,31};
 1: goto (0x00006f61, 0) 


# -- 0x00006f61 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00006f65, 0) 


# -- 0x00006f65 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f69, 0) 


# -- 0x00006f69 ba 14 00 00 00                         mov $0x14,%edx
 0: rdx<64> := 20<64>;
 1: goto (0x00006f6e, 0) 


# -- 0x00006f6e 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00006f71, 0) 


# -- 0x00006f71 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f74, 0) 


# -- 0x00006f74 e8 18 c9 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f79;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00006f79, 0)


# -- 0x00006f79 48 83 7d c0 00                         cmpq $0x0,-0x40(%rbp)
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00006f7e, 0) 


# -- 0x00006f7e 74 17                                  je 0x6f97
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006f97, 0) 
 2: goto (0x00006f80, 0) 


# -- 0x00006f80 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00006f84, 0) 


# -- 0x00006f84 48 8b 4d c0                            mov -0x40(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00006f88, 0) 


# -- 0x00006f88 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f8c, 0) 


# -- 0x00006f8c 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00006f8f, 0) 


# -- 0x00006f8f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00006f92, 0) 


# -- 0x00006f92 e8 fa c8 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006f97;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00006f97, 0)


# -- 0x00006f97 90                                     nop
 0: goto (0x00006f98, 0) 


# -- 0x00006f98 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006f9c, 0) 


# -- 0x00006f9c 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00006fa5, 0) 


# -- 0x00006fa5 74 05                                  je 0x6fac
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00006fac, 0) 
 2: goto (0x00006fa7, 0) 


# -- 0x00006fa7 e8 c4 be ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000006fac;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00006fac, 0)


# -- 0x00006fac c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00006fad, 0) 


# -- 0x00006fad c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00006fae 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006faf, 0) 


# -- 0x00006faf 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00006fb2, 0) 


# -- 0x00006fb2 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006fb3, 0) 


# -- 0x00006fb3 48 81 ec 28 09 00 00                   sub $0x928,%rsp
 0: %%0<64> := (rsp<64> - 2344<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00006fba, 0) 


# -- 0x00006fba 89 bd dc f6 ff ff                      mov %edi,-0x924(%rbp)
 0: @[(rbp<64> + -2340<64>),4] := rdi<64>{0,31};
 1: goto (0x00006fc0, 0) 


# -- 0x00006fc0 48 89 b5 d0 f6 ff ff                   mov %rsi,-0x930(%rbp)
 0: @[(rbp<64> + -2352<64>),8] := rsi<64>;
 1: goto (0x00006fc7, 0) 


# -- 0x00006fc7 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00006fd0, 0) 


# -- 0x00006fd0 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00006fd4, 0) 


# -- 0x00006fd4 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00006fd6, 0) 


# -- 0x00006fd6 48 8d 85 50 f7 ff ff                   lea -0x8b0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2224<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00006fdd, 0) 


# -- 0x00006fdd 48 89 85 18 f7 ff ff                   mov %rax,-0x8e8(%rbp)
 0: @[(rbp<64> + -2280<64>),8] := rax<64>;
 1: goto (0x00006fe4, 0) 


# -- 0x00006fe4 c7 85 e8 f6 ff ff 80 00 00 00          movl $0x80,-0x918(%rbp)
 0: @[(rbp<64> + -2328<64>),4] := 128<32>;
 1: goto (0x00006fee, 0) 


# -- 0x00006fee 48 c7 85 00 f7 ff ff 00 00 00 00       movq $0x0,-0x900(%rbp)
 0: @[(rbp<64> + -2304<64>),8] := 0<64>;
 1: goto (0x00006ff9, 0) 


# -- 0x00006ff9 48 c7 85 08 f7 ff ff 00 00 00 00       movq $0x0,-0x8f8(%rbp)
 0: @[(rbp<64> + -2296<64>),8] := 0<64>;
 1: goto (0x00007004, 0) 


# -- 0x00007004 48 8b 8d 18 f7 ff ff                   mov -0x8e8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -2280<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000700b, 0) 


# -- 0x0000700b 48 8d 95 e8 f6 ff ff                   lea -0x918(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2328<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007012, 0) 


# -- 0x00007012 8b 85 dc f6 ff ff                      mov -0x924(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2340<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007018, 0) 


# -- 0x00007018 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000701b, 0) 


# -- 0x0000701b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000701d, 0) 


# -- 0x0000701d e8 de c3 ff ff                         call 0x3400
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007022;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003400, 0) #call with return address @ (0x00007022, 0)


# -- 0x00007022 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007024, 0) 


# -- 0x00007024 79 25                                  jns 0x704b
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000704b, 0) 
 2: goto (0x00007026, 0) 


# -- 0x00007026 48 8d 15 f5 74 00 00                   lea 0x74f5(%rip),%rdx
 0: rdx<64> := 0x000000000000e522;
 1: goto (0x0000702d, 0) 


# -- 0x0000702d be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007032, 0) 


# -- 0x00007032 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007037, 0) 


# -- 0x00007037 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000703c, 0) 


# -- 0x0000703c e8 5f c2 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007041;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007041, 0)


# -- 0x00007041 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00007046, 0) 


# -- 0x00007046 e9 0c 06 00 00                         jmp 0x7657
 0: goto (0x00007657, 0) 


# -- 0x0000704b 0f b7 85 50 f7 ff ff                   movzwl -0x8b0(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2224<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007052, 0) 


# -- 0x00007052 66 83 f8 01                            cmp $0x1,%ax
 0: %%0<16> := rax<64>{0,15};
 1: %%1<16> := (%%0<16> - 1<16>);
 2: %%2<1> := (0x8000 = (0x8000 & (! (%%0<16>) & %%1<16>)));
 3: %%3<1> :=
     !
     ((((%%1<16>{0} ^ %%1<16>{4}) ^ (%%1<16>{2} ^ %%1<16>{6})) ^
       ((%%1<16>{1} ^ %%1<16>{5}) ^ (%%1<16>{3} ^ %%1<16>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<16> = %%1<16>);
 6: %%6<1> := (0<16> <> (0x8000 & %%1<16>));
 7: %%7<1> := (0x8000 = (0x8000 & (%%0<16> & ! (%%1<16>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007056, 0) 


# -- 0x00007056 75 23                                  jne 0x707b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000707b, 0) 
 2: goto (0x00007058, 0) 


# -- 0x00007058 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000705f, 0) 


# -- 0x0000705f 66 c7 40 10 01 00                      movw $0x1,0x10(%rax)
 0: @[(rax<64> + 16<64>),2] := 1<16>;
 1: goto (0x00007065, 0) 


# -- 0x00007065 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000706c, 0) 


# -- 0x0000706c c7 00 75 6e 69 78                      movl $0x78696e75,(%rax)
 0: @[rax<64>,4] := 0x78696e75;
 1: goto (0x00007072, 0) 


# -- 0x00007072 c6 40 04 00                            movb $0x0,0x4(%rax)
 0: @[(rax<64> + 4<64>),1] := 0<8>;
 1: goto (0x00007076, 0) 


# -- 0x00007076 e9 64 01 00 00                         jmp 0x71df
 0: goto (0x000071df, 0) 


# -- 0x0000707b 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007082, 0) 


# -- 0x00007082 48 83 c0 10                            add $0x10,%rax
 0: %%0<64> := (rax<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007086, 0) 


# -- 0x00007086 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007089, 0) 


# -- 0x00007089 48 8d 95 e8 f6 ff ff                   lea -0x918(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2328<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007090, 0) 


# -- 0x00007090 8b 85 dc f6 ff ff                      mov -0x924(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2340<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007096, 0) 


# -- 0x00007096 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007099, 0) 


# -- 0x00007099 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000709b, 0) 


# -- 0x0000709b e8 60 bd ff ff                         call 0x2e00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000070a0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e00, 0) #call with return address @ (0x000070a0, 0)


# -- 0x000070a0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000070a2, 0) 


# -- 0x000070a2 79 25                                  jns 0x70c9
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x000070c9, 0) 
 2: goto (0x000070a4, 0) 


# -- 0x000070a4 48 8d 15 8e 74 00 00                   lea 0x748e(%rip),%rdx
 0: rdx<64> := 0x000000000000e539;
 1: goto (0x000070ab, 0) 


# -- 0x000070ab be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000070b0, 0) 


# -- 0x000070b0 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000070b5, 0) 


# -- 0x000070b5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000070ba, 0) 


# -- 0x000070ba e8 e1 c1 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000070bf;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000070bf, 0)


# -- 0x000070bf b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x000070c4, 0) 


# -- 0x000070c4 e9 8e 05 00 00                         jmp 0x7657
 0: goto (0x00007657, 0) 


# -- 0x000070c9 8b 85 e8 f6 ff ff                      mov -0x918(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2328<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000070cf, 0) 


# -- 0x000070cf 48 8b 95 d0 f6 ff ff                   mov -0x930(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000070d6, 0) 


# -- 0x000070d6 48 8d 7a 10                            lea 0x10(%rdx),%rdi
 0: %%0<64> := (rdx<64> + 16<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000070da, 0) 


# -- 0x000070da 48 8d 95 d0 f7 ff ff                   lea -0x830(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000070e1, 0) 


# -- 0x000070e1 48 83 ec 08                            sub $0x8,%rsp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000070e5, 0) 


# -- 0x000070e5 6a 01                                  pushq $0x1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 1<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000070e7, 0) 


# -- 0x000070e7 41 b9 00 00 00 00                      mov $0x0,%r9d
 0: r9<64> := 0<64>;
 1: goto (0x000070ed, 0) 


# -- 0x000070ed 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x000070f3, 0) 


# -- 0x000070f3 b9 01 04 00 00                         mov $0x401,%ecx
 0: rcx<64> := 1025<64>;
 1: goto (0x000070f8, 0) 


# -- 0x000070f8 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x000070fa, 0) 


# -- 0x000070fa e8 d1 be ff ff                         call 0x2fd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000070ff;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fd0, 0) #call with return address @ (0x000070ff, 0)


# -- 0x000070ff 48 83 c4 10                            add $0x10,%rsp
 0: %%0<64> := (rsp<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00007103, 0) 


# -- 0x00007103 89 85 f8 f6 ff ff                      mov %eax,-0x908(%rbp)
 0: @[(rbp<64> + -2312<64>),4] := rax<64>{0,31};
 1: goto (0x00007109, 0) 


# -- 0x00007109 83 bd f8 f6 ff ff 00                   cmpl $0x0,-0x908(%rbp)
 0: %%0<32> := @[(rbp<64> + -2312<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007110, 0) 


# -- 0x00007110 74 35                                  je 0x7147
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007147, 0) 
 2: goto (0x00007112, 0) 


# -- 0x00007112 8b 85 f8 f6 ff ff                      mov -0x908(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2312<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007118, 0) 


# -- 0x00007118 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000711a, 0) 


# -- 0x0000711a e8 e1 bd ff ff                         call 0x2f00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000711f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f00, 0) #call with return address @ (0x0000711f, 0)


# -- 0x0000711f 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007122, 0) 


# -- 0x00007122 48 8d 15 27 74 00 00                   lea 0x7427(%rip),%rdx
 0: rdx<64> := 0x000000000000e550;
 1: goto (0x00007129, 0) 


# -- 0x00007129 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000712e, 0) 


# -- 0x0000712e bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007133, 0) 


# -- 0x00007133 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007138, 0) 


# -- 0x00007138 e8 63 c1 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000713d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000713d, 0)


# -- 0x0000713d b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00007142, 0) 


# -- 0x00007142 e9 10 05 00 00                         jmp 0x7657
 0: goto (0x00007657, 0) 


# -- 0x00007147 48 8d 85 20 f7 ff ff                   lea -0x8e0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000714e, 0) 


# -- 0x0000714e ba 30 00 00 00                         mov $0x30,%edx
 0: rdx<64> := 48<64>;
 1: goto (0x00007153, 0) 


# -- 0x00007153 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00007158, 0) 


# -- 0x00007158 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000715b, 0) 


# -- 0x0000715b e8 10 be ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007160;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x00007160, 0)


# -- 0x00007160 c7 85 20 f7 ff ff 20 00 00 00          movl $0x20,-0x8e0(%rbp)
 0: @[(rbp<64> + -2272<64>),4] := 32<32>;
 1: goto (0x0000716a, 0) 


# -- 0x0000716a 48 8d 8d 00 f7 ff ff                   lea -0x900(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -2304<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007171, 0) 


# -- 0x00007171 48 8d 95 20 f7 ff ff                   lea -0x8e0(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2272<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007178, 0) 


# -- 0x00007178 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000717f, 0) 


# -- 0x0000717f be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00007184, 0) 


# -- 0x00007184 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007187, 0) 


# -- 0x00007187 e8 14 c3 ff ff                         call 0x34a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000718c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034a0, 0) #call with return address @ (0x0000718c, 0)


# -- 0x0000718c 89 85 f8 f6 ff ff                      mov %eax,-0x908(%rbp)
 0: @[(rbp<64> + -2312<64>),4] := rax<64>{0,31};
 1: goto (0x00007192, 0) 


# -- 0x00007192 83 bd f8 f6 ff ff 00                   cmpl $0x0,-0x908(%rbp)
 0: %%0<32> := @[(rbp<64> + -2312<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007199, 0) 


# -- 0x00007199 74 44                                  je 0x71df
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000071df, 0) 
 2: goto (0x0000719b, 0) 


# -- 0x0000719b 8b 85 f8 f6 ff ff                      mov -0x908(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2312<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000071a1, 0) 


# -- 0x000071a1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000071a3, 0) 


# -- 0x000071a3 e8 58 bd ff ff                         call 0x2f00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000071a8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f00, 0) #call with return address @ (0x000071a8, 0)


# -- 0x000071a8 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000071ab, 0) 


# -- 0x000071ab 48 8d 15 b5 73 00 00                   lea 0x73b5(%rip),%rdx
 0: rdx<64> := 0x000000000000e567;
 1: goto (0x000071b2, 0) 


# -- 0x000071b2 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000071b7, 0) 


# -- 0x000071b7 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000071bc, 0) 


# -- 0x000071bc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000071c1, 0) 


# -- 0x000071c1 e8 da c0 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000071c6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000071c6, 0)


# -- 0x000071c6 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000071cd, 0) 


# -- 0x000071cd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000071d0, 0) 


# -- 0x000071d0 e8 8b c3 ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000071d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x000071d5, 0)


# -- 0x000071d5 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x000071da, 0) 


# -- 0x000071da e9 78 04 00 00                         jmp 0x7657
 0: goto (0x00007657, 0) 


# -- 0x000071df 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000071e6, 0) 


# -- 0x000071e6 ba 07 00 00 00                         mov $0x7,%edx
 0: rdx<64> := 7<64>;
 1: goto (0x000071eb, 0) 


# -- 0x000071eb 48 8d 35 8c 73 00 00                   lea 0x738c(%rip),%rsi
 0: rsi<64> := 0x000000000000e57e;
 1: goto (0x000071f2, 0) 


# -- 0x000071f2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000071f5, 0) 


# -- 0x000071f5 e8 d6 ba ff ff                         call 0x2cd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000071fa;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cd0, 0) #call with return address @ (0x000071fa, 0)


# -- 0x000071fa 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000071fc, 0) 


# -- 0x000071fc 75 2f                                  jne 0x722d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000722d, 0) 
 2: goto (0x000071fe, 0) 


# -- 0x000071fe 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007205, 0) 


# -- 0x00007205 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007208, 0) 


# -- 0x00007208 e8 43 bc ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000720d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000720d, 0)


# -- 0x0000720d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007210, 0) 


# -- 0x00007210 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007217, 0) 


# -- 0x00007217 48 83 c0 07                            add $0x7,%rax
 0: %%0<64> := (rax<64> + 7<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000721b, 0) 


# -- 0x0000721b 48 8d 8d d0 f7 ff ff                   lea -0x830(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007222, 0) 


# -- 0x00007222 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007225, 0) 


# -- 0x00007225 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007228, 0) 


# -- 0x00007228 e8 03 c1 ff ff                         call 0x3330
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000722d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003330, 0) #call with return address @ (0x0000722d, 0)


# -- 0x0000722d 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007234, 0) 


# -- 0x00007234 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000723b, 0) 


# -- 0x0000723b 8b 40 24                               mov 0x24(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000723e, 0) 


# -- 0x0000723e 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007241, 0) 


# -- 0x00007241 0f 84 d1 00 00 00                      je 0x7318
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007318, 0) 
 2: goto (0x00007247, 0) 


# -- 0x00007247 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000724a, 0) 


# -- 0x0000724a 72 13                                  jb 0x725f
 0: if cf<1> goto 1 else goto 2
 1: goto (0x0000725f, 0) 
 2: goto (0x0000724c, 0) 


# -- 0x0000724c 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000724f, 0) 


# -- 0x0000724f 74 58                                  je 0x72a9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000072a9, 0) 
 2: goto (0x00007251, 0) 


# -- 0x00007251 83 f8 03                               cmp $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 3<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007254, 0) 


# -- 0x00007254 0f 84 17 01 00 00                      je 0x7371
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007371, 0) 
 2: goto (0x0000725a, 0) 


# -- 0x0000725a e9 85 03 00 00                         jmp 0x75e4
 0: goto (0x000075e4, 0) 


# -- 0x0000725f 48 8d 15 20 73 00 00                   lea 0x7320(%rip),%rdx
 0: rdx<64> := 0x000000000000e586;
 1: goto (0x00007266, 0) 


# -- 0x00007266 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000726b, 0) 


# -- 0x0000726b bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007270, 0) 


# -- 0x00007270 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007275, 0) 


# -- 0x00007275 e8 26 c0 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000727a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000727a, 0)


# -- 0x0000727a 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007281, 0) 


# -- 0x00007281 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007288, 0) 


# -- 0x00007288 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000728b, 0) 


# -- 0x0000728b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000728e, 0) 


# -- 0x0000728e e8 9d c1 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007293;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007293, 0)


# -- 0x00007293 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007296, 0) 


# -- 0x00007296 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000729d, 0) 


# -- 0x0000729d 48 89 90 90 00 00 00                   mov %rdx,0x90(%rax)
 0: @[(rax<64> + 144<64>),8] := rdx<64>;
 1: goto (0x000072a4, 0) 


# -- 0x000072a4 e9 3b 03 00 00                         jmp 0x75e4
 0: goto (0x000075e4, 0) 


# -- 0x000072a9 48 8d 15 ec 72 00 00                   lea 0x72ec(%rip),%rdx
 0: rdx<64> := 0x000000000000e59c;
 1: goto (0x000072b0, 0) 


# -- 0x000072b0 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000072b5, 0) 


# -- 0x000072b5 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000072ba, 0) 


# -- 0x000072ba b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000072bf, 0) 


# -- 0x000072bf e8 dc bf ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000072c4;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000072c4, 0)


# -- 0x000072c4 c7 85 ec f6 ff ff 00 00 00 00          movl $0x0,-0x914(%rbp)
 0: @[(rbp<64> + -2324<64>),4] := 0<32>;
 1: goto (0x000072ce, 0) 


# -- 0x000072ce eb 2b                                  jmp 0x72fb
 0: goto (0x000072fb, 0) 


# -- 0x000072d0 8b 85 ec f6 ff ff                      mov -0x914(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2324<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000072d6, 0) 


# -- 0x000072d6 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000072d8, 0) 


# -- 0x000072d8 0f b6 84 05 d0 f7 ff ff                movzbl -0x830(%rbp,%rax,1),%eax
 0: %%0<64> := (extu @[((rbp<64> + rax<64>) + -2096<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000072e0, 0) 


# -- 0x000072e0 3c 2e                                  cmp $0x2e,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<8> := (%%0<8> - 46<8>);
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000072e2, 0) 


# -- 0x000072e2 75 10                                  jne 0x72f4
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000072f4, 0) 
 2: goto (0x000072e4, 0) 


# -- 0x000072e4 8b 85 ec f6 ff ff                      mov -0x914(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2324<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000072ea, 0) 


# -- 0x000072ea 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000072ec, 0) 


# -- 0x000072ec c6 84 05 d0 f7 ff ff 2f                movb $0x2f,-0x830(%rbp,%rax,1)
 0: @[((rbp<64> + rax<64>) + -2096<64>),1] := 47<8>;
 1: goto (0x000072f4, 0) 


# -- 0x000072f4 83 85 ec f6 ff ff 01                   addl $0x1,-0x914(%rbp)
 0: %%0<64> := (rbp<64> + -2324<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000072fb, 0) 


# -- 0x000072fb 8b 85 ec f6 ff ff                      mov -0x914(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2324<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007301, 0) 


# -- 0x00007301 48 63 d8                               movslq %eax,%rbx
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rbx<64> := %%0<64>;
 2: goto (0x00007304, 0) 


# -- 0x00007304 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000730b, 0) 


# -- 0x0000730b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000730e, 0) 


# -- 0x0000730e e8 3d bb ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007313;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x00007313, 0)


# -- 0x00007313 48 39 c3                               cmp %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x00007316, 0) 


# -- 0x00007316 72 b8                                  jb 0x72d0
 0: if cf<1> goto 1 else goto 2
 1: goto (0x000072d0, 0) 
 2: goto (0x00007318, 0) 


# -- 0x00007318 48 8d 15 8e 72 00 00                   lea 0x728e(%rip),%rdx
 0: rdx<64> := 0x000000000000e5ad;
 1: goto (0x0000731f, 0) 


# -- 0x0000731f be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007324, 0) 


# -- 0x00007324 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007329, 0) 


# -- 0x00007329 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000732e, 0) 


# -- 0x0000732e e8 6d bf ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007333;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007333, 0)


# -- 0x00007333 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000733a, 0) 


# -- 0x0000733a 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007341, 0) 


# -- 0x00007341 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007344, 0) 


# -- 0x00007344 48 8d 95 d0 f7 ff ff                   lea -0x830(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000734b, 0) 


# -- 0x0000734b 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000734e, 0) 


# -- 0x0000734e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007351, 0) 


# -- 0x00007351 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007356, 0) 


# -- 0x00007356 e8 95 bd ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000735b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000735b, 0)


# -- 0x0000735b 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000735e, 0) 


# -- 0x0000735e 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007365, 0) 


# -- 0x00007365 48 89 90 90 00 00 00                   mov %rdx,0x90(%rax)
 0: @[(rax<64> + 144<64>),8] := rdx<64>;
 1: goto (0x0000736c, 0) 


# -- 0x0000736c e9 73 02 00 00                         jmp 0x75e4
 0: goto (0x000075e4, 0) 


# -- 0x00007371 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007378, 0) 


# -- 0x00007378 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000737f, 0) 


# -- 0x0000737f 0f b6 40 28                            movzbl 0x28(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 40<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007383, 0) 


# -- 0x00007383 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007386, 0) 


# -- 0x00007386 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007388, 0) 


# -- 0x00007388 48 8d 15 32 72 00 00                   lea 0x7232(%rip),%rdx
 0: rdx<64> := 0x000000000000e5c1;
 1: goto (0x0000738f, 0) 


# -- 0x0000738f be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007394, 0) 


# -- 0x00007394 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007399, 0) 


# -- 0x00007399 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000739e, 0) 


# -- 0x0000739e e8 fd be ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000073a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000073a3, 0)


# -- 0x000073a3 8b 85 e8 f6 ff ff                      mov -0x918(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2328<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000073a9, 0) 


# -- 0x000073a9 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000073ab, 0) 


# -- 0x000073ab 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000073b2, 0) 


# -- 0x000073b2 48 8d 48 10                            lea 0x10(%rax),%rcx
 0: %%0<64> := (rax<64> + 16<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000073b6, 0) 


# -- 0x000073b6 48 8d 85 50 f7 ff ff                   lea -0x8b0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2224<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000073bd, 0) 


# -- 0x000073bd 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000073c0, 0) 


# -- 0x000073c0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000073c3, 0) 


# -- 0x000073c3 e8 b8 bd ff ff                         call 0x3180
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000073c8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003180, 0) #call with return address @ (0x000073c8, 0)


# -- 0x000073c8 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000073cf, 0) 


# -- 0x000073cf 0f b7 40 10                            movzwl 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000073d3, 0) 


# -- 0x000073d3 66 83 f8 01                            cmp $0x1,%ax
 0: %%0<16> := rax<64>{0,15};
 1: %%1<16> := (%%0<16> - 1<16>);
 2: %%2<1> := (0x8000 = (0x8000 & (! (%%0<16>) & %%1<16>)));
 3: %%3<1> :=
     !
     ((((%%1<16>{0} ^ %%1<16>{4}) ^ (%%1<16>{2} ^ %%1<16>{6})) ^
       ((%%1<16>{1} ^ %%1<16>{5}) ^ (%%1<16>{3} ^ %%1<16>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<16> = %%1<16>);
 6: %%6<1> := (0<16> <> (0x8000 & %%1<16>));
 7: %%7<1> := (0x8000 = (0x8000 & (%%0<16> & ! (%%1<16>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000073d7, 0) 


# -- 0x000073d7 75 1b                                  jne 0x73f4
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000073f4, 0) 
 2: goto (0x000073d9, 0) 


# -- 0x000073d9 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000073e0, 0) 


# -- 0x000073e0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000073e3, 0) 


# -- 0x000073e3 e8 48 c0 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000073e8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x000073e8, 0)


# -- 0x000073e8 48 89 85 08 f7 ff ff                   mov %rax,-0x8f8(%rbp)
 0: @[(rbp<64> + -2296<64>),8] := rax<64>;
 1: goto (0x000073ef, 0) 


# -- 0x000073ef e9 9d 01 00 00                         jmp 0x7591
 0: goto (0x00007591, 0) 


# -- 0x000073f4 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000073fb, 0) 


# -- 0x000073fb 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000073fe, 0) 


# -- 0x000073fe 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007401, 0) 


# -- 0x00007401 74 2e                                  je 0x7431
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007431, 0) 
 2: goto (0x00007403, 0) 


# -- 0x00007403 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000740a, 0) 


# -- 0x0000740a 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000740d, 0) 


# -- 0x0000740d 83 f8 0a                               cmp $0xa,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 10<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007410, 0) 


# -- 0x00007410 74 1f                                  je 0x7431
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007431, 0) 
 2: goto (0x00007412, 0) 


# -- 0x00007412 48 8d 0d 8f 80 00 00                   lea 0x808f(%rip),%rcx
 0: rcx<64> := 0x000000000000f4a8;
 1: goto (0x00007419, 0) 


# -- 0x00007419 ba ac 06 00 00                         mov $0x6ac,%edx
 0: rdx<64> := 1708<64>;
 1: goto (0x0000741e, 0) 


# -- 0x0000741e 48 8d 35 cf 64 00 00                   lea 0x64cf(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00007425, 0) 


# -- 0x00007425 48 8d 3d ac 71 00 00                   lea 0x71ac(%rip),%rdi
 0: rdi<64> := 0x000000000000e5d8;
 1: goto (0x0000742c, 0) 


# -- 0x0000742c e8 0f bb ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007431;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x00007431, 0)


# -- 0x00007431 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007438, 0) 


# -- 0x00007438 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000743b, 0) 


# -- 0x0000743b 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000743e, 0) 


# -- 0x0000743e 75 0c                                  jne 0x744c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000744c, 0) 
 2: goto (0x00007440, 0) 


# -- 0x00007440 c7 85 f0 f6 ff ff 20 00 00 00          movl $0x20,-0x910(%rbp)
 0: @[(rbp<64> + -2320<64>),4] := 32<32>;
 1: goto (0x0000744a, 0) 


# -- 0x0000744a eb 3e                                  jmp 0x748a
 0: goto (0x0000748a, 0) 


# -- 0x0000744c 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007453, 0) 


# -- 0x00007453 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007456, 0) 


# -- 0x00007456 83 f8 0a                               cmp $0xa,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 10<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007459, 0) 


# -- 0x00007459 75 0c                                  jne 0x7467
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007467, 0) 
 2: goto (0x0000745b, 0) 


# -- 0x0000745b c7 85 f0 f6 ff ff 80 00 00 00          movl $0x80,-0x910(%rbp)
 0: @[(rbp<64> + -2320<64>),4] := 128<32>;
 1: goto (0x00007465, 0) 


# -- 0x00007465 eb 23                                  jmp 0x748a
 0: goto (0x0000748a, 0) 


# -- 0x00007467 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x0000746d, 0) 


# -- 0x0000746d 48 8d 0d 44 80 00 00                   lea 0x8044(%rip),%rcx
 0: rcx<64> := 0x000000000000f4b8;
 1: goto (0x00007474, 0) 


# -- 0x00007474 ba b2 06 00 00                         mov $0x6b2,%edx
 0: rdx<64> := 1714<64>;
 1: goto (0x00007479, 0) 


# -- 0x00007479 48 8d 35 74 64 00 00                   lea 0x6474(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00007480, 0) 


# -- 0x00007480 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007485, 0) 


# -- 0x00007485 e8 a6 ba ff ff                         call 0x2f30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000748a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f30, 0) #call with return address @ (0x0000748a, 0)


# -- 0x0000748a 48 8d 85 50 f7 ff ff                   lea -0x8b0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2224<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007491, 0) 


# -- 0x00007491 48 83 c0 02                            add $0x2,%rax
 0: %%0<64> := (rax<64> + 2<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007495, 0) 


# -- 0x00007495 48 89 85 10 f7 ff ff                   mov %rax,-0x8f0(%rbp)
 0: @[(rbp<64> + -2288<64>),8] := rax<64>;
 1: goto (0x0000749c, 0) 


# -- 0x0000749c c7 85 f4 f6 ff ff 00 00 00 00          movl $0x0,-0x90c(%rbp)
 0: @[(rbp<64> + -2316<64>),4] := 0<32>;
 1: goto (0x000074a6, 0) 


# -- 0x000074a6 eb 77                                  jmp 0x751f
 0: goto (0x0000751f, 0) 


# -- 0x000074a8 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000074af, 0) 


# -- 0x000074af 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000074b6, 0) 


# -- 0x000074b6 0f b6 40 28                            movzbl 0x28(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 40<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000074ba, 0) 


# -- 0x000074ba 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000074bd, 0) 


# -- 0x000074bd 2b 85 f4 f6 ff ff                      sub -0x90c(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -2316<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rax<64> := %%12<64>;
20: goto (0x000074c3, 0) 


# -- 0x000074c3 89 85 fc f6 ff ff                      mov %eax,-0x904(%rbp)
 0: @[(rbp<64> + -2308<64>),4] := rax<64>{0,31};
 1: goto (0x000074c9, 0) 


# -- 0x000074c9 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000074ce, 0) 


# -- 0x000074ce 83 bd fc f6 ff ff 00                   cmpl $0x0,-0x904(%rbp)
 0: %%0<32> := @[(rbp<64> + -2308<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000074d5, 0) 


# -- 0x000074d5 0f 49 85 fc f6 ff ff                   cmovns -0x904(%rbp),%eax
 0: %%0<64> :=
     (extu ! (sf<1>) ? @[(rbp<64> + -2308<64>),4] : rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000074dc, 0) 


# -- 0x000074dc 89 85 fc f6 ff ff                      mov %eax,-0x904(%rbp)
 0: @[(rbp<64> + -2308<64>),4] := rax<64>{0,31};
 1: goto (0x000074e2, 0) 


# -- 0x000074e2 8b 85 fc f6 ff ff                      mov -0x904(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2308<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000074e8, 0) 


# -- 0x000074e8 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000074ea, 0) 


# -- 0x000074ea e8 4a 50 00 00                         call 0xc539
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000074ef;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c539, 0) #call with return address @ (0x000074ef, 0)


# -- 0x000074ef 88 85 e7 f6 ff ff                      mov %al,-0x919(%rbp)
 0: @[(rbp<64> + -2329<64>),1] := rax<64>{0,7};
 1: goto (0x000074f5, 0) 


# -- 0x000074f5 48 8b 85 10 f7 ff ff                   mov -0x8f0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000074fc, 0) 


# -- 0x000074fc 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000074ff, 0) 


# -- 0x000074ff 22 85 e7 f6 ff ff                      and -0x919(%rbp),%al
 0: %%0<8> := @[(rbp<64> + -2329<64>),1];
 1: %%1<8> := (rax<64>{0,7} & %%0<8>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} & %%0<8>{0}) ^ (rax<64>{4} & %%0<8>{4})) ^
        ((rax<64>{2} & %%0<8>{2}) ^ (rax<64>{6} & %%0<8>{6}))) ^
       (((rax<64>{1} & %%0<8>{1}) ^ (rax<64>{5} & %%0<8>{5})) ^
        ((rax<64>{3} & %%0<8>{3}) ^ (rax<64>{7} & %%0<8>{7})))));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%1<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{0, 7} := %%1<8>;
12: goto (0x00007505, 0) 


# -- 0x00007505 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007507, 0) 


# -- 0x00007507 48 8b 85 10 f7 ff ff                   mov -0x8f0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000750e, 0) 


# -- 0x0000750e 88 10                                  mov %dl,(%rax)
 0: @[rax<64>,1] := rdx<64>{0,7};
 1: goto (0x00007510, 0) 


# -- 0x00007510 48 83 85 10 f7 ff ff 01                addq $0x1,-0x8f0(%rbp)
 0: %%0<64> := (rbp<64> + -2288<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00007518, 0) 


# -- 0x00007518 83 85 f4 f6 ff ff 08                   addl $0x8,-0x90c(%rbp)
 0: %%0<64> := (rbp<64> + -2316<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 8<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000751f, 0) 


# -- 0x0000751f 8b 85 f4 f6 ff ff                      mov -0x90c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -2316<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007525, 0) 


# -- 0x00007525 3b 85 f0 f6 ff ff                      cmp -0x910(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -2320<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000752b, 0) 


# -- 0x0000752b 0f 8c 77 ff ff ff                      jl 0x74a8
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x000074a8, 0) 
 2: goto (0x00007531, 0) 


# -- 0x00007531 8b b5 e8 f6 ff ff                      mov -0x918(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -2328<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00007537, 0) 


# -- 0x00007537 48 8d 95 e0 fb ff ff                   lea -0x420(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -1056<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000753e, 0) 


# -- 0x0000753e 48 8d 85 50 f7 ff ff                   lea -0x8b0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2224<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007545, 0) 


# -- 0x00007545 48 83 ec 08                            sub $0x8,%rsp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00007549, 0) 


# -- 0x00007549 6a 01                                  pushq $0x1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 1<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000754b, 0) 


# -- 0x0000754b 41 b9 00 00 00 00                      mov $0x0,%r9d
 0: r9<64> := 0<64>;
 1: goto (0x00007551, 0) 


# -- 0x00007551 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x00007557, 0) 


# -- 0x00007557 b9 01 04 00 00                         mov $0x401,%ecx
 0: rcx<64> := 1025<64>;
 1: goto (0x0000755c, 0) 


# -- 0x0000755c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000755f, 0) 


# -- 0x0000755f e8 6c ba ff ff                         call 0x2fd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007564;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fd0, 0) #call with return address @ (0x00007564, 0)


# -- 0x00007564 48 83 c4 10                            add $0x10,%rsp
 0: %%0<64> := (rsp<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00007568, 0) 


# -- 0x00007568 48 8d 95 d0 f7 ff ff                   lea -0x830(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000756f, 0) 


# -- 0x0000756f 48 8d 85 e0 fb ff ff                   lea -0x420(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1056<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007576, 0) 


# -- 0x00007576 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007579, 0) 


# -- 0x00007579 48 8d 3d 92 70 00 00                   lea 0x7092(%rip),%rdi
 0: rdi<64> := 0x000000000000e612;
 1: goto (0x00007580, 0) 


# -- 0x00007580 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007585, 0) 


# -- 0x00007585 e8 66 bb ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000758a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000758a, 0)


# -- 0x0000758a 48 89 85 08 f7 ff ff                   mov %rax,-0x8f8(%rbp)
 0: @[(rbp<64> + -2296<64>),8] := rax<64>;
 1: goto (0x00007591, 0) 


# -- 0x00007591 48 83 bd 08 f7 ff ff 00                cmpq $0x0,-0x8f8(%rbp)
 0: %%0<64> := @[(rbp<64> + -2296<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007599, 0) 


# -- 0x00007599 74 48                                  je 0x75e3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000075e3, 0) 
 2: goto (0x0000759b, 0) 


# -- 0x0000759b 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075a2, 0) 


# -- 0x000075a2 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075a9, 0) 


# -- 0x000075a9 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075ac, 0) 


# -- 0x000075ac 48 8b 95 08 f7 ff ff                   mov -0x8f8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -2296<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000075b3, 0) 


# -- 0x000075b3 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000075b6, 0) 


# -- 0x000075b6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000075b9, 0) 


# -- 0x000075b9 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000075be, 0) 


# -- 0x000075be e8 2d bb ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000075c3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x000075c3, 0)


# -- 0x000075c3 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000075c6, 0) 


# -- 0x000075c6 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075cd, 0) 


# -- 0x000075cd 48 89 90 90 00 00 00                   mov %rdx,0x90(%rax)
 0: @[(rax<64> + 144<64>),8] := rdx<64>;
 1: goto (0x000075d4, 0) 


# -- 0x000075d4 48 8b 85 08 f7 ff ff                   mov -0x8f8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075db, 0) 


# -- 0x000075db 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000075de, 0) 


# -- 0x000075de e8 1d b7 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000075e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000075e3, 0)


# -- 0x000075e3 90                                     nop
 0: goto (0x000075e4, 0) 


# -- 0x000075e4 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075eb, 0) 


# -- 0x000075eb 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000075ee, 0) 


# -- 0x000075ee 74 0f                                  je 0x75ff
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000075ff, 0) 
 2: goto (0x000075f0, 0) 


# -- 0x000075f0 48 8b 85 00 f7 ff ff                   mov -0x900(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000075f7, 0) 


# -- 0x000075f7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000075fa, 0) 


# -- 0x000075fa e8 61 bf ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000075ff;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x000075ff, 0)


# -- 0x000075ff 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007606, 0) 


# -- 0x00007606 48 8b 90 90 00 00 00                   mov 0x90(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000760d, 0) 


# -- 0x0000760d 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007614, 0) 


# -- 0x00007614 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00007617, 0) 


# -- 0x00007617 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000761a, 0) 


# -- 0x0000761a 48 8d 15 f7 6f 00 00                   lea 0x6ff7(%rip),%rdx
 0: rdx<64> := 0x000000000000e618;
 1: goto (0x00007621, 0) 


# -- 0x00007621 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007626, 0) 


# -- 0x00007626 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000762b, 0) 


# -- 0x0000762b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007630, 0) 


# -- 0x00007630 e8 6b bc ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007635;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007635, 0)


# -- 0x00007635 48 8d 85 d0 f7 ff ff                   lea -0x830(%rbp),%rax
 0: %%0<64> := (rbp<64> + -2096<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000763c, 0) 


# -- 0x0000763c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000763f, 0) 


# -- 0x0000763f e8 ec bd ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007644;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007644, 0)


# -- 0x00007644 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007647, 0) 


# -- 0x00007647 48 8b 85 d0 f6 ff ff                   mov -0x930(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -2352<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000764e, 0) 


# -- 0x0000764e 48 89 50 08                            mov %rdx,0x8(%rax)
 0: @[(rax<64> + 8<64>),8] := rdx<64>;
 1: goto (0x00007652, 0) 


# -- 0x00007652 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007657, 0) 


# -- 0x00007657 48 8b 5d e8                            mov -0x18(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000765b, 0) 


# -- 0x0000765b 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x00007664, 0) 


# -- 0x00007664 74 05                                  je 0x766b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000766b, 0) 
 2: goto (0x00007666, 0) 


# -- 0x00007666 e8 05 b8 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000766b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000766b, 0)


# -- 0x0000766b 48 8b 5d f8                            mov -0x8(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000766f, 0) 


# -- 0x0000766f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00007670, 0) 


# -- 0x00007670 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00007671 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007672, 0) 


# -- 0x00007672 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00007675, 0) 


# -- 0x00007675 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00007679, 0) 


# -- 0x00007679 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x0000767d, 0) 


# -- 0x0000767d 89 f0                                  mov %esi,%eax
 0: %%0<64> := (0x00000000ffffffff & rsi<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000767f, 0) 


# -- 0x0000767f 89 55 d0                               mov %edx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rdx<64>{0,31};
 1: goto (0x00007682, 0) 


# -- 0x00007682 88 45 d4                               mov %al,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),1] := rax<64>{0,7};
 1: goto (0x00007685, 0) 


# -- 0x00007685 c7 45 e4 00 00 00 00                   movl $0x0,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := 0<32>;
 1: goto (0x0000768c, 0) 


# -- 0x0000768c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007690, 0) 


# -- 0x00007690 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007693, 0) 


# -- 0x00007693 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00007697, 0) 


# -- 0x00007697 89 45 ec                               mov %eax,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rax<64>{0,31};
 1: goto (0x0000769a, 0) 


# -- 0x0000769a bf 00 10 00 00                         mov $0x1000,%edi
 0: rdi<64> := 4096<64>;
 1: goto (0x0000769f, 0) 


# -- 0x0000769f e8 7c bb ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000076a4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x000076a4, 0)


# -- 0x000076a4 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x000076a8, 0) 


# -- 0x000076a8 c7 45 e8 00 00 00 00                   movl $0x0,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := 0<32>;
 1: goto (0x000076af, 0) 


# -- 0x000076af e9 5c 01 00 00                         jmp 0x7810
 0: goto (0x00007810, 0) 


# -- 0x000076b4 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000076b7, 0) 


# -- 0x000076b7 c1 e0 0c                               shl $0xc,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> << 12<32>);
 2: %%2<1> := (0<32> <> (0x80000000 & (%%0<32> << 11<32>)));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%1<32>);
 5: %%5<1> := (0<32> <> (0x80000000 & %%1<32>));
 6: %%6<64> := (extu %%1<32> 64);
 7: cf<1> := %%2<1>;
 8: pf<1> := -1<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%3<1>;
13: rax<64> := %%6<64>;
14: goto (0x000076ba, 0) 


# -- 0x000076ba 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000076bc, 0) 


# -- 0x000076bc 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000076c0, 0) 


# -- 0x000076c0 80 7d d4 00                            cmpb $0x0,-0x2c(%rbp)
 0: %%0<8> := @[(rbp<64> + -44<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000076c4, 0) 


# -- 0x000076c4 74 12                                  je 0x76d8
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000076d8, 0) 
 2: goto (0x000076c6, 0) 


# -- 0x000076c6 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000076ca, 0) 


# -- 0x000076ca 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000076d0, 0) 


# -- 0x000076d0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000076d3, 0) 


# -- 0x000076d3 e8 68 b9 ff ff                         call 0x3040
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000076d8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003040, 0) #call with return address @ (0x000076d8, 0)


# -- 0x000076d8 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000076dc, 0) 


# -- 0x000076dc 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000076e3, 0) 


# -- 0x000076e3 8b 55 e8                               mov -0x18(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000076e6, 0) 


# -- 0x000076e6 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000076e9, 0) 


# -- 0x000076e9 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000076ed, 0) 


# -- 0x000076ed 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000076f0, 0) 


# -- 0x000076f0 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000076f2, 0) 


# -- 0x000076f2 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x000076f5, 0) 


# -- 0x000076f5 0f 84 f9 00 00 00                      je 0x77f4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000077f4, 0) 
 2: goto (0x000076fb, 0) 


# -- 0x000076fb 83 45 e4 01                            addl $0x1,-0x1c(%rbp)
 0: %%0<64> := (rbp<64> + -28<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000076ff, 0) 


# -- 0x000076ff 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007703, 0) 


# -- 0x00007703 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000770a, 0) 


# -- 0x0000770a 8b 55 e8                               mov -0x18(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000770d, 0) 


# -- 0x0000770d 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007710, 0) 


# -- 0x00007710 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x00007714, 0) 


# -- 0x00007714 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00007717, 0) 


# -- 0x00007717 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007719, 0) 


# -- 0x00007719 c1 e0 0c                               shl $0xc,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> << 12<32>);
 2: %%2<1> := (0<32> <> (0x80000000 & (%%0<32> << 11<32>)));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%1<32>);
 5: %%5<1> := (0<32> <> (0x80000000 & %%1<32>));
 6: %%6<64> := (extu %%1<32> 64);
 7: cf<1> := %%2<1>;
 8: pf<1> := -1<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%3<1>;
13: rax<64> := %%6<64>;
14: goto (0x0000771c, 0) 


# -- 0x0000771c 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000771e, 0) 


# -- 0x0000771e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007722, 0) 


# -- 0x00007722 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007728, 0) 


# -- 0x00007728 48 8b 75 f0                            mov -0x10(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000772c, 0) 


# -- 0x0000772c 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000772f, 0) 


# -- 0x0000772f ba 00 10 00 00                         mov $0x1000,%edx
 0: rdx<64> := 4096<64>;
 1: goto (0x00007734, 0) 


# -- 0x00007734 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00007736, 0) 


# -- 0x00007736 e8 25 bc ff ff                         call 0x3360
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000773b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003360, 0) #call with return address @ (0x0000773b, 0)


# -- 0x0000773b 48 3d 00 10 00 00                      cmp $0x1000,%rax
 0: %%0<64> := (rax<64> - 4096<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: goto (0x00007741, 0) 


# -- 0x00007741 74 3c                                  je 0x777f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000777f, 0) 
 2: goto (0x00007743, 0) 


# -- 0x00007743 48 8d 15 f6 6e 00 00                   lea 0x6ef6(%rip),%rdx
 0: rdx<64> := 0x000000000000e640;
 1: goto (0x0000774a, 0) 


# -- 0x0000774a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000774f, 0) 


# -- 0x0000774f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007754, 0) 


# -- 0x00007754 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007759, 0) 


# -- 0x00007759 e8 42 bb ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000775e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000775e, 0)


# -- 0x0000775e 80 7d d4 00                            cmpb $0x0,-0x2c(%rbp)
 0: %%0<8> := @[(rbp<64> + -44<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007762, 0) 


# -- 0x00007762 0f 84 b6 00 00 00                      je 0x781e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000781e, 0) 
 2: goto (0x00007768, 0) 


# -- 0x00007768 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000776c, 0) 


# -- 0x0000776c 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007772, 0) 


# -- 0x00007772 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007775, 0) 


# -- 0x00007775 e8 e6 ba ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000777a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x0000777a, 0)


# -- 0x0000777a e9 9f 00 00 00                         jmp 0x781e
 0: goto (0x0000781e, 0) 


# -- 0x0000777f 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007783, 0) 


# -- 0x00007783 48 8b 75 f0                            mov -0x10(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x00007787, 0) 


# -- 0x00007787 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000778a, 0) 


# -- 0x0000778a 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000778d, 0) 


# -- 0x0000778d ba 00 10 00 00                         mov $0x1000,%edx
 0: rdx<64> := 4096<64>;
 1: goto (0x00007792, 0) 


# -- 0x00007792 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00007794, 0) 


# -- 0x00007794 e8 47 ba ff ff                         call 0x31e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007799;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031e0, 0) #call with return address @ (0x00007799, 0)


# -- 0x00007799 48 3d 00 10 00 00                      cmp $0x1000,%rax
 0: %%0<64> := (rax<64> - 4096<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: goto (0x0000779f, 0) 


# -- 0x0000779f 74 35                                  je 0x77d6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000077d6, 0) 
 2: goto (0x000077a1, 0) 


# -- 0x000077a1 48 8d 15 c8 6e 00 00                   lea 0x6ec8(%rip),%rdx
 0: rdx<64> := 0x000000000000e670;
 1: goto (0x000077a8, 0) 


# -- 0x000077a8 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000077ad, 0) 


# -- 0x000077ad bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000077b2, 0) 


# -- 0x000077b2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000077b7, 0) 


# -- 0x000077b7 e8 e4 ba ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000077bc;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000077bc, 0)


# -- 0x000077bc 80 7d d4 00                            cmpb $0x0,-0x2c(%rbp)
 0: %%0<8> := @[(rbp<64> + -44<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000077c0, 0) 


# -- 0x000077c0 74 5f                                  je 0x7821
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007821, 0) 
 2: goto (0x000077c2, 0) 


# -- 0x000077c2 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000077c6, 0) 


# -- 0x000077c6 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000077cc, 0) 


# -- 0x000077cc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000077cf, 0) 


# -- 0x000077cf e8 8c ba ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000077d4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x000077d4, 0)


# -- 0x000077d4 eb 4b                                  jmp 0x7821
 0: goto (0x00007821, 0) 


# -- 0x000077d6 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000077da, 0) 


# -- 0x000077da 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000077e1, 0) 


# -- 0x000077e1 8b 55 e8                               mov -0x18(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000077e4, 0) 


# -- 0x000077e4 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000077e7, 0) 


# -- 0x000077e7 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000077eb, 0) 


# -- 0x000077eb 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000077ee, 0) 


# -- 0x000077ee c7 00 ff ff ff ff                      movl $0xffffffff,(%rax)
 0: @[rax<64>,4] := -1<32>;
 1: goto (0x000077f4, 0) 


# -- 0x000077f4 80 7d d4 00                            cmpb $0x0,-0x2c(%rbp)
 0: %%0<8> := @[(rbp<64> + -44<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000077f8, 0) 


# -- 0x000077f8 74 12                                  je 0x780c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000780c, 0) 
 2: goto (0x000077fa, 0) 


# -- 0x000077fa 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000077fe, 0) 


# -- 0x000077fe 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007804, 0) 


# -- 0x00007804 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007807, 0) 


# -- 0x00007807 e8 54 ba ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000780c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x0000780c, 0)


# -- 0x0000780c 83 45 e8 01                            addl $0x1,-0x18(%rbp)
 0: %%0<64> := (rbp<64> + -24<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00007810, 0) 


# -- 0x00007810 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007813, 0) 


# -- 0x00007813 3b 45 ec                               cmp -0x14(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -20<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00007816, 0) 


# -- 0x00007816 0f 8c 98 fe ff ff                      jl 0x76b4
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x000076b4, 0) 
 2: goto (0x0000781c, 0) 


# -- 0x0000781c eb 04                                  jmp 0x7822
 0: goto (0x00007822, 0) 


# -- 0x0000781e 90                                     nop
 0: goto (0x0000781f, 0) 


# -- 0x0000781f eb 01                                  jmp 0x7822
 0: goto (0x00007822, 0) 


# -- 0x00007821 90                                     nop
 0: goto (0x00007822, 0) 


# -- 0x00007822 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007826, 0) 


# -- 0x00007826 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007829, 0) 


# -- 0x00007829 e8 22 b4 ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000782e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x0000782e, 0)


# -- 0x0000782e 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007831, 0) 


# -- 0x00007831 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00007832, 0) 


# -- 0x00007832 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00007833 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007834, 0) 


# -- 0x00007834 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00007837, 0) 


# -- 0x00007837 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000783b, 0) 


# -- 0x0000783b 48 89 7d b8                            mov %rdi,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdi<64>;
 1: goto (0x0000783f, 0) 


# -- 0x0000783f 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007848, 0) 


# -- 0x00007848 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000784c, 0) 


# -- 0x0000784c 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000784e, 0) 


# -- 0x0000784e 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007852, 0) 


# -- 0x00007852 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x00007856, 0) 


# -- 0x00007856 c7 45 c8 02 00 00 00                   movl $0x2,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),4] := 2<32>;
 1: goto (0x0000785d, 0) 


# -- 0x0000785d c7 45 e0 ff ff ff ff                   movl $0xffffffff,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := -1<32>;
 1: goto (0x00007864, 0) 


# -- 0x00007864 48 c7 45 e8 00 00 00 00                movq $0x0,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := 0<64>;
 1: goto (0x0000786c, 0) 


# -- 0x0000786c eb 5b                                  jmp 0x78c9
 0: goto (0x000078c9, 0) 


# -- 0x0000786e 48 8d 3d 8b 99 20 00                   lea 0x20998b(%rip),%rdi
 0: rdi<64> := 0x0000000000211200;
 1: goto (0x00007875, 0) 


# -- 0x00007875 e8 86 b8 ff ff                         call 0x3100
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000787a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003100, 0) #call with return address @ (0x0000787a, 0)


# -- 0x0000787a 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000787e, 0) 


# -- 0x0000787e 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007885, 0) 


# -- 0x00007885 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007888, 0) 


# -- 0x00007888 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000788b, 0) 


# -- 0x0000788b 48 8d 15 08 6e 00 00                   lea 0x6e08(%rip),%rdx
 0: rdx<64> := 0x000000000000e69a;
 1: goto (0x00007892, 0) 


# -- 0x00007892 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007897, 0) 


# -- 0x00007897 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000789c, 0) 


# -- 0x0000789c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000078a1, 0) 


# -- 0x000078a1 e8 fa b9 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000078a6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000078a6, 0)


# -- 0x000078a6 8b 55 c8                               mov -0x38(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -56<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000078a9, 0) 


# -- 0x000078a9 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078ad, 0) 


# -- 0x000078ad 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078b4, 0) 


# -- 0x000078b4 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078b7, 0) 


# -- 0x000078b7 89 d6                                  mov %edx,%esi
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x000078b9, 0) 


# -- 0x000078b9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000078bc, 0) 


# -- 0x000078bc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000078c1, 0) 


# -- 0x000078c1 e8 4a ba ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000078c6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x000078c6, 0)


# -- 0x000078c6 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x000078c9, 0) 


# -- 0x000078c9 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000078cc, 0) 


# -- 0x000078cc 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000078ce, 0) 


# -- 0x000078ce 7e 9e                                  jle 0x786e
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000786e, 0) 
 2: goto (0x000078d0, 0) 


# -- 0x000078d0 8b 55 e0                               mov -0x20(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000078d3, 0) 


# -- 0x000078d3 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078d7, 0) 


# -- 0x000078d7 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078de, 0) 


# -- 0x000078de 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000078e1, 0) 


# -- 0x000078e1 41 89 d0                               mov %edx,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x000078e4, 0) 


# -- 0x000078e4 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000078e7, 0) 


# -- 0x000078e7 48 8d 15 c1 6d 00 00                   lea 0x6dc1(%rip),%rdx
 0: rdx<64> := 0x000000000000e6af;
 1: goto (0x000078ee, 0) 


# -- 0x000078ee be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000078f3, 0) 


# -- 0x000078f3 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000078f8, 0) 


# -- 0x000078f8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000078fd, 0) 


# -- 0x000078fd e8 9e b9 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007902;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007902, 0)


# -- 0x00007902 8b 55 e0                               mov -0x20(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007905, 0) 


# -- 0x00007905 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007909, 0) 


# -- 0x00007909 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000790e, 0) 


# -- 0x0000790e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007911, 0) 


# -- 0x00007911 e8 5b fd ff ff                         call 0x7671
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007916;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007671, 0) #call with return address @ (0x00007916, 0)


# -- 0x00007916 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x00007919, 0) 


# -- 0x00007919 83 7d cc 00                            cmpl $0x0,-0x34(%rbp)
 0: %%0<32> := @[(rbp<64> + -52<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000791d, 0) 


# -- 0x0000791d 7f e3                                  jg 0x7902
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00007902, 0) 
 2: goto (0x0000791f, 0) 


# -- 0x0000791f 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007923, 0) 


# -- 0x00007923 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007929, 0) 


# -- 0x00007929 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000792c, 0) 


# -- 0x0000792c e8 0f b7 ff ff                         call 0x3040
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007931;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003040, 0) #call with return address @ (0x00007931, 0)


# -- 0x00007931 8b 55 e0                               mov -0x20(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007934, 0) 


# -- 0x00007934 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007938, 0) 


# -- 0x00007938 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000793d, 0) 


# -- 0x0000793d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007940, 0) 


# -- 0x00007940 e8 2c fd ff ff                         call 0x7671
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007945;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007671, 0) #call with return address @ (0x00007945, 0)


# -- 0x00007945 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x00007948, 0) 


# -- 0x00007948 83 7d cc 00                            cmpl $0x0,-0x34(%rbp)
 0: %%0<32> := @[(rbp<64> + -52<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000794c, 0) 


# -- 0x0000794c 7f e3                                  jg 0x7931
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00007931, 0) 
 2: goto (0x0000794e, 0) 


# -- 0x0000794e ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00007953, 0) 


# -- 0x00007953 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00007958, 0) 


# -- 0x00007958 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000795d, 0) 


# -- 0x0000795d e8 fe b5 ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007962;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x00007962, 0)


# -- 0x00007962 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00007966, 0) 


# -- 0x00007966 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000796a, 0) 


# -- 0x0000796a 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000796e, 0) 


# -- 0x0000796e ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x00007973, 0) 


# -- 0x00007973 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007976, 0) 


# -- 0x00007976 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007979, 0) 


# -- 0x00007979 e8 32 b8 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000797e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000797e, 0)


# -- 0x0000797e 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007982, 0) 


# -- 0x00007982 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007986, 0) 


# -- 0x00007986 48 89 90 98 00 00 00                   mov %rdx,0x98(%rax)
 0: @[(rax<64> + 152<64>),8] := rdx<64>;
 1: goto (0x0000798d, 0) 


# -- 0x0000798d 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007991, 0) 


# -- 0x00007991 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007997, 0) 


# -- 0x00007997 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000799a, 0) 


# -- 0x0000799a e8 c1 b8 ff ff                         call 0x3260
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000799f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003260, 0) #call with return address @ (0x0000799f, 0)


# -- 0x0000799f 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000079a3, 0) 


# -- 0x000079a3 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000079aa, 0) 


# -- 0x000079aa 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000079ad, 0) 


# -- 0x000079ad 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000079b0, 0) 


# -- 0x000079b0 48 8d 15 11 6d 00 00                   lea 0x6d11(%rip),%rdx
 0: rdx<64> := 0x000000000000e6c8;
 1: goto (0x000079b7, 0) 


# -- 0x000079b7 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000079bc, 0) 


# -- 0x000079bc bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000079c1, 0) 


# -- 0x000079c1 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000079c6, 0) 


# -- 0x000079c6 e8 d5 b8 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000079cb;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000079cb, 0)


# -- 0x000079cb b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000079d0, 0) 


# -- 0x000079d0 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000079d4, 0) 


# -- 0x000079d4 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x000079dd, 0) 


# -- 0x000079dd 74 05                                  je 0x79e4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000079e4, 0) 
 2: goto (0x000079df, 0) 


# -- 0x000079df e8 8c b4 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000079e4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x000079e4, 0)


# -- 0x000079e4 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000079e5, 0) 


# -- 0x000079e5 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000079e6 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000079e7, 0) 


# -- 0x000079e7 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000079ea, 0) 


# -- 0x000079ea 48 83 ec 70                            sub $0x70,%rsp
 0: %%0<64> := (rsp<64> - 112<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000079ee, 0) 


# -- 0x000079ee 48 89 7d 98                            mov %rdi,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := rdi<64>;
 1: goto (0x000079f2, 0) 


# -- 0x000079f2 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000079fb, 0) 


# -- 0x000079fb 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000079ff, 0) 


# -- 0x000079ff 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00007a01, 0) 


# -- 0x00007a01 c7 45 a8 00 00 00 00                   movl $0x0,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),4] := 0<32>;
 1: goto (0x00007a08, 0) 


# -- 0x00007a08 48 c7 45 c0 00 00 00 00                movq $0x0,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := 0<64>;
 1: goto (0x00007a10, 0) 


# -- 0x00007a10 48 c7 45 c8 00 00 00 00                movq $0x0,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := 0<64>;
 1: goto (0x00007a18, 0) 


# -- 0x00007a18 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a1c, 0) 


# -- 0x00007a1c 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a23, 0) 


# -- 0x00007a23 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007a26, 0) 


# -- 0x00007a26 83 e0 02                               and $0x2,%eax
 0: %%0<32> := (2<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{1});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00007a29, 0) 


# -- 0x00007a29 89 45 b0                               mov %eax,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),4] := rax<64>{0,31};
 1: goto (0x00007a2c, 0) 


# -- 0x00007a2c 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a30, 0) 


# -- 0x00007a30 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a37, 0) 


# -- 0x00007a37 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007a3a, 0) 


# -- 0x00007a3a 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00007a3f, 0) 


# -- 0x00007a3f 89 45 b4                               mov %eax,-0x4c(%rbp)
 0: @[(rbp<64> + -76<64>),4] := rax<64>{0,31};
 1: goto (0x00007a42, 0) 


# -- 0x00007a42 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a46, 0) 


# -- 0x00007a46 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a4d, 0) 


# -- 0x00007a4d 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007a50, 0) 


# -- 0x00007a50 25 00 04 00 00                         and $0x400,%eax
 0: %%0<32> := (1024<32> & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00007a55, 0) 


# -- 0x00007a55 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007a57, 0) 


# -- 0x00007a57 74 0d                                  je 0x7a66
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007a66, 0) 
 2: goto (0x00007a59, 0) 


# -- 0x00007a59 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007a5d, 0) 


# -- 0x00007a5d 75 07                                  jne 0x7a66
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007a66, 0) 
 2: goto (0x00007a5f, 0) 


# -- 0x00007a5f b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00007a64, 0) 


# -- 0x00007a64 eb 05                                  jmp 0x7a6b
 0: goto (0x00007a6b, 0) 


# -- 0x00007a66 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007a6b, 0) 


# -- 0x00007a6b 89 45 b8                               mov %eax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),4] := rax<64>{0,31};
 1: goto (0x00007a6e, 0) 


# -- 0x00007a6e 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a72, 0) 


# -- 0x00007a72 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a79, 0) 


# -- 0x00007a79 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007a7d, 0) 


# -- 0x00007a7d 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00007a80, 0) 


# -- 0x00007a80 74 0d                                  je 0x7a8f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007a8f, 0) 
 2: goto (0x00007a82, 0) 


# -- 0x00007a82 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007a86, 0) 


# -- 0x00007a86 75 07                                  jne 0x7a8f
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007a8f, 0) 
 2: goto (0x00007a88, 0) 


# -- 0x00007a88 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00007a8d, 0) 


# -- 0x00007a8d eb 05                                  jmp 0x7a94
 0: goto (0x00007a94, 0) 


# -- 0x00007a8f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007a94, 0) 


# -- 0x00007a94 89 45 ac                               mov %eax,-0x54(%rbp)
 0: @[(rbp<64> + -84<64>),4] := rax<64>{0,31};
 1: goto (0x00007a97, 0) 


# -- 0x00007a97 83 7d b4 00                            cmpl $0x0,-0x4c(%rbp)
 0: %%0<32> := @[(rbp<64> + -76<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007a9b, 0) 


# -- 0x00007a9b 75 17                                  jne 0x7ab4
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007ab4, 0) 
 2: goto (0x00007a9d, 0) 


# -- 0x00007a9d 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007aa1, 0) 


# -- 0x00007aa1 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007aa8, 0) 


# -- 0x00007aa8 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007aab, 0) 


# -- 0x00007aab 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00007ab0, 0) 


# -- 0x00007ab0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007ab2, 0) 


# -- 0x00007ab2 74 71                                  je 0x7b25
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007b25, 0) 
 2: goto (0x00007ab4, 0) 


# -- 0x00007ab4 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ab8, 0) 


# -- 0x00007ab8 48 c7 80 98 00 00 00 00 00 00 00       movq $0x0,0x98(%rax)
 0: @[(rax<64> + 152<64>),8] := 0<64>;
 1: goto (0x00007ac3, 0) 


# -- 0x00007ac3 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ac7, 0) 


# -- 0x00007ac7 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ace, 0) 


# -- 0x00007ace 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007ad2, 0) 


# -- 0x00007ad2 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ad6, 0) 


# -- 0x00007ad6 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00007ad9, 0) 


# -- 0x00007ad9 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007add, 0) 


# -- 0x00007add 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ae4, 0) 


# -- 0x00007ae4 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007ae7, 0) 


# -- 0x00007ae7 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00007aec, 0) 


# -- 0x00007aec 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007aee, 0) 


# -- 0x00007aee 0f 84 71 03 00 00                      je 0x7e65
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007e65, 0) 
 2: goto (0x00007af4, 0) 


# -- 0x00007af4 48 8b 55 98                            mov -0x68(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007af8, 0) 


# -- 0x00007af8 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00007afc, 0) 


# -- 0x00007afc 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007aff, 0) 


# -- 0x00007aff 48 8d 15 2d fd ff ff                   lea -0x2d3(%rip),%rdx
 0: rdx<64> := 0x0000000000007833;
 1: goto (0x00007b06, 0) 


# -- 0x00007b06 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00007b0b, 0) 


# -- 0x00007b0b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007b0e, 0) 


# -- 0x00007b0e e8 4d b1 ff ff                         call 0x2c60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007b13;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c60, 0) #call with return address @ (0x00007b13, 0)


# -- 0x00007b13 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007b15, 0) 


# -- 0x00007b15 0f 84 4a 03 00 00                      je 0x7e65
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007e65, 0) 
 2: goto (0x00007b1b, 0) 


# -- 0x00007b1b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007b20, 0) 


# -- 0x00007b20 e9 c6 03 00 00                         jmp 0x7eeb
 0: goto (0x00007eeb, 0) 


# -- 0x00007b25 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00007b2a, 0) 


# -- 0x00007b2a be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00007b2f, 0) 


# -- 0x00007b2f bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00007b34, 0) 


# -- 0x00007b34 e8 27 b4 ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007b39;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x00007b39, 0)


# -- 0x00007b39 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007b3c, 0) 


# -- 0x00007b3c 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007b40, 0) 


# -- 0x00007b40 48 89 90 98 00 00 00                   mov %rdx,0x98(%rax)
 0: @[(rax<64> + 152<64>),8] := rdx<64>;
 1: goto (0x00007b47, 0) 


# -- 0x00007b47 c7 45 a8 00 00 00 00                   movl $0x0,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),4] := 0<32>;
 1: goto (0x00007b4e, 0) 


# -- 0x00007b4e 83 7d a8 00                            cmpl $0x0,-0x58(%rbp)
 0: %%0<32> := @[(rbp<64> + -88<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007b52, 0) 


# -- 0x00007b52 74 07                                  je 0x7b5b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007b5b, 0) 
 2: goto (0x00007b54, 0) 


# -- 0x00007b54 c7 45 ac 00 00 00 00                   movl $0x0,-0x54(%rbp)
 0: @[(rbp<64> + -84<64>),4] := 0<32>;
 1: goto (0x00007b5b, 0) 


# -- 0x00007b5b 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007b5f, 0) 


# -- 0x00007b5f 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007b66, 0) 


# -- 0x00007b66 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007b69, 0) 


# -- 0x00007b69 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00007b6c, 0) 


# -- 0x00007b6c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007b6e, 0) 


# -- 0x00007b6e 75 14                                  jne 0x7b84
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007b84, 0) 
 2: goto (0x00007b70, 0) 


# -- 0x00007b70 83 7d ac 00                            cmpl $0x0,-0x54(%rbp)
 0: %%0<32> := @[(rbp<64> + -84<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007b74, 0) 


# -- 0x00007b74 74 07                                  je 0x7b7d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007b7d, 0) 
 2: goto (0x00007b76, 0) 


# -- 0x00007b76 b8 42 00 00 00                         mov $0x42,%eax
 0: rax<64> := 66<64>;
 1: goto (0x00007b7b, 0) 


# -- 0x00007b7b eb 0c                                  jmp 0x7b89
 0: goto (0x00007b89, 0) 


# -- 0x00007b7d b8 02 00 00 00                         mov $0x2,%eax
 0: rax<64> := 2<64>;
 1: goto (0x00007b82, 0) 


# -- 0x00007b82 eb 05                                  jmp 0x7b89
 0: goto (0x00007b89, 0) 


# -- 0x00007b84 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007b89, 0) 


# -- 0x00007b89 89 45 bc                               mov %eax,-0x44(%rbp)
 0: @[(rbp<64> + -68<64>),4] := rax<64>{0,31};
 1: goto (0x00007b8c, 0) 


# -- 0x00007b8c 83 7d b8 00                            cmpl $0x0,-0x48(%rbp)
 0: %%0<32> := @[(rbp<64> + -72<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007b90, 0) 


# -- 0x00007b90 74 3a                                  je 0x7bcc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007bcc, 0) 
 2: goto (0x00007b92, 0) 


# -- 0x00007b92 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007b96, 0) 


# -- 0x00007b96 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007b9d, 0) 


# -- 0x00007b9d 8b 55 a8                               mov -0x58(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -88<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007ba0, 0) 


# -- 0x00007ba0 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007ba3, 0) 


# -- 0x00007ba3 48 8d 3d 54 6b 00 00                   lea 0x6b54(%rip),%rdi
 0: rdi<64> := 0x000000000000e6fe;
 1: goto (0x00007baa, 0) 


# -- 0x00007baa b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007baf, 0) 


# -- 0x00007baf e8 3c b5 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007bb4;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x00007bb4, 0)


# -- 0x00007bb4 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x00007bb8, 0) 


# -- 0x00007bb8 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007bbc, 0) 


# -- 0x00007bbc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007bbf, 0) 


# -- 0x00007bbf e8 5c b4 ff ff                         call 0x3020
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007bc4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003020, 0) #call with return address @ (0x00007bc4, 0)


# -- 0x00007bc4 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x00007bc7, 0) 


# -- 0x00007bc7 e9 e5 00 00 00                         jmp 0x7cb1
 0: goto (0x00007cb1, 0) 


# -- 0x00007bcc 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007bd0, 0) 


# -- 0x00007bd0 74 28                                  je 0x7bfa
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007bfa, 0) 
 2: goto (0x00007bd2, 0) 


# -- 0x00007bd2 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007bd6, 0) 


# -- 0x00007bd6 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007bdd, 0) 


# -- 0x00007bdd 8b 55 a8                               mov -0x58(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -88<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007be0, 0) 


# -- 0x00007be0 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007be3, 0) 


# -- 0x00007be3 48 8d 3d 21 6b 00 00                   lea 0x6b21(%rip),%rdi
 0: rdi<64> := 0x000000000000e70b;
 1: goto (0x00007bea, 0) 


# -- 0x00007bea b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007bef, 0) 


# -- 0x00007bef e8 fc b4 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007bf4;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x00007bf4, 0)


# -- 0x00007bf4 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x00007bf8, 0) 


# -- 0x00007bf8 eb 17                                  jmp 0x7c11
 0: goto (0x00007c11, 0) 


# -- 0x00007bfa 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007bfe, 0) 


# -- 0x00007bfe 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c05, 0) 


# -- 0x00007c05 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007c08, 0) 


# -- 0x00007c08 e8 23 b8 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007c0d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007c0d, 0)


# -- 0x00007c0d 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x00007c11, 0) 


# -- 0x00007c11 8b 4d bc                               mov -0x44(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -68<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007c14, 0) 


# -- 0x00007c14 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c18, 0) 


# -- 0x00007c18 ba 80 01 00 00                         mov $0x180,%edx
 0: rdx<64> := 384<64>;
 1: goto (0x00007c1d, 0) 


# -- 0x00007c1d 89 ce                                  mov %ecx,%esi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00007c1f, 0) 


# -- 0x00007c1f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007c22, 0) 


# -- 0x00007c22 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007c27, 0) 


# -- 0x00007c27 e8 e4 b6 ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007c2c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x00007c2c, 0)


# -- 0x00007c2c 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x00007c2f, 0) 


# -- 0x00007c2f 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007c32, 0) 


# -- 0x00007c32 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x00007c35, 0) 


# -- 0x00007c35 75 7a                                  jne 0x7cb1
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007cb1, 0) 
 2: goto (0x00007c37, 0) 


# -- 0x00007c37 83 7d bc 02                            cmpl $0x2,-0x44(%rbp)
 0: %%0<32> := @[(rbp<64> + -68<64>),4];
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007c3b, 0) 


# -- 0x00007c3b 75 74                                  jne 0x7cb1
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007cb1, 0) 
 2: goto (0x00007c3d, 0) 


# -- 0x00007c3d 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c41, 0) 


# -- 0x00007c41 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00007c46, 0) 


# -- 0x00007c46 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007c49, 0) 


# -- 0x00007c49 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007c4e, 0) 


# -- 0x00007c4e e8 bd b6 ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007c53;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x00007c53, 0)


# -- 0x00007c53 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x00007c56, 0) 


# -- 0x00007c56 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007c59, 0) 


# -- 0x00007c59 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x00007c5c, 0) 


# -- 0x00007c5c 74 53                                  je 0x7cb1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007cb1, 0) 
 2: goto (0x00007c5e, 0) 


# -- 0x00007c5e 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c62, 0) 


# -- 0x00007c62 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c69, 0) 


# -- 0x00007c69 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007c6c, 0) 


# -- 0x00007c6c 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00007c6f, 0) 


# -- 0x00007c6f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007c71, 0) 


# -- 0x00007c71 75 3e                                  jne 0x7cb1
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007cb1, 0) 
 2: goto (0x00007c73, 0) 


# -- 0x00007c73 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c77, 0) 


# -- 0x00007c77 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c7e, 0) 


# -- 0x00007c7e 8b 50 20                               mov 0x20(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007c81, 0) 


# -- 0x00007c81 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c85, 0) 


# -- 0x00007c85 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c8c, 0) 


# -- 0x00007c8c 83 ca 08                               or $0x8,%edx
 0: %%0<32> := rdx<64>{0,31};
 1: %%1<32> := (8<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rdx<64>{0} ^ rdx<64>{4}) ^ (rdx<64>{2} ^ rdx<64>{6})) ^
       ((rdx<64>{1} ^ rdx<64>{5}) ^ ! (rdx<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rdx<64> := %%5<64>;
13: goto (0x00007c8f, 0) 


# -- 0x00007c8f 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x00007c92, 0) 


# -- 0x00007c92 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c96, 0) 


# -- 0x00007c96 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007c9d, 0) 


# -- 0x00007c9d 8b 50 20                               mov 0x20(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00007ca0, 0) 


# -- 0x00007ca0 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ca4, 0) 


# -- 0x00007ca4 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007cab, 0) 


# -- 0x00007cab 83 ca 01                               or $0x1,%edx
 0: %%0<32> := rdx<64>{0,31};
 1: %%1<32> := (1<32> | %%0<32>);
 2: %%2<1> :=
     !
     (((! (rdx<64>{4}) ^ (rdx<64>{2} ^ rdx<64>{6})) ^
       ((rdx<64>{1} ^ rdx<64>{5}) ^ (rdx<64>{3} ^ rdx<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rdx<64> := %%5<64>;
13: goto (0x00007cae, 0) 


# -- 0x00007cae 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x00007cb1, 0) 


# -- 0x00007cb1 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007cb4, 0) 


# -- 0x00007cb4 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x00007cb7, 0) 


# -- 0x00007cb7 75 42                                  jne 0x7cfb
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007cfb, 0) 
 2: goto (0x00007cb9, 0) 


# -- 0x00007cb9 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007cbd, 0) 


# -- 0x00007cbd 74 0a                                  je 0x7cc9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007cc9, 0) 
 2: goto (0x00007cbf, 0) 


# -- 0x00007cbf 83 7d a8 00                            cmpl $0x0,-0x58(%rbp)
 0: %%0<32> := @[(rbp<64> + -88<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007cc3, 0) 


# -- 0x00007cc3 0f 8f 29 01 00 00                      jg 0x7df2
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00007df2, 0) 
 2: goto (0x00007cc9, 0) 


# -- 0x00007cc9 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ccd, 0) 


# -- 0x00007ccd 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007cd0, 0) 


# -- 0x00007cd0 48 8d 3d 41 6a 00 00                   lea 0x6a41(%rip),%rdi
 0: rdi<64> := 0x000000000000e718;
 1: goto (0x00007cd7, 0) 


# -- 0x00007cd7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007cdc, 0) 


# -- 0x00007cdc e8 0f b4 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007ce1;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x00007ce1, 0)


# -- 0x00007ce1 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00007ce5, 0) 


# -- 0x00007ce5 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ce9, 0) 


# -- 0x00007ce9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007cec, 0) 


# -- 0x00007cec e8 fe 56 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007cf1;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x00007cf1, 0)


# -- 0x00007cf1 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007cf6, 0) 


# -- 0x00007cf6 e9 f0 01 00 00                         jmp 0x7eeb
 0: goto (0x00007eeb, 0) 


# -- 0x00007cfb 83 7d b8 00                            cmpl $0x0,-0x48(%rbp)
 0: %%0<32> := @[(rbp<64> + -72<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007cff, 0) 


# -- 0x00007cff 74 0c                                  je 0x7d0d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007d0d, 0) 
 2: goto (0x00007d01, 0) 


# -- 0x00007d01 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d05, 0) 


# -- 0x00007d05 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007d08, 0) 


# -- 0x00007d08 e8 93 af ff ff                         call 0x2ca0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007d0d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ca0, 0) #call with return address @ (0x00007d0d, 0)


# -- 0x00007d0d 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007d11, 0) 


# -- 0x00007d11 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d15, 0) 


# -- 0x00007d15 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00007d18, 0) 


# -- 0x00007d18 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00007d1c, 0) 


# -- 0x00007d1c 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d20, 0) 


# -- 0x00007d20 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d27, 0) 


# -- 0x00007d27 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007d2b, 0) 


# -- 0x00007d2b ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x00007d30, 0) 


# -- 0x00007d30 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007d33, 0) 


# -- 0x00007d33 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007d36, 0) 


# -- 0x00007d36 e8 75 b4 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007d3b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x00007d3b, 0)


# -- 0x00007d3b 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d3f, 0) 


# -- 0x00007d3f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007d42, 0) 


# -- 0x00007d42 e8 b9 af ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007d47;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00007d47, 0)


# -- 0x00007d47 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d4b, 0) 


# -- 0x00007d4b 48 89 45 c0                            mov %rax,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rax<64>;
 1: goto (0x00007d4f, 0) 


# -- 0x00007d4f 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007d52, 0) 


# -- 0x00007d52 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00007d54, 0) 


# -- 0x00007d54 e8 4e 4c 00 00                         call 0xc9a7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007d59;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c9a7, 0) #call with return address @ (0x00007d59, 0)


# -- 0x00007d59 48 89 45 c8                            mov %rax,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rax<64>;
 1: goto (0x00007d5d, 0) 


# -- 0x00007d5d 48 83 7d c8 00                         cmpq $0x0,-0x38(%rbp)
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007d62, 0) 


# -- 0x00007d62 75 79                                  jne 0x7ddd
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007ddd, 0) 
 2: goto (0x00007d64, 0) 


# -- 0x00007d64 83 7d ac 00                            cmpl $0x0,-0x54(%rbp)
 0: %%0<32> := @[(rbp<64> + -84<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007d68, 0) 


# -- 0x00007d68 74 73                                  je 0x7ddd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007ddd, 0) 
 2: goto (0x00007d6a, 0) 


# -- 0x00007d6a 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007d6e, 0) 


# -- 0x00007d6e 74 1f                                  je 0x7d8f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007d8f, 0) 
 2: goto (0x00007d70, 0) 


# -- 0x00007d70 48 8d 0d 51 77 00 00                   lea 0x7751(%rip),%rcx
 0: rcx<64> := 0x000000000000f4c8;
 1: goto (0x00007d77, 0) 


# -- 0x00007d77 ba 7a 07 00 00                         mov $0x77a,%edx
 0: rdx<64> := 1914<64>;
 1: goto (0x00007d7c, 0) 


# -- 0x00007d7c 48 8d 35 71 5b 00 00                   lea 0x5b71(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00007d83, 0) 


# -- 0x00007d83 48 8d 3d b3 69 00 00                   lea 0x69b3(%rip),%rdi
 0: rdi<64> := 0x000000000000e73d;
 1: goto (0x00007d8a, 0) 


# -- 0x00007d8a e8 b1 b1 ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007d8f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x00007d8f, 0)


# -- 0x00007d8f 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d93, 0) 


# -- 0x00007d93 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d9a, 0) 


# -- 0x00007d9a 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007d9e, 0) 


# -- 0x00007d9e 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007da1, 0) 


# -- 0x00007da1 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007da4, 0) 


# -- 0x00007da4 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007da7, 0) 


# -- 0x00007da7 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00007da9, 0) 


# -- 0x00007da9 e8 12 b5 ff ff                         call 0x32c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007dae;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032c0, 0) #call with return address @ (0x00007dae, 0)


# -- 0x00007dae 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00007db0, 0) 


# -- 0x00007db0 79 16                                  jns 0x7dc8
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00007dc8, 0) 
 2: goto (0x00007db2, 0) 


# -- 0x00007db2 48 8d 3d 8f 69 00 00                   lea 0x698f(%rip),%rdi
 0: rdi<64> := 0x000000000000e748;
 1: goto (0x00007db9, 0) 


# -- 0x00007db9 e8 31 56 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007dbe;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x00007dbe, 0)


# -- 0x00007dbe b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007dc3, 0) 


# -- 0x00007dc3 e9 23 01 00 00                         jmp 0x7eeb
 0: goto (0x00007eeb, 0) 


# -- 0x00007dc8 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007dcc, 0) 


# -- 0x00007dcc 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007dd3, 0) 


# -- 0x00007dd3 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007dd7, 0) 


# -- 0x00007dd7 48 89 45 c8                            mov %rax,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rax<64>;
 1: goto (0x00007ddb, 0) 


# -- 0x00007ddb eb 16                                  jmp 0x7df3
 0: goto (0x00007df3, 0) 


# -- 0x00007ddd 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007de1, 0) 


# -- 0x00007de1 74 10                                  je 0x7df3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007df3, 0) 
 2: goto (0x00007de3, 0) 


# -- 0x00007de3 83 7d b8 00                            cmpl $0x0,-0x48(%rbp)
 0: %%0<32> := @[(rbp<64> + -72<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007de7, 0) 


# -- 0x00007de7 75 0a                                  jne 0x7df3
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00007df3, 0) 
 2: goto (0x00007de9, 0) 


# -- 0x00007de9 83 45 a8 01                            addl $0x1,-0x58(%rbp)
 0: %%0<64> := (rbp<64> + -88<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00007ded, 0) 


# -- 0x00007ded e9 5c fd ff ff                         jmp 0x7b4e
 0: goto (0x00007b4e, 0) 


# -- 0x00007df2 90                                     nop
 0: goto (0x00007df3, 0) 


# -- 0x00007df3 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007df7, 0) 


# -- 0x00007df7 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007dfb, 0) 


# -- 0x00007dfb 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00007dfe, 0) 


# -- 0x00007dfe 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007e01, 0) 


# -- 0x00007e01 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e05, 0) 


# -- 0x00007e05 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00007e08, 0) 


# -- 0x00007e08 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e0c, 0) 


# -- 0x00007e0c 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e13, 0) 


# -- 0x00007e13 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e17, 0) 


# -- 0x00007e17 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00007e1a, 0) 


# -- 0x00007e1a 74 4a                                  je 0x7e66
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007e66, 0) 
 2: goto (0x00007e1c, 0) 


# -- 0x00007e1c 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e20, 0) 


# -- 0x00007e20 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e27, 0) 


# -- 0x00007e27 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007e2b, 0) 


# -- 0x00007e2b 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e2f, 0) 


# -- 0x00007e2f 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e32, 0) 


# -- 0x00007e32 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x00007e35, 0) 


# -- 0x00007e35 76 16                                  jbe 0x7e4d
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x00007e4d, 0) 
 2: goto (0x00007e37, 0) 


# -- 0x00007e37 48 8d 3d 2a 69 00 00                   lea 0x692a(%rip),%rdi
 0: rdi<64> := 0x000000000000e768;
 1: goto (0x00007e3e, 0) 


# -- 0x00007e3e e8 ac 55 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007e43;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x00007e43, 0)


# -- 0x00007e43 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007e48, 0) 


# -- 0x00007e48 e9 9e 00 00 00                         jmp 0x7eeb
 0: goto (0x00007eeb, 0) 


# -- 0x00007e4d 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e51, 0) 


# -- 0x00007e51 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e58, 0) 


# -- 0x00007e58 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007e5c, 0) 


# -- 0x00007e5c 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e60, 0) 


# -- 0x00007e60 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x00007e63, 0) 


# -- 0x00007e63 eb 01                                  jmp 0x7e66
 0: goto (0x00007e66, 0) 


# -- 0x00007e65 90                                     nop
 0: goto (0x00007e66, 0) 


# -- 0x00007e66 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e6a, 0) 


# -- 0x00007e6a 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007e6d, 0) 


# -- 0x00007e6d 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007e70, 0) 


# -- 0x00007e70 48 8d 15 19 69 00 00                   lea 0x6919(%rip),%rdx
 0: rdx<64> := 0x000000000000e790;
 1: goto (0x00007e77, 0) 


# -- 0x00007e77 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007e7c, 0) 


# -- 0x00007e7c bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007e81, 0) 


# -- 0x00007e81 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007e86, 0) 


# -- 0x00007e86 e8 15 b4 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007e8b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007e8b, 0)


# -- 0x00007e8b 83 7d b0 00                            cmpl $0x0,-0x50(%rbp)
 0: %%0<32> := @[(rbp<64> + -80<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007e8f, 0) 


# -- 0x00007e8f 74 20                                  je 0x7eb1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007eb1, 0) 
 2: goto (0x00007e91, 0) 


# -- 0x00007e91 8b 45 a8                               mov -0x58(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -88<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00007e94, 0) 


# -- 0x00007e94 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00007e96, 0) 


# -- 0x00007e96 48 8d 15 18 69 00 00                   lea 0x6918(%rip),%rdx
 0: rdx<64> := 0x000000000000e7b5;
 1: goto (0x00007e9d, 0) 


# -- 0x00007e9d be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007ea2, 0) 


# -- 0x00007ea2 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007ea7, 0) 


# -- 0x00007ea7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007eac, 0) 


# -- 0x00007eac e8 ef b3 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007eb1;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007eb1, 0)


# -- 0x00007eb1 83 7d b4 00                            cmpl $0x0,-0x4c(%rbp)
 0: %%0<32> := @[(rbp<64> + -76<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00007eb5, 0) 


# -- 0x00007eb5 74 2f                                  je 0x7ee6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007ee6, 0) 
 2: goto (0x00007eb7, 0) 


# -- 0x00007eb7 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ebb, 0) 


# -- 0x00007ebb 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ebe, 0) 


# -- 0x00007ebe 48 05 ff 0f 00 00                      add $0xfff,%rax
 0: %%0<64> := (rax<64> + 4095<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00007ec4, 0) 


# -- 0x00007ec4 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x00007ec8, 0) 


# -- 0x00007ec8 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007ecb, 0) 


# -- 0x00007ecb 48 8d 15 fe 68 00 00                   lea 0x68fe(%rip),%rdx
 0: rdx<64> := 0x000000000000e7d0;
 1: goto (0x00007ed2, 0) 


# -- 0x00007ed2 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007ed7, 0) 


# -- 0x00007ed7 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007edc, 0) 


# -- 0x00007edc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007ee1, 0) 


# -- 0x00007ee1 e8 ba b3 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007ee6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007ee6, 0)


# -- 0x00007ee6 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00007eeb, 0) 


# -- 0x00007eeb 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00007eef, 0) 


# -- 0x00007eef 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x00007ef8, 0) 


# -- 0x00007ef8 74 05                                  je 0x7eff
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007eff, 0) 
 2: goto (0x00007efa, 0) 


# -- 0x00007efa e8 71 af ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007eff;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00007eff, 0)


# -- 0x00007eff c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00007f00, 0) 


# -- 0x00007f00 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00007f01 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007f02, 0) 


# -- 0x00007f02 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00007f05, 0) 


# -- 0x00007f05 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00007f09, 0) 


# -- 0x00007f09 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x00007f0d, 0) 


# -- 0x00007f0d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f11, 0) 


# -- 0x00007f11 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f18, 0) 


# -- 0x00007f18 48 8b 40 58                            mov 0x58(%rax),%rax
 0: %%0<64> := @[(rax<64> + 88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f1c, 0) 


# -- 0x00007f1c 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00007f1f, 0) 


# -- 0x00007f1f 74 1d                                  je 0x7f3e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00007f3e, 0) 
 2: goto (0x00007f21, 0) 


# -- 0x00007f21 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f25, 0) 


# -- 0x00007f25 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f2c, 0) 


# -- 0x00007f2c 48 8b 40 58                            mov 0x58(%rax),%rax
 0: %%0<64> := @[(rax<64> + 88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f30, 0) 


# -- 0x00007f30 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007f33, 0) 


# -- 0x00007f33 e8 f8 b4 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f38;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007f38, 0)


# -- 0x00007f38 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00007f3c, 0) 


# -- 0x00007f3c eb 1f                                  jmp 0x7f5d
 0: goto (0x00007f5d, 0) 


# -- 0x00007f3e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f42, 0) 


# -- 0x00007f42 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f49, 0) 


# -- 0x00007f49 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007f4c, 0) 


# -- 0x00007f4c e8 cf af ff ff                         call 0x2f20
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f51;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f20, 0) #call with return address @ (0x00007f51, 0)


# -- 0x00007f51 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007f54, 0) 


# -- 0x00007f54 e8 d7 b4 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f59;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007f59, 0)


# -- 0x00007f59 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00007f5d, 0) 


# -- 0x00007f5d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f61, 0) 


# -- 0x00007f61 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f68, 0) 


# -- 0x00007f68 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007f6b, 0) 


# -- 0x00007f6b e8 60 b2 ff ff                         call 0x31d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f70;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031d0, 0) #call with return address @ (0x00007f70, 0)


# -- 0x00007f70 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007f73, 0) 


# -- 0x00007f73 e8 b8 b4 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f78;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x00007f78, 0)


# -- 0x00007f78 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00007f7c, 0) 


# -- 0x00007f7c e8 4f ae ff ff                         call 0x2dd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007f81;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002dd0, 0) #call with return address @ (0x00007f81, 0)


# -- 0x00007f81 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00007f83, 0) 


# -- 0x00007f83 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f87, 0) 


# -- 0x00007f87 48 8b 48 08                            mov 0x8(%rax),%rcx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00007f8b, 0) 


# -- 0x00007f8b 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00007f8f, 0) 


# -- 0x00007f8f 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007f93, 0) 


# -- 0x00007f93 41 89 f0                               mov %esi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rsi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00007f96, 0) 


# -- 0x00007f96 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00007f99, 0) 


# -- 0x00007f99 48 8d 3d 57 68 00 00                   lea 0x6857(%rip),%rdi
 0: rdi<64> := 0x000000000000e7f7;
 1: goto (0x00007fa0, 0) 


# -- 0x00007fa0 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007fa5, 0) 


# -- 0x00007fa5 e8 46 b1 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007faa;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x00007faa, 0)


# -- 0x00007faa 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00007fad, 0) 


# -- 0x00007fad 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007fb1, 0) 


# -- 0x00007fb1 48 89 90 e8 00 00 00                   mov %rdx,0xe8(%rax)
 0: @[(rax<64> + 232<64>),8] := rdx<64>;
 1: goto (0x00007fb8, 0) 


# -- 0x00007fb8 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007fbc, 0) 


# -- 0x00007fbc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007fbf, 0) 


# -- 0x00007fbf e8 3c ad ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007fc4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00007fc4, 0)


# -- 0x00007fc4 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007fc8, 0) 


# -- 0x00007fc8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00007fcb, 0) 


# -- 0x00007fcb e8 30 ad ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007fd0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x00007fd0, 0)


# -- 0x00007fd0 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007fd4, 0) 


# -- 0x00007fd4 48 8b 80 e8 00 00 00                   mov 0xe8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 232<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007fdb, 0) 


# -- 0x00007fdb 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00007fde, 0) 


# -- 0x00007fde 48 8d 15 23 68 00 00                   lea 0x6823(%rip),%rdx
 0: rdx<64> := 0x000000000000e808;
 1: goto (0x00007fe5, 0) 


# -- 0x00007fe5 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00007fea, 0) 


# -- 0x00007fea bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00007fef, 0) 


# -- 0x00007fef b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00007ff4, 0) 


# -- 0x00007ff4 e8 a7 b2 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000007ff9;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00007ff9, 0)


# -- 0x00007ff9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00007ffd, 0) 


# -- 0x00007ffd 48 8b 80 e8 00 00 00                   mov 0xe8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 232<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008004, 0) 


# -- 0x00008004 ba 80 01 00 00                         mov $0x180,%edx
 0: rdx<64> := 384<64>;
 1: goto (0x00008009, 0) 


# -- 0x00008009 be 42 02 00 00                         mov $0x242,%esi
 0: rsi<64> := 578<64>;
 1: goto (0x0000800e, 0) 


# -- 0x0000800e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008011, 0) 


# -- 0x00008011 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008016, 0) 


# -- 0x00008016 e8 f5 b2 ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000801b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x0000801b, 0)


# -- 0x0000801b 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000801d, 0) 


# -- 0x0000801d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008021, 0) 


# -- 0x00008021 89 90 f0 00 00 00                      mov %edx,0xf0(%rax)
 0: @[(rax<64> + 240<64>),4] := rdx<64>{0,31};
 1: goto (0x00008027, 0) 


# -- 0x00008027 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000802b, 0) 


# -- 0x0000802b 8b 80 f0 00 00 00                      mov 0xf0(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 240<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008031, 0) 


# -- 0x00008031 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008033, 0) 


# -- 0x00008033 79 0c                                  jns 0x8041
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x00008041, 0) 
 2: goto (0x00008035, 0) 


# -- 0x00008035 48 8d 3d f4 67 00 00                   lea 0x67f4(%rip),%rdi
 0: rdi<64> := 0x000000000000e830;
 1: goto (0x0000803c, 0) 


# -- 0x0000803c e8 f7 55 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008041;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x00008041, 0)


# -- 0x00008041 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008045, 0) 


# -- 0x00008045 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008048, 0) 


# -- 0x00008048 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000804c, 0) 


# -- 0x0000804c be 04 00 00 00                         mov $0x4,%esi
 0: rsi<64> := 4<64>;
 1: goto (0x00008051, 0) 


# -- 0x00008051 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008054, 0) 


# -- 0x00008054 e8 17 b0 ff ff                         call 0x3070
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008059;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003070, 0) #call with return address @ (0x00008059, 0)


# -- 0x00008059 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000805c, 0) 


# -- 0x0000805c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008060, 0) 


# -- 0x00008060 48 89 90 f8 00 00 00                   mov %rdx,0xf8(%rax)
 0: @[(rax<64> + 248<64>),8] := rdx<64>;
 1: goto (0x00008067, 0) 


# -- 0x00008067 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000806b, 0) 


# -- 0x0000806b 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008072, 0) 


# -- 0x00008072 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00008075, 0) 


# -- 0x00008075 75 0c                                  jne 0x8083
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008083, 0) 
 2: goto (0x00008077, 0) 


# -- 0x00008077 48 8d 3d d2 67 00 00                   lea 0x67d2(%rip),%rdi
 0: rdi<64> := 0x000000000000e850;
 1: goto (0x0000807e, 0) 


# -- 0x0000807e e8 b5 55 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008083;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x00008083, 0)


# -- 0x00008083 48 c7 45 e8 00 00 00 00                movq $0x0,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := 0<64>;
 1: goto (0x0000808b, 0) 


# -- 0x0000808b eb 21                                  jmp 0x80ae
 0: goto (0x000080ae, 0) 


# -- 0x0000808d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008091, 0) 


# -- 0x00008091 48 8b 80 f8 00 00 00                   mov 0xf8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 248<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008098, 0) 


# -- 0x00008098 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000809c, 0) 


# -- 0x0000809c 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x000080a0, 0) 


# -- 0x000080a0 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000080a3, 0) 


# -- 0x000080a3 c7 00 ff ff ff ff                      movl $0xffffffff,(%rax)
 0: @[rax<64>,4] := -1<32>;
 1: goto (0x000080a9, 0) 


# -- 0x000080a9 48 83 45 e8 01                         addq $0x1,-0x18(%rbp)
 0: %%0<64> := (rbp<64> + -24<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000080ae, 0) 


# -- 0x000080ae 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000080b2, 0) 


# -- 0x000080b2 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000080b5, 0) 


# -- 0x000080b5 48 c1 e8 0c                            shr $0xc,%rax
 0: %%0<64> := (rax<64> >>u 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x000080b9, 0) 


# -- 0x000080b9 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000080bc, 0) 


# -- 0x000080bc 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000080c0, 0) 


# -- 0x000080c0 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x000080c3, 0) 


# -- 0x000080c3 77 c8                                  ja 0x808d
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000808d, 0) 
 2: goto (0x000080c5, 0) 


# -- 0x000080c5 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x000080ca, 0) 


# -- 0x000080ca c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000080cb, 0) 


# -- 0x000080cb c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000080cc 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000080cd, 0) 


# -- 0x000080cd 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000080d0, 0) 


# -- 0x000080d0 48 81 ec c0 00 00 00                   sub $0xc0,%rsp
 0: %%0<64> := (rsp<64> - 192<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000080d7, 0) 


# -- 0x000080d7 48 89 bd 58 ff ff ff                   mov %rdi,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := rdi<64>;
 1: goto (0x000080de, 0) 


# -- 0x000080de 48 89 b5 50 ff ff ff                   mov %rsi,-0xb0(%rbp)
 0: @[(rbp<64> + -176<64>),8] := rsi<64>;
 1: goto (0x000080e5, 0) 


# -- 0x000080e5 89 d0                                  mov %edx,%eax
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000080e7, 0) 


# -- 0x000080e7 88 85 4c ff ff ff                      mov %al,-0xb4(%rbp)
 0: @[(rbp<64> + -180<64>),1] := rax<64>{0,7};
 1: goto (0x000080ed, 0) 


# -- 0x000080ed 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000080f6, 0) 


# -- 0x000080f6 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000080fa, 0) 


# -- 0x000080fa 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000080fc, 0) 


# -- 0x000080fc 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008103, 0) 


# -- 0x00008103 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008106, 0) 


# -- 0x00008106 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008109, 0) 


# -- 0x00008109 e8 c0 55 00 00                         call 0xd6ce
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000810e;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6ce, 0) #call with return address @ (0x0000810e, 0)


# -- 0x0000810e 48 89 85 68 ff ff ff                   mov %rax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rax<64>;
 1: goto (0x00008115, 0) 


# -- 0x00008115 66 c7 85 66 ff ff ff 41 00             movw $0x41,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := 65<16>;
 1: goto (0x0000811e, 0) 


# -- 0x0000811e 48 8d 8d 68 ff ff ff                   lea -0x98(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -152<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008125, 0) 


# -- 0x00008125 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000812c, 0) 


# -- 0x0000812c ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x00008131, 0) 


# -- 0x00008131 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008134, 0) 


# -- 0x00008134 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008137, 0) 


# -- 0x00008137 e8 55 b7 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000813c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x0000813c, 0)


# -- 0x0000813c 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008143, 0) 


# -- 0x00008143 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008146, 0) 


# -- 0x00008146 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008149, 0) 


# -- 0x00008149 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000814b, 0) 


# -- 0x0000814b 74 11                                  je 0x815e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000815e, 0) 
 2: goto (0x0000814d, 0) 


# -- 0x0000814d 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008154, 0) 


# -- 0x00008154 83 c8 02                               or $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (2<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       (! (rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x00008157, 0) 


# -- 0x00008157 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x0000815e, 0) 


# -- 0x0000815e 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008165, 0) 


# -- 0x00008165 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008168, 0) 


# -- 0x00008168 25 80 00 00 00                         and $0x80,%eax
 0: %%0<32> := (128<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{7});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000816d, 0) 


# -- 0x0000816d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000816f, 0) 


# -- 0x0000816f 74 11                                  je 0x8182
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008182, 0) 
 2: goto (0x00008171, 0) 


# -- 0x00008171 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008178, 0) 


# -- 0x00008178 83 c8 04                               or $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (4<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ ! (rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000817b, 0) 


# -- 0x0000817b 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x00008182, 0) 


# -- 0x00008182 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008189, 0) 


# -- 0x00008189 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000818c, 0) 


# -- 0x0000818c 25 00 01 00 00                         and $0x100,%eax
 0: %%0<32> := (256<32> & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008191, 0) 


# -- 0x00008191 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008193, 0) 


# -- 0x00008193 74 11                                  je 0x81a6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000081a6, 0) 
 2: goto (0x00008195, 0) 


# -- 0x00008195 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000819c, 0) 


# -- 0x0000819c 83 c8 08                               or $0x8,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (8<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ ! (rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000819f, 0) 


# -- 0x0000819f 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x000081a6, 0) 


# -- 0x000081a6 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000081ad, 0) 


# -- 0x000081ad 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000081b0, 0) 


# -- 0x000081b0 25 00 02 00 00                         and $0x200,%eax
 0: %%0<32> := (512<32> & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000081b5, 0) 


# -- 0x000081b5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000081b7, 0) 


# -- 0x000081b7 74 11                                  je 0x81ca
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000081ca, 0) 
 2: goto (0x000081b9, 0) 


# -- 0x000081b9 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000081c0, 0) 


# -- 0x000081c0 83 c8 10                               or $0x10,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (16<32> | %%0<32>);
 2: %%2<1> :=
     !
     (((! (rax<64>{0}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x000081c3, 0) 


# -- 0x000081c3 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x000081ca, 0) 


# -- 0x000081ca 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000081d1, 0) 


# -- 0x000081d1 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000081d4, 0) 


# -- 0x000081d4 25 00 08 00 00                         and $0x800,%eax
 0: %%0<32> := (2048<32> & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000081d9, 0) 


# -- 0x000081d9 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000081db, 0) 


# -- 0x000081db 74 11                                  je 0x81ee
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000081ee, 0) 
 2: goto (0x000081dd, 0) 


# -- 0x000081dd 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000081e4, 0) 


# -- 0x000081e4 83 c8 20                               or $0x20,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (32<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       (! (rax<64>{1}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x000081e7, 0) 


# -- 0x000081e7 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x000081ee, 0) 


# -- 0x000081ee 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000081f5, 0) 


# -- 0x000081f5 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000081f8, 0) 


# -- 0x000081f8 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000081fb, 0) 


# -- 0x000081fb 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000081fd, 0) 


# -- 0x000081fd 75 11                                  jne 0x8210
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008210, 0) 
 2: goto (0x000081ff, 0) 


# -- 0x000081ff 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008206, 0) 


# -- 0x00008206 80 cc 01                               or $0x1,%ah
 0: %%0<8> := rax<64>{8,15};
 1: %%1<8> := (1<8> | %%0<8>);
 2: %%2<1> :=
     !
     (((! (rax<64>{12}) ^ (rax<64>{10} ^ rax<64>{14})) ^
       ((rax<64>{9} ^ rax<64>{13}) ^ (rax<64>{11} ^ rax<64>{15}))));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%0<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{8, 15} := %%1<8>;
12: goto (0x00008209, 0) 


# -- 0x00008209 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x00008210, 0) 


# -- 0x00008210 0f b7 85 66 ff ff ff                   movzwl -0x9a(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -154<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008217, 0) 


# -- 0x00008217 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000821a, 0) 


# -- 0x0000821a 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000821c, 0) 


# -- 0x0000821c e8 7f ac ff ff                         call 0x2ea0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008221;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ea0, 0) #call with return address @ (0x00008221, 0)


# -- 0x00008221 66 89 85 66 ff ff ff                   mov %ax,-0x9a(%rbp)
 0: @[(rbp<64> + -154<64>),2] := rax<64>{0,15};
 1: goto (0x00008228, 0) 


# -- 0x00008228 48 8d 8d 66 ff ff ff                   lea -0x9a(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -154<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000822f, 0) 


# -- 0x0000822f 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008236, 0) 


# -- 0x00008236 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x0000823b, 0) 


# -- 0x0000823b 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000823e, 0) 


# -- 0x0000823e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008241, 0) 


# -- 0x00008241 e8 4b b6 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008246;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00008246, 0)


# -- 0x00008246 8b 05 94 8f 20 00                      mov 0x208f94(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000824c, 0) 


# -- 0x0000824c 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000824f, 0) 


# -- 0x0000824f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008251, 0) 


# -- 0x00008251 75 40                                  jne 0x8293
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008293, 0) 
 2: goto (0x00008253, 0) 


# -- 0x00008253 80 bd 4c ff ff ff 00                   cmpb $0x0,-0xb4(%rbp)
 0: %%0<8> := @[(rbp<64> + -180<64>),1];
 1: %%1<8> := %%0<8>;
 2: %%2<1> := (-128<8> = (-128<8> & (! (%%0<8>) & %%1<8>)));
 3: %%3<1> :=
     !
     ((((%%1<8>{0} ^ %%1<8>{4}) ^ (%%1<8>{2} ^ %%1<8>{6})) ^
       ((%%1<8>{1} ^ %%1<8>{5}) ^ (%%1<8>{3} ^ %%1<8>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<8> = %%1<8>);
 6: %%6<1> := (0<8> <> (-128<8> & %%1<8>));
 7: %%7<1> := (-128<8> = (-128<8> & (%%0<8> & ! (%%1<8>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000825a, 0) 


# -- 0x0000825a 74 37                                  je 0x8293
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008293, 0) 
 2: goto (0x0000825c, 0) 


# -- 0x0000825c 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008263, 0) 


# -- 0x00008263 ba 80 00 00 00                         mov $0x80,%edx
 0: rdx<64> := 128<64>;
 1: goto (0x00008268, 0) 


# -- 0x00008268 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000826d, 0) 


# -- 0x0000826d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008270, 0) 


# -- 0x00008270 e8 fb ac ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008275;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x00008275, 0)


# -- 0x00008275 48 8d 8d 70 ff ff ff                   lea -0x90(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000827c, 0) 


# -- 0x0000827c 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008283, 0) 


# -- 0x00008283 ba 7c 00 00 00                         mov $0x7c,%edx
 0: rdx<64> := 124<64>;
 1: goto (0x00008288, 0) 


# -- 0x00008288 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000828b, 0) 


# -- 0x0000828b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000828e, 0) 


# -- 0x0000828e e8 fe b5 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008293;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00008293, 0)


# -- 0x00008293 90                                     nop
 0: goto (0x00008294, 0) 


# -- 0x00008294 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008298, 0) 


# -- 0x00008298 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x000082a1, 0) 


# -- 0x000082a1 74 05                                  je 0x82a8
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000082a8, 0) 
 2: goto (0x000082a3, 0) 


# -- 0x000082a3 e8 c8 ab ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000082a8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x000082a8, 0)


# -- 0x000082a8 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000082a9, 0) 


# -- 0x000082a9 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000082aa 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000082ab, 0) 


# -- 0x000082ab 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000082ae, 0) 


# -- 0x000082ae 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000082b2, 0) 


# -- 0x000082b2 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x000082b6, 0) 


# -- 0x000082b6 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x000082ba, 0) 


# -- 0x000082ba 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000082c3, 0) 


# -- 0x000082c3 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000082c7, 0) 


# -- 0x000082c7 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000082c9, 0) 


# -- 0x000082c9 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000082cd, 0) 


# -- 0x000082cd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000082d0, 0) 


# -- 0x000082d0 e8 42 4a 00 00                         call 0xcd17
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000082d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd17, 0) #call with return address @ (0x000082d5, 0)


# -- 0x000082d5 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x000082d8, 0) 


# -- 0x000082d8 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000082dc, 0) 


# -- 0x000082dc 48 89 90 e0 00 00 00                   mov %rdx,0xe0(%rax)
 0: @[(rax<64> + 224<64>),8] := rdx<64>;
 1: goto (0x000082e3, 0) 


# -- 0x000082e3 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000082e7, 0) 


# -- 0x000082e7 48 b9 ff ff ff ff ff ff ff 7f          mov $0x7fffffffffffffff,%rcx
 0: rcx<64> := 0x7fffffffffffffff;
 1: goto (0x000082f1, 0) 


# -- 0x000082f1 48 89 08                               mov %rcx,(%rax)
 0: @[rax<64>,8] := rcx<64>;
 1: goto (0x000082f4, 0) 


# -- 0x000082f4 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000082f8, 0) 


# -- 0x000082f8 c7 80 00 01 00 00 ff ff ff ff          movl $0xffffffff,0x100(%rax)
 0: @[(rax<64> + 256<64>),4] := -1<32>;
 1: goto (0x00008302, 0) 


# -- 0x00008302 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008306, 0) 


# -- 0x00008306 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000830c, 0) 


# -- 0x0000830c be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00008311, 0) 


# -- 0x00008311 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008314, 0) 


# -- 0x00008314 e8 c7 b1 ff ff                         call 0x34e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008319;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034e0, 0) #call with return address @ (0x00008319, 0)


# -- 0x00008319 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000831b, 0) 


# -- 0x0000831b 74 25                                  je 0x8342
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008342, 0) 
 2: goto (0x0000831d, 0) 


# -- 0x0000831d 48 8d 15 46 65 00 00                   lea 0x6546(%rip),%rdx
 0: rdx<64> := 0x000000000000e86a;
 1: goto (0x00008324, 0) 


# -- 0x00008324 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00008329, 0) 


# -- 0x00008329 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000832e, 0) 


# -- 0x0000832e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008333, 0) 


# -- 0x00008333 e8 68 af ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008338;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00008338, 0)


# -- 0x00008338 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000833d, 0) 


# -- 0x0000833d e9 37 03 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008342 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008346, 0) 


# -- 0x00008346 48 05 a0 00 00 00                      add $0xa0,%rax
 0: %%0<64> := (rax<64> + 160<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000834c, 0) 


# -- 0x0000834c be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x00008351, 0) 


# -- 0x00008351 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008354, 0) 


# -- 0x00008354 e8 87 aa ff ff                         call 0x2de0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008359;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002de0, 0) #call with return address @ (0x00008359, 0)


# -- 0x00008359 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000835b, 0) 


# -- 0x0000835b 74 25                                  je 0x8382
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008382, 0) 
 2: goto (0x0000835d, 0) 


# -- 0x0000835d 48 8d 15 24 65 00 00                   lea 0x6524(%rip),%rdx
 0: rdx<64> := 0x000000000000e888;
 1: goto (0x00008364, 0) 


# -- 0x00008364 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00008369, 0) 


# -- 0x00008369 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000836e, 0) 


# -- 0x0000836e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008373, 0) 


# -- 0x00008373 e8 28 af ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008378;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00008378, 0)


# -- 0x00008378 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000837d, 0) 


# -- 0x0000837d e9 f7 02 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008382 8b 05 5c 8e 20 00                      mov 0x208e5c(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008388, 0) 


# -- 0x00008388 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000838a, 0) 


# -- 0x0000838a 74 06                                  je 0x8392
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008392, 0) 
 2: goto (0x0000838c, 0) 


# -- 0x0000838c c6 45 f3 59                            movb $0x59,-0xd(%rbp)
 0: @[(rbp<64> + -13<64>),1] := 89<8>;
 1: goto (0x00008390, 0) 


# -- 0x00008390 eb 7d                                  jmp 0x840f
 0: goto (0x0000840f, 0) 


# -- 0x00008392 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008396, 0) 


# -- 0x00008396 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000839d, 0) 


# -- 0x0000839d 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000083a1, 0) 


# -- 0x000083a1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000083a4, 0) 


# -- 0x000083a4 e8 a7 aa ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000083a9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x000083a9, 0)


# -- 0x000083a9 89 45 f4                               mov %eax,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := rax<64>{0,31};
 1: goto (0x000083ac, 0) 


# -- 0x000083ac 8b 05 de 8f 20 00                      mov 0x208fde(%rip),%eax
 0: %%0<64> := (extu @[0x0000000000211390,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000083b2, 0) 


# -- 0x000083b2 48 8d 4d f4                            lea -0xc(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -12<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000083b6, 0) 


# -- 0x000083b6 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x000083bb, 0) 


# -- 0x000083bb 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000083be, 0) 


# -- 0x000083be 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000083c0, 0) 


# -- 0x000083c0 e8 e0 53 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000083c5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x000083c5, 0)


# -- 0x000083c5 8b 45 f4                               mov -0xc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000083c8, 0) 


# -- 0x000083c8 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000083ca, 0) 


# -- 0x000083ca 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000083ce, 0) 


# -- 0x000083ce 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000083d5, 0) 


# -- 0x000083d5 48 8b 48 40                            mov 0x40(%rax),%rcx
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000083d9, 0) 


# -- 0x000083d9 8b 05 b1 8f 20 00                      mov 0x208fb1(%rip),%eax
 0: %%0<64> := (extu @[0x0000000000211390,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000083df, 0) 


# -- 0x000083df 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000083e2, 0) 


# -- 0x000083e2 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000083e4, 0) 


# -- 0x000083e4 e8 bc 53 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000083e9;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x000083e9, 0)


# -- 0x000083e9 8b 05 a1 8f 20 00                      mov 0x208fa1(%rip),%eax
 0: %%0<64> := (extu @[0x0000000000211390,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000083ef, 0) 


# -- 0x000083ef 48 8d 4d f3                            lea -0xd(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -13<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000083f3, 0) 


# -- 0x000083f3 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x000083f8, 0) 


# -- 0x000083f8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000083fb, 0) 


# -- 0x000083fb 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000083fd, 0) 


# -- 0x000083fd e8 16 53 00 00                         call 0xd718
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008402;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d718, 0) #call with return address @ (0x00008402, 0)


# -- 0x00008402 8b 05 88 8f 20 00                      mov 0x208f88(%rip),%eax
 0: %%0<64> := (extu @[0x0000000000211390,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008408, 0) 


# -- 0x00008408 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000840a, 0) 


# -- 0x0000840a e8 91 ab ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000840f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000840f, 0)


# -- 0x0000840f 0f b6 45 f3                            movzbl -0xd(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -13<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008413, 0) 


# -- 0x00008413 0f be c0                               movsbl %al,%eax
 0: %%0<64> := (extu (exts rax<64>{0,7} 32) 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008416, 0) 


# -- 0x00008416 83 f8 4e                               cmp $0x4e,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 78<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00008419, 0) 


# -- 0x00008419 74 07                                  je 0x8422
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008422, 0) 
 2: goto (0x0000841b, 0) 


# -- 0x0000841b 83 f8 58                               cmp $0x58,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 88<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000841e, 0) 


# -- 0x0000841e 74 27                                  je 0x8447
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008447, 0) 
 2: goto (0x00008420, 0) 


# -- 0x00008420 eb 4a                                  jmp 0x846c
 0: goto (0x0000846c, 0) 


# -- 0x00008422 48 8d 15 7f 64 00 00                   lea 0x647f(%rip),%rdx
 0: rdx<64> := 0x000000000000e8a8;
 1: goto (0x00008429, 0) 


# -- 0x00008429 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000842e, 0) 


# -- 0x0000842e bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00008433, 0) 


# -- 0x00008433 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008438, 0) 


# -- 0x00008438 e8 63 ae ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000843d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000843d, 0)


# -- 0x0000843d b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008442, 0) 


# -- 0x00008442 e9 32 02 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008447 48 8d 15 8a 64 00 00                   lea 0x648a(%rip),%rdx
 0: rdx<64> := 0x000000000000e8d8;
 1: goto (0x0000844e, 0) 


# -- 0x0000844e be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00008453, 0) 


# -- 0x00008453 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00008458, 0) 


# -- 0x00008458 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000845d, 0) 


# -- 0x0000845d e8 3e ae ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008462;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00008462, 0)


# -- 0x00008462 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008467, 0) 


# -- 0x00008467 e9 0d 02 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x0000846c 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008470, 0) 


# -- 0x00008470 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008476, 0) 


# -- 0x00008476 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000847a, 0) 


# -- 0x0000847a 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000847d, 0) 


# -- 0x0000847d 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000847f, 0) 


# -- 0x0000847f e8 2a eb ff ff                         call 0x6fae
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008484;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006fae, 0) #call with return address @ (0x00008484, 0)


# -- 0x00008484 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008486, 0) 


# -- 0x00008486 74 25                                  je 0x84ad
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000084ad, 0) 
 2: goto (0x00008488, 0) 


# -- 0x00008488 48 8d 15 77 64 00 00                   lea 0x6477(%rip),%rdx
 0: rdx<64> := 0x000000000000e906;
 1: goto (0x0000848f, 0) 


# -- 0x0000848f be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00008494, 0) 


# -- 0x00008494 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00008499, 0) 


# -- 0x00008499 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000849e, 0) 


# -- 0x0000849e e8 fd ad ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000084a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000084a3, 0)


# -- 0x000084a3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000084a8, 0) 


# -- 0x000084a8 e9 cc 01 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x000084ad 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084b1, 0) 


# -- 0x000084b1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000084b4, 0) 


# -- 0x000084b4 e8 d1 40 00 00                         call 0xc58a
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000084b9;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c58a, 0) #call with return address @ (0x000084b9, 0)


# -- 0x000084b9 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000084bb, 0) 


# -- 0x000084bb 75 30                                  jne 0x84ed
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000084ed, 0) 
 2: goto (0x000084bd, 0) 


# -- 0x000084bd 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084c1, 0) 


# -- 0x000084c1 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084c5, 0) 


# -- 0x000084c5 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000084c8, 0) 


# -- 0x000084c8 48 8d 15 51 64 00 00                   lea 0x6451(%rip),%rdx
 0: rdx<64> := 0x000000000000e920;
 1: goto (0x000084cf, 0) 


# -- 0x000084cf be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000084d4, 0) 


# -- 0x000084d4 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000084d9, 0) 


# -- 0x000084d9 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000084de, 0) 


# -- 0x000084de e8 bd ad ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000084e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000084e3, 0)


# -- 0x000084e3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000084e8, 0) 


# -- 0x000084e8 e9 8c 01 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x000084ed 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084f1, 0) 


# -- 0x000084f1 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084f8, 0) 


# -- 0x000084f8 48 8b 40 50                            mov 0x50(%rax),%rax
 0: %%0<64> := @[(rax<64> + 80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000084fc, 0) 


# -- 0x000084fc 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000084ff, 0) 


# -- 0x000084ff 74 7d                                  je 0x857e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000857e, 0) 
 2: goto (0x00008501, 0) 


# -- 0x00008501 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008505, 0) 


# -- 0x00008505 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000850b, 0) 


# -- 0x0000850b 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000850e, 0) 


# -- 0x0000850e 75 6e                                  jne 0x857e
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000857e, 0) 
 2: goto (0x00008510, 0) 


# -- 0x00008510 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008514, 0) 


# -- 0x00008514 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000851b, 0) 


# -- 0x0000851b 48 8b 40 50                            mov 0x50(%rax),%rax
 0: %%0<64> := @[(rax<64> + 80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000851f, 0) 


# -- 0x0000851f ba 80 01 00 00                         mov $0x180,%edx
 0: rdx<64> := 384<64>;
 1: goto (0x00008524, 0) 


# -- 0x00008524 be 41 00 00 00                         mov $0x41,%esi
 0: rsi<64> := 65<64>;
 1: goto (0x00008529, 0) 


# -- 0x00008529 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000852c, 0) 


# -- 0x0000852c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008531, 0) 


# -- 0x00008531 e8 da ad ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008536;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x00008536, 0)


# -- 0x00008536 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008538, 0) 


# -- 0x00008538 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000853c, 0) 


# -- 0x0000853c 89 90 00 01 00 00                      mov %edx,0x100(%rax)
 0: @[(rax<64> + 256<64>),4] := rdx<64>{0,31};
 1: goto (0x00008542, 0) 


# -- 0x00008542 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008546, 0) 


# -- 0x00008546 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000854c, 0) 


# -- 0x0000854c 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000854f, 0) 


# -- 0x0000854f 75 2d                                  jne 0x857e
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000857e, 0) 
 2: goto (0x00008551, 0) 


# -- 0x00008551 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008555, 0) 


# -- 0x00008555 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000855c, 0) 


# -- 0x0000855c 48 8b 40 50                            mov 0x50(%rax),%rax
 0: %%0<64> := @[(rax<64> + 80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008560, 0) 


# -- 0x00008560 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00008563, 0) 


# -- 0x00008563 48 8d 15 de 63 00 00                   lea 0x63de(%rip),%rdx
 0: rdx<64> := 0x000000000000e948;
 1: goto (0x0000856a, 0) 


# -- 0x0000856a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000856f, 0) 


# -- 0x0000856f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00008574, 0) 


# -- 0x00008574 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008579, 0) 


# -- 0x00008579 e8 22 ad ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000857e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000857e, 0)


# -- 0x0000857e 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008582, 0) 


# -- 0x00008582 48 8b 90 90 00 00 00                   mov 0x90(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00008589, 0) 


# -- 0x00008589 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000858d, 0) 


# -- 0x0000858d 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008594, 0) 


# -- 0x00008594 48 8b 40 30                            mov 0x30(%rax),%rax
 0: %%0<64> := @[(rax<64> + 48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008598, 0) 


# -- 0x00008598 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000859b, 0) 


# -- 0x0000859b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000859e, 0) 


# -- 0x0000859e e8 b9 b3 ff ff                         call 0x395c
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000085a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000395c, 0) #call with return address @ (0x000085a3, 0)


# -- 0x000085a3 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000085a5, 0) 


# -- 0x000085a5 74 30                                  je 0x85d7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000085d7, 0) 
 2: goto (0x000085a7, 0) 


# -- 0x000085a7 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000085ab, 0) 


# -- 0x000085ab 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000085af, 0) 


# -- 0x000085af 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000085b2, 0) 


# -- 0x000085b2 48 8d 15 c7 63 00 00                   lea 0x63c7(%rip),%rdx
 0: rdx<64> := 0x000000000000e980;
 1: goto (0x000085b9, 0) 


# -- 0x000085b9 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x000085be, 0) 


# -- 0x000085be bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x000085c3, 0) 


# -- 0x000085c3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000085c8, 0) 


# -- 0x000085c8 e8 d3 ac ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000085cd;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x000085cd, 0)


# -- 0x000085cd b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000085d2, 0) 


# -- 0x000085d2 e9 a2 00 00 00                         jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x000085d7 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000085db, 0) 


# -- 0x000085db 48 8d 15 95 b4 ff ff                   lea -0x4b6b(%rip),%rdx
 0: rdx<64> := 0x0000000000003a77;
 1: goto (0x000085e2, 0) 


# -- 0x000085e2 48 89 90 48 01 00 00                   mov %rdx,0x148(%rax)
 0: @[(rax<64> + 328<64>),8] := rdx<64>;
 1: goto (0x000085e9, 0) 


# -- 0x000085e9 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000085ed, 0) 


# -- 0x000085ed 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000085f0, 0) 


# -- 0x000085f0 e8 f1 f3 ff ff                         call 0x79e6
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000085f5;
 2: rsp<64> := %%0<64>;
 3: goto (0x000079e6, 0) #call with return address @ (0x000085f5, 0)


# -- 0x000085f5 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x000085f8, 0) 


# -- 0x000085f8 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000085fa, 0) 


# -- 0x000085fa 74 07                                  je 0x8603
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008603, 0) 
 2: goto (0x000085fc, 0) 


# -- 0x000085fc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008601, 0) 


# -- 0x00008601 eb 76                                  jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008603 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008607, 0) 


# -- 0x00008607 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000860e, 0) 


# -- 0x0000860e 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008611, 0) 


# -- 0x00008611 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00008614, 0) 


# -- 0x00008614 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008616, 0) 


# -- 0x00008616 74 1a                                  je 0x8632
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008632, 0) 
 2: goto (0x00008618, 0) 


# -- 0x00008618 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000861c, 0) 


# -- 0x0000861c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000861f, 0) 


# -- 0x0000861f e8 dd f8 ff ff                         call 0x7f01
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008624;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007f01, 0) #call with return address @ (0x00008624, 0)


# -- 0x00008624 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00008627, 0) 


# -- 0x00008627 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008629, 0) 


# -- 0x00008629 74 07                                  je 0x8632
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008632, 0) 
 2: goto (0x0000862b, 0) 


# -- 0x0000862b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008630, 0) 


# -- 0x00008630 eb 47                                  jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008632 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008636, 0) 


# -- 0x00008636 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000863d, 0) 


# -- 0x0000863d 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008640, 0) 


# -- 0x00008640 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008645, 0) 


# -- 0x00008645 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008647, 0) 


# -- 0x00008647 74 1a                                  je 0x8663
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008663, 0) 
 2: goto (0x00008649, 0) 


# -- 0x00008649 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000864d, 0) 


# -- 0x0000864d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008650, 0) 


# -- 0x00008650 e8 ac f8 ff ff                         call 0x7f01
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008655;
 2: rsp<64> := %%0<64>;
 3: goto (0x00007f01, 0) #call with return address @ (0x00008655, 0)


# -- 0x00008655 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00008658, 0) 


# -- 0x00008658 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000865a, 0) 


# -- 0x0000865a 74 07                                  je 0x8663
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008663, 0) 
 2: goto (0x0000865c, 0) 


# -- 0x0000865c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008661, 0) 


# -- 0x00008661 eb 16                                  jmp 0x8679
 0: goto (0x00008679, 0) 


# -- 0x00008663 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008667, 0) 


# -- 0x00008667 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000866d, 0) 


# -- 0x0000866d 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000866f, 0) 


# -- 0x0000866f e8 1b 4d 00 00                         call 0xd38f
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008674;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d38f, 0) #call with return address @ (0x00008674, 0)


# -- 0x00008674 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00008679, 0) 


# -- 0x00008679 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000867d, 0) 


# -- 0x0000867d 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x00008686, 0) 


# -- 0x00008686 74 05                                  je 0x868d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000868d, 0) 
 2: goto (0x00008688, 0) 


# -- 0x00008688 e8 e3 a7 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000868d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000868d, 0)


# -- 0x0000868d c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000868e, 0) 


# -- 0x0000868e c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000868f 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00008690, 0) 


# -- 0x00008690 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00008693, 0) 


# -- 0x00008693 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00008697, 0) 


# -- 0x00008697 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x0000869b, 0) 


# -- 0x0000869b 89 75 d4                               mov %esi,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rsi<64>{0,31};
 1: goto (0x0000869e, 0) 


# -- 0x0000869e 48 89 55 c8                            mov %rdx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdx<64>;
 1: goto (0x000086a2, 0) 


# -- 0x000086a2 89 4d d0                               mov %ecx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rcx<64>{0,31};
 1: goto (0x000086a5, 0) 


# -- 0x000086a5 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000086ae, 0) 


# -- 0x000086ae 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000086b2, 0) 


# -- 0x000086b2 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000086b4, 0) 


# -- 0x000086b4 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000086b8, 0) 


# -- 0x000086b8 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000086bc, 0) 


# -- 0x000086bc ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x000086c1, 0) 


# -- 0x000086c1 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000086c4, 0) 


# -- 0x000086c4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000086c7, 0) 


# -- 0x000086c7 e8 32 b0 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000086cc;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x000086cc, 0)


# -- 0x000086cc 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000086cf, 0) 


# -- 0x000086cf 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000086d1, 0) 


# -- 0x000086d1 e8 da ad ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000086d6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x000086d6, 0)


# -- 0x000086d6 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x000086d9, 0) 


# -- 0x000086d9 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000086dc, 0) 


# -- 0x000086dc 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000086de, 0) 


# -- 0x000086de 74 3d                                  je 0x871d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000871d, 0) 
 2: goto (0x000086e0, 0) 


# -- 0x000086e0 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000086e3, 0) 


# -- 0x000086e3 83 c0 01                               add $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> + 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x000086e6, 0) 


# -- 0x000086e6 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000086e8, 0) 


# -- 0x000086e8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000086eb, 0) 


# -- 0x000086eb e8 30 ab ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000086f0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x000086f0, 0)


# -- 0x000086f0 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x000086f4, 0) 


# -- 0x000086f4 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000086f7, 0) 


# -- 0x000086f7 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000086f9, 0) 


# -- 0x000086f9 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000086fd, 0) 


# -- 0x000086fd 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00008700, 0) 


# -- 0x00008700 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x00008703, 0) 


# -- 0x00008703 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008706, 0) 


# -- 0x00008706 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008708, 0) 


# -- 0x00008708 48 8b 4d e8                            mov -0x18(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000870c, 0) 


# -- 0x0000870c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008710, 0) 


# -- 0x00008710 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008713, 0) 


# -- 0x00008713 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008716, 0) 


# -- 0x00008716 e8 e3 af ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000871b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x0000871b, 0)


# -- 0x0000871b eb 10                                  jmp 0x872d
 0: goto (0x0000872d, 0) 


# -- 0x0000871d 48 8d 3d 91 57 00 00                   lea 0x5791(%rip),%rdi
 0: rdi<64> := 0x000000000000deb5;
 1: goto (0x00008724, 0) 


# -- 0x00008724 e8 97 ad ff ff                         call 0x34c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008729;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034c0, 0) #call with return address @ (0x00008729, 0)


# -- 0x00008729 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000872d, 0) 


# -- 0x0000872d c7 45 e4 00 00 00 00                   movl $0x0,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := 0<32>;
 1: goto (0x00008734, 0) 


# -- 0x00008734 e9 b3 00 00 00                         jmp 0x87ec
 0: goto (0x000087ec, 0) 


# -- 0x00008739 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000873d, 0) 


# -- 0x0000873d 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008740, 0) 


# -- 0x00008740 8b 55 e4                               mov -0x1c(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008743, 0) 


# -- 0x00008743 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008746, 0) 


# -- 0x00008746 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000874a, 0) 


# -- 0x0000874a 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000874d, 0) 


# -- 0x0000874d 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008750, 0) 


# -- 0x00008750 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00008754, 0) 


# -- 0x00008754 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008758, 0) 


# -- 0x00008758 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000875b, 0) 


# -- 0x0000875b 25 00 40 00 00                         and $0x4000,%eax
 0: %%0<32> := (0x00004000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008760, 0) 


# -- 0x00008760 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008762, 0) 


# -- 0x00008762 74 10                                  je 0x8774
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008774, 0) 
 2: goto (0x00008764, 0) 


# -- 0x00008764 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008768, 0) 


# -- 0x00008768 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000876f, 0) 


# -- 0x0000876f 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00008772, 0) 


# -- 0x00008772 74 73                                  je 0x87e7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000087e7, 0) 
 2: goto (0x00008774, 0) 


# -- 0x00008774 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008778, 0) 


# -- 0x00008778 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000877c, 0) 


# -- 0x0000877c 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00008780, 0) 


# -- 0x00008780 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008783, 0) 


# -- 0x00008783 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008786, 0) 


# -- 0x00008786 e8 35 a9 ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000878b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x0000878b, 0)


# -- 0x0000878b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000878d, 0) 


# -- 0x0000878d 75 59                                  jne 0x87e8
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000087e8, 0) 
 2: goto (0x0000878f, 0) 


# -- 0x0000878f 8b 55 d0                               mov -0x30(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008792, 0) 


# -- 0x00008792 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008796, 0) 


# -- 0x00008796 89 90 04 01 00 00                      mov %edx,0x104(%rax)
 0: @[(rax<64> + 260<64>),4] := rdx<64>{0,31};
 1: goto (0x0000879c, 0) 


# -- 0x0000879c 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000087a0, 0) 


# -- 0x000087a0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000087a3, 0) 


# -- 0x000087a3 e8 a8 a4 ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000087a8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x000087a8, 0)


# -- 0x000087a8 48 8b 55 f0                            mov -0x10(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000087ac, 0) 


# -- 0x000087ac 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000087b0, 0) 


# -- 0x000087b0 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000087b3, 0) 


# -- 0x000087b3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000087b6, 0) 


# -- 0x000087b6 e8 ef fa ff ff                         call 0x82aa
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000087bb;
 2: rsp<64> := %%0<64>;
 3: goto (0x000082aa, 0) #call with return address @ (0x000087bb, 0)


# -- 0x000087bb 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x000087be, 0) 


# -- 0x000087be 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000087c0, 0) 


# -- 0x000087c0 74 07                                  je 0x87c9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000087c9, 0) 
 2: goto (0x000087c2, 0) 


# -- 0x000087c2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000087c7, 0) 


# -- 0x000087c7 eb 4d                                  jmp 0x8816
 0: goto (0x00008816, 0) 


# -- 0x000087c9 48 8b 4d f0                            mov -0x10(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000087cd, 0) 


# -- 0x000087cd 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000087d1, 0) 


# -- 0x000087d1 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x000087d6, 0) 


# -- 0x000087d6 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000087d9, 0) 


# -- 0x000087d9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000087dc, 0) 


# -- 0x000087dc e8 eb f8 ff ff                         call 0x80cc
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000087e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x000080cc, 0) #call with return address @ (0x000087e1, 0)


# -- 0x000087e1 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000087e5, 0) 


# -- 0x000087e5 eb 2f                                  jmp 0x8816
 0: goto (0x00008816, 0) 


# -- 0x000087e7 90                                     nop
 0: goto (0x000087e8, 0) 


# -- 0x000087e8 83 45 e4 01                            addl $0x1,-0x1c(%rbp)
 0: %%0<64> := (rbp<64> + -28<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x000087ec, 0) 


# -- 0x000087ec 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000087f0, 0) 


# -- 0x000087f0 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000087f3, 0) 


# -- 0x000087f3 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000087f6, 0) 


# -- 0x000087f6 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x000087f8, 0) 


# -- 0x000087f8 0f 87 3b ff ff ff                      ja 0x8739
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00008739, 0) 
 2: goto (0x000087fe, 0) 


# -- 0x000087fe 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008802, 0) 


# -- 0x00008802 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008805, 0) 


# -- 0x00008805 e8 46 a4 ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000880a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x0000880a, 0)


# -- 0x0000880a 48 8d 3d 9f 61 00 00                   lea 0x619f(%rip),%rdi
 0: rdi<64> := 0x000000000000e9b0;
 1: goto (0x00008811, 0) 


# -- 0x00008811 e8 22 4e 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008816;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x00008816, 0)


# -- 0x00008816 48 8b 75 f8                            mov -0x8(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000881a, 0) 


# -- 0x0000881a 64 48 33 34 25 28 00 00 00             xor %fs:0x28,%rsi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rsi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rsi<64>{0} ^ %%0<64>{0}) ^ (rsi<64>{4} ^ %%0<64>{4})) ^
        ((rsi<64>{2} ^ %%0<64>{2}) ^ (rsi<64>{6} ^ %%0<64>{6}))) ^
       (((rsi<64>{1} ^ %%0<64>{1}) ^ (rsi<64>{5} ^ %%0<64>{5})) ^
        ((rsi<64>{3} ^ %%0<64>{3}) ^ (rsi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rsi<64> := %%1<64>;
12: goto (0x00008823, 0) 


# -- 0x00008823 74 05                                  je 0x882a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000882a, 0) 
 2: goto (0x00008825, 0) 


# -- 0x00008825 e8 46 a6 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000882a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000882a, 0)


# -- 0x0000882a c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000882b, 0) 


# -- 0x0000882b c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000882c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000882d, 0) 


# -- 0x0000882d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00008830, 0) 


# -- 0x00008830 48 81 ec 50 04 00 00                   sub $0x450,%rsp
 0: %%0<64> := (rsp<64> - 1104<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00008837, 0) 


# -- 0x00008837 48 89 bd c8 fb ff ff                   mov %rdi,-0x438(%rbp)
 0: @[(rbp<64> + -1080<64>),8] := rdi<64>;
 1: goto (0x0000883e, 0) 


# -- 0x0000883e 89 b5 c4 fb ff ff                      mov %esi,-0x43c(%rbp)
 0: @[(rbp<64> + -1084<64>),4] := rsi<64>{0,31};
 1: goto (0x00008844, 0) 


# -- 0x00008844 48 89 95 b8 fb ff ff                   mov %rdx,-0x448(%rbp)
 0: @[(rbp<64> + -1096<64>),8] := rdx<64>;
 1: goto (0x0000884b, 0) 


# -- 0x0000884b 89 8d c0 fb ff ff                      mov %ecx,-0x440(%rbp)
 0: @[(rbp<64> + -1088<64>),4] := rcx<64>{0,31};
 1: goto (0x00008851, 0) 


# -- 0x00008851 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000885a, 0) 


# -- 0x0000885a 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000885e, 0) 


# -- 0x0000885e 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00008860, 0) 


# -- 0x00008860 48 8d 85 f0 fb ff ff                   lea -0x410(%rbp),%rax
 0: %%0<64> := (rbp<64> + -1040<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008867, 0) 


# -- 0x00008867 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000886b, 0) 


# -- 0x0000886b 48 89 85 e0 fb ff ff                   mov %rax,-0x420(%rbp)
 0: @[(rbp<64> + -1056<64>),8] := rax<64>;
 1: goto (0x00008872, 0) 


# -- 0x00008872 48 8d 8d d8 fb ff ff                   lea -0x428(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1064<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008879, 0) 


# -- 0x00008879 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008880, 0) 


# -- 0x00008880 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00008885, 0) 


# -- 0x00008885 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008888, 0) 


# -- 0x00008888 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000888b, 0) 


# -- 0x0000888b e8 6e ae ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008890;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008890, 0)


# -- 0x00008890 8b 85 d8 fb ff ff                      mov -0x428(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1064<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008896, 0) 


# -- 0x00008896 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00008898, 0) 


# -- 0x00008898 e8 13 ac ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000889d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000889d, 0)


# -- 0x0000889d 89 85 d8 fb ff ff                      mov %eax,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),4] := rax<64>{0,31};
 1: goto (0x000088a3, 0) 


# -- 0x000088a3 8b 85 d8 fb ff ff                      mov -0x428(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1064<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000088a9, 0) 


# -- 0x000088a9 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000088ab, 0) 


# -- 0x000088ab 74 28                                  je 0x88d5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000088d5, 0) 
 2: goto (0x000088ad, 0) 


# -- 0x000088ad 8b b5 c4 fb ff ff                      mov -0x43c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x000088b3, 0) 


# -- 0x000088b3 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000088ba, 0) 


# -- 0x000088ba 4c 8d 05 57 61 00 00                   lea 0x6157(%rip),%r8
 0: r8<64> := 0x000000000000ea18;
 1: goto (0x000088c1, 0) 


# -- 0x000088c1 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x000088c8, 0) 


# -- 0x000088c8 ba 03 00 00 80                         mov $0x80000003,%edx
 0: rdx<64> := 0x0000000080000003;
 1: goto (0x000088cd, 0) 


# -- 0x000088cd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000088d0, 0) 


# -- 0x000088d0 e8 03 e6 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000088d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x000088d5, 0)


# -- 0x000088d5 8b 05 05 89 20 00                      mov 0x208905(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000088db, 0) 


# -- 0x000088db 83 e0 02                               and $0x2,%eax
 0: %%0<32> := (2<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{1});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x000088de, 0) 


# -- 0x000088de 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000088e0, 0) 


# -- 0x000088e0 75 39                                  jne 0x891b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000891b, 0) 
 2: goto (0x000088e2, 0) 


# -- 0x000088e2 8b b5 c4 fb ff ff                      mov -0x43c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x000088e8, 0) 


# -- 0x000088e8 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000088ef, 0) 


# -- 0x000088ef 4c 8d 05 62 61 00 00                   lea 0x6162(%rip),%r8
 0: r8<64> := 0x000000000000ea58;
 1: goto (0x000088f6, 0) 


# -- 0x000088f6 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x000088fd, 0) 


# -- 0x000088fd ba 02 00 00 80                         mov $0x80000002,%edx
 0: rdx<64> := 0x0000000080000002;
 1: goto (0x00008902, 0) 


# -- 0x00008902 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008905, 0) 


# -- 0x00008905 e8 ce e5 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000890a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x0000890a, 0)


# -- 0x0000890a 48 8d 3d 7f 61 00 00                   lea 0x617f(%rip),%rdi
 0: rdi<64> := 0x000000000000ea90;
 1: goto (0x00008911, 0) 


# -- 0x00008911 e8 d9 4a 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008916;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x00008916, 0)


# -- 0x00008916 e9 30 01 00 00                         jmp 0x8a4b
 0: goto (0x00008a4b, 0) 


# -- 0x0000891b c7 85 dc fb ff ff 00 00 00 00          movl $0x0,-0x424(%rbp)
 0: @[(rbp<64> + -1060<64>),4] := 0<32>;
 1: goto (0x00008925, 0) 


# -- 0x00008925 e9 e4 00 00 00                         jmp 0x8a0e
 0: goto (0x00008a0e, 0) 


# -- 0x0000892a 48 8b 85 b8 fb ff ff                   mov -0x448(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1096<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008931, 0) 


# -- 0x00008931 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008934, 0) 


# -- 0x00008934 8b 95 dc fb ff ff                      mov -0x424(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -1060<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000893a, 0) 


# -- 0x0000893a 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000893d, 0) 


# -- 0x0000893d 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x00008941, 0) 


# -- 0x00008941 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00008944, 0) 


# -- 0x00008944 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008947, 0) 


# -- 0x00008947 48 89 85 e8 fb ff ff                   mov %rax,-0x418(%rbp)
 0: @[(rbp<64> + -1048<64>),8] := rax<64>;
 1: goto (0x0000894e, 0) 


# -- 0x0000894e 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008955, 0) 


# -- 0x00008955 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000895c, 0) 


# -- 0x0000895c 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000895f, 0) 


# -- 0x0000895f 75 17                                  jne 0x8978
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008978, 0) 
 2: goto (0x00008961, 0) 


# -- 0x00008961 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008968, 0) 


# -- 0x00008968 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000896b, 0) 


# -- 0x0000896b 25 00 40 00 00                         and $0x4000,%eax
 0: %%0<32> := (0x00004000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008970, 0) 


# -- 0x00008970 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008972, 0) 


# -- 0x00008972 0f 85 8e 00 00 00                      jne 0x8a06
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008a06, 0) 
 2: goto (0x00008978, 0) 


# -- 0x00008978 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000897f, 0) 


# -- 0x0000897f 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008983, 0) 


# -- 0x00008983 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008986, 0) 


# -- 0x00008986 e8 c5 a4 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000898b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000898b, 0)


# -- 0x0000898b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000898d, 0) 


# -- 0x0000898d e8 be a5 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008992;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00008992, 0)


# -- 0x00008992 89 85 d8 fb ff ff                      mov %eax,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),4] := rax<64>{0,31};
 1: goto (0x00008998, 0) 


# -- 0x00008998 8b 85 d8 fb ff ff                      mov -0x428(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1064<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000899e, 0) 


# -- 0x0000899e 89 85 f0 fb ff ff                      mov %eax,-0x410(%rbp)
 0: @[(rbp<64> + -1040<64>),4] := rax<64>{0,31};
 1: goto (0x000089a4, 0) 


# -- 0x000089a4 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000089ab, 0) 


# -- 0x000089ab 48 8b 48 40                            mov 0x40(%rax),%rcx
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000089af, 0) 


# -- 0x000089af 48 8b 85 e0 fb ff ff                   mov -0x420(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1056<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000089b6, 0) 


# -- 0x000089b6 ba fc 03 00 00                         mov $0x3fc,%edx
 0: rdx<64> := 1020<64>;
 1: goto (0x000089bb, 0) 


# -- 0x000089bb 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000089be, 0) 


# -- 0x000089be 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000089c1, 0) 


# -- 0x000089c1 e8 fa a2 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000089c6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x000089c6, 0)


# -- 0x000089c6 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000089cd, 0) 


# -- 0x000089cd 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000089d1, 0) 


# -- 0x000089d1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000089d4, 0) 


# -- 0x000089d4 e8 77 a4 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000089d9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x000089d9, 0)


# -- 0x000089d9 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000089dd, 0) 


# -- 0x000089dd 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x000089e0, 0) 


# -- 0x000089e0 48 8d 95 f0 fb ff ff                   lea -0x410(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -1040<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000089e7, 0) 


# -- 0x000089e7 8b b5 c4 fb ff ff                      mov -0x43c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x000089ed, 0) 


# -- 0x000089ed 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000089f4, 0) 


# -- 0x000089f4 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000089f7, 0) 


# -- 0x000089f7 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x000089fc, 0) 


# -- 0x000089fc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000089ff, 0) 


# -- 0x000089ff e8 d4 e4 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008a04;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008a04, 0)


# -- 0x00008a04 eb 01                                  jmp 0x8a07
 0: goto (0x00008a07, 0) 


# -- 0x00008a06 90                                     nop
 0: goto (0x00008a07, 0) 


# -- 0x00008a07 83 85 dc fb ff ff 01                   addl $0x1,-0x424(%rbp)
 0: %%0<64> := (rbp<64> + -1060<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00008a0e, 0) 


# -- 0x00008a0e 48 8b 85 b8 fb ff ff                   mov -0x448(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1096<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008a15, 0) 


# -- 0x00008a15 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008a18, 0) 


# -- 0x00008a18 8b 85 dc fb ff ff                      mov -0x424(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1060<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008a1e, 0) 


# -- 0x00008a1e 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00008a20, 0) 


# -- 0x00008a20 0f 87 04 ff ff ff                      ja 0x892a
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000892a, 0) 
 2: goto (0x00008a26, 0) 


# -- 0x00008a26 8b b5 c4 fb ff ff                      mov -0x43c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008a2c, 0) 


# -- 0x00008a2c 48 8b 85 c8 fb ff ff                   mov -0x438(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1080<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008a33, 0) 


# -- 0x00008a33 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x00008a39, 0) 


# -- 0x00008a39 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x00008a3e, 0) 


# -- 0x00008a3e ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x00008a43, 0) 


# -- 0x00008a43 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008a46, 0) 


# -- 0x00008a46 e8 8d e4 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008a4b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008a4b, 0)


# -- 0x00008a4b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008a4f, 0) 


# -- 0x00008a4f 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00008a58, 0) 


# -- 0x00008a58 74 05                                  je 0x8a5f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008a5f, 0) 
 2: goto (0x00008a5a, 0) 


# -- 0x00008a5a e8 11 a4 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008a5f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00008a5f, 0)


# -- 0x00008a5f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00008a60, 0) 


# -- 0x00008a60 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00008a61 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00008a62, 0) 


# -- 0x00008a62 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00008a65, 0) 


# -- 0x00008a65 48 81 ec 70 04 00 00                   sub $0x470,%rsp
 0: %%0<64> := (rsp<64> - 1136<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00008a6c, 0) 


# -- 0x00008a6c 48 89 bd a8 fb ff ff                   mov %rdi,-0x458(%rbp)
 0: @[(rbp<64> + -1112<64>),8] := rdi<64>;
 1: goto (0x00008a73, 0) 


# -- 0x00008a73 89 b5 a4 fb ff ff                      mov %esi,-0x45c(%rbp)
 0: @[(rbp<64> + -1116<64>),4] := rsi<64>{0,31};
 1: goto (0x00008a79, 0) 


# -- 0x00008a79 48 89 95 98 fb ff ff                   mov %rdx,-0x468(%rbp)
 0: @[(rbp<64> + -1128<64>),8] := rdx<64>;
 1: goto (0x00008a80, 0) 


# -- 0x00008a80 89 8d a0 fb ff ff                      mov %ecx,-0x460(%rbp)
 0: @[(rbp<64> + -1120<64>),4] := rcx<64>{0,31};
 1: goto (0x00008a86, 0) 


# -- 0x00008a86 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008a8f, 0) 


# -- 0x00008a8f 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00008a93, 0) 


# -- 0x00008a93 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00008a95, 0) 


# -- 0x00008a95 48 c7 85 d8 fb ff ff 00 00 00 00       movq $0x0,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),8] := 0<64>;
 1: goto (0x00008aa0, 0) 


# -- 0x00008aa0 c6 85 bb fb ff ff 00                   movb $0x0,-0x445(%rbp)
 0: @[(rbp<64> + -1093<64>),1] := 0<8>;
 1: goto (0x00008aa7, 0) 


# -- 0x00008aa7 c7 85 cc fb ff ff 06 00 00 80          movl $0x80000006,-0x434(%rbp)
 0: @[(rbp<64> + -1076<64>),4] := 0x80000006;
 1: goto (0x00008ab1, 0) 


# -- 0x00008ab1 48 8d 05 fc 5f 00 00                   lea 0x5ffc(%rip),%rax
 0: rax<64> := 0x000000000000eab4;
 1: goto (0x00008ab8, 0) 


# -- 0x00008ab8 48 89 85 e0 fb ff ff                   mov %rax,-0x420(%rbp)
 0: @[(rbp<64> + -1056<64>),8] := rax<64>;
 1: goto (0x00008abf, 0) 


# -- 0x00008abf 48 8d 8d c4 fb ff ff                   lea -0x43c(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1084<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008ac6, 0) 


# -- 0x00008ac6 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008acd, 0) 


# -- 0x00008acd ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00008ad2, 0) 


# -- 0x00008ad2 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008ad5, 0) 


# -- 0x00008ad5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008ad8, 0) 


# -- 0x00008ad8 e8 21 ac ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008add;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008add, 0)


# -- 0x00008add 8b 85 c4 fb ff ff                      mov -0x43c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008ae3, 0) 


# -- 0x00008ae3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00008ae5, 0) 


# -- 0x00008ae5 e8 66 a4 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008aea;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00008aea, 0)


# -- 0x00008aea 89 85 c4 fb ff ff                      mov %eax,-0x43c(%rbp)
 0: @[(rbp<64> + -1084<64>),4] := rax<64>{0,31};
 1: goto (0x00008af0, 0) 


# -- 0x00008af0 48 8d 8d c0 fb ff ff                   lea -0x440(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1088<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008af7, 0) 


# -- 0x00008af7 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008afe, 0) 


# -- 0x00008afe ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00008b03, 0) 


# -- 0x00008b03 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008b06, 0) 


# -- 0x00008b06 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008b09, 0) 


# -- 0x00008b09 e8 f0 ab ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008b0e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008b0e, 0)


# -- 0x00008b0e 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b14, 0) 


# -- 0x00008b14 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00008b16, 0) 


# -- 0x00008b16 e8 35 a4 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008b1b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00008b1b, 0)


# -- 0x00008b1b 89 85 c0 fb ff ff                      mov %eax,-0x440(%rbp)
 0: @[(rbp<64> + -1088<64>),4] := rax<64>{0,31};
 1: goto (0x00008b21, 0) 


# -- 0x00008b21 8b 85 c4 fb ff ff                      mov -0x43c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b27, 0) 


# -- 0x00008b27 8d 50 fa                               lea -0x6(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + -6<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x00008b2a, 0) 


# -- 0x00008b2a 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b30, 0) 


# -- 0x00008b30 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00008b32, 0) 


# -- 0x00008b32 73 4d                                  jae 0x8b81
 0: if ! (cf<1>) goto 1 else goto 2
 1: goto (0x00008b81, 0) 
 2: goto (0x00008b34, 0) 


# -- 0x00008b34 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008b3a, 0) 


# -- 0x00008b3a 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008b41, 0) 


# -- 0x00008b41 4c 8d 05 80 5f 00 00                   lea 0x5f80(%rip),%r8
 0: r8<64> := 0x000000000000eac8;
 1: goto (0x00008b48, 0) 


# -- 0x00008b48 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x00008b4f, 0) 


# -- 0x00008b4f ba 03 00 00 80                         mov $0x80000003,%edx
 0: rdx<64> := 0x0000000080000003;
 1: goto (0x00008b54, 0) 


# -- 0x00008b54 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008b57, 0) 


# -- 0x00008b57 e8 7c e3 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008b5c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008b5c, 0)


# -- 0x00008b5c 8b 85 c4 fb ff ff                      mov -0x43c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1084<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b62, 0) 


# -- 0x00008b62 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b64, 0) 


# -- 0x00008b64 48 8d 50 fc                            lea -0x4(%rax),%rdx
 0: %%0<64> := (rax<64> + -4<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008b68, 0) 


# -- 0x00008b68 48 8d 8d f0 fb ff ff                   lea -0x410(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1040<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008b6f, 0) 


# -- 0x00008b6f 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008b76, 0) 


# -- 0x00008b76 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008b79, 0) 


# -- 0x00008b79 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008b7c, 0) 


# -- 0x00008b7c e8 7d ab ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008b81;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008b81, 0)


# -- 0x00008b81 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b87, 0) 


# -- 0x00008b87 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008b89, 0) 


# -- 0x00008b89 74 52                                  je 0x8bdd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008bdd, 0) 
 2: goto (0x00008b8b, 0) 


# -- 0x00008b8b 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b91, 0) 


# -- 0x00008b91 83 c0 01                               add $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> + 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x00008b94, 0) 


# -- 0x00008b94 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008b96, 0) 


# -- 0x00008b96 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008b99, 0) 


# -- 0x00008b99 e8 82 a6 ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008b9e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x00008b9e, 0)


# -- 0x00008b9e 48 89 85 d0 fb ff ff                   mov %rax,-0x430(%rbp)
 0: @[(rbp<64> + -1072<64>),8] := rax<64>;
 1: goto (0x00008ba5, 0) 


# -- 0x00008ba5 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008bab, 0) 


# -- 0x00008bab 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008bad, 0) 


# -- 0x00008bad 48 8b 85 d0 fb ff ff                   mov -0x430(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1072<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008bb4, 0) 


# -- 0x00008bb4 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00008bb7, 0) 


# -- 0x00008bb7 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x00008bba, 0) 


# -- 0x00008bba 8b 85 c0 fb ff ff                      mov -0x440(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1088<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008bc0, 0) 


# -- 0x00008bc0 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008bc2, 0) 


# -- 0x00008bc2 48 8b 8d d0 fb ff ff                   mov -0x430(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -1072<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00008bc9, 0) 


# -- 0x00008bc9 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008bd0, 0) 


# -- 0x00008bd0 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008bd3, 0) 


# -- 0x00008bd3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008bd6, 0) 


# -- 0x00008bd6 e8 23 ab ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008bdb;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008bdb, 0)


# -- 0x00008bdb eb 13                                  jmp 0x8bf0
 0: goto (0x00008bf0, 0) 


# -- 0x00008bdd 48 8d 3d d1 52 00 00                   lea 0x52d1(%rip),%rdi
 0: rdi<64> := 0x000000000000deb5;
 1: goto (0x00008be4, 0) 


# -- 0x00008be4 e8 d7 a8 ff ff                         call 0x34c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008be9;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034c0, 0) #call with return address @ (0x00008be9, 0)


# -- 0x00008be9 48 89 85 d0 fb ff ff                   mov %rax,-0x430(%rbp)
 0: @[(rbp<64> + -1072<64>),8] := rax<64>;
 1: goto (0x00008bf0, 0) 


# -- 0x00008bf0 c7 85 c8 fb ff ff 00 00 00 00          movl $0x0,-0x438(%rbp)
 0: @[(rbp<64> + -1080<64>),4] := 0<32>;
 1: goto (0x00008bfa, 0) 


# -- 0x00008bfa e9 9a 00 00 00                         jmp 0x8c99
 0: goto (0x00008c99, 0) 


# -- 0x00008bff 48 8b 85 98 fb ff ff                   mov -0x468(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c06, 0) 


# -- 0x00008c06 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c09, 0) 


# -- 0x00008c09 8b 95 c8 fb ff ff                      mov -0x438(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -1080<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008c0f, 0) 


# -- 0x00008c0f 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008c12, 0) 


# -- 0x00008c12 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x00008c16, 0) 


# -- 0x00008c16 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00008c19, 0) 


# -- 0x00008c19 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c1c, 0) 


# -- 0x00008c1c 48 89 85 e8 fb ff ff                   mov %rax,-0x418(%rbp)
 0: @[(rbp<64> + -1048<64>),8] := rax<64>;
 1: goto (0x00008c23, 0) 


# -- 0x00008c23 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c2a, 0) 


# -- 0x00008c2a 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c2e, 0) 


# -- 0x00008c2e 48 8b 95 d0 fb ff ff                   mov -0x430(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1072<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00008c35, 0) 


# -- 0x00008c35 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008c38, 0) 


# -- 0x00008c38 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008c3b, 0) 


# -- 0x00008c3b e8 80 a4 ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008c40;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x00008c40, 0)


# -- 0x00008c40 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008c42, 0) 


# -- 0x00008c42 75 4e                                  jne 0x8c92
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008c92, 0) 
 2: goto (0x00008c44, 0) 


# -- 0x00008c44 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c4b, 0) 


# -- 0x00008c4b 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008c4e, 0) 


# -- 0x00008c4e 25 00 40 00 00                         and $0x4000,%eax
 0: %%0<32> := (0x00004000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00008c53, 0) 


# -- 0x00008c53 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008c55, 0) 


# -- 0x00008c55 74 2d                                  je 0x8c84
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008c84, 0) 
 2: goto (0x00008c57, 0) 


# -- 0x00008c57 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c5e, 0) 


# -- 0x00008c5e 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c65, 0) 


# -- 0x00008c65 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x00008c68, 0) 


# -- 0x00008c68 75 1a                                  jne 0x8c84
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008c84, 0) 
 2: goto (0x00008c6a, 0) 


# -- 0x00008c6a c7 85 cc fb ff ff 05 00 00 80          movl $0x80000005,-0x434(%rbp)
 0: @[(rbp<64> + -1076<64>),4] := 0x80000005;
 1: goto (0x00008c74, 0) 


# -- 0x00008c74 48 8d 05 95 5e 00 00                   lea 0x5e95(%rip),%rax
 0: rax<64> := 0x000000000000eb10;
 1: goto (0x00008c7b, 0) 


# -- 0x00008c7b 48 89 85 e0 fb ff ff                   mov %rax,-0x420(%rbp)
 0: @[(rbp<64> + -1056<64>),8] := rax<64>;
 1: goto (0x00008c82, 0) 


# -- 0x00008c82 eb 0e                                  jmp 0x8c92
 0: goto (0x00008c92, 0) 


# -- 0x00008c84 48 8b 85 e8 fb ff ff                   mov -0x418(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1048<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008c8b, 0) 


# -- 0x00008c8b 48 89 85 d8 fb ff ff                   mov %rax,-0x428(%rbp)
 0: @[(rbp<64> + -1064<64>),8] := rax<64>;
 1: goto (0x00008c92, 0) 


# -- 0x00008c92 83 85 c8 fb ff ff 01                   addl $0x1,-0x438(%rbp)
 0: %%0<64> := (rbp<64> + -1080<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00008c99, 0) 


# -- 0x00008c99 48 8b 85 98 fb ff ff                   mov -0x468(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008ca0, 0) 


# -- 0x00008ca0 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008ca3, 0) 


# -- 0x00008ca3 8b 85 c8 fb ff ff                      mov -0x438(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1080<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008ca9, 0) 


# -- 0x00008ca9 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00008cab, 0) 


# -- 0x00008cab 0f 87 4e ff ff ff                      ja 0x8bff
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00008bff, 0) 
 2: goto (0x00008cb1, 0) 


# -- 0x00008cb1 48 8b 85 d0 fb ff ff                   mov -0x430(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1072<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008cb8, 0) 


# -- 0x00008cb8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008cbb, 0) 


# -- 0x00008cbb e8 90 9f ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008cc0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x00008cc0, 0)


# -- 0x00008cc0 48 8d 8d bc fb ff ff                   lea -0x444(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1092<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008cc7, 0) 


# -- 0x00008cc7 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008cce, 0) 


# -- 0x00008cce ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00008cd3, 0) 


# -- 0x00008cd3 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008cd6, 0) 


# -- 0x00008cd6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008cd9, 0) 


# -- 0x00008cd9 e8 20 aa ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008cde;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008cde, 0)


# -- 0x00008cde 0f b7 85 bc fb ff ff                   movzwl -0x444(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1092<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008ce5, 0) 


# -- 0x00008ce5 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008ce8, 0) 


# -- 0x00008ce8 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00008cea, 0) 


# -- 0x00008cea e8 e1 a5 ff ff                         call 0x32d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008cef;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032d0, 0) #call with return address @ (0x00008cef, 0)


# -- 0x00008cef 66 89 85 bc fb ff ff                   mov %ax,-0x444(%rbp)
 0: @[(rbp<64> + -1092<64>),2] := rax<64>{0,15};
 1: goto (0x00008cf6, 0) 


# -- 0x00008cf6 48 83 bd d8 fb ff ff 00                cmpq $0x0,-0x428(%rbp)
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00008cfe, 0) 


# -- 0x00008cfe 75 5f                                  jne 0x8d5f
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008d5f, 0) 
 2: goto (0x00008d00, 0) 


# -- 0x00008d00 0f b7 85 bc fb ff ff                   movzwl -0x444(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1092<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008d07, 0) 


# -- 0x00008d07 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008d0a, 0) 


# -- 0x00008d0a 48 8d 34 00                            lea (%rax,%rax,1),%rsi
 0: %%0<64> := (rax<64> + rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008d0e, 0) 


# -- 0x00008d0e 48 8d 95 f0 fb ff ff                   lea -0x410(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -1040<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008d15, 0) 


# -- 0x00008d15 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008d1c, 0) 


# -- 0x00008d1c b9 00 04 00 00                         mov $0x400,%ecx
 0: rcx<64> := 1024<64>;
 1: goto (0x00008d21, 0) 


# -- 0x00008d21 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008d24, 0) 


# -- 0x00008d24 e8 88 aa ff ff                         call 0x37b1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008d29;
 2: rsp<64> := %%0<64>;
 3: goto (0x000037b1, 0) #call with return address @ (0x00008d29, 0)


# -- 0x00008d29 48 8b 8d e0 fb ff ff                   mov -0x420(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -1056<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00008d30, 0) 


# -- 0x00008d30 8b 95 cc fb ff ff                      mov -0x434(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -1076<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008d36, 0) 


# -- 0x00008d36 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008d3c, 0) 


# -- 0x00008d3c 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008d43, 0) 


# -- 0x00008d43 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x00008d46, 0) 


# -- 0x00008d46 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x00008d4d, 0) 


# -- 0x00008d4d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008d50, 0) 


# -- 0x00008d50 e8 83 e1 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008d55;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008d55, 0)


# -- 0x00008d55 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008d5a, 0) 


# -- 0x00008d5a e9 e5 01 00 00                         jmp 0x8f44
 0: goto (0x00008f44, 0) 


# -- 0x00008d5f 83 bd a4 fb ff ff 07                   cmpl $0x7,-0x45c(%rbp)
 0: %%0<32> := @[(rbp<64> + -1116<64>),4];
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00008d66, 0) 


# -- 0x00008d66 75 65                                  jne 0x8dcd
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00008dcd, 0) 
 2: goto (0x00008d68, 0) 


# -- 0x00008d68 8b 95 a0 fb ff ff                      mov -0x460(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -1120<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008d6e, 0) 


# -- 0x00008d6e 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008d75, 0) 


# -- 0x00008d75 89 90 04 01 00 00                      mov %edx,0x104(%rax)
 0: @[(rax<64> + 260<64>),4] := rdx<64>{0,31};
 1: goto (0x00008d7b, 0) 


# -- 0x00008d7b 48 8b 95 d8 fb ff ff                   mov -0x428(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00008d82, 0) 


# -- 0x00008d82 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008d89, 0) 


# -- 0x00008d89 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008d8c, 0) 


# -- 0x00008d8c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008d8f, 0) 


# -- 0x00008d8f e8 16 f5 ff ff                         call 0x82aa
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008d94;
 2: rsp<64> := %%0<64>;
 3: goto (0x000082aa, 0) #call with return address @ (0x00008d94, 0)


# -- 0x00008d94 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00008d97, 0) 


# -- 0x00008d97 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008d99, 0) 


# -- 0x00008d99 74 32                                  je 0x8dcd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008dcd, 0) 
 2: goto (0x00008d9b, 0) 


# -- 0x00008d9b 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008da1, 0) 


# -- 0x00008da1 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008da8, 0) 


# -- 0x00008da8 4c 8d 05 81 5d 00 00                   lea 0x5d81(%rip),%r8
 0: r8<64> := 0x000000000000eb30;
 1: goto (0x00008daf, 0) 


# -- 0x00008daf 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x00008db6, 0) 


# -- 0x00008db6 ba 02 00 00 80                         mov $0x80000002,%edx
 0: rdx<64> := 0x0000000080000002;
 1: goto (0x00008dbb, 0) 


# -- 0x00008dbb 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008dbe, 0) 


# -- 0x00008dbe e8 15 e1 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008dc3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008dc3, 0)


# -- 0x00008dc3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00008dc8, 0) 


# -- 0x00008dc8 e9 77 01 00 00                         jmp 0x8f44
 0: goto (0x00008f44, 0) 


# -- 0x00008dcd c7 85 c8 fb ff ff 00 00 00 00          movl $0x0,-0x438(%rbp)
 0: @[(rbp<64> + -1080<64>),4] := 0<32>;
 1: goto (0x00008dd7, 0) 


# -- 0x00008dd7 e9 a8 00 00 00                         jmp 0x8e84
 0: goto (0x00008e84, 0) 


# -- 0x00008ddc 48 8d 8d be fb ff ff                   lea -0x442(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1090<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008de3, 0) 


# -- 0x00008de3 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008dea, 0) 


# -- 0x00008dea ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00008def, 0) 


# -- 0x00008def 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008df2, 0) 


# -- 0x00008df2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008df5, 0) 


# -- 0x00008df5 e8 04 a9 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008dfa;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00008dfa, 0)


# -- 0x00008dfa 0f b7 85 be fb ff ff                   movzwl -0x442(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1090<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008e01, 0) 


# -- 0x00008e01 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008e04, 0) 


# -- 0x00008e04 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00008e06, 0) 


# -- 0x00008e06 e8 c5 a4 ff ff                         call 0x32d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008e0b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032d0, 0) #call with return address @ (0x00008e0b, 0)


# -- 0x00008e0b 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008e0e, 0) 


# -- 0x00008e0e 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008e10, 0) 


# -- 0x00008e10 74 02                                  je 0x8e14
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008e14, 0) 
 2: goto (0x00008e12, 0) 


# -- 0x00008e12 eb 69                                  jmp 0x8e7d
 0: goto (0x00008e7d, 0) 


# -- 0x00008e14 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008e1a, 0) 


# -- 0x00008e1a 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008e21, 0) 


# -- 0x00008e21 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x00008e27, 0) 


# -- 0x00008e27 b9 0c 00 00 00                         mov $0xc,%ecx
 0: rcx<64> := 12<64>;
 1: goto (0x00008e2c, 0) 


# -- 0x00008e2c ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x00008e31, 0) 


# -- 0x00008e31 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008e34, 0) 


# -- 0x00008e34 e8 9f e0 ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008e39;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008e39, 0)


# -- 0x00008e39 48 8d 8d be fb ff ff                   lea -0x442(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1090<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008e40, 0) 


# -- 0x00008e40 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008e47, 0) 


# -- 0x00008e47 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00008e4c, 0) 


# -- 0x00008e4c 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008e4f, 0) 


# -- 0x00008e4f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008e52, 0) 


# -- 0x00008e52 e8 3a aa ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008e57;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00008e57, 0)


# -- 0x00008e57 48 8b 8d d8 fb ff ff                   mov -0x428(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00008e5e, 0) 


# -- 0x00008e5e 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008e65, 0) 


# -- 0x00008e65 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x00008e6a, 0) 


# -- 0x00008e6a 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008e6d, 0) 


# -- 0x00008e6d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008e70, 0) 


# -- 0x00008e70 e8 57 f2 ff ff                         call 0x80cc
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008e75;
 2: rsp<64> := %%0<64>;
 3: goto (0x000080cc, 0) #call with return address @ (0x00008e75, 0)


# -- 0x00008e75 c6 85 bb fb ff ff 01                   movb $0x1,-0x445(%rbp)
 0: @[(rbp<64> + -1093<64>),1] := 1<8>;
 1: goto (0x00008e7c, 0) 


# -- 0x00008e7c 90                                     nop
 0: goto (0x00008e7d, 0) 


# -- 0x00008e7d 83 85 c8 fb ff ff 01                   addl $0x1,-0x438(%rbp)
 0: %%0<64> := (rbp<64> + -1080<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x00008e84, 0) 


# -- 0x00008e84 0f b7 85 bc fb ff ff                   movzwl -0x444(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1092<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008e8b, 0) 


# -- 0x00008e8b 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00008e8e, 0) 


# -- 0x00008e8e 39 85 c8 fb ff ff                      cmp %eax,-0x438(%rbp)
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := @[(rbp<64> + -1080<64>),4];
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x00008e94, 0) 


# -- 0x00008e94 0f 8c 42 ff ff ff                      jl 0x8ddc
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x00008ddc, 0) 
 2: goto (0x00008e9a, 0) 


# -- 0x00008e9a 0f b6 85 bb fb ff ff                   movzbl -0x445(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -1093<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00008ea1, 0) 


# -- 0x00008ea1 83 f0 01                               xor $0x1,%eax
 0: %%0<32> := (1<32> ^ rax<64>{0,31});
 1: %%1<1> :=
     !
     ((((! (rax<64>{0}) ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x00008ea4, 0) 


# -- 0x00008ea4 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00008ea6, 0) 


# -- 0x00008ea6 74 72                                  je 0x8f1a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008f1a, 0) 
 2: goto (0x00008ea8, 0) 


# -- 0x00008ea8 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00008ead, 0) 


# -- 0x00008ead e8 ee 9f ff ff                         call 0x2ea0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008eb2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ea0, 0) #call with return address @ (0x00008eb2, 0)


# -- 0x00008eb2 66 89 85 be fb ff ff                   mov %ax,-0x442(%rbp)
 0: @[(rbp<64> + -1090<64>),2] := rax<64>{0,15};
 1: goto (0x00008eb9, 0) 


# -- 0x00008eb9 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008ebf, 0) 


# -- 0x00008ebf 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008ec6, 0) 


# -- 0x00008ec6 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x00008ecc, 0) 


# -- 0x00008ecc b9 0c 00 00 00                         mov $0xc,%ecx
 0: rcx<64> := 12<64>;
 1: goto (0x00008ed1, 0) 


# -- 0x00008ed1 ba 03 00 00 00                         mov $0x3,%edx
 0: rdx<64> := 3<64>;
 1: goto (0x00008ed6, 0) 


# -- 0x00008ed6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008ed9, 0) 


# -- 0x00008ed9 e8 fa df ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008ede;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008ede, 0)


# -- 0x00008ede 48 8d 8d be fb ff ff                   lea -0x442(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -1090<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00008ee5, 0) 


# -- 0x00008ee5 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008eec, 0) 


# -- 0x00008eec ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00008ef1, 0) 


# -- 0x00008ef1 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008ef4, 0) 


# -- 0x00008ef4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008ef7, 0) 


# -- 0x00008ef7 e8 95 a9 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008efc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00008efc, 0)


# -- 0x00008efc 48 8b 8d d8 fb ff ff                   mov -0x428(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -1064<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00008f03, 0) 


# -- 0x00008f03 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008f0a, 0) 


# -- 0x00008f0a ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x00008f0f, 0) 


# -- 0x00008f0f 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00008f12, 0) 


# -- 0x00008f12 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008f15, 0) 


# -- 0x00008f15 e8 b2 f1 ff ff                         call 0x80cc
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008f1a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000080cc, 0) #call with return address @ (0x00008f1a, 0)


# -- 0x00008f1a 8b b5 a4 fb ff ff                      mov -0x45c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -1116<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00008f20, 0) 


# -- 0x00008f20 48 8b 85 a8 fb ff ff                   mov -0x458(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -1112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008f27, 0) 


# -- 0x00008f27 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x00008f2d, 0) 


# -- 0x00008f2d b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x00008f32, 0) 


# -- 0x00008f32 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x00008f37, 0) 


# -- 0x00008f37 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00008f3a, 0) 


# -- 0x00008f3a e8 99 df ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008f3f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00008f3f, 0)


# -- 0x00008f3f b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00008f44, 0) 


# -- 0x00008f44 48 8b 7d f8                            mov -0x8(%rbp),%rdi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x00008f48, 0) 


# -- 0x00008f48 64 48 33 3c 25 28 00 00 00             xor %fs:0x28,%rdi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rdi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rdi<64>{0} ^ %%0<64>{0}) ^ (rdi<64>{4} ^ %%0<64>{4})) ^
        ((rdi<64>{2} ^ %%0<64>{2}) ^ (rdi<64>{6} ^ %%0<64>{6}))) ^
       (((rdi<64>{1} ^ %%0<64>{1}) ^ (rdi<64>{5} ^ %%0<64>{5})) ^
        ((rdi<64>{3} ^ %%0<64>{3}) ^ (rdi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rdi<64> := %%1<64>;
12: goto (0x00008f51, 0) 


# -- 0x00008f51 74 05                                  je 0x8f58
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00008f58, 0) 
 2: goto (0x00008f53, 0) 


# -- 0x00008f53 e8 18 9f ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008f58;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00008f58, 0)


# -- 0x00008f58 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00008f59, 0) 


# -- 0x00008f59 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00008f5a 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00008f5b, 0) 


# -- 0x00008f5b 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00008f5e, 0) 


# -- 0x00008f5e 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00008f62, 0) 


# -- 0x00008f62 89 7d cc                               mov %edi,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rdi<64>{0,31};
 1: goto (0x00008f65, 0) 


# -- 0x00008f65 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x00008f69, 0) 


# -- 0x00008f69 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x00008f6d, 0) 


# -- 0x00008f6d 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008f76, 0) 


# -- 0x00008f76 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00008f7a, 0) 


# -- 0x00008f7a 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00008f7c, 0) 


# -- 0x00008f7c 66 c7 45 de 03 00                      movw $0x3,-0x22(%rbp)
 0: @[(rbp<64> + -34<64>),2] := 3<16>;
 1: goto (0x00008f82, 0) 


# -- 0x00008f82 c7 45 e0 00 00 00 00                   movl $0x0,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := 0<32>;
 1: goto (0x00008f89, 0) 


# -- 0x00008f89 be 50 01 00 00                         mov $0x150,%esi
 0: rsi<64> := 336<64>;
 1: goto (0x00008f8e, 0) 


# -- 0x00008f8e bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00008f93, 0) 


# -- 0x00008f93 e8 e8 a3 ff ff                         call 0x3380
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000008f98;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003380, 0) #call with return address @ (0x00008f98, 0)


# -- 0x00008f98 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x00008f9c, 0) 


# -- 0x00008f9c 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008fa0, 0) 


# -- 0x00008fa0 8b 55 cc                               mov -0x34(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00008fa3, 0) 


# -- 0x00008fa3 89 90 d8 00 00 00                      mov %edx,0xd8(%rax)
 0: @[(rax<64> + 216<64>),4] := rdx<64>{0,31};
 1: goto (0x00008fa9, 0) 


# -- 0x00008fa9 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008fad, 0) 


# -- 0x00008fad 48 8d 15 e6 a6 ff ff                   lea -0x591a(%rip),%rdx
 0: rdx<64> := 0x000000000000369a;
 1: goto (0x00008fb4, 0) 


# -- 0x00008fb4 48 89 90 38 01 00 00                   mov %rdx,0x138(%rax)
 0: @[(rax<64> + 312<64>),8] := rdx<64>;
 1: goto (0x00008fbb, 0) 


# -- 0x00008fbb 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008fbf, 0) 


# -- 0x00008fbf 48 8d 15 06 a7 ff ff                   lea -0x58fa(%rip),%rdx
 0: rdx<64> := 0x00000000000036cc;
 1: goto (0x00008fc6, 0) 


# -- 0x00008fc6 48 89 90 40 01 00 00                   mov %rdx,0x140(%rax)
 0: @[(rax<64> + 320<64>),8] := rdx<64>;
 1: goto (0x00008fcd, 0) 


# -- 0x00008fcd 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00008fd1, 0) 


# -- 0x00008fd1 48 8d 15 6c a9 ff ff                   lea -0x5694(%rip),%rdx
 0: rdx<64> := 0x0000000000003944;
 1: goto (0x00008fd8, 0) 


# -- 0x00008fd8 48 89 90 48 01 00 00                   mov %rdx,0x148(%rax)
 0: @[(rax<64> + 328<64>),8] := rdx<64>;
 1: goto (0x00008fdf, 0) 


# -- 0x00008fdf 48 83 7d c0 00                         cmpq $0x0,-0x40(%rbp)
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00008fe4, 0) 


# -- 0x00008fe4 75 1f                                  jne 0x9005
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009005, 0) 
 2: goto (0x00008fe6, 0) 


# -- 0x00008fe6 48 8d 0d eb 64 00 00                   lea 0x64eb(%rip),%rcx
 0: rcx<64> := 0x000000000000f4d8;
 1: goto (0x00008fed, 0) 


# -- 0x00008fed ba 4a 09 00 00                         mov $0x94a,%edx
 0: rdx<64> := 2378<64>;
 1: goto (0x00008ff2, 0) 


# -- 0x00008ff2 48 8d 35 fb 48 00 00                   lea 0x48fb(%rip),%rsi
 0: rsi<64> := 0x000000000000d8f4;
 1: goto (0x00008ff9, 0) 


# -- 0x00008ff9 48 8d 3d 56 5b 00 00                   lea 0x5b56(%rip),%rdi
 0: rdi<64> := 0x000000000000eb56;
 1: goto (0x00009000, 0) 


# -- 0x00009000 e8 3b 9f ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009005;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x00009005, 0)


# -- 0x00009005 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009009, 0) 


# -- 0x00009009 ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x0000900e, 0) 


# -- 0x0000900e 48 8d 35 51 5b 00 00                   lea 0x5b51(%rip),%rsi
 0: rsi<64> := 0x000000000000eb66;
 1: goto (0x00009015, 0) 


# -- 0x00009015 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009018, 0) 


# -- 0x00009018 e8 74 a8 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000901d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x0000901d, 0)


# -- 0x0000901d 48 8b 05 fc 66 00 00                   mov 0x66fc(%rip),%rax
 0: %%0<64> := @[0x000000000000f720,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009024, 0) 


# -- 0x00009024 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009027, 0) 


# -- 0x00009027 e8 a2 46 00 00                         call 0xd6ce
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000902c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6ce, 0) #call with return address @ (0x0000902c, 0)


# -- 0x0000902c 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x00009030, 0) 


# -- 0x00009030 48 8d 4d e8                            lea -0x18(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009034, 0) 


# -- 0x00009034 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009038, 0) 


# -- 0x00009038 ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x0000903d, 0) 


# -- 0x0000903d 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009040, 0) 


# -- 0x00009040 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009043, 0) 


# -- 0x00009043 e8 49 a8 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009048;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009048, 0)


# -- 0x00009048 0f b7 45 de                            movzwl -0x22(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -34<64>),2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000904c, 0) 


# -- 0x0000904c 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000904f, 0) 


# -- 0x0000904f 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009051, 0) 


# -- 0x00009051 e8 4a 9e ff ff                         call 0x2ea0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009056;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ea0, 0) #call with return address @ (0x00009056, 0)


# -- 0x00009056 66 89 45 de                            mov %ax,-0x22(%rbp)
 0: @[(rbp<64> + -34<64>),2] := rax<64>{0,15};
 1: goto (0x0000905a, 0) 


# -- 0x0000905a 48 8d 4d de                            lea -0x22(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -34<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000905e, 0) 


# -- 0x0000905e 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009062, 0) 


# -- 0x00009062 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x00009067, 0) 


# -- 0x00009067 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000906a, 0) 


# -- 0x0000906a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000906d, 0) 


# -- 0x0000906d e8 1f a8 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009072;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009072, 0)


# -- 0x00009072 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009076, 0) 


# -- 0x00009076 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000907a, 0) 


# -- 0x0000907a ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x0000907f, 0) 


# -- 0x0000907f 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009082, 0) 


# -- 0x00009082 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009085, 0) 


# -- 0x00009085 e8 74 a6 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000908a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x0000908a, 0)


# -- 0x0000908a 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000908d, 0) 


# -- 0x0000908d 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000908f, 0) 


# -- 0x0000908f e8 bc 9e ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009094;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00009094, 0)


# -- 0x00009094 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x00009097, 0) 


# -- 0x00009097 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000909a, 0) 


# -- 0x0000909a 83 e0 02                               and $0x2,%eax
 0: %%0<32> := (2<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{1});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000909d, 0) 


# -- 0x0000909d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000909f, 0) 


# -- 0x0000909f 74 0f                                  je 0x90b0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000090b0, 0) 
 2: goto (0x000090a1, 0) 


# -- 0x000090a1 8b 05 39 81 20 00                      mov 0x208139(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000090a7, 0) 


# -- 0x000090a7 83 c8 04                               or $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (4<32> | %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ ! (rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x000090aa, 0) 


# -- 0x000090aa 89 05 30 81 20 00                      mov %eax,0x208130(%rip)
 0: @[0x00000000002111e0,4] := rax<64>{0,31};
 1: goto (0x000090b0, 0) 


# -- 0x000090b0 48 8d 4d e8                            lea -0x18(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000090b4, 0) 


# -- 0x000090b4 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000090b8, 0) 


# -- 0x000090b8 ba 08 00 00 00                         mov $0x8,%edx
 0: rdx<64> := 8<64>;
 1: goto (0x000090bd, 0) 


# -- 0x000090bd 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000090c0, 0) 


# -- 0x000090c0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000090c3, 0) 


# -- 0x000090c3 e8 36 a6 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000090c8;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x000090c8, 0)


# -- 0x000090c8 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000090cc, 0) 


# -- 0x000090cc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000090cf, 0) 


# -- 0x000090cf e8 fa 45 00 00                         call 0xd6ce
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000090d4;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6ce, 0) #call with return address @ (0x000090d4, 0)


# -- 0x000090d4 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x000090d8, 0) 


# -- 0x000090d8 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000090dc, 0) 


# -- 0x000090dc 48 8b 05 3d 66 00 00                   mov 0x663d(%rip),%rax
 0: %%0<64> := @[0x000000000000f720,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000090e3, 0) 


# -- 0x000090e3 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x000090e6, 0) 


# -- 0x000090e6 74 11                                  je 0x90f9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000090f9, 0) 
 2: goto (0x000090e8, 0) 


# -- 0x000090e8 48 8d 3d 81 5a 00 00                   lea 0x5a81(%rip),%rdi
 0: rdi<64> := 0x000000000000eb70;
 1: goto (0x000090ef, 0) 


# -- 0x000090ef e8 fb 42 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000090f4;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x000090f4, 0)


# -- 0x000090f4 e9 d7 01 00 00                         jmp 0x92d0
 0: goto (0x000092d0, 0) 


# -- 0x000090f9 48 8d 4d e4                            lea -0x1c(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -28<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000090fd, 0) 


# -- 0x000090fd 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009101, 0) 


# -- 0x00009101 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x00009106, 0) 


# -- 0x00009106 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009109, 0) 


# -- 0x00009109 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000910c, 0) 


# -- 0x0000910c e8 ed a5 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009111;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00009111, 0)


# -- 0x00009111 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009114, 0) 


# -- 0x00009114 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009116, 0) 


# -- 0x00009116 e8 95 a3 ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000911b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000911b, 0)


# -- 0x0000911b 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x0000911e, 0) 


# -- 0x0000911e 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009122, 0) 


# -- 0x00009122 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009129, 0) 


# -- 0x00009129 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000912c, 0) 


# -- 0x0000912c 75 62                                  jne 0x9190
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009190, 0) 
 2: goto (0x0000912e, 0) 


# -- 0x0000912e 8b 05 ac 80 20 00                      mov 0x2080ac(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009134, 0) 


# -- 0x00009134 25 00 40 00 00                         and $0x4000,%eax
 0: %%0<32> := (0x00004000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00009139, 0) 


# -- 0x00009139 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000913b, 0) 


# -- 0x0000913b 74 53                                  je 0x9190
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009190, 0) 
 2: goto (0x0000913d, 0) 


# -- 0x0000913d 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009140, 0) 


# -- 0x00009140 83 f8 05                               cmp $0x5,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 5<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009143, 0) 


# -- 0x00009143 74 4b                                  je 0x9190
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009190, 0) 
 2: goto (0x00009145, 0) 


# -- 0x00009145 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009148, 0) 


# -- 0x00009148 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000914b, 0) 


# -- 0x0000914b 0f 84 7b 01 00 00                      je 0x92cc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000092cc, 0) 
 2: goto (0x00009151, 0) 


# -- 0x00009151 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009154, 0) 


# -- 0x00009154 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009157, 0) 


# -- 0x00009157 0f 84 4a 01 00 00                      je 0x92a7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000092a7, 0) 
 2: goto (0x0000915d, 0) 


# -- 0x0000915d 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009161, 0) 


# -- 0x00009161 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009164, 0) 


# -- 0x00009164 e8 9c a6 ff ff                         call 0x3805
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009169;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003805, 0) #call with return address @ (0x00009169, 0)


# -- 0x00009169 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000916c, 0) 


# -- 0x0000916c 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009170, 0) 


# -- 0x00009170 4c 8d 05 21 5a 00 00                   lea 0x5a21(%rip),%r8
 0: r8<64> := 0x000000000000eb98;
 1: goto (0x00009177, 0) 


# -- 0x00009177 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x0000917e, 0) 


# -- 0x0000917e ba 05 00 00 80                         mov $0x80000005,%edx
 0: rdx<64> := 0x0000000080000005;
 1: goto (0x00009183, 0) 


# -- 0x00009183 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009186, 0) 


# -- 0x00009186 e8 4d dd ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000918b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x0000918b, 0)


# -- 0x0000918b e9 01 01 00 00                         jmp 0x9291
 0: goto (0x00009291, 0) 


# -- 0x00009190 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009193, 0) 


# -- 0x00009193 83 f8 07                               cmp $0x7,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009196, 0) 


# -- 0x00009196 0f 87 c1 00 00 00                      ja 0x925d
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000925d, 0) 
 2: goto (0x0000919c, 0) 


# -- 0x0000919c 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000919e, 0) 


# -- 0x0000919e 48 8d 14 85 00 00 00 00                lea 0x0(,%rax,4),%rdx
 0: %%0<64> := (rax<64> << 2<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000091a6, 0) 


# -- 0x000091a6 48 8d 05 df 5a 00 00                   lea 0x5adf(%rip),%rax
 0: rax<64> := 0x000000000000ec8c;
 1: goto (0x000091ad, 0) 


# -- 0x000091ad 8b 04 02                               mov (%rdx,%rax,1),%eax
 0: %%0<64> := (extu @[(rdx<64> + rax<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000091b0, 0) 


# -- 0x000091b0 48 63 d0                               movslq %eax,%rdx
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000091b3, 0) 


# -- 0x000091b3 48 8d 05 d2 5a 00 00                   lea 0x5ad2(%rip),%rax
 0: rax<64> := 0x000000000000ec8c;
 1: goto (0x000091ba, 0) 


# -- 0x000091ba 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x000091bd, 0) 


# -- 0x000091bd ff e0                                  jmp *%rax
 0: %%0<64> := rax<64>;
 1: goto %%0<64> 


# -- 0x000091bf 8b 4d e0                               mov -0x20(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x000091c2, 0) 


# -- 0x000091c2 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x000091c5, 0) 


# -- 0x000091c5 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000091c9, 0) 


# -- 0x000091c9 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000091cd, 0) 


# -- 0x000091cd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000091d0, 0) 


# -- 0x000091d0 e8 ba f4 ff ff                         call 0x868f
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000091d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000868f, 0) #call with return address @ (0x000091d5, 0)


# -- 0x000091d5 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000091d8, 0) 


# -- 0x000091d8 0f 84 f1 00 00 00                      je 0x92cf
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000092cf, 0) 
 2: goto (0x000091de, 0) 


# -- 0x000091de 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000091e2, 0) 


# -- 0x000091e2 e9 fa 00 00 00                         jmp 0x92e1
 0: goto (0x000092e1, 0) 


# -- 0x000091e7 8b 4d e0                               mov -0x20(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x000091ea, 0) 


# -- 0x000091ea 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x000091ed, 0) 


# -- 0x000091ed 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000091f1, 0) 


# -- 0x000091f1 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000091f5, 0) 


# -- 0x000091f5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000091f8, 0) 


# -- 0x000091f8 e8 2f f6 ff ff                         call 0x882c
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000091fd;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000882c, 0) #call with return address @ (0x000091fd, 0)


# -- 0x000091fd e9 8f 00 00 00                         jmp 0x9291
 0: goto (0x00009291, 0) 


# -- 0x00009202 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009206, 0) 


# -- 0x00009206 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009209, 0) 


# -- 0x00009209 e8 f7 a5 ff ff                         call 0x3805
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000920e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003805, 0) #call with return address @ (0x0000920e, 0)


# -- 0x0000920e 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00009211, 0) 


# -- 0x00009211 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009215, 0) 


# -- 0x00009215 4c 8d 05 9c 59 00 00                   lea 0x599c(%rip),%r8
 0: r8<64> := 0x000000000000ebb8;
 1: goto (0x0000921c, 0) 


# -- 0x0000921c 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x00009223, 0) 


# -- 0x00009223 ba 04 00 00 80                         mov $0x80000004,%edx
 0: rdx<64> := 0x0000000080000004;
 1: goto (0x00009228, 0) 


# -- 0x00009228 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000922b, 0) 


# -- 0x0000922b e8 a8 dc ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009230;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x00009230, 0)


# -- 0x00009230 eb 5f                                  jmp 0x9291
 0: goto (0x00009291, 0) 


# -- 0x00009232 8b 4d e0                               mov -0x20(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009235, 0) 


# -- 0x00009235 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x00009238, 0) 


# -- 0x00009238 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000923c, 0) 


# -- 0x0000923c 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009240, 0) 


# -- 0x00009240 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009243, 0) 


# -- 0x00009243 e8 19 f8 ff ff                         call 0x8a61
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009248;
 2: rsp<64> := %%0<64>;
 3: goto (0x00008a61, 0) #call with return address @ (0x00009248, 0)


# -- 0x00009248 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000924a, 0) 


# -- 0x0000924a 74 44                                  je 0x9290
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009290, 0) 
 2: goto (0x0000924c, 0) 


# -- 0x0000924c 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000924f, 0) 


# -- 0x0000924f 83 f8 07                               cmp $0x7,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009252, 0) 


# -- 0x00009252 75 3c                                  jne 0x9290
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009290, 0) 
 2: goto (0x00009254, 0) 


# -- 0x00009254 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009258, 0) 


# -- 0x00009258 e9 84 00 00 00                         jmp 0x92e1
 0: goto (0x000092e1, 0) 


# -- 0x0000925d 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009261, 0) 


# -- 0x00009261 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009264, 0) 


# -- 0x00009264 e8 9c a5 ff ff                         call 0x3805
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009269;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003805, 0) #call with return address @ (0x00009269, 0)


# -- 0x00009269 8b 75 e4                               mov -0x1c(%rbp),%esi
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000926c, 0) 


# -- 0x0000926c 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009270, 0) 


# -- 0x00009270 4c 8d 05 79 59 00 00                   lea 0x5979(%rip),%r8
 0: r8<64> := 0x000000000000ebf0;
 1: goto (0x00009277, 0) 


# -- 0x00009277 48 c7 c1 ff ff ff ff                   mov $0xffffffffffffffff,%rcx
 0: rcx<64> := -1<64>;
 1: goto (0x0000927e, 0) 


# -- 0x0000927e ba 01 00 00 80                         mov $0x80000001,%edx
 0: rdx<64> := 0x0000000080000001;
 1: goto (0x00009283, 0) 


# -- 0x00009283 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009286, 0) 


# -- 0x00009286 e8 4d dc ff ff                         call 0x6ed8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000928b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006ed8, 0) #call with return address @ (0x0000928b, 0)


# -- 0x0000928b eb 04                                  jmp 0x9291
 0: goto (0x00009291, 0) 


# -- 0x0000928d 90                                     nop
 0: goto (0x0000928e, 0) 


# -- 0x0000928e eb 01                                  jmp 0x9291
 0: goto (0x00009291, 0) 


# -- 0x00009290 90                                     nop
 0: goto (0x00009291, 0) 


# -- 0x00009291 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009294, 0) 


# -- 0x00009294 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009297, 0) 


# -- 0x00009297 74 0f                                  je 0x92a8
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000092a8, 0) 
 2: goto (0x00009299, 0) 


# -- 0x00009299 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000929c, 0) 


# -- 0x0000929c 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000929f, 0) 


# -- 0x0000929f 0f 85 0b fe ff ff                      jne 0x90b0
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000090b0, 0) 
 2: goto (0x000092a5, 0) 


# -- 0x000092a5 eb 01                                  jmp 0x92a8
 0: goto (0x000092a8, 0) 


# -- 0x000092a7 90                                     nop
 0: goto (0x000092a8, 0) 


# -- 0x000092a8 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000092ab, 0) 


# -- 0x000092ab 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000092ae, 0) 


# -- 0x000092ae 75 0e                                  jne 0x92be
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000092be, 0) 
 2: goto (0x000092b0, 0) 


# -- 0x000092b0 48 8d 3d 73 59 00 00                   lea 0x5973(%rip),%rdi
 0: rdi<64> := 0x000000000000ec2a;
 1: goto (0x000092b7, 0) 


# -- 0x000092b7 e8 33 41 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000092bc;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x000092bc, 0)


# -- 0x000092bc eb 12                                  jmp 0x92d0
 0: goto (0x000092d0, 0) 


# -- 0x000092be 48 8d 3d 83 59 00 00                   lea 0x5983(%rip),%rdi
 0: rdi<64> := 0x000000000000ec48;
 1: goto (0x000092c5, 0) 


# -- 0x000092c5 e8 25 41 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000092ca;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x000092ca, 0)


# -- 0x000092ca eb 04                                  jmp 0x92d0
 0: goto (0x000092d0, 0) 


# -- 0x000092cc 90                                     nop
 0: goto (0x000092cd, 0) 


# -- 0x000092cd eb 01                                  jmp 0x92d0
 0: goto (0x000092d0, 0) 


# -- 0x000092cf 90                                     nop
 0: goto (0x000092d0, 0) 


# -- 0x000092d0 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000092d4, 0) 


# -- 0x000092d4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000092d7, 0) 


# -- 0x000092d7 e8 24 9a ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000092dc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000092dc, 0)


# -- 0x000092dc b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x000092e1, 0) 


# -- 0x000092e1 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000092e5, 0) 


# -- 0x000092e5 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x000092ee, 0) 


# -- 0x000092ee 74 05                                  je 0x92f5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000092f5, 0) 
 2: goto (0x000092f0, 0) 


# -- 0x000092f0 e8 7b 9b ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000092f5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x000092f5, 0)


# -- 0x000092f5 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000092f6, 0) 


# -- 0x000092f6 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000092f7 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f8, 0) 


# -- 0x000092f8 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000092fb, 0) 


# -- 0x000092fb 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000092ff, 0) 


# -- 0x000092ff 89 7d fc                               mov %edi,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rdi<64>{0,31};
 1: goto (0x00009302, 0) 


# -- 0x00009302 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009305, 0) 


# -- 0x00009305 83 f8 16                               cmp $0x16,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 22<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009308, 0) 


# -- 0x00009308 74 4b                                  je 0x9355
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009355, 0) 
 2: goto (0x0000930a, 0) 


# -- 0x0000930a 83 f8 16                               cmp $0x16,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 22<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000930d, 0) 


# -- 0x0000930d 7f 11                                  jg 0x9320
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00009320, 0) 
 2: goto (0x0000930f, 0) 


# -- 0x0000930f 83 f8 05                               cmp $0x5,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 5<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009312, 0) 


# -- 0x00009312 74 29                                  je 0x933d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000933d, 0) 
 2: goto (0x00009314, 0) 


# -- 0x00009314 83 f8 0c                               cmp $0xc,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 12<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009317, 0) 


# -- 0x00009317 74 30                                  je 0x9349
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009349, 0) 
 2: goto (0x00009319, 0) 


# -- 0x00009319 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000931c, 0) 


# -- 0x0000931c 74 13                                  je 0x9331
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009331, 0) 
 2: goto (0x0000931e, 0) 


# -- 0x0000931e eb 4d                                  jmp 0x936d
 0: goto (0x0000936d, 0) 


# -- 0x00009320 83 f8 1b                               cmp $0x1b,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 27<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009323, 0) 


# -- 0x00009323 7c 48                                  jl 0x936d
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x0000936d, 0) 
 2: goto (0x00009325, 0) 


# -- 0x00009325 83 f8 1c                               cmp $0x1c,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 28<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009328, 0) 


# -- 0x00009328 7e 37                                  jle 0x9361
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x00009361, 0) 
 2: goto (0x0000932a, 0) 


# -- 0x0000932a 83 f8 7a                               cmp $0x7a,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 122<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000932d, 0) 


# -- 0x0000932d 74 32                                  je 0x9361
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009361, 0) 
 2: goto (0x0000932f, 0) 


# -- 0x0000932f eb 3c                                  jmp 0x936d
 0: goto (0x0000936d, 0) 


# -- 0x00009331 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x00009336, 0) 


# -- 0x00009336 e8 15 9c ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000933b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x0000933b, 0)


# -- 0x0000933b eb 3a                                  jmp 0x9377
 0: goto (0x00009377, 0) 


# -- 0x0000933d bf 05 00 00 00                         mov $0x5,%edi
 0: rdi<64> := 5<64>;
 1: goto (0x00009342, 0) 


# -- 0x00009342 e8 09 9c ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009347;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00009347, 0)


# -- 0x00009347 eb 2e                                  jmp 0x9377
 0: goto (0x00009377, 0) 


# -- 0x00009349 bf 0c 00 00 00                         mov $0xc,%edi
 0: rdi<64> := 12<64>;
 1: goto (0x0000934e, 0) 


# -- 0x0000934e e8 fd 9b ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009353;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00009353, 0)


# -- 0x00009353 eb 22                                  jmp 0x9377
 0: goto (0x00009377, 0) 


# -- 0x00009355 bf 16 00 00 00                         mov $0x16,%edi
 0: rdi<64> := 22<64>;
 1: goto (0x0000935a, 0) 


# -- 0x0000935a e8 f1 9b ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000935f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x0000935f, 0)


# -- 0x0000935f eb 16                                  jmp 0x9377
 0: goto (0x00009377, 0) 


# -- 0x00009361 bf 1c 00 00 00                         mov $0x1c,%edi
 0: rdi<64> := 28<64>;
 1: goto (0x00009366, 0) 


# -- 0x00009366 e8 e5 9b ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000936b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x0000936b, 0)


# -- 0x0000936b eb 0a                                  jmp 0x9377
 0: goto (0x00009377, 0) 


# -- 0x0000936d bf 16 00 00 00                         mov $0x16,%edi
 0: rdi<64> := 22<64>;
 1: goto (0x00009372, 0) 


# -- 0x00009372 e8 d9 9b ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009377;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00009377, 0)


# -- 0x00009377 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009378, 0) 


# -- 0x00009378 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009379 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000937a, 0) 


# -- 0x0000937a 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000937d, 0) 


# -- 0x0000937d 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009381, 0) 


# -- 0x00009381 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x00009385, 0) 


# -- 0x00009385 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009389, 0) 


# -- 0x00009389 8b 40 10                               mov 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000938c, 0) 


# -- 0x0000938c 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000938e, 0) 


# -- 0x0000938e 7e 0e                                  jle 0x939e
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000939e, 0) 
 2: goto (0x00009390, 0) 


# -- 0x00009390 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009394, 0) 


# -- 0x00009394 8b 40 10                               mov 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009397, 0) 


# -- 0x00009397 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009399, 0) 


# -- 0x00009399 e8 02 9c ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000939e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000939e, 0)


# -- 0x0000939e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093a2, 0) 


# -- 0x000093a2 8b 40 14                               mov 0x14(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000093a5, 0) 


# -- 0x000093a5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000093a7, 0) 


# -- 0x000093a7 7e 0e                                  jle 0x93b7
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x000093b7, 0) 
 2: goto (0x000093a9, 0) 


# -- 0x000093a9 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093ad, 0) 


# -- 0x000093ad 8b 40 14                               mov 0x14(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000093b0, 0) 


# -- 0x000093b0 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000093b2, 0) 


# -- 0x000093b2 e8 e9 9b ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000093b7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x000093b7, 0)


# -- 0x000093b7 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093bb, 0) 


# -- 0x000093bb 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093bf, 0) 


# -- 0x000093bf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000093c2, 0) 


# -- 0x000093c2 e8 39 99 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000093c7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000093c7, 0)


# -- 0x000093c7 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093cb, 0) 


# -- 0x000093cb 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093cf, 0) 


# -- 0x000093cf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000093d2, 0) 


# -- 0x000093d2 e8 29 99 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000093d7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000093d7, 0)


# -- 0x000093d7 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000093db, 0) 


# -- 0x000093db 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000093de, 0) 


# -- 0x000093de e8 1d 99 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000093e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x000093e3, 0)


# -- 0x000093e3 90                                     nop
 0: goto (0x000093e4, 0) 


# -- 0x000093e4 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000093e5, 0) 


# -- 0x000093e5 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000093e6 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000093e7, 0) 


# -- 0x000093e7 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000093ea, 0) 


# -- 0x000093ea 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000093ee, 0) 


# -- 0x000093ee 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x000093f2, 0) 


# -- 0x000093f2 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x000093f6, 0) 


# -- 0x000093f6 48 81 7d f0 00 00 10 00                cmpq $0x100000,-0x10(%rbp)
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: %%1<64> := (%%0<64> - 0x0000000000100000);
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000093fe, 0) 


# -- 0x000093fe 76 0a                                  jbe 0x940a
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000940a, 0) 
 2: goto (0x00009400, 0) 


# -- 0x00009400 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00009405, 0) 


# -- 0x00009405 e9 80 00 00 00                         jmp 0x948a
 0: goto (0x0000948a, 0) 


# -- 0x0000940a 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000940e, 0) 


# -- 0x0000940e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009411, 0) 


# -- 0x00009411 e8 aa 9b ff ff                         call 0x2fc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009416;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fc0, 0) #call with return address @ (0x00009416, 0)


# -- 0x00009416 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009418, 0) 


# -- 0x00009418 74 07                                  je 0x9421
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009421, 0) 
 2: goto (0x0000941a, 0) 


# -- 0x0000941a b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000941f, 0) 


# -- 0x0000941f eb 69                                  jmp 0x948a
 0: goto (0x0000948a, 0) 


# -- 0x00009421 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009425, 0) 


# -- 0x00009425 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009429, 0) 


# -- 0x00009429 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000942b, 0) 


# -- 0x0000942b ba 00 00 10 00                         mov $0x100000,%edx
 0: rdx<64> := 0x0000000000100000;
 1: goto (0x00009430, 0) 


# -- 0x00009430 be 07 04 00 00                         mov $0x407,%esi
 0: rsi<64> := 1031<64>;
 1: goto (0x00009435, 0) 


# -- 0x00009435 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009437, 0) 


# -- 0x00009437 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000943c, 0) 


# -- 0x0000943c e8 4f 99 ff ff                         call 0x2d90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009441;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d90, 0) #call with return address @ (0x00009441, 0)


# -- 0x00009441 3d ff ff 0f 00                         cmp $0xfffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 0x000fffff);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009446, 0) 


# -- 0x00009446 7f 3d                                  jg 0x9485
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x00009485, 0) 
 2: goto (0x00009448, 0) 


# -- 0x00009448 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000944c, 0) 


# -- 0x0000944c 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000944e, 0) 


# -- 0x0000944e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009450, 0) 


# -- 0x00009450 e8 4b 9b ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009455;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x00009455, 0)


# -- 0x00009455 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009459, 0) 


# -- 0x00009459 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000945d, 0) 


# -- 0x0000945d 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000945f, 0) 


# -- 0x0000945f 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009461, 0) 


# -- 0x00009461 e8 3a 9b ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009466;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x00009466, 0)


# -- 0x00009466 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000946a, 0) 


# -- 0x0000946a c7 00 ff ff ff ff                      movl $0xffffffff,(%rax)
 0: @[rax<64>,4] := -1<32>;
 1: goto (0x00009470, 0) 


# -- 0x00009470 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009474, 0) 


# -- 0x00009474 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009478, 0) 


# -- 0x00009478 c7 00 ff ff ff ff                      movl $0xffffffff,(%rax)
 0: @[rax<64>,4] := -1<32>;
 1: goto (0x0000947e, 0) 


# -- 0x0000947e b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00009483, 0) 


# -- 0x00009483 eb 05                                  jmp 0x948a
 0: goto (0x0000948a, 0) 


# -- 0x00009485 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000948a, 0) 


# -- 0x0000948a c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000948b, 0) 


# -- 0x0000948b c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000948c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000948d, 0) 


# -- 0x0000948d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009490, 0) 


# -- 0x00009490 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009494, 0) 


# -- 0x00009494 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x00009498, 0) 


# -- 0x00009498 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000949c, 0) 


# -- 0x0000949c be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x000094a1, 0) 


# -- 0x000094a1 bf 20 00 00 00                         mov $0x20,%edi
 0: rdi<64> := 32<64>;
 1: goto (0x000094a6, 0) 


# -- 0x000094a6 e8 c5 9b ff ff                         call 0x3070
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000094ab;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003070, 0) #call with return address @ (0x000094ab, 0)


# -- 0x000094ab 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000094af, 0) 


# -- 0x000094af 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094b3, 0) 


# -- 0x000094b3 48 8b 55 e0                            mov -0x20(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000094b7, 0) 


# -- 0x000094b7 48 89 50 08                            mov %rdx,0x8(%rax)
 0: @[(rax<64> + 8<64>),8] := rdx<64>;
 1: goto (0x000094bb, 0) 


# -- 0x000094bb 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094bf, 0) 


# -- 0x000094bf 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000094c3, 0) 


# -- 0x000094c3 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x000094c6, 0) 


# -- 0x000094c6 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094ca, 0) 


# -- 0x000094ca 48 c7 40 18 00 00 00 00                movq $0x0,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := 0<64>;
 1: goto (0x000094d2, 0) 


# -- 0x000094d2 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094d6, 0) 


# -- 0x000094d6 c7 40 10 ff ff ff ff                   movl $0xffffffff,0x10(%rax)
 0: @[(rax<64> + 16<64>),4] := -1<32>;
 1: goto (0x000094dd, 0) 


# -- 0x000094dd 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094e1, 0) 


# -- 0x000094e1 c7 40 14 ff ff ff ff                   movl $0xffffffff,0x14(%rax)
 0: @[(rax<64> + 20<64>),4] := -1<32>;
 1: goto (0x000094e8, 0) 


# -- 0x000094e8 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094ec, 0) 


# -- 0x000094ec 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000094ef, 0) 


# -- 0x000094ef 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000094f2, 0) 


# -- 0x000094f2 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x000094f5, 0) 


# -- 0x000094f5 75 71                                  jne 0x9568
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009568, 0) 
 2: goto (0x000094f7, 0) 


# -- 0x000094f7 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000094fb, 0) 


# -- 0x000094fb 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009502, 0) 


# -- 0x00009502 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009505, 0) 


# -- 0x00009505 25 00 80 00 00                         and $0x8000,%eax
 0: %%0<32> := (0x00008000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000950a, 0) 


# -- 0x0000950a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000950c, 0) 


# -- 0x0000950c 74 3e                                  je 0x954c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000954c, 0) 
 2: goto (0x0000950e, 0) 


# -- 0x0000950e 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009512, 0) 


# -- 0x00009512 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009515, 0) 


# -- 0x00009515 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00009517, 0) 


# -- 0x00009517 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000951b, 0) 


# -- 0x0000951b 48 83 c0 10                            add $0x10,%rax
 0: %%0<64> := (rax<64> + 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000951f, 0) 


# -- 0x0000951f 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009522, 0) 


# -- 0x00009522 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009525, 0) 


# -- 0x00009525 e8 bc fe ff ff                         call 0x93e6
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000952a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000093e6, 0) #call with return address @ (0x0000952a, 0)


# -- 0x0000952a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000952c, 0) 


# -- 0x0000952c 74 3a                                  je 0x9568
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009568, 0) 
 2: goto (0x0000952e, 0) 


# -- 0x0000952e 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009532, 0) 


# -- 0x00009532 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009535, 0) 


# -- 0x00009535 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009537, 0) 


# -- 0x00009537 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000953a, 0) 


# -- 0x0000953a e8 e1 9c ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000953f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x0000953f, 0)


# -- 0x0000953f 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00009542, 0) 


# -- 0x00009542 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009546, 0) 


# -- 0x00009546 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x0000954a, 0) 


# -- 0x0000954a eb 1c                                  jmp 0x9568
 0: goto (0x00009568, 0) 


# -- 0x0000954c 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009550, 0) 


# -- 0x00009550 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009553, 0) 


# -- 0x00009553 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009555, 0) 


# -- 0x00009555 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009558, 0) 


# -- 0x00009558 e8 c3 9c ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000955d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x0000955d, 0)


# -- 0x0000955d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00009560, 0) 


# -- 0x00009560 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009564, 0) 


# -- 0x00009564 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x00009568, 0) 


# -- 0x00009568 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000956c, 0) 


# -- 0x0000956c c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000956d, 0) 


# -- 0x0000956d c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000956e 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956f, 0) 


# -- 0x0000956f 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009572, 0) 


# -- 0x00009572 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009576, 0) 


# -- 0x00009576 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000957a, 0) 


# -- 0x0000957a 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x0000957e, 0) 


# -- 0x0000957e bf 98 66 44 67                         mov $0x67446698,%edi
 0: rdi<64> := 0x0000000067446698;
 1: goto (0x00009583, 0) 


# -- 0x00009583 e8 c8 99 ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009588;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x00009588, 0)


# -- 0x00009588 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000958a, 0) 


# -- 0x0000958a 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000958e, 0) 


# -- 0x0000958e 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x00009590, 0) 


# -- 0x00009590 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009594, 0) 


# -- 0x00009594 c7 40 04 00 00 00 00                   movl $0x0,0x4(%rax)
 0: @[(rax<64> + 4<64>),4] := 0<32>;
 1: goto (0x0000959b, 0) 


# -- 0x0000959b 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000959f, 0) 


# -- 0x0000959f 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000095a3, 0) 


# -- 0x000095a3 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000095a7, 0) 


# -- 0x000095a7 48 83 c2 08                            add $0x8,%rdx
 0: %%0<64> := (rdx<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x000095ab, 0) 


# -- 0x000095ab 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000095ae, 0) 


# -- 0x000095ae 48 89 02                               mov %rax,(%rdx)
 0: @[rdx<64>,8] := rax<64>;
 1: goto (0x000095b1, 0) 


# -- 0x000095b1 90                                     nop
 0: goto (0x000095b2, 0) 


# -- 0x000095b2 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000095b3, 0) 


# -- 0x000095b3 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000095b4 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000095b5, 0) 


# -- 0x000095b5 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000095b8, 0) 


# -- 0x000095b8 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000095bc, 0) 


# -- 0x000095bc 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x000095c0, 0) 


# -- 0x000095c0 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x000095c4, 0) 


# -- 0x000095c4 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000095cd, 0) 


# -- 0x000095cd 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000095d1, 0) 


# -- 0x000095d1 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000095d3, 0) 


# -- 0x000095d3 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000095d7, 0) 


# -- 0x000095d7 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000095de, 0) 


# -- 0x000095de 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000095e1, 0) 


# -- 0x000095e1 74 0a                                  je 0x95ed
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000095ed, 0) 
 2: goto (0x000095e3, 0) 


# -- 0x000095e3 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x000095e8, 0) 


# -- 0x000095e8 e9 13 01 00 00                         jmp 0x9700
 0: goto (0x00009700, 0) 


# -- 0x000095ed 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000095f1, 0) 


# -- 0x000095f1 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000095f4, 0) 


# -- 0x000095f4 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000095f6, 0) 


# -- 0x000095f6 48 8d 45 d8                            lea -0x28(%rbp),%rax
 0: %%0<64> := (rbp<64> + -40<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000095fa, 0) 


# -- 0x000095fa 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000095fd, 0) 


# -- 0x000095fd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009600, 0) 


# -- 0x00009600 e8 e1 fd ff ff                         call 0x93e6
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009605;
 2: rsp<64> := %%0<64>;
 3: goto (0x000093e6, 0) #call with return address @ (0x00009605, 0)


# -- 0x00009605 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009607, 0) 


# -- 0x00009607 74 0a                                  je 0x9613
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009613, 0) 
 2: goto (0x00009609, 0) 


# -- 0x00009609 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000960e, 0) 


# -- 0x0000960e e9 ed 00 00 00                         jmp 0x9700
 0: goto (0x00009700, 0) 


# -- 0x00009613 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009617, 0) 


# -- 0x00009617 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000961a, 0) 


# -- 0x0000961a 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000961c, 0) 


# -- 0x0000961c 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009620, 0) 


# -- 0x00009620 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009624, 0) 


# -- 0x00009624 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009627, 0) 


# -- 0x00009627 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000962a, 0) 


# -- 0x0000962a 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000962e, 0) 


# -- 0x0000962e 41 b9 00 00 00 00                      mov $0x0,%r9d
 0: r9<64> := 0<64>;
 1: goto (0x00009634, 0) 


# -- 0x00009634 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x0000963a, 0) 


# -- 0x0000963a 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000963d, 0) 


# -- 0x0000963d 48 89 fa                               mov %rdi,%rdx
 0: %%0<64> := rdi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00009640, 0) 


# -- 0x00009640 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009642, 0) 


# -- 0x00009642 e8 ce ce ff ff                         call 0x6515
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009647;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006515, 0) #call with return address @ (0x00009647, 0)


# -- 0x00009647 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009649, 0) 


# -- 0x00009649 74 1e                                  je 0x9669
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009669, 0) 
 2: goto (0x0000964b, 0) 


# -- 0x0000964b 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000964e, 0) 


# -- 0x0000964e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009650, 0) 


# -- 0x00009650 e8 4b 99 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009655;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x00009655, 0)


# -- 0x00009655 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009658, 0) 


# -- 0x00009658 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000965a, 0) 


# -- 0x0000965a e8 41 99 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000965f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000965f, 0)


# -- 0x0000965f b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x00009664, 0) 


# -- 0x00009664 e9 97 00 00 00                         jmp 0x9700
 0: goto (0x00009700, 0) 


# -- 0x00009669 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000966d, 0) 


# -- 0x0000966d 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009671, 0) 


# -- 0x00009671 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009674, 0) 


# -- 0x00009674 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009677, 0) 


# -- 0x00009677 e8 f2 fe ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000967c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x0000967c, 0)


# -- 0x0000967c 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009680, 0) 


# -- 0x00009680 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009686, 0) 


# -- 0x00009686 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009689, 0) 


# -- 0x00009689 e8 a2 9e ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000968e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x0000968e, 0)


# -- 0x0000968e 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009692, 0) 


# -- 0x00009692 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009698, 0) 


# -- 0x00009698 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000969c, 0) 


# -- 0x0000969c ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x000096a1, 0) 


# -- 0x000096a1 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000096a4, 0) 


# -- 0x000096a4 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000096a6, 0) 


# -- 0x000096a6 e8 fa 40 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000096ab;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x000096ab, 0)


# -- 0x000096ab 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000096af, 0) 


# -- 0x000096af 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000096b2, 0) 


# -- 0x000096b2 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000096b4, 0) 


# -- 0x000096b4 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000096b8, 0) 


# -- 0x000096b8 8b 90 d8 00 00 00                      mov 0xd8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x000096be, 0) 


# -- 0x000096be 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000096c1, 0) 


# -- 0x000096c1 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x000096c4, 0) 


# -- 0x000096c4 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x000096c9, 0) 


# -- 0x000096c9 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x000096ce, 0) 


# -- 0x000096ce 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000096d0, 0) 


# -- 0x000096d0 e8 dd a3 ff ff                         call 0x3ab2
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000096d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003ab2, 0) #call with return address @ (0x000096d5, 0)


# -- 0x000096d5 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000096d9, 0) 


# -- 0x000096d9 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000096df, 0) 


# -- 0x000096df 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000096e2, 0) 


# -- 0x000096e2 e8 19 9b ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000096e7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x000096e7, 0)


# -- 0x000096e7 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000096ea, 0) 


# -- 0x000096ea 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000096ec, 0) 


# -- 0x000096ec e8 af 98 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000096f1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x000096f1, 0)


# -- 0x000096f1 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000096f4, 0) 


# -- 0x000096f4 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000096f6, 0) 


# -- 0x000096f6 e8 a5 98 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000096fb;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x000096fb, 0)


# -- 0x000096fb b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00009700, 0) 


# -- 0x00009700 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00009704, 0) 


# -- 0x00009704 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000970d, 0) 


# -- 0x0000970d 74 05                                  je 0x9714
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009714, 0) 
 2: goto (0x0000970f, 0) 


# -- 0x0000970f e8 5c 97 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009714;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00009714, 0)


# -- 0x00009714 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009715, 0) 


# -- 0x00009715 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009716 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009717, 0) 


# -- 0x00009717 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000971a, 0) 


# -- 0x0000971a 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000971e, 0) 


# -- 0x0000971e 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x00009722, 0) 


# -- 0x00009722 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x00009726, 0) 


# -- 0x00009726 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000972f, 0) 


# -- 0x0000972f 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00009733, 0) 


# -- 0x00009733 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00009735, 0) 


# -- 0x00009735 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009739, 0) 


# -- 0x00009739 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000973c, 0) 


# -- 0x0000973c 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000973e, 0) 


# -- 0x0000973e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009741, 0) 


# -- 0x00009741 e8 da 9a ff ff                         call 0x3220
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009746;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003220, 0) #call with return address @ (0x00009746, 0)


# -- 0x00009746 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000974a, 0) 


# -- 0x0000974a 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000974f, 0) 


# -- 0x0000974f 75 0c                                  jne 0x975d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000975d, 0) 
 2: goto (0x00009751, 0) 


# -- 0x00009751 48 8d 3d 58 55 00 00                   lea 0x5558(%rip),%rdi
 0: rdi<64> := 0x000000000000ecb0;
 1: goto (0x00009758, 0) 


# -- 0x00009758 e8 db 3e 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000975d;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000975d, 0)


# -- 0x0000975d 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009761, 0) 


# -- 0x00009761 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009765, 0) 


# -- 0x00009765 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009768, 0) 


# -- 0x00009768 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000976b, 0) 


# -- 0x0000976b e8 fe fd ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009770;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x00009770, 0)


# -- 0x00009770 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009774, 0) 


# -- 0x00009774 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009777, 0) 


# -- 0x00009777 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00009779, 0) 


# -- 0x00009779 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000977d, 0) 


# -- 0x0000977d 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009781, 0) 


# -- 0x00009781 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009784, 0) 


# -- 0x00009784 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009788, 0) 


# -- 0x00009788 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000978c, 0) 


# -- 0x0000978c 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000978f, 0) 


# -- 0x0000978f 48 89 f2                               mov %rsi,%rdx
 0: %%0<64> := rsi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00009792, 0) 


# -- 0x00009792 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009795, 0) 


# -- 0x00009795 e8 ff cd ff ff                         call 0x6599
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000979a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006599, 0) #call with return address @ (0x0000979a, 0)


# -- 0x0000979a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000979c, 0) 


# -- 0x0000979c 74 11                                  je 0x97af
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000097af, 0) 
 2: goto (0x0000979e, 0) 


# -- 0x0000979e e8 dd 94 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000097a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x000097a3, 0)


# -- 0x000097a3 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000097a5, 0) 


# -- 0x000097a5 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000097a7, 0) 


# -- 0x000097a7 e8 4b fb ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000097ac;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x000097ac, 0)


# -- 0x000097ac 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x000097af, 0) 


# -- 0x000097af 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000097b3, 0) 


# -- 0x000097b3 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000097b9, 0) 


# -- 0x000097b9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000097bc, 0) 


# -- 0x000097bc e8 6f 9d ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000097c1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x000097c1, 0)


# -- 0x000097c1 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x000097c5, 0) 


# -- 0x000097c5 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000097c9, 0) 


# -- 0x000097c9 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x000097ce, 0) 


# -- 0x000097ce 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000097d1, 0) 


# -- 0x000097d1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000097d4, 0) 


# -- 0x000097d4 e8 b8 a0 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000097d9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x000097d9, 0)


# -- 0x000097d9 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000097dc, 0) 


# -- 0x000097dc 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000097de, 0) 


# -- 0x000097de 75 1c                                  jne 0x97fc
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x000097fc, 0) 
 2: goto (0x000097e0, 0) 


# -- 0x000097e0 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000097e4, 0) 


# -- 0x000097e4 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000097e7, 0) 


# -- 0x000097e7 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x000097e9, 0) 


# -- 0x000097e9 48 8b 4d d8                            mov -0x28(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x000097ed, 0) 


# -- 0x000097ed 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000097f1, 0) 


# -- 0x000097f1 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000097f4, 0) 


# -- 0x000097f4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000097f7, 0) 


# -- 0x000097f7 e8 95 a0 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000097fc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x000097fc, 0)


# -- 0x000097fc 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009800, 0) 


# -- 0x00009800 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009806, 0) 


# -- 0x00009806 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009809, 0) 


# -- 0x00009809 e8 f2 99 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000980e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x0000980e, 0)


# -- 0x0000980e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009812, 0) 


# -- 0x00009812 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009815, 0) 


# -- 0x00009815 e8 36 94 ff ff                         call 0x2c50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000981a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c50, 0) #call with return address @ (0x0000981a, 0)


# -- 0x0000981a 90                                     nop
 0: goto (0x0000981b, 0) 


# -- 0x0000981b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000981f, 0) 


# -- 0x0000981f 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00009828, 0) 


# -- 0x00009828 74 05                                  je 0x982f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000982f, 0) 
 2: goto (0x0000982a, 0) 


# -- 0x0000982a e8 41 96 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000982f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000982f, 0)


# -- 0x0000982f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009830, 0) 


# -- 0x00009830 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009831 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009832, 0) 


# -- 0x00009832 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009835, 0) 


# -- 0x00009835 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009839, 0) 


# -- 0x00009839 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000983d, 0) 


# -- 0x0000983d 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x00009841, 0) 


# -- 0x00009841 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009845, 0) 


# -- 0x00009845 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000984c, 0) 


# -- 0x0000984c 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000984f, 0) 


# -- 0x0000984f 25 00 80 00 00                         and $0x8000,%eax
 0: %%0<32> := (0x00008000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00009854, 0) 


# -- 0x00009854 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009856, 0) 


# -- 0x00009856 74 17                                  je 0x986f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000986f, 0) 
 2: goto (0x00009858, 0) 


# -- 0x00009858 48 8b 55 f0                            mov -0x10(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000985c, 0) 


# -- 0x0000985c 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009860, 0) 


# -- 0x00009860 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009863, 0) 


# -- 0x00009863 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009866, 0) 


# -- 0x00009866 e8 49 fd ff ff                         call 0x95b4
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000986b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000095b4, 0) #call with return address @ (0x0000986b, 0)


# -- 0x0000986b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000986d, 0) 


# -- 0x0000986d 74 15                                  je 0x9884
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009884, 0) 
 2: goto (0x0000986f, 0) 


# -- 0x0000986f 48 8b 55 f0                            mov -0x10(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009873, 0) 


# -- 0x00009873 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009877, 0) 


# -- 0x00009877 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000987a, 0) 


# -- 0x0000987a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000987d, 0) 


# -- 0x0000987d e8 94 fe ff ff                         call 0x9716
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009882;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009716, 0) #call with return address @ (0x00009882, 0)


# -- 0x00009882 eb 01                                  jmp 0x9885
 0: goto (0x00009885, 0) 


# -- 0x00009884 90                                     nop
 0: goto (0x00009885, 0) 


# -- 0x00009885 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009886, 0) 


# -- 0x00009886 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009887 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009888, 0) 


# -- 0x00009888 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000988b, 0) 


# -- 0x0000988b 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000988f, 0) 


# -- 0x0000988f 48 89 7d b8                            mov %rdi,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdi<64>;
 1: goto (0x00009893, 0) 


# -- 0x00009893 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000989c, 0) 


# -- 0x0000989c 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000098a0, 0) 


# -- 0x000098a0 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000098a2, 0) 


# -- 0x000098a2 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098a6, 0) 


# -- 0x000098a6 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098a9, 0) 


# -- 0x000098a9 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x000098ad, 0) 


# -- 0x000098ad 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098b1, 0) 


# -- 0x000098b1 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098b5, 0) 


# -- 0x000098b5 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x000098b9, 0) 


# -- 0x000098b9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098bd, 0) 


# -- 0x000098bd 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000098c0, 0) 


# -- 0x000098c0 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x000098c5, 0) 


# -- 0x000098c5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x000098c7, 0) 


# -- 0x000098c7 0f 95 c0                               setne %al
 0: %%0<8> := (extu ! (zf<1>) 8);
 1: rax<64>{0, 7} := %%0<8>;
 2: goto (0x000098ca, 0) 


# -- 0x000098ca 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000098cd, 0) 


# -- 0x000098cd 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x000098d0, 0) 


# -- 0x000098d0 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000098d4, 0) 


# -- 0x000098d4 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x000098d8, 0) 


# -- 0x000098d8 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000098db, 0) 


# -- 0x000098db 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000098de, 0) 


# -- 0x000098de e8 8b fc ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000098e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x000098e3, 0)


# -- 0x000098e3 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098e7, 0) 


# -- 0x000098e7 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098eb, 0) 


# -- 0x000098eb 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x000098ee, 0) 


# -- 0x000098ee 75 4f                                  jne 0x993f
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000993f, 0) 
 2: goto (0x000098f0, 0) 


# -- 0x000098f0 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098f4, 0) 


# -- 0x000098f4 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x000098f7, 0) 


# -- 0x000098f7 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x000098f9, 0) 


# -- 0x000098f9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000098fd, 0) 


# -- 0x000098fd 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009901, 0) 


# -- 0x00009901 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009904, 0) 


# -- 0x00009904 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009908, 0) 


# -- 0x00009908 8b 40 10                               mov 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000990b, 0) 


# -- 0x0000990b 8b 4d cc                               mov -0x34(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000990e, 0) 


# -- 0x0000990e 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009912, 0) 


# -- 0x00009912 41 89 c9                               mov %ecx,%r9d
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: r9<64> := %%0<64>;
 2: goto (0x00009915, 0) 


# -- 0x00009915 41 b8 01 00 00 00                      mov $0x1,%r8d
 0: r8<64> := 1<64>;
 1: goto (0x0000991b, 0) 


# -- 0x0000991b 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000991e, 0) 


# -- 0x0000991e 48 89 fa                               mov %rdi,%rdx
 0: %%0<64> := rdi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x00009921, 0) 


# -- 0x00009921 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009923, 0) 


# -- 0x00009923 e8 ed cb ff ff                         call 0x6515
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009928;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006515, 0) #call with return address @ (0x00009928, 0)


# -- 0x00009928 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000992a, 0) 


# -- 0x0000992a 74 5c                                  je 0x9988
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009988, 0) 
 2: goto (0x0000992c, 0) 


# -- 0x0000992c e8 4f 93 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009931;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00009931, 0)


# -- 0x00009931 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009933, 0) 


# -- 0x00009933 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009935, 0) 


# -- 0x00009935 e8 bd f9 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000993a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x0000993a, 0)


# -- 0x0000993a 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x0000993d, 0) 


# -- 0x0000993d eb 49                                  jmp 0x9988
 0: goto (0x00009988, 0) 


# -- 0x0000993f 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009943, 0) 


# -- 0x00009943 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009946, 0) 


# -- 0x00009946 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x00009948, 0) 


# -- 0x00009948 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000994c, 0) 


# -- 0x0000994c 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009950, 0) 


# -- 0x00009950 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009954, 0) 


# -- 0x00009954 48 8b 52 10                            mov 0x10(%rdx),%rdx
 0: %%0<64> := @[(rdx<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009958, 0) 


# -- 0x00009958 48 89 d7                               mov %rdx,%rdi
 0: %%0<64> := rdx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000995b, 0) 


# -- 0x0000995b 8b 4d cc                               mov -0x34(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000995e, 0) 


# -- 0x0000995e 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009962, 0) 


# -- 0x00009962 41 89 c8                               mov %ecx,%r8d
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00009965, 0) 


# -- 0x00009965 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x00009968, 0) 


# -- 0x00009968 48 89 f2                               mov %rsi,%rdx
 0: %%0<64> := rsi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000996b, 0) 


# -- 0x0000996b 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000996e, 0) 


# -- 0x0000996e e8 7e ce ff ff                         call 0x67f1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009973;
 2: rsp<64> := %%0<64>;
 3: goto (0x000067f1, 0) #call with return address @ (0x00009973, 0)


# -- 0x00009973 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009975, 0) 


# -- 0x00009975 74 11                                  je 0x9988
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009988, 0) 
 2: goto (0x00009977, 0) 


# -- 0x00009977 e8 04 93 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000997c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000997c, 0)


# -- 0x0000997c 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000997e, 0) 


# -- 0x0000997e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009980, 0) 


# -- 0x00009980 e8 72 f9 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009985;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x00009985, 0)


# -- 0x00009985 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x00009988, 0) 


# -- 0x00009988 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000998c, 0) 


# -- 0x0000998c 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009992, 0) 


# -- 0x00009992 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009995, 0) 


# -- 0x00009995 e8 96 9b ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000999a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x0000999a, 0)


# -- 0x0000999a 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000999e, 0) 


# -- 0x0000999e 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000099a2, 0) 


# -- 0x000099a2 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x000099a7, 0) 


# -- 0x000099a7 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x000099aa, 0) 


# -- 0x000099aa 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000099ad, 0) 


# -- 0x000099ad e8 df 9e ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000099b2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x000099b2, 0)


# -- 0x000099b2 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000099b6, 0) 


# -- 0x000099b6 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x000099bc, 0) 


# -- 0x000099bc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x000099bf, 0) 


# -- 0x000099bf e8 3c 98 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000099c4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x000099c4, 0)


# -- 0x000099c4 90                                     nop
 0: goto (0x000099c5, 0) 


# -- 0x000099c5 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000099c9, 0) 


# -- 0x000099c9 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x000099d2, 0) 


# -- 0x000099d2 74 05                                  je 0x99d9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x000099d9, 0) 
 2: goto (0x000099d4, 0) 


# -- 0x000099d4 e8 97 94 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x00000000000099d9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x000099d9, 0)


# -- 0x000099d9 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x000099da, 0) 


# -- 0x000099da c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x000099db 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x000099dc, 0) 


# -- 0x000099dc 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x000099df, 0) 


# -- 0x000099df 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x000099e3, 0) 


# -- 0x000099e3 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x000099e7, 0) 


# -- 0x000099e7 48 89 75 d0                            mov %rsi,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rsi<64>;
 1: goto (0x000099eb, 0) 


# -- 0x000099eb 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x000099f4, 0) 


# -- 0x000099f4 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x000099f8, 0) 


# -- 0x000099f8 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x000099fa, 0) 


# -- 0x000099fa 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x000099fe, 0) 


# -- 0x000099fe 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009a02, 0) 


# -- 0x00009a02 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009a05, 0) 


# -- 0x00009a05 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a08, 0) 


# -- 0x00009a08 e8 61 fb ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a0d;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x00009a0d, 0)


# -- 0x00009a0d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a11, 0) 


# -- 0x00009a11 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a14, 0) 


# -- 0x00009a14 e8 07 d3 ff ff                         call 0x6d20
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a19;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006d20, 0) #call with return address @ (0x00009a19, 0)


# -- 0x00009a19 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009a1b, 0) 


# -- 0x00009a1b 74 11                                  je 0x9a2e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009a2e, 0) 
 2: goto (0x00009a1d, 0) 


# -- 0x00009a1d e8 5e 92 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a22;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00009a22, 0)


# -- 0x00009a22 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009a24, 0) 


# -- 0x00009a24 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a26, 0) 


# -- 0x00009a26 e8 cc f8 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a2b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x00009a2b, 0)


# -- 0x00009a2b 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x00009a2e, 0) 


# -- 0x00009a2e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a32, 0) 


# -- 0x00009a32 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009a38, 0) 


# -- 0x00009a38 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a3b, 0) 


# -- 0x00009a3b e8 f0 9a ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a40;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x00009a40, 0)


# -- 0x00009a40 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009a44, 0) 


# -- 0x00009a44 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a48, 0) 


# -- 0x00009a48 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00009a4d, 0) 


# -- 0x00009a4d 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009a50, 0) 


# -- 0x00009a50 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a53, 0) 


# -- 0x00009a53 e8 39 9e ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a58;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009a58, 0)


# -- 0x00009a58 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a5c, 0) 


# -- 0x00009a5c 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009a62, 0) 


# -- 0x00009a62 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009a65, 0) 


# -- 0x00009a65 e8 96 97 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a6a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x00009a6a, 0)


# -- 0x00009a6a 90                                     nop
 0: goto (0x00009a6b, 0) 


# -- 0x00009a6b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a6f, 0) 


# -- 0x00009a6f 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00009a78, 0) 


# -- 0x00009a78 74 05                                  je 0x9a7f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009a7f, 0) 
 2: goto (0x00009a7a, 0) 


# -- 0x00009a7a e8 f1 93 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009a7f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00009a7f, 0)


# -- 0x00009a7f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009a80, 0) 


# -- 0x00009a80 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009a81 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009a82, 0) 


# -- 0x00009a82 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009a85, 0) 


# -- 0x00009a85 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009a89, 0) 


# -- 0x00009a89 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x00009a8d, 0) 


# -- 0x00009a8d 48 89 75 d0                            mov %rsi,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rsi<64>;
 1: goto (0x00009a91, 0) 


# -- 0x00009a91 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009a9a, 0) 


# -- 0x00009a9a 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00009a9e, 0) 


# -- 0x00009a9e 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00009aa0, 0) 


# -- 0x00009aa0 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009aa4, 0) 


# -- 0x00009aa4 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009aa8, 0) 


# -- 0x00009aa8 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009aab, 0) 


# -- 0x00009aab 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009aae, 0) 


# -- 0x00009aae e8 bb fa ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009ab3;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x00009ab3, 0)


# -- 0x00009ab3 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009ab7, 0) 


# -- 0x00009ab7 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009abb, 0) 


# -- 0x00009abb 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009abe, 0) 


# -- 0x00009abe 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ac1, 0) 


# -- 0x00009ac1 e8 d8 2f 00 00                         call 0xca9e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009ac6;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000ca9e, 0) #call with return address @ (0x00009ac6, 0)


# -- 0x00009ac6 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009ac8, 0) 


# -- 0x00009ac8 74 11                                  je 0x9adb
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009adb, 0) 
 2: goto (0x00009aca, 0) 


# -- 0x00009aca e8 b1 91 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009acf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00009acf, 0)


# -- 0x00009acf 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009ad1, 0) 


# -- 0x00009ad1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ad3, 0) 


# -- 0x00009ad3 e8 1f f8 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009ad8;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x00009ad8, 0)


# -- 0x00009ad8 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x00009adb, 0) 


# -- 0x00009adb 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009adf, 0) 


# -- 0x00009adf 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009ae5, 0) 


# -- 0x00009ae5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ae8, 0) 


# -- 0x00009ae8 e8 43 9a ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009aed;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x00009aed, 0)


# -- 0x00009aed 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009af1, 0) 


# -- 0x00009af1 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009af5, 0) 


# -- 0x00009af5 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00009afa, 0) 


# -- 0x00009afa 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009afd, 0) 


# -- 0x00009afd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009b00, 0) 


# -- 0x00009b00 e8 8c 9d ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b05;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009b05, 0)


# -- 0x00009b05 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009b09, 0) 


# -- 0x00009b09 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009b0f, 0) 


# -- 0x00009b0f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009b12, 0) 


# -- 0x00009b12 e8 e9 96 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b17;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x00009b17, 0)


# -- 0x00009b17 90                                     nop
 0: goto (0x00009b18, 0) 


# -- 0x00009b18 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009b1c, 0) 


# -- 0x00009b1c 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00009b25, 0) 


# -- 0x00009b25 74 05                                  je 0x9b2c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009b2c, 0) 
 2: goto (0x00009b27, 0) 


# -- 0x00009b27 e8 44 93 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b2c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00009b2c, 0)


# -- 0x00009b2c c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009b2d, 0) 


# -- 0x00009b2d c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009b2e 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009b2f, 0) 


# -- 0x00009b2f 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009b32, 0) 


# -- 0x00009b32 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009b36, 0) 


# -- 0x00009b36 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x00009b3a, 0) 


# -- 0x00009b3a 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x00009b3e, 0) 


# -- 0x00009b3e 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009b47, 0) 


# -- 0x00009b47 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00009b4b, 0) 


# -- 0x00009b4b 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00009b4d, 0) 


# -- 0x00009b4d 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009b51, 0) 


# -- 0x00009b51 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009b54, 0) 


# -- 0x00009b54 25 00 00 01 00                         and $0x10000,%eax
 0: %%0<32> := (0x00010000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00009b59, 0) 


# -- 0x00009b59 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009b5b, 0) 


# -- 0x00009b5b 0f 95 c0                               setne %al
 0: %%0<8> := (extu ! (zf<1>) 8);
 1: rax<64>{0, 7} := %%0<8>;
 2: goto (0x00009b5e, 0) 


# -- 0x00009b5e 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009b61, 0) 


# -- 0x00009b61 89 45 dc                               mov %eax,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := rax<64>{0,31};
 1: goto (0x00009b64, 0) 


# -- 0x00009b64 48 8b 55 c0                            mov -0x40(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009b68, 0) 


# -- 0x00009b68 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009b6c, 0) 


# -- 0x00009b6c 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009b6f, 0) 


# -- 0x00009b6f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009b72, 0) 


# -- 0x00009b72 e8 f7 f9 ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b77;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x00009b77, 0)


# -- 0x00009b77 8b 55 dc                               mov -0x24(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00009b7a, 0) 


# -- 0x00009b7a 48 8b 4d c8                            mov -0x38(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00009b7e, 0) 


# -- 0x00009b7e 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009b82, 0) 


# -- 0x00009b82 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009b85, 0) 


# -- 0x00009b85 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009b88, 0) 


# -- 0x00009b88 e8 d4 d0 ff ff                         call 0x6c61
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b8d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006c61, 0) #call with return address @ (0x00009b8d, 0)


# -- 0x00009b8d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009b8f, 0) 


# -- 0x00009b8f 74 11                                  je 0x9ba2
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009ba2, 0) 
 2: goto (0x00009b91, 0) 


# -- 0x00009b91 e8 ea 90 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b96;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x00009b96, 0)


# -- 0x00009b96 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009b98, 0) 


# -- 0x00009b98 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009b9a, 0) 


# -- 0x00009b9a e8 58 f7 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009b9f;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x00009b9f, 0)


# -- 0x00009b9f 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x00009ba2, 0) 


# -- 0x00009ba2 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ba6, 0) 


# -- 0x00009ba6 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009bac, 0) 


# -- 0x00009bac 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009baf, 0) 


# -- 0x00009baf e8 7c 99 ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009bb4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x00009bb4, 0)


# -- 0x00009bb4 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009bb8, 0) 


# -- 0x00009bb8 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009bbc, 0) 


# -- 0x00009bbc ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00009bc1, 0) 


# -- 0x00009bc1 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009bc4, 0) 


# -- 0x00009bc4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009bc7, 0) 


# -- 0x00009bc7 e8 c5 9c ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009bcc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009bcc, 0)


# -- 0x00009bcc 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009bd0, 0) 


# -- 0x00009bd0 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009bd6, 0) 


# -- 0x00009bd6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009bd9, 0) 


# -- 0x00009bd9 e8 22 96 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009bde;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x00009bde, 0)


# -- 0x00009bde 90                                     nop
 0: goto (0x00009bdf, 0) 


# -- 0x00009bdf 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009be3, 0) 


# -- 0x00009be3 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00009bec, 0) 


# -- 0x00009bec 74 05                                  je 0x9bf3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009bf3, 0) 
 2: goto (0x00009bee, 0) 


# -- 0x00009bee e8 7d 92 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009bf3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00009bf3, 0)


# -- 0x00009bf3 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009bf4, 0) 


# -- 0x00009bf4 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009bf5 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009bf6, 0) 


# -- 0x00009bf6 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009bf9, 0) 


# -- 0x00009bf9 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x00009bfd, 0) 


# -- 0x00009bfd 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x00009c01, 0) 


# -- 0x00009c01 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c05, 0) 


# -- 0x00009c05 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c0c, 0) 


# -- 0x00009c0c 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009c0f, 0) 


# -- 0x00009c0f 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00009c12, 0) 


# -- 0x00009c12 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009c14, 0) 


# -- 0x00009c14 75 15                                  jne 0x9c2b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009c2b, 0) 
 2: goto (0x00009c16, 0) 


# -- 0x00009c16 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c1a, 0) 


# -- 0x00009c1a 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c21, 0) 


# -- 0x00009c21 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009c24, 0) 


# -- 0x00009c24 83 e0 08                               and $0x8,%eax
 0: %%0<32> := (8<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{3});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x00009c27, 0) 


# -- 0x00009c27 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009c29, 0) 


# -- 0x00009c29 74 07                                  je 0x9c32
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009c32, 0) 
 2: goto (0x00009c2b, 0) 


# -- 0x00009c2b b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00009c30, 0) 


# -- 0x00009c30 eb 05                                  jmp 0x9c37
 0: goto (0x00009c37, 0) 


# -- 0x00009c32 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00009c37, 0) 


# -- 0x00009c37 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009c38, 0) 


# -- 0x00009c38 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009c39 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c3a, 0) 


# -- 0x00009c3a 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009c3d, 0) 


# -- 0x00009c3d 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x00009c41, 0) 


# -- 0x00009c41 48 89 75 f0                            mov %rsi,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rsi<64>;
 1: goto (0x00009c45, 0) 


# -- 0x00009c45 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c49, 0) 


# -- 0x00009c49 48 8b 50 10                            mov 0x10(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009c4d, 0) 


# -- 0x00009c4d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c51, 0) 


# -- 0x00009c51 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c54, 0) 


# -- 0x00009c54 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x00009c57, 0) 


# -- 0x00009c57 77 20                                  ja 0x9c79
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00009c79, 0) 
 2: goto (0x00009c59, 0) 


# -- 0x00009c59 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c5d, 0) 


# -- 0x00009c5d 48 8b 50 10                            mov 0x10(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009c61, 0) 


# -- 0x00009c61 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c65, 0) 


# -- 0x00009c65 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009c68, 0) 


# -- 0x00009c68 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009c6a, 0) 


# -- 0x00009c6a 48 01 c2                               add %rax,%rdx
 0: %%0<64> := (rdx<64> & rax<64>);
 1: %%1<64> := (rdx<64> + rax<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> | rax<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rdx<64>) & ! (rax<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rdx<64> := %%1<64>;
16: goto (0x00009c6d, 0) 


# -- 0x00009c6d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c71, 0) 


# -- 0x00009c71 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009c74, 0) 


# -- 0x00009c74 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x00009c77, 0) 


# -- 0x00009c77 76 07                                  jbe 0x9c80
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x00009c80, 0) 
 2: goto (0x00009c79, 0) 


# -- 0x00009c79 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x00009c7e, 0) 


# -- 0x00009c7e eb 05                                  jmp 0x9c85
 0: goto (0x00009c85, 0) 


# -- 0x00009c80 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00009c85, 0) 


# -- 0x00009c85 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009c86, 0) 


# -- 0x00009c86 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009c87 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c88, 0) 


# -- 0x00009c88 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009c8b, 0) 


# -- 0x00009c8b 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009c8f, 0) 


# -- 0x00009c8f 48 89 7d b8                            mov %rdi,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdi<64>;
 1: goto (0x00009c93, 0) 


# -- 0x00009c93 48 89 75 b0                            mov %rsi,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rsi<64>;
 1: goto (0x00009c97, 0) 


# -- 0x00009c97 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ca0, 0) 


# -- 0x00009ca0 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x00009ca4, 0) 


# -- 0x00009ca4 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x00009ca6, 0) 


# -- 0x00009ca6 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009caa, 0) 


# -- 0x00009caa 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x00009cae, 0) 


# -- 0x00009cae 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009cb2, 0) 


# -- 0x00009cb2 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009cb6, 0) 


# -- 0x00009cb6 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009cb9, 0) 


# -- 0x00009cb9 25 ff ff 00 00                         and $0xffff,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<16> = rax<64>{0,15});
 2: %%2<64> := (0x000000000000ffff & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x00009cbe, 0) 


# -- 0x00009cbe 89 45 d0                               mov %eax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),4] := rax<64>{0,31};
 1: goto (0x00009cc1, 0) 


# -- 0x00009cc1 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009cc5, 0) 


# -- 0x00009cc5 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009cc9, 0) 


# -- 0x00009cc9 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009ccc, 0) 


# -- 0x00009ccc 66 b8 00 00                            mov $0x0,%ax
 0: rax<64>{0, 15} := 0<16>;
 1: goto (0x00009cd0, 0) 


# -- 0x00009cd0 89 45 d4                               mov %eax,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rax<64>{0,31};
 1: goto (0x00009cd3, 0) 


# -- 0x00009cd3 c7 45 cc 16 00 00 00                   movl $0x16,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 22<32>;
 1: goto (0x00009cda, 0) 


# -- 0x00009cda 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009cdd, 0) 


# -- 0x00009cdd 25 ff ff fc ff                         and $0xfffcffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (0xfffcffff & %%0<32>);
 2: %%2<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 3: %%3<1> := (0<32> = %%1<32>);
 4: %%4<1> := (0<32> <> (0x80000000 & %%0<32>));
 5: %%5<64> := (extu %%1<32> 64);
 6: cf<1> := 0<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := 0<1>;
 9: zf<1> := %%3<1>;
10: sf<1> := %%4<1>;
11: of<1> := 0<1>;
12: rax<64> := %%5<64>;
13: goto (0x00009ce2, 0) 


# -- 0x00009ce2 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009ce4, 0) 


# -- 0x00009ce4 74 2b                                  je 0x9d11
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009d11, 0) 
 2: goto (0x00009ce6, 0) 


# -- 0x00009ce6 8b 55 d0                               mov -0x30(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00009ce9, 0) 


# -- 0x00009ce9 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009cec, 0) 


# -- 0x00009cec 41 89 d0                               mov %edx,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x00009cef, 0) 


# -- 0x00009cef 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009cf1, 0) 


# -- 0x00009cf1 48 8d 15 e0 4f 00 00                   lea 0x4fe0(%rip),%rdx
 0: rdx<64> := 0x000000000000ecd8;
 1: goto (0x00009cf8, 0) 


# -- 0x00009cf8 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00009cfd, 0) 


# -- 0x00009cfd bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00009d02, 0) 


# -- 0x00009d02 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00009d07, 0) 


# -- 0x00009d07 e8 94 95 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009d0c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00009d0c, 0)


# -- 0x00009d0c e9 f8 01 00 00                         jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009d11 83 7d d0 06                            cmpl $0x6,-0x30(%rbp)
 0: %%0<32> := @[(rbp<64> + -48<64>),4];
 1: %%1<32> := (%%0<32> - 6<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x00009d15, 0) 


# -- 0x00009d15 0f 87 be 01 00 00                      ja 0x9ed9
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x00009ed9, 0) 
 2: goto (0x00009d1b, 0) 


# -- 0x00009d1b 8b 45 d0                               mov -0x30(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -48<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009d1e, 0) 


# -- 0x00009d1e 48 8d 14 85 00 00 00 00                lea 0x0(,%rax,4),%rdx
 0: %%0<64> := (rax<64> << 2<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x00009d26, 0) 


# -- 0x00009d26 48 8d 05 17 50 00 00                   lea 0x5017(%rip),%rax
 0: rax<64> := 0x000000000000ed44;
 1: goto (0x00009d2d, 0) 


# -- 0x00009d2d 8b 04 02                               mov (%rdx,%rax,1),%eax
 0: %%0<64> := (extu @[(rdx<64> + rax<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009d30, 0) 


# -- 0x00009d30 48 63 d0                               movslq %eax,%rdx
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x00009d33, 0) 


# -- 0x00009d33 48 8d 05 0a 50 00 00                   lea 0x500a(%rip),%rax
 0: rax<64> := 0x000000000000ed44;
 1: goto (0x00009d3a, 0) 


# -- 0x00009d3a 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x00009d3d, 0) 


# -- 0x00009d3d ff e0                                  jmp *%rax
 0: %%0<64> := rax<64>;
 1: goto %%0<64> 


# -- 0x00009d3f 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d43, 0) 


# -- 0x00009d43 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009d47, 0) 


# -- 0x00009d47 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d4b, 0) 


# -- 0x00009d4b 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d4e, 0) 


# -- 0x00009d4e 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009d51, 0) 


# -- 0x00009d51 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009d54, 0) 


# -- 0x00009d54 e8 e0 fe ff ff                         call 0x9c39
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009d59;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c39, 0) #call with return address @ (0x00009d59, 0)


# -- 0x00009d59 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009d5b, 0) 


# -- 0x00009d5b 0f 85 a4 01 00 00                      jne 0x9f05
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009f05, 0) 
 2: goto (0x00009d61, 0) 


# -- 0x00009d61 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d65, 0) 


# -- 0x00009d65 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009d69, 0) 


# -- 0x00009d69 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d6d, 0) 


# -- 0x00009d6d 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d70, 0) 


# -- 0x00009d70 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009d73, 0) 


# -- 0x00009d73 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009d76, 0) 


# -- 0x00009d76 e8 b6 fa ff ff                         call 0x9831
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009d7b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009831, 0) #call with return address @ (0x00009d7b, 0)


# -- 0x00009d7b e9 83 01 00 00                         jmp 0x9f03
 0: goto (0x00009f03, 0) 


# -- 0x00009d80 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d84, 0) 


# -- 0x00009d84 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009d88, 0) 


# -- 0x00009d88 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d8c, 0) 


# -- 0x00009d8c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009d8f, 0) 


# -- 0x00009d8f 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009d92, 0) 


# -- 0x00009d92 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009d95, 0) 


# -- 0x00009d95 e8 5b fe ff ff                         call 0x9bf5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009d9a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009bf5, 0) #call with return address @ (0x00009d9a, 0)


# -- 0x00009d9a 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009d9c, 0) 


# -- 0x00009d9c 74 0c                                  je 0x9daa
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009daa, 0) 
 2: goto (0x00009d9e, 0) 


# -- 0x00009d9e c7 45 cc 01 00 00 00                   movl $0x1,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 1<32>;
 1: goto (0x00009da5, 0) 


# -- 0x00009da5 e9 5f 01 00 00                         jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009daa 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009dae, 0) 


# -- 0x00009dae 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009db2, 0) 


# -- 0x00009db2 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009db6, 0) 


# -- 0x00009db6 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009db9, 0) 


# -- 0x00009db9 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009dbc, 0) 


# -- 0x00009dbc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009dbf, 0) 


# -- 0x00009dbf e8 75 fe ff ff                         call 0x9c39
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009dc4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c39, 0) #call with return address @ (0x00009dc4, 0)


# -- 0x00009dc4 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009dc6, 0) 


# -- 0x00009dc6 74 0c                                  je 0x9dd4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009dd4, 0) 
 2: goto (0x00009dc8, 0) 


# -- 0x00009dc8 c7 45 cc 1c 00 00 00                   movl $0x1c,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 28<32>;
 1: goto (0x00009dcf, 0) 


# -- 0x00009dcf e9 35 01 00 00                         jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009dd4 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009dd8, 0) 


# -- 0x00009dd8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ddb, 0) 


# -- 0x00009ddb e8 a7 fa ff ff                         call 0x9887
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009de0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009887, 0) #call with return address @ (0x00009de0, 0)


# -- 0x00009de0 e9 1e 01 00 00                         jmp 0x9f03
 0: goto (0x00009f03, 0) 


# -- 0x00009de5 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009de9, 0) 


# -- 0x00009de9 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009ded, 0) 


# -- 0x00009ded 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009df1, 0) 


# -- 0x00009df1 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009df4, 0) 


# -- 0x00009df4 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009df7, 0) 


# -- 0x00009df7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009dfa, 0) 


# -- 0x00009dfa e8 dc fb ff ff                         call 0x99db
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009dff;
 2: rsp<64> := %%0<64>;
 3: goto (0x000099db, 0) #call with return address @ (0x00009dff, 0)


# -- 0x00009dff e9 ff 00 00 00                         jmp 0x9f03
 0: goto (0x00009f03, 0) 


# -- 0x00009e04 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e08, 0) 


# -- 0x00009e08 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009e0c, 0) 


# -- 0x00009e0c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e10, 0) 


# -- 0x00009e10 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e13, 0) 


# -- 0x00009e13 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009e16, 0) 


# -- 0x00009e16 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009e19, 0) 


# -- 0x00009e19 e8 d7 fd ff ff                         call 0x9bf5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009e1e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009bf5, 0) #call with return address @ (0x00009e1e, 0)


# -- 0x00009e1e 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009e20, 0) 


# -- 0x00009e20 74 0c                                  je 0x9e2e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009e2e, 0) 
 2: goto (0x00009e22, 0) 


# -- 0x00009e22 c7 45 cc 01 00 00 00                   movl $0x1,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 1<32>;
 1: goto (0x00009e29, 0) 


# -- 0x00009e29 e9 db 00 00 00                         jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009e2e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e32, 0) 


# -- 0x00009e32 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009e36, 0) 


# -- 0x00009e36 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e3a, 0) 


# -- 0x00009e3a 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e3d, 0) 


# -- 0x00009e3d 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009e40, 0) 


# -- 0x00009e40 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009e43, 0) 


# -- 0x00009e43 e8 f1 fd ff ff                         call 0x9c39
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009e48;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c39, 0) #call with return address @ (0x00009e48, 0)


# -- 0x00009e48 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009e4a, 0) 


# -- 0x00009e4a 0f 85 b8 00 00 00                      jne 0x9f08
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x00009f08, 0) 
 2: goto (0x00009e50, 0) 


# -- 0x00009e50 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e54, 0) 


# -- 0x00009e54 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009e58, 0) 


# -- 0x00009e58 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e5c, 0) 


# -- 0x00009e5c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e5f, 0) 


# -- 0x00009e5f 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009e62, 0) 


# -- 0x00009e62 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009e65, 0) 


# -- 0x00009e65 e8 17 fc ff ff                         call 0x9a81
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009e6a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009a81, 0) #call with return address @ (0x00009e6a, 0)


# -- 0x00009e6a e9 94 00 00 00                         jmp 0x9f03
 0: goto (0x00009f03, 0) 


# -- 0x00009e6f 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e73, 0) 


# -- 0x00009e73 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009e77, 0) 


# -- 0x00009e77 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e7b, 0) 


# -- 0x00009e7b 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e7e, 0) 


# -- 0x00009e7e 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009e81, 0) 


# -- 0x00009e81 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009e84, 0) 


# -- 0x00009e84 e8 6c fd ff ff                         call 0x9bf5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009e89;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009bf5, 0) #call with return address @ (0x00009e89, 0)


# -- 0x00009e89 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009e8b, 0) 


# -- 0x00009e8b 74 09                                  je 0x9e96
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009e96, 0) 
 2: goto (0x00009e8d, 0) 


# -- 0x00009e8d c7 45 cc 01 00 00 00                   movl $0x1,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 1<32>;
 1: goto (0x00009e94, 0) 


# -- 0x00009e94 eb 73                                  jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009e96 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009e9a, 0) 


# -- 0x00009e9a 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009e9e, 0) 


# -- 0x00009e9e 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ea2, 0) 


# -- 0x00009ea2 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ea5, 0) 


# -- 0x00009ea5 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009ea8, 0) 


# -- 0x00009ea8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009eab, 0) 


# -- 0x00009eab e8 89 fd ff ff                         call 0x9c39
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009eb0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009c39, 0) #call with return address @ (0x00009eb0, 0)


# -- 0x00009eb0 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x00009eb2, 0) 


# -- 0x00009eb2 74 09                                  je 0x9ebd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009ebd, 0) 
 2: goto (0x00009eb4, 0) 


# -- 0x00009eb4 c7 45 cc 1c 00 00 00                   movl $0x1c,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := 28<32>;
 1: goto (0x00009ebb, 0) 


# -- 0x00009ebb eb 4c                                  jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009ebd 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ec1, 0) 


# -- 0x00009ec1 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009ec5, 0) 


# -- 0x00009ec5 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ec9, 0) 


# -- 0x00009ec9 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ecc, 0) 


# -- 0x00009ecc 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009ecf, 0) 


# -- 0x00009ecf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ed2, 0) 


# -- 0x00009ed2 e8 57 fc ff ff                         call 0x9b2e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009ed7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009b2e, 0) #call with return address @ (0x00009ed7, 0)


# -- 0x00009ed7 eb 2a                                  jmp 0x9f03
 0: goto (0x00009f03, 0) 


# -- 0x00009ed9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009edd, 0) 


# -- 0x00009edd 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ee1, 0) 


# -- 0x00009ee1 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009ee4, 0) 


# -- 0x00009ee4 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009ee6, 0) 


# -- 0x00009ee6 48 8d 15 23 4e 00 00                   lea 0x4e23(%rip),%rdx
 0: rdx<64> := 0x000000000000ed10;
 1: goto (0x00009eed, 0) 


# -- 0x00009eed be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x00009ef2, 0) 


# -- 0x00009ef2 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x00009ef7, 0) 


# -- 0x00009ef7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x00009efc, 0) 


# -- 0x00009efc e8 9f 93 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f01;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x00009f01, 0)


# -- 0x00009f01 eb 06                                  jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009f03 eb 6d                                  jmp 0x9f72
 0: goto (0x00009f72, 0) 


# -- 0x00009f05 90                                     nop
 0: goto (0x00009f06, 0) 


# -- 0x00009f06 eb 01                                  jmp 0x9f09
 0: goto (0x00009f09, 0) 


# -- 0x00009f08 90                                     nop
 0: goto (0x00009f09, 0) 


# -- 0x00009f09 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f0d, 0) 


# -- 0x00009f0d 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x00009f11, 0) 


# -- 0x00009f11 48 8d 45 e0                            lea -0x20(%rbp),%rax
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x00009f15, 0) 


# -- 0x00009f15 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009f18, 0) 


# -- 0x00009f18 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f1b, 0) 


# -- 0x00009f1b e8 4e f6 ff ff                         call 0x956e
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f20;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000956e, 0) #call with return address @ (0x00009f20, 0)


# -- 0x00009f20 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009f23, 0) 


# -- 0x00009f23 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f25, 0) 


# -- 0x00009f25 e8 cd f3 ff ff                         call 0x92f7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f2a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000092f7, 0) #call with return address @ (0x00009f2a, 0)


# -- 0x00009f2a 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x00009f2d, 0) 


# -- 0x00009f2d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f31, 0) 


# -- 0x00009f31 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f34, 0) 


# -- 0x00009f34 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009f3a, 0) 


# -- 0x00009f3a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f3d, 0) 


# -- 0x00009f3d e8 ee 95 ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f42;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x00009f42, 0)


# -- 0x00009f42 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f46, 0) 


# -- 0x00009f46 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f49, 0) 


# -- 0x00009f49 48 8d 4d e0                            lea -0x20(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x00009f4d, 0) 


# -- 0x00009f4d ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x00009f52, 0) 


# -- 0x00009f52 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009f55, 0) 


# -- 0x00009f55 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f58, 0) 


# -- 0x00009f58 e8 34 99 ff ff                         call 0x3891
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f5d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003891, 0) #call with return address @ (0x00009f5d, 0)


# -- 0x00009f5d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f61, 0) 


# -- 0x00009f61 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f64, 0) 


# -- 0x00009f64 48 05 08 01 00 00                      add $0x108,%rax
 0: %%0<64> := (rax<64> + 264<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x00009f6a, 0) 


# -- 0x00009f6a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f6d, 0) 


# -- 0x00009f6d e8 8e 92 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f72;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x00009f72, 0)


# -- 0x00009f72 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f76, 0) 


# -- 0x00009f76 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009f79, 0) 


# -- 0x00009f79 e8 fb f3 ff ff                         call 0x9379
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f7e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009379, 0) #call with return address @ (0x00009f7e, 0)


# -- 0x00009f7e 90                                     nop
 0: goto (0x00009f7f, 0) 


# -- 0x00009f7f 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009f83, 0) 


# -- 0x00009f83 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x00009f8c, 0) 


# -- 0x00009f8c 74 05                                  je 0x9f93
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009f93, 0) 
 2: goto (0x00009f8e, 0) 


# -- 0x00009f8e e8 dd 8e ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009f93;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x00009f93, 0)


# -- 0x00009f93 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x00009f94, 0) 


# -- 0x00009f94 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x00009f95 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009f96, 0) 


# -- 0x00009f96 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x00009f99, 0) 


# -- 0x00009f99 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009f9a, 0) 


# -- 0x00009f9a 48 83 ec 28                            sub $0x28,%rsp
 0: %%0<64> := (rsp<64> - 40<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x00009f9e, 0) 


# -- 0x00009f9e 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x00009fa2, 0) 


# -- 0x00009fa2 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x00009fa7, 0) 


# -- 0x00009fa7 bf 1c 00 00 00                         mov $0x1c,%edi
 0: rdi<64> := 28<64>;
 1: goto (0x00009fac, 0) 


# -- 0x00009fac e8 bf 90 ff ff                         call 0x3070
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009fb1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003070, 0) #call with return address @ (0x00009fb1, 0)


# -- 0x00009fb1 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x00009fb5, 0) 


# -- 0x00009fb5 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00009fb9, 0) 


# -- 0x00009fb9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009fbd, 0) 


# -- 0x00009fbd ba 1c 00 00 00                         mov $0x1c,%edx
 0: rdx<64> := 28<64>;
 1: goto (0x00009fc2, 0) 


# -- 0x00009fc2 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009fc5, 0) 


# -- 0x00009fc5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x00009fc8, 0) 


# -- 0x00009fc8 e8 31 97 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009fcd;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x00009fcd, 0)


# -- 0x00009fcd 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009fd1, 0) 


# -- 0x00009fd1 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009fd7, 0) 


# -- 0x00009fd7 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x00009fda, 0) 


# -- 0x00009fda 74 1d                                  je 0x9ff9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x00009ff9, 0) 
 2: goto (0x00009fdc, 0) 


# -- 0x00009fdc 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009fe0, 0) 


# -- 0x00009fe0 8b 80 00 01 00 00                      mov 0x100(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 256<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x00009fe6, 0) 


# -- 0x00009fe6 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x00009fea, 0) 


# -- 0x00009fea ba 1c 00 00 00                         mov $0x1c,%edx
 0: rdx<64> := 28<64>;
 1: goto (0x00009fef, 0) 


# -- 0x00009fef 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x00009ff2, 0) 


# -- 0x00009ff2 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x00009ff4, 0) 


# -- 0x00009ff4 e8 ac 37 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x0000000000009ff9;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x00009ff9, 0)


# -- 0x00009ff9 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x00009ffd, 0) 


# -- 0x00009ffd 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a001, 0) 


# -- 0x0000a001 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a004, 0) 


# -- 0x0000a004 e8 c5 36 00 00                         call 0xd6ce
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a009;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6ce, 0) #call with return address @ (0x0000a009, 0)


# -- 0x0000a009 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a00c, 0) 


# -- 0x0000a00c 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a010, 0) 


# -- 0x0000a010 48 89 50 10                            mov %rdx,0x10(%rax)
 0: @[(rax<64> + 16<64>),8] := rdx<64>;
 1: goto (0x0000a014, 0) 


# -- 0x0000a014 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a018, 0) 


# -- 0x0000a018 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a01b, 0) 


# -- 0x0000a01b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a01d, 0) 


# -- 0x0000a01d e8 8e 94 ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a022;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000a022, 0)


# -- 0x0000a022 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a024, 0) 


# -- 0x0000a024 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a028, 0) 


# -- 0x0000a028 89 50 04                               mov %edx,0x4(%rax)
 0: @[(rax<64> + 4<64>),4] := rdx<64>{0,31};
 1: goto (0x0000a02b, 0) 


# -- 0x0000a02b 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a02f, 0) 


# -- 0x0000a02f 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a032, 0) 


# -- 0x0000a032 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a034, 0) 


# -- 0x0000a034 e8 77 94 ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a039;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000a039, 0)


# -- 0x0000a039 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a03b, 0) 


# -- 0x0000a03b 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a03f, 0) 


# -- 0x0000a03f 89 50 18                               mov %edx,0x18(%rax)
 0: @[(rax<64> + 24<64>),4] := rdx<64>{0,31};
 1: goto (0x0000a042, 0) 


# -- 0x0000a042 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a046, 0) 


# -- 0x0000a046 8b 18                                  mov (%rax),%ebx
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rbx<64> := %%0<64>;
 2: goto (0x0000a048, 0) 


# -- 0x0000a048 bf 13 95 60 25                         mov $0x25609513,%edi
 0: rdi<64> := 0x0000000025609513;
 1: goto (0x0000a04d, 0) 


# -- 0x0000a04d e8 fe 8e ff ff                         call 0x2f50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a052;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f50, 0) #call with return address @ (0x0000a052, 0)


# -- 0x0000a052 39 c3                                  cmp %eax,%ebx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rbx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a054, 0) 


# -- 0x0000a054 74 0c                                  je 0xa062
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a062, 0) 
 2: goto (0x0000a056, 0) 


# -- 0x0000a056 48 8d 3d 03 4d 00 00                   lea 0x4d03(%rip),%rdi
 0: rdi<64> := 0x000000000000ed60;
 1: goto (0x0000a05d, 0) 


# -- 0x0000a05d e8 d6 35 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a062;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000a062, 0)


# -- 0x0000a062 48 8b 55 e0                            mov -0x20(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a066, 0) 


# -- 0x0000a066 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a06a, 0) 


# -- 0x0000a06a 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a06d, 0) 


# -- 0x0000a06d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a070, 0) 


# -- 0x0000a070 e8 17 f4 ff ff                         call 0x948c
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a075;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000948c, 0) #call with return address @ (0x0000a075, 0)


# -- 0x0000a075 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000a079, 0) 


# -- 0x0000a079 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a07d, 0) 


# -- 0x0000a07d 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a080, 0) 


# -- 0x0000a080 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a083, 0) 


# -- 0x0000a083 83 f8 01                               cmp $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a086, 0) 


# -- 0x0000a086 0f 85 90 00 00 00                      jne 0xa11c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a11c, 0) 
 2: goto (0x0000a08c, 0) 


# -- 0x0000a08c 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a090, 0) 


# -- 0x0000a090 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a097, 0) 


# -- 0x0000a097 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a09a, 0) 


# -- 0x0000a09a 25 00 80 00 00                         and $0x8000,%eax
 0: %%0<32> := (0x00008000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000a09f, 0) 


# -- 0x0000a09f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a0a1, 0) 


# -- 0x0000a0a1 74 59                                  je 0xa0fc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a0fc, 0) 
 2: goto (0x0000a0a3, 0) 


# -- 0x0000a0a3 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0a7, 0) 


# -- 0x0000a0a7 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0aa, 0) 


# -- 0x0000a0aa 3d 00 00 10 00                         cmp $0x100000,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 0x00100000);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a0af, 0) 


# -- 0x0000a0af 77 4b                                  ja 0xa0fc
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000a0fc, 0) 
 2: goto (0x0000a0b1, 0) 


# -- 0x0000a0b1 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0b5, 0) 


# -- 0x0000a0b5 8b 40 14                               mov 0x14(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0b8, 0) 


# -- 0x0000a0b8 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a0ba, 0) 


# -- 0x0000a0ba 7e 40                                  jle 0xa0fc
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000a0fc, 0) 
 2: goto (0x0000a0bc, 0) 


# -- 0x0000a0bc 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0c0, 0) 


# -- 0x0000a0c0 48 8b 80 30 01 00 00                   mov 0x130(%rax),%rax
 0: %%0<64> := @[(rax<64> + 304<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0c7, 0) 


# -- 0x0000a0c7 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000a0ca, 0) 


# -- 0x0000a0ca 75 30                                  jne 0xa0fc
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a0fc, 0) 
 2: goto (0x0000a0cc, 0) 


# -- 0x0000a0cc 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0d0, 0) 


# -- 0x0000a0d0 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0d3, 0) 


# -- 0x0000a0d3 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a0d5, 0) 


# -- 0x0000a0d5 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0d9, 0) 


# -- 0x0000a0d9 8b 50 14                               mov 0x14(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 20<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a0dc, 0) 


# -- 0x0000a0dc 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0e0, 0) 


# -- 0x0000a0e0 8b 80 d8 00 00 00                      mov 0xd8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 216<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a0e6, 0) 


# -- 0x0000a0e6 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000a0e9, 0) 


# -- 0x0000a0e9 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x0000a0ee, 0) 


# -- 0x0000a0ee be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000a0f3, 0) 


# -- 0x0000a0f3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a0f5, 0) 


# -- 0x0000a0f5 e8 b8 99 ff ff                         call 0x3ab2
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a0fa;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003ab2, 0) #call with return address @ (0x0000a0fa, 0)


# -- 0x0000a0fa eb 20                                  jmp 0xa11c
 0: goto (0x0000a11c, 0) 


# -- 0x0000a0fc 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a100, 0) 


# -- 0x0000a100 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a103, 0) 


# -- 0x0000a103 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a105, 0) 


# -- 0x0000a105 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a109, 0) 


# -- 0x0000a109 48 8b 48 18                            mov 0x18(%rax),%rcx
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a10d, 0) 


# -- 0x0000a10d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a111, 0) 


# -- 0x0000a111 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a114, 0) 


# -- 0x0000a114 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a117, 0) 


# -- 0x0000a117 e8 e2 95 ff ff                         call 0x36fe
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a11c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000036fe, 0) #call with return address @ (0x0000a11c, 0)


# -- 0x0000a11c 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a120, 0) 


# -- 0x0000a120 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a123, 0) 


# -- 0x0000a123 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a126, 0) 


# -- 0x0000a126 75 13                                  jne 0xa13b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a13b, 0) 
 2: goto (0x0000a128, 0) 


# -- 0x0000a128 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a12c, 0) 


# -- 0x0000a12c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a12f, 0) 


# -- 0x0000a12f e8 8d 98 ff ff                         call 0x39c1
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a134;
 2: rsp<64> := %%0<64>;
 3: goto (0x000039c1, 0) #call with return address @ (0x0000a134, 0)


# -- 0x0000a134 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a139, 0) 


# -- 0x0000a139 eb 20                                  jmp 0xa15b
 0: goto (0x0000a15b, 0) 


# -- 0x0000a13b 48 8b 05 46 72 20 00                   mov 0x207246(%rip),%rax
 0: %%0<64> := @[0x0000000000211388,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a142, 0) 


# -- 0x0000a142 48 8b 4d e8                            mov -0x18(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a146, 0) 


# -- 0x0000a146 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000a14b, 0) 


# -- 0x0000a14b 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a14e, 0) 


# -- 0x0000a14e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a151, 0) 


# -- 0x0000a151 e8 ca 8f ff ff                         call 0x3120
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a156;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003120, 0) #call with return address @ (0x0000a156, 0)


# -- 0x0000a156 e9 47 fe ff ff                         jmp 0x9fa2
 0: goto (0x00009fa2, 0) 


# -- 0x0000a15b 48 83 c4 28                            add $0x28,%rsp
 0: %%0<64> := (rsp<64> + 40<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a15f, 0) 


# -- 0x0000a15f 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000a160, 0) 


# -- 0x0000a160 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a161, 0) 


# -- 0x0000a161 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a162 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a163, 0) 


# -- 0x0000a163 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a166, 0) 


# -- 0x0000a166 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a16a, 0) 


# -- 0x0000a16a 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000a16e, 0) 


# -- 0x0000a16e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a172, 0) 


# -- 0x0000a172 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a175, 0) 


# -- 0x0000a175 e8 86 8b ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a17a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x0000a17a, 0)


# -- 0x0000a17a 90                                     nop
 0: goto (0x0000a17b, 0) 


# -- 0x0000a17b c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a17c, 0) 


# -- 0x0000a17c c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a17d 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a17e, 0) 


# -- 0x0000a17e 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a181, 0) 


# -- 0x0000a181 48 81 ec 40 01 00 00                   sub $0x140,%rsp
 0: %%0<64> := (rsp<64> - 320<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a188, 0) 


# -- 0x0000a188 48 89 bd c8 fe ff ff                   mov %rdi,-0x138(%rbp)
 0: @[(rbp<64> + -312<64>),8] := rdi<64>;
 1: goto (0x0000a18f, 0) 


# -- 0x0000a18f 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a198, 0) 


# -- 0x0000a198 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a19c, 0) 


# -- 0x0000a19c 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000a19e, 0) 


# -- 0x0000a19e 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a1a5, 0) 


# -- 0x0000a1a5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a1a8, 0) 


# -- 0x0000a1a8 e8 83 8f ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a1ad;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000a1ad, 0)


# -- 0x0000a1ad 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a1b4, 0) 


# -- 0x0000a1b4 be 11 00 00 00                         mov $0x11,%esi
 0: rsi<64> := 17<64>;
 1: goto (0x0000a1b9, 0) 


# -- 0x0000a1b9 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a1bc, 0) 


# -- 0x0000a1bc e8 3f 93 ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a1c1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000a1c1, 0)


# -- 0x0000a1c1 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a1c8, 0) 


# -- 0x0000a1c8 be 0f 00 00 00                         mov $0xf,%esi
 0: rsi<64> := 15<64>;
 1: goto (0x0000a1cd, 0) 


# -- 0x0000a1cd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a1d0, 0) 


# -- 0x0000a1d0 e8 2b 93 ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a1d5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000a1d5, 0)


# -- 0x0000a1d5 48 8d 95 70 ff ff ff                   lea -0x90(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a1dc, 0) 


# -- 0x0000a1dc 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a1e3, 0) 


# -- 0x0000a1e3 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a1e6, 0) 


# -- 0x0000a1e6 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a1eb, 0) 


# -- 0x0000a1eb e8 50 8a ff ff                         call 0x2c40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a1f0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c40, 0) #call with return address @ (0x0000a1f0, 0)


# -- 0x0000a1f0 48 8d 85 e8 fe ff ff                   lea -0x118(%rbp),%rax
 0: %%0<64> := (rbp<64> + -280<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a1f7, 0) 


# -- 0x0000a1f7 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a1fa, 0) 


# -- 0x0000a1fa ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000a1ff, 0) 


# -- 0x0000a1ff be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000a204, 0) 


# -- 0x0000a204 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000a209, 0) 


# -- 0x0000a209 e8 82 8f ff ff                         call 0x3190
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a20e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003190, 0) #call with return address @ (0x0000a20e, 0)


# -- 0x0000a20e e8 fd 92 ff ff                         call 0x3510
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a213;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003510, 0) #call with return address @ (0x0000a213, 0)


# -- 0x0000a213 89 85 dc fe ff ff                      mov %eax,-0x124(%rbp)
 0: @[(rbp<64> + -292<64>),4] := rax<64>{0,31};
 1: goto (0x0000a219, 0) 


# -- 0x0000a219 83 bd dc fe ff ff 00                   cmpl $0x0,-0x124(%rbp)
 0: %%0<32> := @[(rbp<64> + -292<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a220, 0) 


# -- 0x0000a220 79 4b                                  jns 0xa26d
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000a26d, 0) 
 2: goto (0x0000a222, 0) 


# -- 0x0000a222 e8 59 8a ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a227;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000a227, 0)


# -- 0x0000a227 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a229, 0) 


# -- 0x0000a229 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a22b, 0) 


# -- 0x0000a22b e8 a0 92 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a230;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000a230, 0)


# -- 0x0000a230 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a233, 0) 


# -- 0x0000a233 48 8d 15 48 4b 00 00                   lea 0x4b48(%rip),%rdx
 0: rdx<64> := 0x000000000000ed82;
 1: goto (0x0000a23a, 0) 


# -- 0x0000a23a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a23f, 0) 


# -- 0x0000a23f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a244, 0) 


# -- 0x0000a244 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a249, 0) 


# -- 0x0000a249 e8 52 90 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a24e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a24e, 0)


# -- 0x0000a24e 8b 85 e8 fe ff ff                      mov -0x118(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -280<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a254, 0) 


# -- 0x0000a254 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a256, 0) 


# -- 0x0000a256 e8 45 8d ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a25b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a25b, 0)


# -- 0x0000a25b 8b 85 ec fe ff ff                      mov -0x114(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -276<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a261, 0) 


# -- 0x0000a261 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a263, 0) 


# -- 0x0000a263 e8 38 8d ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a268;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a268, 0)


# -- 0x0000a268 e9 bf 00 00 00                         jmp 0xa32c
 0: goto (0x0000a32c, 0) 


# -- 0x0000a26d 83 bd dc fe ff ff 00                   cmpl $0x0,-0x124(%rbp)
 0: %%0<32> := @[(rbp<64> + -292<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a274, 0) 


# -- 0x0000a274 7e 5e                                  jle 0xa2d4
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000a2d4, 0) 
 2: goto (0x0000a276, 0) 


# -- 0x0000a276 bf 04 00 00 00                         mov $0x4,%edi
 0: rdi<64> := 4<64>;
 1: goto (0x0000a27b, 0) 


# -- 0x0000a27b e8 30 8a ff ff                         call 0x2cb0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a280;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cb0, 0) #call with return address @ (0x0000a280, 0)


# -- 0x0000a280 48 89 85 e0 fe ff ff                   mov %rax,-0x120(%rbp)
 0: @[(rbp<64> + -288<64>),8] := rax<64>;
 1: goto (0x0000a287, 0) 


# -- 0x0000a287 48 8b 85 e0 fe ff ff                   mov -0x120(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a28e, 0) 


# -- 0x0000a28e 8b 95 dc fe ff ff                      mov -0x124(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -292<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a294, 0) 


# -- 0x0000a294 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x0000a296, 0) 


# -- 0x0000a296 8b 95 ec fe ff ff                      mov -0x114(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -276<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a29c, 0) 


# -- 0x0000a29c 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a2a3, 0) 


# -- 0x0000a2a3 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x0000a2a5, 0) 


# -- 0x0000a2a5 8b 85 e8 fe ff ff                      mov -0x118(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -280<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a2ab, 0) 


# -- 0x0000a2ab 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a2ad, 0) 


# -- 0x0000a2ad e8 ee 8c ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a2b2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a2b2, 0)


# -- 0x0000a2b2 48 8b 05 c7 70 20 00                   mov 0x2070c7(%rip),%rax
 0: %%0<64> := @[0x0000000000211380,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a2b9, 0) 


# -- 0x0000a2b9 48 8b 95 e0 fe ff ff                   mov -0x120(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a2c0, 0) 


# -- 0x0000a2c0 48 8b 8d e0 fe ff ff                   mov -0x120(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a2c7, 0) 


# -- 0x0000a2c7 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a2ca, 0) 


# -- 0x0000a2ca 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a2cd, 0) 


# -- 0x0000a2cd e8 7e 8f ff ff                         call 0x3250
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a2d2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003250, 0) #call with return address @ (0x0000a2d2, 0)


# -- 0x0000a2d2 eb 58                                  jmp 0xa32c
 0: goto (0x0000a32c, 0) 


# -- 0x0000a2d4 8b 95 e8 fe ff ff                      mov -0x118(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -280<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a2da, 0) 


# -- 0x0000a2da 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a2e1, 0) 


# -- 0x0000a2e1 89 10                                  mov %edx,(%rax)
 0: @[rax<64>,4] := rdx<64>{0,31};
 1: goto (0x0000a2e3, 0) 


# -- 0x0000a2e3 8b 85 ec fe ff ff                      mov -0x114(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -276<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a2e9, 0) 


# -- 0x0000a2e9 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a2eb, 0) 


# -- 0x0000a2eb e8 b0 8c ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a2f0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a2f0, 0)


# -- 0x0000a2f0 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000a2f5, 0) 


# -- 0x0000a2f5 bf 11 00 00 00                         mov $0x11,%edi
 0: rdi<64> := 17<64>;
 1: goto (0x0000a2fa, 0) 


# -- 0x0000a2fa e8 d1 8d ff ff                         call 0x30d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a2ff;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030d0, 0) #call with return address @ (0x0000a2ff, 0)


# -- 0x0000a2ff be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000a304, 0) 


# -- 0x0000a304 bf 0f 00 00 00                         mov $0xf,%edi
 0: rdi<64> := 15<64>;
 1: goto (0x0000a309, 0) 


# -- 0x0000a309 e8 c2 8d ff ff                         call 0x30d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a30e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030d0, 0) #call with return address @ (0x0000a30e, 0)


# -- 0x0000a30e be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000a313, 0) 


# -- 0x0000a313 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000a318, 0) 


# -- 0x0000a318 e8 b3 8d ff ff                         call 0x30d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a31d;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030d0, 0) #call with return address @ (0x0000a31d, 0)


# -- 0x0000a31d 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a324, 0) 


# -- 0x0000a324 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a327, 0) 


# -- 0x0000a327 e8 04 8e ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a32c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000a32c, 0)


# -- 0x0000a32c 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a333, 0) 


# -- 0x0000a333 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000a338, 0) 


# -- 0x0000a338 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a33b, 0) 


# -- 0x0000a33b bf 02 00 00 00                         mov $0x2,%edi
 0: rdi<64> := 2<64>;
 1: goto (0x0000a340, 0) 


# -- 0x0000a340 e8 fb 88 ff ff                         call 0x2c40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a345;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c40, 0) #call with return address @ (0x0000a345, 0)


# -- 0x0000a345 8b 85 dc fe ff ff                      mov -0x124(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -292<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a34b, 0) 


# -- 0x0000a34b 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a34f, 0) 


# -- 0x0000a34f 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000a358, 0) 


# -- 0x0000a358 74 05                                  je 0xa35f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a35f, 0) 
 2: goto (0x0000a35a, 0) 


# -- 0x0000a35a e8 11 8b ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a35f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000a35f, 0)


# -- 0x0000a35f c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a360, 0) 


# -- 0x0000a360 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a361 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a362, 0) 


# -- 0x0000a362 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a365, 0) 


# -- 0x0000a365 48 81 ec b0 00 00 00                   sub $0xb0,%rsp
 0: %%0<64> := (rsp<64> - 176<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a36c, 0) 


# -- 0x0000a36c 89 bd 5c ff ff ff                      mov %edi,-0xa4(%rbp)
 0: @[(rbp<64> + -164<64>),4] := rdi<64>{0,31};
 1: goto (0x0000a372, 0) 


# -- 0x0000a372 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a37b, 0) 


# -- 0x0000a37b 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a37f, 0) 


# -- 0x0000a37f 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000a381, 0) 


# -- 0x0000a381 c7 85 68 ff ff ff 80 00 00 00          movl $0x80,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),4] := 128<32>;
 1: goto (0x0000a38b, 0) 


# -- 0x0000a38b 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a392, 0) 


# -- 0x0000a392 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a395, 0) 


# -- 0x0000a395 48 8d 95 68 ff ff ff                   lea -0x98(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -152<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a39c, 0) 


# -- 0x0000a39c 8b 85 5c ff ff ff                      mov -0xa4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -164<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a3a2, 0) 


# -- 0x0000a3a2 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a3a5, 0) 


# -- 0x0000a3a5 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a3a7, 0) 


# -- 0x0000a3a7 e8 44 90 ff ff                         call 0x33f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a3ac;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033f0, 0) #call with return address @ (0x0000a3ac, 0)


# -- 0x0000a3ac 89 85 6c ff ff ff                      mov %eax,-0x94(%rbp)
 0: @[(rbp<64> + -148<64>),4] := rax<64>{0,31};
 1: goto (0x0000a3b2, 0) 


# -- 0x0000a3b2 83 bd 6c ff ff ff 00                   cmpl $0x0,-0x94(%rbp)
 0: %%0<32> := @[(rbp<64> + -148<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a3b9, 0) 


# -- 0x0000a3b9 79 0c                                  jns 0xa3c7
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000a3c7, 0) 
 2: goto (0x0000a3bb, 0) 


# -- 0x0000a3bb 48 8d 3d d6 49 00 00                   lea 0x49d6(%rip),%rdi
 0: rdi<64> := 0x000000000000ed98;
 1: goto (0x0000a3c2, 0) 


# -- 0x0000a3c2 e8 28 30 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a3c7;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x0000a3c7, 0)


# -- 0x0000a3c7 8b 85 6c ff ff ff                      mov -0x94(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -148<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a3cd, 0) 


# -- 0x0000a3cd 48 8b 75 f8                            mov -0x8(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a3d1, 0) 


# -- 0x0000a3d1 64 48 33 34 25 28 00 00 00             xor %fs:0x28,%rsi
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rsi<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rsi<64>{0} ^ %%0<64>{0}) ^ (rsi<64>{4} ^ %%0<64>{4})) ^
        ((rsi<64>{2} ^ %%0<64>{2}) ^ (rsi<64>{6} ^ %%0<64>{6}))) ^
       (((rsi<64>{1} ^ %%0<64>{1}) ^ (rsi<64>{5} ^ %%0<64>{5})) ^
        ((rsi<64>{3} ^ %%0<64>{3}) ^ (rsi<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rsi<64> := %%1<64>;
12: goto (0x0000a3da, 0) 


# -- 0x0000a3da 74 05                                  je 0xa3e1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a3e1, 0) 
 2: goto (0x0000a3dc, 0) 


# -- 0x0000a3dc e8 8f 8a ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a3e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000a3e1, 0)


# -- 0x0000a3e1 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a3e2, 0) 


# -- 0x0000a3e2 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a3e3 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a3e4, 0) 


# -- 0x0000a3e4 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a3e7, 0) 


# -- 0x0000a3e7 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a3eb, 0) 


# -- 0x0000a3eb 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x0000a3ef, 0) 


# -- 0x0000a3ef 89 75 d4                               mov %esi,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rsi<64>{0,31};
 1: goto (0x0000a3f2, 0) 


# -- 0x0000a3f2 48 89 55 c8                            mov %rdx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdx<64>;
 1: goto (0x0000a3f6, 0) 


# -- 0x0000a3f6 48 c7 45 f8 00 00 00 00                movq $0x0,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := 0<64>;
 1: goto (0x0000a3fe, 0) 


# -- 0x0000a3fe 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a401, 0) 


# -- 0x0000a401 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a403, 0) 


# -- 0x0000a403 e8 59 ff ff ff                         call 0xa361
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a408;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a361, 0) #call with return address @ (0x0000a408, 0)


# -- 0x0000a408 89 45 e8                               mov %eax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := rax<64>{0,31};
 1: goto (0x0000a40b, 0) 


# -- 0x0000a40b 83 7d e8 00                            cmpl $0x0,-0x18(%rbp)
 0: %%0<32> := @[(rbp<64> + -24<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a40f, 0) 


# -- 0x0000a40f 0f 88 40 02 00 00                      js 0xa655
 0: if sf<1> goto 1 else goto 2
 1: goto (0x0000a655, 0) 
 2: goto (0x0000a415, 0) 


# -- 0x0000a415 8b 05 c9 6d 20 00                      mov 0x206dc9(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a41b, 0) 


# -- 0x0000a41b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a41d, 0) 


# -- 0x0000a41d 0f 85 81 00 00 00                      jne 0xa4a4
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a4a4, 0) 
 2: goto (0x0000a423, 0) 


# -- 0x0000a423 48 8d 3d 66 6f 20 00                   lea 0x206f66(%rip),%rdi
 0: rdi<64> := 0x0000000000211390;
 1: goto (0x0000a42a, 0) 


# -- 0x0000a42a e8 4e fd ff ff                         call 0xa17d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a42f;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a17d, 0) #call with return address @ (0x0000a42f, 0)


# -- 0x0000a42f 89 45 ec                               mov %eax,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rax<64>{0,31};
 1: goto (0x0000a432, 0) 


# -- 0x0000a432 83 7d ec 00                            cmpl $0x0,-0x14(%rbp)
 0: %%0<32> := @[(rbp<64> + -20<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a436, 0) 


# -- 0x0000a436 74 6c                                  je 0xa4a4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a4a4, 0) 
 2: goto (0x0000a438, 0) 


# -- 0x0000a438 83 7d ec 00                            cmpl $0x0,-0x14(%rbp)
 0: %%0<32> := @[(rbp<64> + -20<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a43c, 0) 


# -- 0x0000a43c 7e 36                                  jle 0xa474
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000a474, 0) 
 2: goto (0x0000a43e, 0) 


# -- 0x0000a43e 48 8d 15 7a 49 00 00                   lea 0x497a(%rip),%rdx
 0: rdx<64> := 0x000000000000edbf;
 1: goto (0x0000a445, 0) 


# -- 0x0000a445 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a44a, 0) 


# -- 0x0000a44a bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a44f, 0) 


# -- 0x0000a44f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a454, 0) 


# -- 0x0000a454 e8 47 8e ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a459;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a459, 0)


# -- 0x0000a459 48 8b 05 00 6e 20 00                   mov 0x206e00(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a460, 0) 


# -- 0x0000a460 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a465, 0) 


# -- 0x0000a465 48 8d 35 24 6f 20 00                   lea 0x206f24(%rip),%rsi
 0: rsi<64> := 0x0000000000211390;
 1: goto (0x0000a46c, 0) 


# -- 0x0000a46c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a46f, 0) 


# -- 0x0000a46f e8 3c 8d ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a474;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000a474, 0)


# -- 0x0000a474 83 7d ec 00                            cmpl $0x0,-0x14(%rbp)
 0: %%0<32> := @[(rbp<64> + -20<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a478, 0) 


# -- 0x0000a478 79 1b                                  jns 0xa495
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000a495, 0) 
 2: goto (0x0000a47a, 0) 


# -- 0x0000a47a 48 8d 15 57 49 00 00                   lea 0x4957(%rip),%rdx
 0: rdx<64> := 0x000000000000edd8;
 1: goto (0x0000a481, 0) 


# -- 0x0000a481 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a486, 0) 


# -- 0x0000a486 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a48b, 0) 


# -- 0x0000a48b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a490, 0) 


# -- 0x0000a490 e8 0b 8e ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a495;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a495, 0)


# -- 0x0000a495 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a498, 0) 


# -- 0x0000a498 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a49a, 0) 


# -- 0x0000a49a e8 01 8b ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a49f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a49f, 0)


# -- 0x0000a49f e9 b2 01 00 00                         jmp 0xa656
 0: goto (0x0000a656, 0) 


# -- 0x0000a4a4 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a4a7, 0) 


# -- 0x0000a4a7 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000a4ac, 0) 


# -- 0x0000a4ac be 03 00 00 00                         mov $0x3,%esi
 0: rsi<64> := 3<64>;
 1: goto (0x0000a4b1, 0) 


# -- 0x0000a4b1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a4b3, 0) 


# -- 0x0000a4b3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a4b8, 0) 


# -- 0x0000a4b8 e8 d3 88 ff ff                         call 0x2d90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a4bd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d90, 0) #call with return address @ (0x0000a4bd, 0)


# -- 0x0000a4bd 89 45 f0                               mov %eax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),4] := rax<64>{0,31};
 1: goto (0x0000a4c0, 0) 


# -- 0x0000a4c0 83 7d f0 ff                            cmpl $0xffffffff,-0x10(%rbp)
 0: %%0<32> := @[(rbp<64> + -16<64>),4];
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000a4c4, 0) 


# -- 0x0000a4c4 75 20                                  jne 0xa4e6
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a4e6, 0) 
 2: goto (0x0000a4c6, 0) 


# -- 0x0000a4c6 48 8d 15 2b 49 00 00                   lea 0x492b(%rip),%rdx
 0: rdx<64> := 0x000000000000edf8;
 1: goto (0x0000a4cd, 0) 


# -- 0x0000a4cd be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a4d2, 0) 


# -- 0x0000a4d2 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a4d7, 0) 


# -- 0x0000a4d7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a4dc, 0) 


# -- 0x0000a4dc e8 bf 8d ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a4e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a4e1, 0)


# -- 0x0000a4e1 e9 45 01 00 00                         jmp 0xa62b
 0: goto (0x0000a62b, 0) 


# -- 0x0000a4e6 8b 45 f0                               mov -0x10(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a4e9, 0) 


# -- 0x0000a4e9 80 e4 f7                               and $0xf7,%ah
 0: %%0<8> := rax<64>{8,15};
 1: %%1<8> := (-9<8> & %%0<8>);
 2: %%2<1> :=
     !
     ((((rax<64>{8} ^ rax<64>{12}) ^ (rax<64>{10} ^ rax<64>{14})) ^
       ((rax<64>{9} ^ rax<64>{13}) ^ rax<64>{15})));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%0<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{8, 15} := %%1<8>;
12: goto (0x0000a4ec, 0) 


# -- 0x0000a4ec 89 45 f4                               mov %eax,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := rax<64>{0,31};
 1: goto (0x0000a4ef, 0) 


# -- 0x0000a4ef 8b 45 f4                               mov -0xc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a4f2, 0) 


# -- 0x0000a4f2 3b 45 f0                               cmp -0x10(%rbp),%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := @[(rbp<64> + -16<64>),4];
 3: %%3<32> := (%%0<32> - %%2<32>);
 4: %%4<32> := (%%1<32> & %%2<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%1<32> | %%2<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%2<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a4f5, 0) 


# -- 0x0000a4f5 74 3c                                  je 0xa533
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a533, 0) 
 2: goto (0x0000a4f7, 0) 


# -- 0x0000a4f7 8b 55 f4                               mov -0xc(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a4fa, 0) 


# -- 0x0000a4fa 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a4fd, 0) 


# -- 0x0000a4fd be 04 00 00 00                         mov $0x4,%esi
 0: rsi<64> := 4<64>;
 1: goto (0x0000a502, 0) 


# -- 0x0000a502 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a504, 0) 


# -- 0x0000a504 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a509, 0) 


# -- 0x0000a509 e8 82 88 ff ff                         call 0x2d90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a50e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d90, 0) #call with return address @ (0x0000a50e, 0)


# -- 0x0000a50e 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000a511, 0) 


# -- 0x0000a511 75 20                                  jne 0xa533
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a533, 0) 
 2: goto (0x0000a513, 0) 


# -- 0x0000a513 48 8d 15 fe 48 00 00                   lea 0x48fe(%rip),%rdx
 0: rdx<64> := 0x000000000000ee18;
 1: goto (0x0000a51a, 0) 


# -- 0x0000a51a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a51f, 0) 


# -- 0x0000a51f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a524, 0) 


# -- 0x0000a524 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a529, 0) 


# -- 0x0000a529 e8 72 8d ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a52e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a52e, 0)


# -- 0x0000a52e e9 f8 00 00 00                         jmp 0xa62b
 0: goto (0x0000a62b, 0) 


# -- 0x0000a533 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a537, 0) 


# -- 0x0000a537 48 8b 4d d8                            mov -0x28(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a53b, 0) 


# -- 0x0000a53b 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a53e, 0) 


# -- 0x0000a53e 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a541, 0) 


# -- 0x0000a541 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a543, 0) 


# -- 0x0000a543 e8 12 ea ff ff                         call 0x8f5a
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a548;
 2: rsp<64> := %%0<64>;
 3: goto (0x00008f5a, 0) #call with return address @ (0x0000a548, 0)


# -- 0x0000a548 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a54c, 0) 


# -- 0x0000a54c 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a551, 0) 


# -- 0x0000a551 75 20                                  jne 0xa573
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a573, 0) 
 2: goto (0x0000a553, 0) 


# -- 0x0000a553 48 8d 15 e6 48 00 00                   lea 0x48e6(%rip),%rdx
 0: rdx<64> := 0x000000000000ee40;
 1: goto (0x0000a55a, 0) 


# -- 0x0000a55a be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a55f, 0) 


# -- 0x0000a55f bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a564, 0) 


# -- 0x0000a564 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a569, 0) 


# -- 0x0000a569 e8 32 8d ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a56e;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a56e, 0)


# -- 0x0000a56e e9 b8 00 00 00                         jmp 0xa62b
 0: goto (0x0000a62b, 0) 


# -- 0x0000a573 8b 05 6b 6c 20 00                      mov 0x206c6b(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a579, 0) 


# -- 0x0000a579 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a57b, 0) 


# -- 0x0000a57b 75 7d                                  jne 0xa5fa
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a5fa, 0) 
 2: goto (0x0000a57d, 0) 


# -- 0x0000a57d 48 8b 05 fc 6d 20 00                   mov 0x206dfc(%rip),%rax
 0: %%0<64> := @[0x0000000000211380,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a584, 0) 


# -- 0x0000a584 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a587, 0) 


# -- 0x0000a587 e8 64 8d ff ff                         call 0x32f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a58c;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032f0, 0) #call with return address @ (0x0000a58c, 0)


# -- 0x0000a58c 48 c7 05 e9 6d 20 00 00 00 00 00       movq $0x0,0x206de9(%rip)
 0: @[0x0000000000211380,8] := 0<64>;
 1: goto (0x0000a597, 0) 


# -- 0x0000a597 c7 45 e4 00 00 00 00                   movl $0x0,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := 0<32>;
 1: goto (0x0000a59e, 0) 


# -- 0x0000a59e eb 24                                  jmp 0xa5c4
 0: goto (0x0000a5c4, 0) 


# -- 0x0000a5a0 48 8b 05 c1 6c 20 00                   mov 0x206cc1(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5a7, 0) 


# -- 0x0000a5a7 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5aa, 0) 


# -- 0x0000a5aa 8b 55 e4                               mov -0x1c(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a5ad, 0) 


# -- 0x0000a5ad 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a5b0, 0) 


# -- 0x0000a5b0 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000a5b4, 0) 


# -- 0x0000a5b4 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000a5b7, 0) 


# -- 0x0000a5b7 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5b9, 0) 


# -- 0x0000a5b9 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a5bb, 0) 


# -- 0x0000a5bb e8 e0 89 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a5c0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a5c0, 0)


# -- 0x0000a5c0 83 45 e4 01                            addl $0x1,-0x1c(%rbp)
 0: %%0<64> := (rbp<64> + -28<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000a5c4, 0) 


# -- 0x0000a5c4 48 8b 05 9d 6c 20 00                   mov 0x206c9d(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5cb, 0) 


# -- 0x0000a5cb 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a5ce, 0) 


# -- 0x0000a5ce 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5d1, 0) 


# -- 0x0000a5d1 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a5d3, 0) 


# -- 0x0000a5d3 77 cb                                  ja 0xa5a0
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000a5a0, 0) 
 2: goto (0x0000a5d5, 0) 


# -- 0x0000a5d5 48 8b 05 8c 6c 20 00                   mov 0x206c8c(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5dc, 0) 


# -- 0x0000a5dc be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000a5e1, 0) 


# -- 0x0000a5e1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a5e4, 0) 


# -- 0x0000a5e4 e8 b7 8a ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a5e9;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x0000a5e9, 0)


# -- 0x0000a5e9 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a5ed, 0) 


# -- 0x0000a5ed be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000a5f2, 0) 


# -- 0x0000a5f2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a5f5, 0) 


# -- 0x0000a5f5 e8 a6 8a ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a5fa;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x0000a5fa, 0)


# -- 0x0000a5fa 48 8d 15 61 48 00 00                   lea 0x4861(%rip),%rdx
 0: rdx<64> := 0x000000000000ee62;
 1: goto (0x0000a601, 0) 


# -- 0x0000a601 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000a606, 0) 


# -- 0x0000a606 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a60b, 0) 


# -- 0x0000a60b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a610, 0) 


# -- 0x0000a610 e8 8b 8c ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a615;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000a615, 0)


# -- 0x0000a615 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a619, 0) 


# -- 0x0000a619 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a61c, 0) 


# -- 0x0000a61c e8 74 f9 ff ff                         call 0x9f95
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a621;
 2: rsp<64> := %%0<64>;
 3: goto (0x00009f95, 0) #call with return address @ (0x0000a621, 0)


# -- 0x0000a621 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000a626, 0) 


# -- 0x0000a626 e8 25 8e ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a62b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000a62b, 0)


# -- 0x0000a62b 8b 45 e8                               mov -0x18(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a62e, 0) 


# -- 0x0000a62e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a630, 0) 


# -- 0x0000a630 e8 6b 89 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a635;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000a635, 0)


# -- 0x0000a635 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a639, 0) 


# -- 0x0000a639 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a63c, 0) 


# -- 0x0000a63c e8 bf 86 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a641;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x0000a641, 0)


# -- 0x0000a641 8b 05 9d 6b 20 00                      mov 0x206b9d(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a647, 0) 


# -- 0x0000a647 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a649, 0) 


# -- 0x0000a649 75 0b                                  jne 0xa656
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a656, 0) 
 2: goto (0x0000a64b, 0) 


# -- 0x0000a64b bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000a650, 0) 


# -- 0x0000a650 e8 fb 8d ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a655;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000a655, 0)


# -- 0x0000a655 90                                     nop
 0: goto (0x0000a656, 0) 


# -- 0x0000a656 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a657, 0) 


# -- 0x0000a657 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a658 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a659, 0) 


# -- 0x0000a659 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a65c, 0) 


# -- 0x0000a65c 48 83 ec 40                            sub $0x40,%rsp
 0: %%0<64> := (rsp<64> - 64<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a660, 0) 


# -- 0x0000a660 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x0000a664, 0) 


# -- 0x0000a664 89 75 c4                               mov %esi,-0x3c(%rbp)
 0: @[(rbp<64> + -60<64>),4] := rsi<64>{0,31};
 1: goto (0x0000a667, 0) 


# -- 0x0000a667 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a670, 0) 


# -- 0x0000a670 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a674, 0) 


# -- 0x0000a674 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000a676, 0) 


# -- 0x0000a676 c7 45 e0 00 00 00 00                   movl $0x0,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := 0<32>;
 1: goto (0x0000a67d, 0) 


# -- 0x0000a67d eb 4c                                  jmp 0xa6cb
 0: goto (0x0000a6cb, 0) 


# -- 0x0000a67f 48 8d 4d d8                            lea -0x28(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -40<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a683, 0) 


# -- 0x0000a683 8b 45 c4                               mov -0x3c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -60<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a686, 0) 


# -- 0x0000a686 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x0000a68b, 0) 


# -- 0x0000a68b 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a68e, 0) 


# -- 0x0000a68e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a690, 0) 


# -- 0x0000a690 e8 7b 89 ff ff                         call 0x3010
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a695;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003010, 0) #call with return address @ (0x0000a695, 0)


# -- 0x0000a695 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x0000a698, 0) 


# -- 0x0000a698 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a69b, 0) 


# -- 0x0000a69b 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000a69e, 0) 


# -- 0x0000a69e 74 0e                                  je 0xa6ae
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a6ae, 0) 
 2: goto (0x0000a6a0, 0) 


# -- 0x0000a6a0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a6a2, 0) 


# -- 0x0000a6a2 75 20                                  jne 0xa6c4
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a6c4, 0) 
 2: goto (0x0000a6a4, 0) 


# -- 0x0000a6a4 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000a6a9, 0) 


# -- 0x0000a6a9 e9 3b 01 00 00                         jmp 0xa7e9
 0: goto (0x0000a7e9, 0) 


# -- 0x0000a6ae 48 8d 3d c3 47 00 00                   lea 0x47c3(%rip),%rdi
 0: rdi<64> := 0x000000000000ee78;
 1: goto (0x0000a6b5, 0) 


# -- 0x0000a6b5 e8 35 2d 00 00                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a6ba;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x0000a6ba, 0)


# -- 0x0000a6ba b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000a6bf, 0) 


# -- 0x0000a6bf e9 25 01 00 00                         jmp 0xa7e9
 0: goto (0x0000a7e9, 0) 


# -- 0x0000a6c4 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6c7, 0) 


# -- 0x0000a6c7 01 45 e0                               add %eax,-0x20(%rbp)
 0: %%0<32> := rax<64>{0,31};
 1: %%1<64> := (rbp<64> + -32<64>);
 2: %%2<32> := @[%%1<64>,4];
 3: %%3<32> := (%%2<32> & %%0<32>);
 4: %%4<32> := (%%2<32> + %%0<32>);
 5: %%5<32> := ! (%%4<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%5<32>) | (%%3<32> & %%4<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%4<32>{0} ^ %%4<32>{4}) ^ (%%4<32>{2} ^ %%4<32>{6})) ^
       ((%%4<32>{1} ^ %%4<32>{5}) ^ (%%4<32>{3} ^ %%4<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%4<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%4<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%3<32> & %%5<32>) | ((! (%%2<32>) & ! (%%0<32>)) & %%4<32>))));
12: @[%%1<64>,4] := %%4<32>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x0000a6ca, 0) 


# -- 0x0000a6ca 90                                     nop
 0: goto (0x0000a6cb, 0) 


# -- 0x0000a6cb 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6ce, 0) 


# -- 0x0000a6ce 83 f8 03                               cmp $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 3<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a6d1, 0) 


# -- 0x0000a6d1 76 ac                                  jbe 0xa67f
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000a67f, 0) 
 2: goto (0x0000a6d3, 0) 


# -- 0x0000a6d3 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6d6, 0) 


# -- 0x0000a6d6 83 c0 01                               add $0x1,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> + 1<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 8: %%8<64> := (extu %%1<32> 64);
 9: cf<1> := %%2<1>;
10: pf<1> := %%3<1>;
11: af<1> := %%4<1>;
12: zf<1> := %%5<1>;
13: sf<1> := %%6<1>;
14: of<1> := %%7<1>;
15: rax<64> := %%8<64>;
16: goto (0x0000a6d9, 0) 


# -- 0x0000a6d9 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6db, 0) 


# -- 0x0000a6db 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a6de, 0) 


# -- 0x0000a6de e8 fd 8c ff ff                         call 0x33e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a6e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033e0, 0) #call with return address @ (0x0000a6e3, 0)


# -- 0x0000a6e3 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000a6e7, 0) 


# -- 0x0000a6e7 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6ea, 0) 


# -- 0x0000a6ea 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a6ec, 0) 


# -- 0x0000a6ec 48 8b 4d e8                            mov -0x18(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a6f0, 0) 


# -- 0x0000a6f0 8b 45 c4                               mov -0x3c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -60<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a6f3, 0) 


# -- 0x0000a6f3 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a6f6, 0) 


# -- 0x0000a6f6 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a6f8, 0) 


# -- 0x0000a6f8 e8 1b 30 00 00                         call 0xd718
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a6fd;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d718, 0) #call with return address @ (0x0000a6fd, 0)


# -- 0x0000a6fd 8b 45 d8                               mov -0x28(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a700, 0) 


# -- 0x0000a700 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a702, 0) 


# -- 0x0000a702 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a706, 0) 


# -- 0x0000a706 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000a709, 0) 


# -- 0x0000a709 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x0000a70c, 0) 


# -- 0x0000a70c c7 45 dc 00 00 00 00                   movl $0x0,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := 0<32>;
 1: goto (0x0000a713, 0) 


# -- 0x0000a713 e9 98 00 00 00                         jmp 0xa7b0
 0: goto (0x0000a7b0, 0) 


# -- 0x0000a718 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a71c, 0) 


# -- 0x0000a71c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a71f, 0) 


# -- 0x0000a71f 8b 55 dc                               mov -0x24(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a722, 0) 


# -- 0x0000a722 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a725, 0) 


# -- 0x0000a725 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000a729, 0) 


# -- 0x0000a729 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000a72c, 0) 


# -- 0x0000a72c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a72f, 0) 


# -- 0x0000a72f 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x0000a733, 0) 


# -- 0x0000a733 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a737, 0) 


# -- 0x0000a737 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a73b, 0) 


# -- 0x0000a73b 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a73f, 0) 


# -- 0x0000a73f 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a742, 0) 


# -- 0x0000a742 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a745, 0) 


# -- 0x0000a745 e8 76 89 ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a74a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x0000a74a, 0)


# -- 0x0000a74a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a74c, 0) 


# -- 0x0000a74c 75 5e                                  jne 0xa7ac
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a7ac, 0) 
 2: goto (0x0000a74e, 0) 


# -- 0x0000a74e 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a752, 0) 


# -- 0x0000a752 8b 40 48                               mov 0x48(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 72<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a755, 0) 


# -- 0x0000a755 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a757, 0) 


# -- 0x0000a757 74 12                                  je 0xa76b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a76b, 0) 
 2: goto (0x0000a759, 0) 


# -- 0x0000a759 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a75d, 0) 


# -- 0x0000a75d 8b 50 48                               mov 0x48(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 72<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a760, 0) 


# -- 0x0000a760 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a764, 0) 


# -- 0x0000a764 8b 40 4c                               mov 0x4c(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 76<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a767, 0) 


# -- 0x0000a767 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a769, 0) 


# -- 0x0000a769 7e 29                                  jle 0xa794
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000a794, 0) 
 2: goto (0x0000a76b, 0) 


# -- 0x0000a76b 8b 45 c4                               mov -0x3c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -60<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a76e, 0) 


# -- 0x0000a76e ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a773, 0) 


# -- 0x0000a773 48 8d 35 20 47 00 00                   lea 0x4720(%rip),%rsi
 0: rsi<64> := 0x000000000000ee9a;
 1: goto (0x0000a77a, 0) 


# -- 0x0000a77a 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a77c, 0) 


# -- 0x0000a77c e8 24 30 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a781;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x0000a781, 0)


# -- 0x0000a781 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a785, 0) 


# -- 0x0000a785 8b 40 4c                               mov 0x4c(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 76<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a788, 0) 


# -- 0x0000a788 8d 50 01                               lea 0x1(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 1<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a78b, 0) 


# -- 0x0000a78b 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a78f, 0) 


# -- 0x0000a78f 89 50 4c                               mov %edx,0x4c(%rax)
 0: @[(rax<64> + 76<64>),4] := rdx<64>{0,31};
 1: goto (0x0000a792, 0) 


# -- 0x0000a792 eb 44                                  jmp 0xa7d8
 0: goto (0x0000a7d8, 0) 


# -- 0x0000a794 8b 45 c4                               mov -0x3c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -60<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a797, 0) 


# -- 0x0000a797 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a79c, 0) 


# -- 0x0000a79c 48 8d 35 f9 46 00 00                   lea 0x46f9(%rip),%rsi
 0: rsi<64> := 0x000000000000ee9c;
 1: goto (0x0000a7a3, 0) 


# -- 0x0000a7a3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a7a5, 0) 


# -- 0x0000a7a5 e8 fb 2f 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a7aa;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x0000a7aa, 0)


# -- 0x0000a7aa eb 2c                                  jmp 0xa7d8
 0: goto (0x0000a7d8, 0) 


# -- 0x0000a7ac 83 45 dc 01                            addl $0x1,-0x24(%rbp)
 0: %%0<64> := (rbp<64> + -36<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000a7b0, 0) 


# -- 0x0000a7b0 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a7b4, 0) 


# -- 0x0000a7b4 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a7b7, 0) 


# -- 0x0000a7b7 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a7ba, 0) 


# -- 0x0000a7ba 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a7bc, 0) 


# -- 0x0000a7bc 0f 87 56 ff ff ff                      ja 0xa718
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000a718, 0) 
 2: goto (0x0000a7c2, 0) 


# -- 0x0000a7c2 8b 45 c4                               mov -0x3c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -60<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a7c5, 0) 


# -- 0x0000a7c5 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a7ca, 0) 


# -- 0x0000a7ca 48 8d 35 cd 46 00 00                   lea 0x46cd(%rip),%rsi
 0: rsi<64> := 0x000000000000ee9e;
 1: goto (0x0000a7d1, 0) 


# -- 0x0000a7d1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a7d3, 0) 


# -- 0x0000a7d3 e8 cd 2f 00 00                         call 0xd7a5
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a7d8;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a5, 0) #call with return address @ (0x0000a7d8, 0)


# -- 0x0000a7d8 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a7dc, 0) 


# -- 0x0000a7dc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a7df, 0) 


# -- 0x0000a7df e8 1c 85 ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a7e4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x0000a7e4, 0)


# -- 0x0000a7e4 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a7e9, 0) 


# -- 0x0000a7e9 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a7ed, 0) 


# -- 0x0000a7ed 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000a7f6, 0) 


# -- 0x0000a7f6 74 05                                  je 0xa7fd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a7fd, 0) 
 2: goto (0x0000a7f8, 0) 


# -- 0x0000a7f8 e8 73 86 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a7fd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000a7fd, 0)


# -- 0x0000a7fd c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a7fe, 0) 


# -- 0x0000a7fe c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a7ff 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a800, 0) 


# -- 0x0000a800 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a803, 0) 


# -- 0x0000a803 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a807, 0) 


# -- 0x0000a807 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000a80b, 0) 


# -- 0x0000a80b 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000a80f, 0) 


# -- 0x0000a80f c7 45 f4 00 00 00 00                   movl $0x0,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := 0<32>;
 1: goto (0x0000a816, 0) 


# -- 0x0000a816 eb 3f                                  jmp 0xa857
 0: goto (0x0000a857, 0) 


# -- 0x0000a818 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a81c, 0) 


# -- 0x0000a81c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a81f, 0) 


# -- 0x0000a81f 8b 55 f4                               mov -0xc(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a822, 0) 


# -- 0x0000a822 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a825, 0) 


# -- 0x0000a825 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000a829, 0) 


# -- 0x0000a829 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000a82c, 0) 


# -- 0x0000a82c 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a82f, 0) 


# -- 0x0000a82f 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a833, 0) 


# -- 0x0000a833 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a837, 0) 


# -- 0x0000a837 48 8b 50 40                            mov 0x40(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a83b, 0) 


# -- 0x0000a83b 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a83f, 0) 


# -- 0x0000a83f 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a842, 0) 


# -- 0x0000a842 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a845, 0) 


# -- 0x0000a845 e8 76 88 ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a84a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x0000a84a, 0)


# -- 0x0000a84a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000a84c, 0) 


# -- 0x0000a84c 75 05                                  jne 0xa853
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a853, 0) 
 2: goto (0x0000a84e, 0) 


# -- 0x0000a84e 8b 45 f4                               mov -0xc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a851, 0) 


# -- 0x0000a851 eb 17                                  jmp 0xa86a
 0: goto (0x0000a86a, 0) 


# -- 0x0000a853 83 45 f4 01                            addl $0x1,-0xc(%rbp)
 0: %%0<64> := (rbp<64> + -12<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000a857, 0) 


# -- 0x0000a857 48 8b 45 e0                            mov -0x20(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a85b, 0) 


# -- 0x0000a85b 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a85e, 0) 


# -- 0x0000a85e 8b 45 f4                               mov -0xc(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -12<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a861, 0) 


# -- 0x0000a861 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a863, 0) 


# -- 0x0000a863 77 b3                                  ja 0xa818
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000a818, 0) 
 2: goto (0x0000a865, 0) 


# -- 0x0000a865 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000a86a, 0) 


# -- 0x0000a86a c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a86b, 0) 


# -- 0x0000a86b c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a86c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a86d, 0) 


# -- 0x0000a86d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a870, 0) 


# -- 0x0000a870 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a874, 0) 


# -- 0x0000a874 48 89 7d c8                            mov %rdi,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdi<64>;
 1: goto (0x0000a878, 0) 


# -- 0x0000a878 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x0000a87c, 0) 


# -- 0x0000a87c 48 89 55 b8                            mov %rdx,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdx<64>;
 1: goto (0x0000a880, 0) 


# -- 0x0000a880 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a889, 0) 


# -- 0x0000a889 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a88d, 0) 


# -- 0x0000a88d 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000a88f, 0) 


# -- 0x0000a88f 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a893, 0) 


# -- 0x0000a893 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a896, 0) 


# -- 0x0000a896 89 45 e4                               mov %eax,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rax<64>{0,31};
 1: goto (0x0000a899, 0) 


# -- 0x0000a899 c7 45 e0 ff ff ff ff                   movl $0xffffffff,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := -1<32>;
 1: goto (0x0000a8a0, 0) 


# -- 0x0000a8a0 48 8b 05 c9 69 20 00                   mov 0x2069c9(%rip),%rax
 0: %%0<64> := @[0x0000000000211270,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a8a7, 0) 


# -- 0x0000a8a7 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a8ab, 0) 


# -- 0x0000a8ab 48 8b 75 c0                            mov -0x40(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a8af, 0) 


# -- 0x0000a8af 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a8b2, 0) 


# -- 0x0000a8b2 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a8b7, 0) 


# -- 0x0000a8b7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a8ba, 0) 


# -- 0x0000a8ba e8 65 9d ff ff                         call 0x4624
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a8bf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00004624, 0) #call with return address @ (0x0000a8bf, 0)


# -- 0x0000a8bf 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x0000a8c3, 0) 


# -- 0x0000a8c3 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a8c7, 0) 


# -- 0x0000a8c7 8b 48 4c                               mov 0x4c(%rax),%ecx
 0: %%0<64> := (extu @[(rax<64> + 76<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a8ca, 0) 


# -- 0x0000a8ca 48 8b 05 b7 6a 20 00                   mov 0x206ab7(%rip),%rax
 0: %%0<64> := @[0x0000000000211388,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a8d1, 0) 


# -- 0x0000a8d1 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000a8d6, 0) 


# -- 0x0000a8d6 89 ce                                  mov %ecx,%esi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a8d8, 0) 


# -- 0x0000a8d8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a8db, 0) 


# -- 0x0000a8db e8 a0 87 ff ff                         call 0x3080
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a8e0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003080, 0) #call with return address @ (0x0000a8e0, 0)


# -- 0x0000a8e0 48 83 7d f0 00                         cmpq $0x0,-0x10(%rbp)
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000a8e5, 0) 


# -- 0x0000a8e5 0f 84 8a 00 00 00                      je 0xa975
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a975, 0) 
 2: goto (0x0000a8eb, 0) 


# -- 0x0000a8eb c7 45 dc 00 00 00 00                   movl $0x0,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := 0<32>;
 1: goto (0x0000a8f2, 0) 


# -- 0x0000a8f2 eb 60                                  jmp 0xa954
 0: goto (0x0000a954, 0) 


# -- 0x0000a8f4 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a8f8, 0) 


# -- 0x0000a8f8 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a8fb, 0) 


# -- 0x0000a8fb 8b 55 dc                               mov -0x24(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a8fe, 0) 


# -- 0x0000a8fe 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a901, 0) 


# -- 0x0000a901 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000a905, 0) 


# -- 0x0000a905 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000a908, 0) 


# -- 0x0000a908 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a90b, 0) 


# -- 0x0000a90b 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000a90f, 0) 


# -- 0x0000a90f 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a913, 0) 


# -- 0x0000a913 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a917, 0) 


# -- 0x0000a917 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000a91a, 0) 


# -- 0x0000a91a 74 34                                  je 0xa950
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a950, 0) 
 2: goto (0x0000a91c, 0) 


# -- 0x0000a91c 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a920, 0) 


# -- 0x0000a920 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a924, 0) 


# -- 0x0000a924 48 8b 55 c8                            mov -0x38(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a928, 0) 


# -- 0x0000a928 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a92b, 0) 


# -- 0x0000a92b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a92e, 0) 


# -- 0x0000a92e e8 cc fe ff ff                         call 0xa7ff
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a933;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a7ff, 0) #call with return address @ (0x0000a933, 0)


# -- 0x0000a933 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000a936, 0) 


# -- 0x0000a936 75 18                                  jne 0xa950
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000a950, 0) 
 2: goto (0x0000a938, 0) 


# -- 0x0000a938 48 8d 4d e8                            lea -0x18(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -24<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a93c, 0) 


# -- 0x0000a93c 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a940, 0) 


# -- 0x0000a940 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000a945, 0) 


# -- 0x0000a945 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000a948, 0) 


# -- 0x0000a948 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a94b, 0) 


# -- 0x0000a94b e8 60 88 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a950;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000a950, 0)


# -- 0x0000a950 83 45 dc 01                            addl $0x1,-0x24(%rbp)
 0: %%0<64> := (rbp<64> + -36<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000a954, 0) 


# -- 0x0000a954 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a958, 0) 


# -- 0x0000a958 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a95b, 0) 


# -- 0x0000a95b 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a95e, 0) 


# -- 0x0000a95e 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000a960, 0) 


# -- 0x0000a960 77 92                                  ja 0xa8f4
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000a8f4, 0) 
 2: goto (0x0000a962, 0) 


# -- 0x0000a962 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a966, 0) 


# -- 0x0000a966 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a969, 0) 


# -- 0x0000a969 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a96c, 0) 


# -- 0x0000a96c 29 c2                                  sub %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rdx<64> := %%12<64>;
20: goto (0x0000a96e, 0) 


# -- 0x0000a96e 89 d0                                  mov %edx,%eax
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a970, 0) 


# -- 0x0000a970 89 45 e0                               mov %eax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := rax<64>{0,31};
 1: goto (0x0000a973, 0) 


# -- 0x0000a973 eb 01                                  jmp 0xa976
 0: goto (0x0000a976, 0) 


# -- 0x0000a975 90                                     nop
 0: goto (0x0000a976, 0) 


# -- 0x0000a976 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a97a, 0) 


# -- 0x0000a97a be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000a97f, 0) 


# -- 0x0000a97f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a982, 0) 


# -- 0x0000a982 e8 19 87 ff ff                         call 0x30a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a987;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030a0, 0) #call with return address @ (0x0000a987, 0)


# -- 0x0000a987 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a98a, 0) 


# -- 0x0000a98a 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000a98e, 0) 


# -- 0x0000a98e 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000a997, 0) 


# -- 0x0000a997 74 05                                  je 0xa99e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000a99e, 0) 
 2: goto (0x0000a999, 0) 


# -- 0x0000a999 e8 d2 84 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000a99e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000a99e, 0)


# -- 0x0000a99e c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000a99f, 0) 


# -- 0x0000a99f c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000a9a0 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a9a1, 0) 


# -- 0x0000a9a1 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000a9a4, 0) 


# -- 0x0000a9a4 48 81 ec 70 02 00 00                   sub $0x270,%rsp
 0: %%0<64> := (rsp<64> - 624<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000a9ab, 0) 


# -- 0x0000a9ab 48 89 bd 98 fd ff ff                   mov %rdi,-0x268(%rbp)
 0: @[(rbp<64> + -616<64>),8] := rdi<64>;
 1: goto (0x0000a9b2, 0) 


# -- 0x0000a9b2 48 89 b5 90 fd ff ff                   mov %rsi,-0x270(%rbp)
 0: @[(rbp<64> + -624<64>),8] := rsi<64>;
 1: goto (0x0000a9b9, 0) 


# -- 0x0000a9b9 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000a9c2, 0) 


# -- 0x0000a9c2 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000a9c6, 0) 


# -- 0x0000a9c6 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000a9c8, 0) 


# -- 0x0000a9c8 c7 85 b4 fd ff ff 00 00 00 00          movl $0x0,-0x24c(%rbp)
 0: @[(rbp<64> + -588<64>),4] := 0<32>;
 1: goto (0x0000a9d2, 0) 


# -- 0x0000a9d2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000a9d7, 0) 


# -- 0x0000a9d7 b9 10 00 00 00                         mov $0x10,%ecx
 0: rcx<64> := 16<64>;
 1: goto (0x0000a9dc, 0) 


# -- 0x0000a9dc 48 8d 95 f0 fd ff ff                   lea -0x210(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -528<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a9e3, 0) 


# -- 0x0000a9e3 48 89 d7                               mov %rdx,%rdi
 0: %%0<64> := rdx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000a9e6, 0) 


# -- 0x0000a9e6 fc                                     cld
 0: df<1> := 0<1>;
 1: goto (0x0000a9e7, 0) 


# -- 0x0000a9e7 f3 48 ab                               rep stos %rax,%es:(%rdi)
 0: if (0<64> <> rcx<64>) goto 1 else goto 2
 1: %%0<64> := (rcx<64> - 1<64>); goto 3
 2: goto (0x0000a9ea, 0) 
 3: @[rdi<64>,8] := rax<64>;
 4: if df<1> goto 6 else goto 7
 5: rcx<64> := %%0<64>; goto 10
 6: %%1<64> := (rdi<64> + -8<64>); goto 8
 7: %%1<64> := (rdi<64> + 8<64>); goto 9
 8: rdi<64> := %%1<64>; goto 5
 9: rdi<64> := %%1<64>; goto 5
10: goto (0x0000a9e7, 0) 


# -- 0x0000a9ea 89 f8                                  mov %edi,%eax
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000a9ec, 0) 


# -- 0x0000a9ec 89 ca                                  mov %ecx,%edx
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000a9ee, 0) 


# -- 0x0000a9ee 89 95 bc fd ff ff                      mov %edx,-0x244(%rbp)
 0: @[(rbp<64> + -580<64>),4] := rdx<64>{0,31};
 1: goto (0x0000a9f4, 0) 


# -- 0x0000a9f4 89 85 c0 fd ff ff                      mov %eax,-0x240(%rbp)
 0: @[(rbp<64> + -576<64>),4] := rax<64>{0,31};
 1: goto (0x0000a9fa, 0) 


# -- 0x0000a9fa c7 85 b0 fd ff ff 00 00 00 00          movl $0x0,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),4] := 0<32>;
 1: goto (0x0000aa04, 0) 


# -- 0x0000aa04 e9 8f 00 00 00                         jmp 0xaa98
 0: goto (0x0000aa98, 0) 


# -- 0x0000aa09 48 8b 05 58 68 20 00                   mov 0x206858(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa10, 0) 


# -- 0x0000aa10 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa13, 0) 


# -- 0x0000aa13 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aa19, 0) 


# -- 0x0000aa19 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aa1c, 0) 


# -- 0x0000aa1c 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000aa20, 0) 


# -- 0x0000aa20 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000aa23, 0) 


# -- 0x0000aa23 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa25, 0) 


# -- 0x0000aa25 89 85 d4 fd ff ff                      mov %eax,-0x22c(%rbp)
 0: @[(rbp<64> + -556<64>),4] := rax<64>{0,31};
 1: goto (0x0000aa2b, 0) 


# -- 0x0000aa2b 8b 85 d4 fd ff ff                      mov -0x22c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -556<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa31, 0) 


# -- 0x0000aa31 8d 50 3f                               lea 0x3f(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 63<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aa34, 0) 


# -- 0x0000aa34 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000aa36, 0) 


# -- 0x0000aa36 0f 48 c2                               cmovs %edx,%eax
 0: %%0<64> := (extu sf<1> ? rdx<64>{0,31} : rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa39, 0) 


# -- 0x0000aa39 c1 f8 06                               sar $0x6,%eax
 0: %%0<32> := (exts rax<64>{6,31} 32);
 1: %%1<1> := rax<64>{5};
 2: %%2<1> :=
     !
     ((((rax<64>{6} ^ rax<64>{10}) ^ (rax<64>{8} ^ rax<64>{12})) ^
       ((rax<64>{7} ^ rax<64>{11}) ^ (rax<64>{9} ^ rax<64>{13}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000aa3c, 0) 


# -- 0x0000aa3c 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000aa3e, 0) 


# -- 0x0000aa3e 48 63 c6                               movslq %esi,%rax
 0: %%0<64> := (exts rsi<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa41, 0) 


# -- 0x0000aa41 48 8b bc c5 f0 fd ff ff                mov -0x210(%rbp,%rax,8),%rdi
 0: %%0<64> := @[((rbp<64> + (rax<64> << 3<64>)) + -528<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x0000aa49, 0) 


# -- 0x0000aa49 8b 85 d4 fd ff ff                      mov -0x22c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -556<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa4f, 0) 


# -- 0x0000aa4f 99                                     cdtq
 0: %%0<64> := (extu (exts rax<64>{31} 32) 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aa50, 0) 


# -- 0x0000aa50 c1 ea 1a                               shr $0x1a,%edx
 0: %%0<1> := rdx<64>{25};
 1: %%1<1> :=
     !
     ((((rdx<64>{26} ^ rdx<64>{30}) ^ rdx<64>{28}) ^
       ((rdx<64>{27} ^ rdx<64>{31}) ^ rdx<64>{29})));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<6> = rdx<64>{26,31});
 4: %%4<64> := (extu rdx<64>{26,31} 64);
 5: cf<1> := %%0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%2<1>;
11: rdx<64> := %%4<64>;
12: goto (0x0000aa53, 0) 


# -- 0x0000aa53 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x0000aa55, 0) 


# -- 0x0000aa55 83 e0 3f                               and $0x3f,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ rax<64>{2}) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ rax<64>{3})));
 1: %%1<1> := (0<6> = rax<64>{0,5});
 2: %%2<64> := (63<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000aa58, 0) 


# -- 0x0000aa58 29 d0                                  sub %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%0<32>);
 3: %%3<32> := (%%0<32> - %%1<32>);
 4: %%4<32> := (%%2<32> & %%1<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%1<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%1<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rax<64> := %%12<64>;
20: goto (0x0000aa5a, 0) 


# -- 0x0000aa5a ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000aa5f, 0) 


# -- 0x0000aa5f 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000aa61, 0) 


# -- 0x0000aa61 48 d3 e2                               shl %cl,%rdx
 0: %%0<8> := (extu rcx<64>{0,5} 8);
 1: %%1<64> := (rdx<64> << (63<64> & rcx<64>));
 2: %%2<1> := (1<8> = %%0<8>);
 3: if (0<8> <> %%0<8>) goto 5 else goto 4
 4: rdx<64> := %%1<64>; goto 17
 5: %%3<1> :=
     (0<64> <> (0x8000000000000000 & (rdx<64> << (extu (%%0<8> - 1<8>) 64))))
     ;
 6: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 7: %%5<1> := \undef;
 8: %%6<1> := (0<64> = %%1<64>);
 9: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
10: %%8<1> :=
     ((%%2<1> & (0<64> <> (0x8000000000000000 & (rdx<64> ^ %%1<64>)))) |
      ! (%%2<1>));
11: cf<1> := %%3<1>;
12: pf<1> := %%4<1>;
13: af<1> := %%5<1>;
14: zf<1> := %%6<1>;
15: sf<1> := %%7<1>;
16: of<1> := %%8<1>; goto 4
17: goto (0x0000aa64, 0) 


# -- 0x0000aa64 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa67, 0) 


# -- 0x0000aa67 48 09 c7                               or %rax,%rdi
 0: %%0<64> := (rdi<64> | rax<64>);
 1: %%1<1> :=
     !
     (((((rdi<64>{0} | rax<64>{0}) ^ (rdi<64>{4} | rax<64>{4})) ^
        ((rdi<64>{2} | rax<64>{2}) ^ (rdi<64>{6} | rax<64>{6}))) ^
       (((rdi<64>{1} | rax<64>{1}) ^ (rdi<64>{5} | rax<64>{5})) ^
        ((rdi<64>{3} | rax<64>{3}) ^ (rdi<64>{7} | rax<64>{7})))));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rdi<64> := %%0<64>;
11: goto (0x0000aa6a, 0) 


# -- 0x0000aa6a 48 89 fa                               mov %rdi,%rdx
 0: %%0<64> := rdi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aa6d, 0) 


# -- 0x0000aa6d 48 63 c6                               movslq %esi,%rax
 0: %%0<64> := (exts rsi<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa70, 0) 


# -- 0x0000aa70 48 89 94 c5 f0 fd ff ff                mov %rdx,-0x210(%rbp,%rax,8)
 0: @[((rbp<64> + (rax<64> << 3<64>)) + -528<64>),8] := rdx<64>;
 1: goto (0x0000aa78, 0) 


# -- 0x0000aa78 8b 85 d4 fd ff ff                      mov -0x22c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -556<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa7e, 0) 


# -- 0x0000aa7e 39 85 b4 fd ff ff                      cmp %eax,-0x24c(%rbp)
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := @[(rbp<64> + -588<64>),4];
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000aa84, 0) 


# -- 0x0000aa84 0f 4d 85 b4 fd ff ff                   cmovge -0x24c(%rbp),%eax
 0: %%0<64> :=
     (extu ! ((sf<1> ^ of<1>)) ? @[(rbp<64> + -588<64>),4] : rax<64>{0,31} 64)
     ;
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa8b, 0) 


# -- 0x0000aa8b 89 85 b4 fd ff ff                      mov %eax,-0x24c(%rbp)
 0: @[(rbp<64> + -588<64>),4] := rax<64>{0,31};
 1: goto (0x0000aa91, 0) 


# -- 0x0000aa91 83 85 b0 fd ff ff 01                   addl $0x1,-0x250(%rbp)
 0: %%0<64> := (rbp<64> + -592<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000aa98, 0) 


# -- 0x0000aa98 48 8b 05 c9 67 20 00                   mov 0x2067c9(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000aa9f, 0) 


# -- 0x0000aa9f 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aaa2, 0) 


# -- 0x0000aaa2 8b 85 b0 fd ff ff                      mov -0x250(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aaa8, 0) 


# -- 0x0000aaa8 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000aaaa, 0) 


# -- 0x0000aaaa 0f 87 59 ff ff ff                      ja 0xaa09
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000aa09, 0) 
 2: goto (0x0000aab0, 0) 


# -- 0x0000aab0 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aab7, 0) 


# -- 0x0000aab7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000aaba, 0) 


# -- 0x0000aaba e8 71 86 ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000aabf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000aabf, 0)


# -- 0x0000aabf 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000aac2, 0) 


# -- 0x0000aac2 75 0c                                  jne 0xaad0
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000aad0, 0) 
 2: goto (0x0000aac4, 0) 


# -- 0x0000aac4 48 8d 3d d5 43 00 00                   lea 0x43d5(%rip),%rdi
 0: rdi<64> := 0x000000000000eea0;
 1: goto (0x0000aacb, 0) 


# -- 0x0000aacb e8 68 2b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000aad0;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000aad0, 0)


# -- 0x0000aad0 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aad7, 0) 


# -- 0x0000aad7 be 11 00 00 00                         mov $0x11,%esi
 0: rsi<64> := 17<64>;
 1: goto (0x0000aadc, 0) 


# -- 0x0000aadc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000aadf, 0) 


# -- 0x0000aadf e8 1c 8a ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000aae4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000aae4, 0)


# -- 0x0000aae4 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000aae7, 0) 


# -- 0x0000aae7 75 0c                                  jne 0xaaf5
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000aaf5, 0) 
 2: goto (0x0000aae9, 0) 


# -- 0x0000aae9 48 8d 3d d8 43 00 00                   lea 0x43d8(%rip),%rdi
 0: rdi<64> := 0x000000000000eec8;
 1: goto (0x0000aaf0, 0) 


# -- 0x0000aaf0 e8 43 2b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000aaf5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000aaf5, 0)


# -- 0x0000aaf5 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aafc, 0) 


# -- 0x0000aafc be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000ab01, 0) 


# -- 0x0000ab01 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ab04, 0) 


# -- 0x0000ab04 e8 f7 89 ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab09;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000ab09, 0)


# -- 0x0000ab09 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000ab0c, 0) 


# -- 0x0000ab0c 75 0c                                  jne 0xab1a
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ab1a, 0) 
 2: goto (0x0000ab0e, 0) 


# -- 0x0000ab0e 48 8d 3d e3 43 00 00                   lea 0x43e3(%rip),%rdi
 0: rdi<64> := 0x000000000000eef8;
 1: goto (0x0000ab15, 0) 


# -- 0x0000ab15 e8 1e 2b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab1a;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000ab1a, 0)


# -- 0x0000ab1a 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ab21, 0) 


# -- 0x0000ab21 be 0f 00 00 00                         mov $0xf,%esi
 0: rsi<64> := 15<64>;
 1: goto (0x0000ab26, 0) 


# -- 0x0000ab26 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ab29, 0) 


# -- 0x0000ab29 e8 d2 89 ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab2e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000ab2e, 0)


# -- 0x0000ab2e 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000ab31, 0) 


# -- 0x0000ab31 75 0c                                  jne 0xab3f
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ab3f, 0) 
 2: goto (0x0000ab33, 0) 


# -- 0x0000ab33 48 8d 3d ee 43 00 00                   lea 0x43ee(%rip),%rdi
 0: rdi<64> := 0x000000000000ef28;
 1: goto (0x0000ab3a, 0) 


# -- 0x0000ab3a e8 f9 2a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab3f;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000ab3f, 0)


# -- 0x0000ab3f 48 8d 95 70 ff ff ff                   lea -0x90(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ab46, 0) 


# -- 0x0000ab46 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ab4d, 0) 


# -- 0x0000ab4d 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ab50, 0) 


# -- 0x0000ab50 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000ab55, 0) 


# -- 0x0000ab55 e8 e6 80 ff ff                         call 0x2c40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab5a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c40, 0) #call with return address @ (0x0000ab5a, 0)


# -- 0x0000ab5a 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000ab5d, 0) 


# -- 0x0000ab5d 75 0c                                  jne 0xab6b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ab6b, 0) 
 2: goto (0x0000ab5f, 0) 


# -- 0x0000ab5f 48 8d 3d ed 43 00 00                   lea 0x43ed(%rip),%rdi
 0: rdi<64> := 0x000000000000ef53;
 1: goto (0x0000ab66, 0) 


# -- 0x0000ab66 e8 cd 2a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab6b;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000ab6b, 0)


# -- 0x0000ab6b 8b 05 7f 66 20 00                      mov 0x20667f(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111f0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ab71, 0) 


# -- 0x0000ab71 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000ab73, 0) 


# -- 0x0000ab73 74 3b                                  je 0xabb0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000abb0, 0) 
 2: goto (0x0000ab75, 0) 


# -- 0x0000ab75 c7 05 71 66 20 00 00 00 00 00          movl $0x0,0x206671(%rip)
 0: @[0x00000000002111f0,4] := 0<32>;
 1: goto (0x0000ab7f, 0) 


# -- 0x0000ab7f 48 8b 05 fa 67 20 00                   mov 0x2067fa(%rip),%rax
 0: %%0<64> := @[0x0000000000211380,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ab86, 0) 


# -- 0x0000ab86 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000ab8b, 0) 


# -- 0x0000ab8b 48 8d 35 9d b2 ff ff                   lea -0x4d63(%rip),%rsi
 0: rsi<64> := 0x0000000000005e2f;
 1: goto (0x0000ab92, 0) 


# -- 0x0000ab92 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ab95, 0) 


# -- 0x0000ab95 e8 f6 88 ff ff                         call 0x3490
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ab9a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003490, 0) #call with return address @ (0x0000ab9a, 0)


# -- 0x0000ab9a 48 8d 3d df 66 20 00                   lea 0x2066df(%rip),%rdi
 0: rdi<64> := 0x0000000000211280;
 1: goto (0x0000aba1, 0) 


# -- 0x0000aba1 e8 fa 80 ff ff                         call 0x2ca0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000aba6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ca0, 0) #call with return address @ (0x0000aba6, 0)


# -- 0x0000aba6 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000abab, 0) 


# -- 0x0000abab e8 a0 88 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000abb0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000abb0, 0)


# -- 0x0000abb0 8b 05 36 66 20 00                      mov 0x206636(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111ec,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000abb6, 0) 


# -- 0x0000abb6 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000abb8, 0) 


# -- 0x0000abb8 0f 84 dd 00 00 00                      je 0xac9b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000ac9b, 0) 
 2: goto (0x0000abbe, 0) 


# -- 0x0000abbe c7 05 24 66 20 00 00 00 00 00          movl $0x0,0x206624(%rip)
 0: @[0x00000000002111ec,4] := 0<32>;
 1: goto (0x0000abc8, 0) 


# -- 0x0000abc8 e9 a1 00 00 00                         jmp 0xac6e
 0: goto (0x0000ac6e, 0) 


# -- 0x0000abcd 8b 85 ac fd ff ff                      mov -0x254(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -596<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000abd3, 0) 


# -- 0x0000abd3 83 e0 7f                               and $0x7f,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ rax<64>{3})));
 1: %%1<1> := (0<7> = rax<64>{0,6});
 2: %%2<64> := (127<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000abd6, 0) 


# -- 0x0000abd6 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000abd8, 0) 


# -- 0x0000abd8 75 29                                  jne 0xac03
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ac03, 0) 
 2: goto (0x0000abda, 0) 


# -- 0x0000abda 8b 85 ac fd ff ff                      mov -0x254(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -596<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000abe0, 0) 


# -- 0x0000abe0 c1 f8 08                               sar $0x8,%eax
 0: %%0<32> := (exts rax<64>{8,31} 32);
 1: %%1<1> := rax<64>{7};
 2: %%2<1> :=
     !
     ((((rax<64>{8} ^ rax<64>{12}) ^ (rax<64>{10} ^ rax<64>{14})) ^
       ((rax<64>{9} ^ rax<64>{13}) ^ (rax<64>{11} ^ rax<64>{15}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000abe3, 0) 


# -- 0x0000abe3 0f b6 c0                               movzbl %al,%eax
 0: %%0<64> := (255<64> & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000abe6, 0) 


# -- 0x0000abe6 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000abe8, 0) 


# -- 0x0000abe8 48 8d 15 80 43 00 00                   lea 0x4380(%rip),%rdx
 0: rdx<64> := 0x000000000000ef6f;
 1: goto (0x0000abef, 0) 


# -- 0x0000abef be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000abf4, 0) 


# -- 0x0000abf4 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000abf9, 0) 


# -- 0x0000abf9 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000abfe, 0) 


# -- 0x0000abfe e8 9d 86 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ac03;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000ac03, 0)


# -- 0x0000ac03 48 8b 05 76 67 20 00                   mov 0x206776(%rip),%rax
 0: %%0<64> := @[0x0000000000211380,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac0a, 0) 


# -- 0x0000ac0a 48 8d 95 d8 fd ff ff                   lea -0x228(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -552<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ac11, 0) 


# -- 0x0000ac11 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ac14, 0) 


# -- 0x0000ac14 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ac17, 0) 


# -- 0x0000ac17 e8 24 82 ff ff                         call 0x2e40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ac1c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e40, 0) #call with return address @ (0x0000ac1c, 0)


# -- 0x0000ac1c 48 89 85 e0 fd ff ff                   mov %rax,-0x220(%rbp)
 0: @[(rbp<64> + -544<64>),8] := rax<64>;
 1: goto (0x0000ac23, 0) 


# -- 0x0000ac23 48 83 bd e0 fd ff ff 00                cmpq $0x0,-0x220(%rbp)
 0: %%0<64> := @[(rbp<64> + -544<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000ac2b, 0) 


# -- 0x0000ac2b 75 28                                  jne 0xac55
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ac55, 0) 
 2: goto (0x0000ac2d, 0) 


# -- 0x0000ac2d 8b 85 d8 fd ff ff                      mov -0x228(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -552<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac33, 0) 


# -- 0x0000ac33 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac35, 0) 


# -- 0x0000ac35 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ac38, 0) 


# -- 0x0000ac38 48 8d 15 49 43 00 00                   lea 0x4349(%rip),%rdx
 0: rdx<64> := 0x000000000000ef88;
 1: goto (0x0000ac3f, 0) 


# -- 0x0000ac3f be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000ac44, 0) 


# -- 0x0000ac44 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000ac49, 0) 


# -- 0x0000ac49 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ac4e, 0) 


# -- 0x0000ac4e e8 4d 86 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ac53;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000ac53, 0)


# -- 0x0000ac53 eb 19                                  jmp 0xac6e
 0: goto (0x0000ac6e, 0) 


# -- 0x0000ac55 48 8b 05 24 67 20 00                   mov 0x206724(%rip),%rax
 0: %%0<64> := @[0x0000000000211380,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac5c, 0) 


# -- 0x0000ac5c 48 8d 95 d8 fd ff ff                   lea -0x228(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -552<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ac63, 0) 


# -- 0x0000ac63 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ac66, 0) 


# -- 0x0000ac66 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ac69, 0) 


# -- 0x0000ac69 e8 f2 80 ff ff                         call 0x2d60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ac6e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d60, 0) #call with return address @ (0x0000ac6e, 0)


# -- 0x0000ac6e 48 8d 85 ac fd ff ff                   lea -0x254(%rbp),%rax
 0: %%0<64> := (rbp<64> + -596<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac75, 0) 


# -- 0x0000ac75 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000ac7a, 0) 


# -- 0x0000ac7a 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ac7d, 0) 


# -- 0x0000ac7d bf ff ff ff ff                         mov $0xffffffff,%edi
 0: rdi<64> := 0x00000000ffffffff;
 1: goto (0x0000ac82, 0) 


# -- 0x0000ac82 e8 09 87 ff ff                         call 0x3390
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ac87;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003390, 0) #call with return address @ (0x0000ac87, 0)


# -- 0x0000ac87 89 85 d8 fd ff ff                      mov %eax,-0x228(%rbp)
 0: @[(rbp<64> + -552<64>),4] := rax<64>{0,31};
 1: goto (0x0000ac8d, 0) 


# -- 0x0000ac8d 8b 85 d8 fd ff ff                      mov -0x228(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -552<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ac93, 0) 


# -- 0x0000ac93 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000ac95, 0) 


# -- 0x0000ac95 0f 8f 32 ff ff ff                      jg 0xabcd
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000abcd, 0) 
 2: goto (0x0000ac9b, 0) 


# -- 0x0000ac9b 8b 05 53 65 20 00                      mov 0x206553(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111f4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aca1, 0) 


# -- 0x0000aca1 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000aca3, 0) 


# -- 0x0000aca3 0f 84 0c 01 00 00                      je 0xadb5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000adb5, 0) 
 2: goto (0x0000aca9, 0) 


# -- 0x0000aca9 48 c7 85 d8 fd ff ff 00 00 00 00       movq $0x0,-0x228(%rbp)
 0: @[(rbp<64> + -552<64>),8] := 0<64>;
 1: goto (0x0000acb4, 0) 


# -- 0x0000acb4 48 8d 15 05 43 00 00                   lea 0x4305(%rip),%rdx
 0: rdx<64> := 0x000000000000efc0;
 1: goto (0x0000acbb, 0) 


# -- 0x0000acbb be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000acc0, 0) 


# -- 0x0000acc0 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000acc5, 0) 


# -- 0x0000acc5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000acca, 0) 


# -- 0x0000acca e8 d1 85 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000accf;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000accf, 0)


# -- 0x0000accf c7 05 1b 65 20 00 00 00 00 00          movl $0x0,0x20651b(%rip)
 0: @[0x00000000002111f4,4] := 0<32>;
 1: goto (0x0000acd9, 0) 


# -- 0x0000acd9 48 8d 95 d8 fd ff ff                   lea -0x228(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -552<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ace0, 0) 


# -- 0x0000ace0 48 8b 8d 90 fd ff ff                   mov -0x270(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -624<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ace7, 0) 


# -- 0x0000ace7 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000acee, 0) 


# -- 0x0000acee 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000acf1, 0) 


# -- 0x0000acf1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000acf4, 0) 


# -- 0x0000acf4 e8 73 fb ff ff                         call 0xa86c
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000acf9;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a86c, 0) #call with return address @ (0x0000acf9, 0)


# -- 0x0000acf9 89 85 c4 fd ff ff                      mov %eax,-0x23c(%rbp)
 0: @[(rbp<64> + -572<64>),4] := rax<64>{0,31};
 1: goto (0x0000acff, 0) 


# -- 0x0000acff 83 bd c4 fd ff ff ff                   cmpl $0xffffffff,-0x23c(%rbp)
 0: %%0<32> := @[(rbp<64> + -572<64>),4];
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000ad06, 0) 


# -- 0x0000ad06 75 29                                  jne 0xad31
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ad31, 0) 
 2: goto (0x0000ad08, 0) 


# -- 0x0000ad08 48 8b 85 d8 fd ff ff                   mov -0x228(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -552<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad0f, 0) 


# -- 0x0000ad0f 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad13, 0) 


# -- 0x0000ad13 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ad16, 0) 


# -- 0x0000ad16 48 8d 15 cb 42 00 00                   lea 0x42cb(%rip),%rdx
 0: rdx<64> := 0x000000000000efe8;
 1: goto (0x0000ad1d, 0) 


# -- 0x0000ad1d be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000ad22, 0) 


# -- 0x0000ad22 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000ad27, 0) 


# -- 0x0000ad27 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ad2c, 0) 


# -- 0x0000ad2c e8 6f 85 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ad31;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000ad31, 0)


# -- 0x0000ad31 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad38, 0) 


# -- 0x0000ad38 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ad3b, 0) 


# -- 0x0000ad3b 8b 85 c4 fd ff ff                      mov -0x23c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -572<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad41, 0) 


# -- 0x0000ad41 29 c2                                  sub %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rdx<64> := %%12<64>;
20: goto (0x0000ad43, 0) 


# -- 0x0000ad43 89 d0                                  mov %edx,%eax
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad45, 0) 


# -- 0x0000ad45 89 85 b0 fd ff ff                      mov %eax,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),4] := rax<64>{0,31};
 1: goto (0x0000ad4b, 0) 


# -- 0x0000ad4b eb 54                                  jmp 0xada1
 0: goto (0x0000ada1, 0) 


# -- 0x0000ad4d 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad54, 0) 


# -- 0x0000ad54 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad57, 0) 


# -- 0x0000ad57 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ad5d, 0) 


# -- 0x0000ad5d 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ad60, 0) 


# -- 0x0000ad60 48 c1 e2 03                            shl $0x3,%rdx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 2<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{1} ^ rdx<64>{3}) ^ (rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4}))))
     ;
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000ad64, 0) 


# -- 0x0000ad64 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000ad67, 0) 


# -- 0x0000ad67 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad6a, 0) 


# -- 0x0000ad6a 48 89 85 e8 fd ff ff                   mov %rax,-0x218(%rbp)
 0: @[(rbp<64> + -536<64>),8] := rax<64>;
 1: goto (0x0000ad71, 0) 


# -- 0x0000ad71 48 8b 85 e8 fd ff ff                   mov -0x218(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -536<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad78, 0) 


# -- 0x0000ad78 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ad7c, 0) 


# -- 0x0000ad7c 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ad7f, 0) 


# -- 0x0000ad7f 48 8d 15 83 42 00 00                   lea 0x4283(%rip),%rdx
 0: rdx<64> := 0x000000000000f009;
 1: goto (0x0000ad86, 0) 


# -- 0x0000ad86 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000ad8b, 0) 


# -- 0x0000ad8b bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000ad90, 0) 


# -- 0x0000ad90 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ad95, 0) 


# -- 0x0000ad95 e8 06 85 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ad9a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000ad9a, 0)


# -- 0x0000ad9a 83 85 b0 fd ff ff 01                   addl $0x1,-0x250(%rbp)
 0: %%0<64> := (rbp<64> + -592<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000ada1, 0) 


# -- 0x0000ada1 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ada8, 0) 


# -- 0x0000ada8 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000adab, 0) 


# -- 0x0000adab 8b 85 b0 fd ff ff                      mov -0x250(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000adb1, 0) 


# -- 0x0000adb1 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000adb3, 0) 


# -- 0x0000adb3 77 98                                  ja 0xad4d
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000ad4d, 0) 
 2: goto (0x0000adb5, 0) 


# -- 0x0000adb5 48 8b 85 f0 fd ff ff                   mov -0x210(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -528<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000adbc, 0) 


# -- 0x0000adbc 48 8b 95 f8 fd ff ff                   mov -0x208(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -520<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000adc3, 0) 


# -- 0x0000adc3 48 89 85 70 fe ff ff                   mov %rax,-0x190(%rbp)
 0: @[(rbp<64> + -400<64>),8] := rax<64>;
 1: goto (0x0000adca, 0) 


# -- 0x0000adca 48 89 95 78 fe ff ff                   mov %rdx,-0x188(%rbp)
 0: @[(rbp<64> + -392<64>),8] := rdx<64>;
 1: goto (0x0000add1, 0) 


# -- 0x0000add1 48 8b 85 00 fe ff ff                   mov -0x200(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -512<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000add8, 0) 


# -- 0x0000add8 48 8b 95 08 fe ff ff                   mov -0x1f8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -504<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000addf, 0) 


# -- 0x0000addf 48 89 85 80 fe ff ff                   mov %rax,-0x180(%rbp)
 0: @[(rbp<64> + -384<64>),8] := rax<64>;
 1: goto (0x0000ade6, 0) 


# -- 0x0000ade6 48 89 95 88 fe ff ff                   mov %rdx,-0x178(%rbp)
 0: @[(rbp<64> + -376<64>),8] := rdx<64>;
 1: goto (0x0000aded, 0) 


# -- 0x0000aded 48 8b 85 10 fe ff ff                   mov -0x1f0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -496<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000adf4, 0) 


# -- 0x0000adf4 48 8b 95 18 fe ff ff                   mov -0x1e8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -488<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000adfb, 0) 


# -- 0x0000adfb 48 89 85 90 fe ff ff                   mov %rax,-0x170(%rbp)
 0: @[(rbp<64> + -368<64>),8] := rax<64>;
 1: goto (0x0000ae02, 0) 


# -- 0x0000ae02 48 89 95 98 fe ff ff                   mov %rdx,-0x168(%rbp)
 0: @[(rbp<64> + -360<64>),8] := rdx<64>;
 1: goto (0x0000ae09, 0) 


# -- 0x0000ae09 48 8b 85 20 fe ff ff                   mov -0x1e0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -480<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae10, 0) 


# -- 0x0000ae10 48 8b 95 28 fe ff ff                   mov -0x1d8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -472<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ae17, 0) 


# -- 0x0000ae17 48 89 85 a0 fe ff ff                   mov %rax,-0x160(%rbp)
 0: @[(rbp<64> + -352<64>),8] := rax<64>;
 1: goto (0x0000ae1e, 0) 


# -- 0x0000ae1e 48 89 95 a8 fe ff ff                   mov %rdx,-0x158(%rbp)
 0: @[(rbp<64> + -344<64>),8] := rdx<64>;
 1: goto (0x0000ae25, 0) 


# -- 0x0000ae25 48 8b 85 30 fe ff ff                   mov -0x1d0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -464<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae2c, 0) 


# -- 0x0000ae2c 48 8b 95 38 fe ff ff                   mov -0x1c8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -456<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ae33, 0) 


# -- 0x0000ae33 48 89 85 b0 fe ff ff                   mov %rax,-0x150(%rbp)
 0: @[(rbp<64> + -336<64>),8] := rax<64>;
 1: goto (0x0000ae3a, 0) 


# -- 0x0000ae3a 48 89 95 b8 fe ff ff                   mov %rdx,-0x148(%rbp)
 0: @[(rbp<64> + -328<64>),8] := rdx<64>;
 1: goto (0x0000ae41, 0) 


# -- 0x0000ae41 48 8b 85 40 fe ff ff                   mov -0x1c0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -448<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae48, 0) 


# -- 0x0000ae48 48 8b 95 48 fe ff ff                   mov -0x1b8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -440<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ae4f, 0) 


# -- 0x0000ae4f 48 89 85 c0 fe ff ff                   mov %rax,-0x140(%rbp)
 0: @[(rbp<64> + -320<64>),8] := rax<64>;
 1: goto (0x0000ae56, 0) 


# -- 0x0000ae56 48 89 95 c8 fe ff ff                   mov %rdx,-0x138(%rbp)
 0: @[(rbp<64> + -312<64>),8] := rdx<64>;
 1: goto (0x0000ae5d, 0) 


# -- 0x0000ae5d 48 8b 85 50 fe ff ff                   mov -0x1b0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -432<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae64, 0) 


# -- 0x0000ae64 48 8b 95 58 fe ff ff                   mov -0x1a8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -424<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ae6b, 0) 


# -- 0x0000ae6b 48 89 85 d0 fe ff ff                   mov %rax,-0x130(%rbp)
 0: @[(rbp<64> + -304<64>),8] := rax<64>;
 1: goto (0x0000ae72, 0) 


# -- 0x0000ae72 48 89 95 d8 fe ff ff                   mov %rdx,-0x128(%rbp)
 0: @[(rbp<64> + -296<64>),8] := rdx<64>;
 1: goto (0x0000ae79, 0) 


# -- 0x0000ae79 48 8b 85 60 fe ff ff                   mov -0x1a0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -416<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae80, 0) 


# -- 0x0000ae80 48 8b 95 68 fe ff ff                   mov -0x198(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -408<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ae87, 0) 


# -- 0x0000ae87 48 89 85 e0 fe ff ff                   mov %rax,-0x120(%rbp)
 0: @[(rbp<64> + -288<64>),8] := rax<64>;
 1: goto (0x0000ae8e, 0) 


# -- 0x0000ae8e 48 89 95 e8 fe ff ff                   mov %rdx,-0x118(%rbp)
 0: @[(rbp<64> + -280<64>),8] := rdx<64>;
 1: goto (0x0000ae95, 0) 


# -- 0x0000ae95 8b 85 b4 fd ff ff                      mov -0x24c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -588<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ae9b, 0) 


# -- 0x0000ae9b 89 85 b8 fd ff ff                      mov %eax,-0x248(%rbp)
 0: @[(rbp<64> + -584<64>),4] := rax<64>{0,31};
 1: goto (0x0000aea1, 0) 


# -- 0x0000aea1 c7 85 b0 fd ff ff 00 00 00 00          movl $0x0,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),4] := 0<32>;
 1: goto (0x0000aeab, 0) 


# -- 0x0000aeab e9 8f 00 00 00                         jmp 0xaf3f
 0: goto (0x0000af3f, 0) 


# -- 0x0000aeb0 48 8b 05 a9 63 20 00                   mov 0x2063a9(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000aeb7, 0) 


# -- 0x0000aeb7 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000aeba, 0) 


# -- 0x0000aeba 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aec0, 0) 


# -- 0x0000aec0 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aec3, 0) 


# -- 0x0000aec3 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000aec7, 0) 


# -- 0x0000aec7 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000aeca, 0) 


# -- 0x0000aeca 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aecc, 0) 


# -- 0x0000aecc 89 85 d0 fd ff ff                      mov %eax,-0x230(%rbp)
 0: @[(rbp<64> + -560<64>),4] := rax<64>{0,31};
 1: goto (0x0000aed2, 0) 


# -- 0x0000aed2 8b 85 d0 fd ff ff                      mov -0x230(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -560<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aed8, 0) 


# -- 0x0000aed8 8d 50 3f                               lea 0x3f(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 63<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aedb, 0) 


# -- 0x0000aedb 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000aedd, 0) 


# -- 0x0000aedd 0f 48 c2                               cmovs %edx,%eax
 0: %%0<64> := (extu sf<1> ? rdx<64>{0,31} : rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aee0, 0) 


# -- 0x0000aee0 c1 f8 06                               sar $0x6,%eax
 0: %%0<32> := (exts rax<64>{6,31} 32);
 1: %%1<1> := rax<64>{5};
 2: %%2<1> :=
     !
     ((((rax<64>{6} ^ rax<64>{10}) ^ (rax<64>{8} ^ rax<64>{12})) ^
       ((rax<64>{7} ^ rax<64>{11}) ^ (rax<64>{9} ^ rax<64>{13}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000aee3, 0) 


# -- 0x0000aee3 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000aee5, 0) 


# -- 0x0000aee5 48 63 c6                               movslq %esi,%rax
 0: %%0<64> := (exts rsi<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aee8, 0) 


# -- 0x0000aee8 48 8b bc c5 70 fe ff ff                mov -0x190(%rbp,%rax,8),%rdi
 0: %%0<64> := @[((rbp<64> + (rax<64> << 3<64>)) + -400<64>),8];
 1: rdi<64> := %%0<64>;
 2: goto (0x0000aef0, 0) 


# -- 0x0000aef0 8b 85 d0 fd ff ff                      mov -0x230(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -560<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000aef6, 0) 


# -- 0x0000aef6 99                                     cdtq
 0: %%0<64> := (extu (exts rax<64>{31} 32) 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000aef7, 0) 


# -- 0x0000aef7 c1 ea 1a                               shr $0x1a,%edx
 0: %%0<1> := rdx<64>{25};
 1: %%1<1> :=
     !
     ((((rdx<64>{26} ^ rdx<64>{30}) ^ rdx<64>{28}) ^
       ((rdx<64>{27} ^ rdx<64>{31}) ^ rdx<64>{29})));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<6> = rdx<64>{26,31});
 4: %%4<64> := (extu rdx<64>{26,31} 64);
 5: cf<1> := %%0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%2<1>;
11: rdx<64> := %%4<64>;
12: goto (0x0000aefa, 0) 


# -- 0x0000aefa 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x0000aefc, 0) 


# -- 0x0000aefc 83 e0 3f                               and $0x3f,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ rax<64>{2}) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ rax<64>{3})));
 1: %%1<1> := (0<6> = rax<64>{0,5});
 2: %%2<64> := (63<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000aeff, 0) 


# -- 0x0000aeff 29 d0                                  sub %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%0<32>);
 3: %%3<32> := (%%0<32> - %%1<32>);
 4: %%4<32> := (%%2<32> & %%1<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%1<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%1<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rax<64> := %%12<64>;
20: goto (0x0000af01, 0) 


# -- 0x0000af01 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000af06, 0) 


# -- 0x0000af06 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000af08, 0) 


# -- 0x0000af08 48 d3 e2                               shl %cl,%rdx
 0: %%0<8> := (extu rcx<64>{0,5} 8);
 1: %%1<64> := (rdx<64> << (63<64> & rcx<64>));
 2: %%2<1> := (1<8> = %%0<8>);
 3: if (0<8> <> %%0<8>) goto 5 else goto 4
 4: rdx<64> := %%1<64>; goto 17
 5: %%3<1> :=
     (0<64> <> (0x8000000000000000 & (rdx<64> << (extu (%%0<8> - 1<8>) 64))))
     ;
 6: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 7: %%5<1> := \undef;
 8: %%6<1> := (0<64> = %%1<64>);
 9: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
10: %%8<1> :=
     ((%%2<1> & (0<64> <> (0x8000000000000000 & (rdx<64> ^ %%1<64>)))) |
      ! (%%2<1>));
11: cf<1> := %%3<1>;
12: pf<1> := %%4<1>;
13: af<1> := %%5<1>;
14: zf<1> := %%6<1>;
15: sf<1> := %%7<1>;
16: of<1> := %%8<1>; goto 4
17: goto (0x0000af0b, 0) 


# -- 0x0000af0b 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000af0e, 0) 


# -- 0x0000af0e 48 09 c7                               or %rax,%rdi
 0: %%0<64> := (rdi<64> | rax<64>);
 1: %%1<1> :=
     !
     (((((rdi<64>{0} | rax<64>{0}) ^ (rdi<64>{4} | rax<64>{4})) ^
        ((rdi<64>{2} | rax<64>{2}) ^ (rdi<64>{6} | rax<64>{6}))) ^
       (((rdi<64>{1} | rax<64>{1}) ^ (rdi<64>{5} | rax<64>{5})) ^
        ((rdi<64>{3} | rax<64>{3}) ^ (rdi<64>{7} | rax<64>{7})))));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rdi<64> := %%0<64>;
11: goto (0x0000af11, 0) 


# -- 0x0000af11 48 89 fa                               mov %rdi,%rdx
 0: %%0<64> := rdi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000af14, 0) 


# -- 0x0000af14 48 63 c6                               movslq %esi,%rax
 0: %%0<64> := (exts rsi<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000af17, 0) 


# -- 0x0000af17 48 89 94 c5 70 fe ff ff                mov %rdx,-0x190(%rbp,%rax,8)
 0: @[((rbp<64> + (rax<64> << 3<64>)) + -400<64>),8] := rdx<64>;
 1: goto (0x0000af1f, 0) 


# -- 0x0000af1f 8b 85 d0 fd ff ff                      mov -0x230(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -560<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000af25, 0) 


# -- 0x0000af25 39 85 b8 fd ff ff                      cmp %eax,-0x248(%rbp)
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := @[(rbp<64> + -584<64>),4];
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000af2b, 0) 


# -- 0x0000af2b 0f 4d 85 b8 fd ff ff                   cmovge -0x248(%rbp),%eax
 0: %%0<64> :=
     (extu ! ((sf<1> ^ of<1>)) ? @[(rbp<64> + -584<64>),4] : rax<64>{0,31} 64)
     ;
 1: rax<64> := %%0<64>;
 2: goto (0x0000af32, 0) 


# -- 0x0000af32 89 85 b8 fd ff ff                      mov %eax,-0x248(%rbp)
 0: @[(rbp<64> + -584<64>),4] := rax<64>{0,31};
 1: goto (0x0000af38, 0) 


# -- 0x0000af38 83 85 b0 fd ff ff 01                   addl $0x1,-0x250(%rbp)
 0: %%0<64> := (rbp<64> + -592<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000af3f, 0) 


# -- 0x0000af3f 48 8b 05 1a 63 20 00                   mov 0x20631a(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000af46, 0) 


# -- 0x0000af46 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000af49, 0) 


# -- 0x0000af49 8b 85 b0 fd ff ff                      mov -0x250(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000af4f, 0) 


# -- 0x0000af4f 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000af51, 0) 


# -- 0x0000af51 0f 87 59 ff ff ff                      ja 0xaeb0
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000aeb0, 0) 
 2: goto (0x0000af57, 0) 


# -- 0x0000af57 8b 85 b8 fd ff ff                      mov -0x248(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -584<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000af5d, 0) 


# -- 0x0000af5d 8d 78 01                               lea 0x1(%rax),%edi
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 1<64>));
 1: rdi<64> := %%0<64>;
 2: goto (0x0000af60, 0) 


# -- 0x0000af60 48 8d 95 70 ff ff ff                   lea -0x90(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000af67, 0) 


# -- 0x0000af67 48 8d 85 70 fe ff ff                   lea -0x190(%rbp),%rax
 0: %%0<64> := (rbp<64> + -400<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000af6e, 0) 


# -- 0x0000af6e 49 89 d1                               mov %rdx,%r9
 0: %%0<64> := rdx<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x0000af71, 0) 


# -- 0x0000af71 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x0000af77, 0) 


# -- 0x0000af77 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x0000af7c, 0) 


# -- 0x0000af7c ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000af81, 0) 


# -- 0x0000af81 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000af84, 0) 


# -- 0x0000af84 e8 27 7f ff ff                         call 0x2eb0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000af89;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002eb0, 0) #call with return address @ (0x0000af89, 0)


# -- 0x0000af89 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000af8b, 0) 


# -- 0x0000af8b 0f 8e da fb ff ff                      jle 0xab6b
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000ab6b, 0) 
 2: goto (0x0000af91, 0) 


# -- 0x0000af91 c7 85 b0 fd ff ff 00 00 00 00          movl $0x0,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),4] := 0<32>;
 1: goto (0x0000af9b, 0) 


# -- 0x0000af9b e9 8b 00 00 00                         jmp 0xb02b
 0: goto (0x0000b02b, 0) 


# -- 0x0000afa0 48 8b 05 c1 62 20 00                   mov 0x2062c1(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000afa7, 0) 


# -- 0x0000afa7 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000afaa, 0) 


# -- 0x0000afaa 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000afb0, 0) 


# -- 0x0000afb0 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000afb3, 0) 


# -- 0x0000afb3 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000afb7, 0) 


# -- 0x0000afb7 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000afba, 0) 


# -- 0x0000afba 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000afbc, 0) 


# -- 0x0000afbc 89 85 cc fd ff ff                      mov %eax,-0x234(%rbp)
 0: @[(rbp<64> + -564<64>),4] := rax<64>{0,31};
 1: goto (0x0000afc2, 0) 


# -- 0x0000afc2 8b 85 cc fd ff ff                      mov -0x234(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -564<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000afc8, 0) 


# -- 0x0000afc8 8d 50 3f                               lea 0x3f(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 63<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000afcb, 0) 


# -- 0x0000afcb 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000afcd, 0) 


# -- 0x0000afcd 0f 48 c2                               cmovs %edx,%eax
 0: %%0<64> := (extu sf<1> ? rdx<64>{0,31} : rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000afd0, 0) 


# -- 0x0000afd0 c1 f8 06                               sar $0x6,%eax
 0: %%0<32> := (exts rax<64>{6,31} 32);
 1: %%1<1> := rax<64>{5};
 2: %%2<1> :=
     !
     ((((rax<64>{6} ^ rax<64>{10}) ^ (rax<64>{8} ^ rax<64>{12})) ^
       ((rax<64>{7} ^ rax<64>{11}) ^ (rax<64>{9} ^ rax<64>{13}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000afd3, 0) 


# -- 0x0000afd3 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000afd5, 0) 


# -- 0x0000afd5 48 8b b4 c5 70 fe ff ff                mov -0x190(%rbp,%rax,8),%rsi
 0: %%0<64> := @[((rbp<64> + (rax<64> << 3<64>)) + -400<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000afdd, 0) 


# -- 0x0000afdd 8b 85 cc fd ff ff                      mov -0x234(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -564<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000afe3, 0) 


# -- 0x0000afe3 99                                     cdtq
 0: %%0<64> := (extu (exts rax<64>{31} 32) 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000afe4, 0) 


# -- 0x0000afe4 c1 ea 1a                               shr $0x1a,%edx
 0: %%0<1> := rdx<64>{25};
 1: %%1<1> :=
     !
     ((((rdx<64>{26} ^ rdx<64>{30}) ^ rdx<64>{28}) ^
       ((rdx<64>{27} ^ rdx<64>{31}) ^ rdx<64>{29})));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<6> = rdx<64>{26,31});
 4: %%4<64> := (extu rdx<64>{26,31} 64);
 5: cf<1> := %%0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%2<1>;
11: rdx<64> := %%4<64>;
12: goto (0x0000afe7, 0) 


# -- 0x0000afe7 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x0000afe9, 0) 


# -- 0x0000afe9 83 e0 3f                               and $0x3f,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ rax<64>{2}) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ rax<64>{3})));
 1: %%1<1> := (0<6> = rax<64>{0,5});
 2: %%2<64> := (63<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000afec, 0) 


# -- 0x0000afec 29 d0                                  sub %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%0<32>);
 3: %%3<32> := (%%0<32> - %%1<32>);
 4: %%4<32> := (%%2<32> & %%1<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%1<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%1<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rax<64> := %%12<64>;
20: goto (0x0000afee, 0) 


# -- 0x0000afee ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000aff3, 0) 


# -- 0x0000aff3 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000aff5, 0) 


# -- 0x0000aff5 48 d3 e2                               shl %cl,%rdx
 0: %%0<8> := (extu rcx<64>{0,5} 8);
 1: %%1<64> := (rdx<64> << (63<64> & rcx<64>));
 2: %%2<1> := (1<8> = %%0<8>);
 3: if (0<8> <> %%0<8>) goto 5 else goto 4
 4: rdx<64> := %%1<64>; goto 17
 5: %%3<1> :=
     (0<64> <> (0x8000000000000000 & (rdx<64> << (extu (%%0<8> - 1<8>) 64))))
     ;
 6: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 7: %%5<1> := \undef;
 8: %%6<1> := (0<64> = %%1<64>);
 9: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
10: %%8<1> :=
     ((%%2<1> & (0<64> <> (0x8000000000000000 & (rdx<64> ^ %%1<64>)))) |
      ! (%%2<1>));
11: cf<1> := %%3<1>;
12: pf<1> := %%4<1>;
13: af<1> := %%5<1>;
14: zf<1> := %%6<1>;
15: sf<1> := %%7<1>;
16: of<1> := %%8<1>; goto 4
17: goto (0x0000aff8, 0) 


# -- 0x0000aff8 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000affb, 0) 


# -- 0x0000affb 48 21 f0                               and %rsi,%rax
 0: %%0<64> := (rax<64> & rsi<64>);
 1: %%1<1> :=
     !
     (((((rax<64>{0} & rsi<64>{0}) ^ (rax<64>{4} & rsi<64>{4})) ^
        ((rax<64>{2} & rsi<64>{2}) ^ (rax<64>{6} & rsi<64>{6}))) ^
       (((rax<64>{1} & rsi<64>{1}) ^ (rax<64>{5} & rsi<64>{5})) ^
        ((rax<64>{3} & rsi<64>{3}) ^ (rax<64>{7} & rsi<64>{7})))));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%0<64>;
11: goto (0x0000affe, 0) 


# -- 0x0000affe 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000b001, 0) 


# -- 0x0000b001 74 20                                  je 0xb023
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b023, 0) 
 2: goto (0x0000b003, 0) 


# -- 0x0000b003 48 8b 95 90 fd ff ff                   mov -0x270(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -624<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b00a, 0) 


# -- 0x0000b00a 8b 8d cc fd ff ff                      mov -0x234(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -564<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b010, 0) 


# -- 0x0000b010 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b017, 0) 


# -- 0x0000b017 89 ce                                  mov %ecx,%esi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b019, 0) 


# -- 0x0000b019 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b01c, 0) 


# -- 0x0000b01c e8 c2 f3 ff ff                         call 0xa3e3
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b021;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a3e3, 0) #call with return address @ (0x0000b021, 0)


# -- 0x0000b021 eb 01                                  jmp 0xb024
 0: goto (0x0000b024, 0) 


# -- 0x0000b023 90                                     nop
 0: goto (0x0000b024, 0) 


# -- 0x0000b024 83 85 b0 fd ff ff 01                   addl $0x1,-0x250(%rbp)
 0: %%0<64> := (rbp<64> + -592<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000b02b, 0) 


# -- 0x0000b02b 48 8b 05 36 62 20 00                   mov 0x206236(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b032, 0) 


# -- 0x0000b032 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b035, 0) 


# -- 0x0000b035 8b 85 b0 fd ff ff                      mov -0x250(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b03b, 0) 


# -- 0x0000b03b 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000b03d, 0) 


# -- 0x0000b03d 0f 87 5d ff ff ff                      ja 0xafa0
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000afa0, 0) 
 2: goto (0x0000b043, 0) 


# -- 0x0000b043 c7 85 b0 fd ff ff 00 00 00 00          movl $0x0,-0x250(%rbp)
 0: @[(rbp<64> + -592<64>),4] := 0<32>;
 1: goto (0x0000b04d, 0) 


# -- 0x0000b04d e9 a9 00 00 00                         jmp 0xb0fb
 0: goto (0x0000b0fb, 0) 


# -- 0x0000b052 48 8b 05 07 62 20 00                   mov 0x206207(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b059, 0) 


# -- 0x0000b059 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b05c, 0) 


# -- 0x0000b05c 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b062, 0) 


# -- 0x0000b062 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b065, 0) 


# -- 0x0000b065 48 c1 e2 02                            shl $0x2,%rdx
 0: %%0<64> := (rdx<64> << 2<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 1<64>)));
 2: %%2<1> :=
     !
     (((rdx<64>{2} ^ (rdx<64>{0} ^ rdx<64>{4})) ^
       (rdx<64>{3} ^ (rdx<64>{1} ^ rdx<64>{5}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000b069, 0) 


# -- 0x0000b069 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000b06c, 0) 


# -- 0x0000b06c 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b06e, 0) 


# -- 0x0000b06e 89 85 c8 fd ff ff                      mov %eax,-0x238(%rbp)
 0: @[(rbp<64> + -568<64>),4] := rax<64>{0,31};
 1: goto (0x0000b074, 0) 


# -- 0x0000b074 8b 85 c8 fd ff ff                      mov -0x238(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -568<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b07a, 0) 


# -- 0x0000b07a 8d 50 3f                               lea 0x3f(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 63<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b07d, 0) 


# -- 0x0000b07d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b07f, 0) 


# -- 0x0000b07f 0f 48 c2                               cmovs %edx,%eax
 0: %%0<64> := (extu sf<1> ? rdx<64>{0,31} : rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b082, 0) 


# -- 0x0000b082 c1 f8 06                               sar $0x6,%eax
 0: %%0<32> := (exts rax<64>{6,31} 32);
 1: %%1<1> := rax<64>{5};
 2: %%2<1> :=
     !
     ((((rax<64>{6} ^ rax<64>{10}) ^ (rax<64>{8} ^ rax<64>{12})) ^
       ((rax<64>{7} ^ rax<64>{11}) ^ (rax<64>{9} ^ rax<64>{13}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<32> = %%0<32>);
 5: %%5<64> := (extu %%0<32> 64);
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := 0<1>;
11: of<1> := %%3<1>;
12: rax<64> := %%5<64>;
13: goto (0x0000b085, 0) 


# -- 0x0000b085 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b087, 0) 


# -- 0x0000b087 48 8b b4 c5 70 fe ff ff                mov -0x190(%rbp,%rax,8),%rsi
 0: %%0<64> := @[((rbp<64> + (rax<64> << 3<64>)) + -400<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b08f, 0) 


# -- 0x0000b08f 8b 85 c8 fd ff ff                      mov -0x238(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -568<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b095, 0) 


# -- 0x0000b095 99                                     cdtq
 0: %%0<64> := (extu (exts rax<64>{31} 32) 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b096, 0) 


# -- 0x0000b096 c1 ea 1a                               shr $0x1a,%edx
 0: %%0<1> := rdx<64>{25};
 1: %%1<1> :=
     !
     ((((rdx<64>{26} ^ rdx<64>{30}) ^ rdx<64>{28}) ^
       ((rdx<64>{27} ^ rdx<64>{31}) ^ rdx<64>{29})));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<6> = rdx<64>{26,31});
 4: %%4<64> := (extu rdx<64>{26,31} 64);
 5: cf<1> := %%0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%2<1>;
11: rdx<64> := %%4<64>;
12: goto (0x0000b099, 0) 


# -- 0x0000b099 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x0000b09b, 0) 


# -- 0x0000b09b 83 e0 3f                               and $0x3f,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ rax<64>{2}) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ rax<64>{3})));
 1: %%1<1> := (0<6> = rax<64>{0,5});
 2: %%2<64> := (63<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000b09e, 0) 


# -- 0x0000b09e 29 d0                                  sub %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%0<32>);
 3: %%3<32> := (%%0<32> - %%1<32>);
 4: %%4<32> := (%%2<32> & %%1<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%1<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%0<32> & ! (%%1<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: %%12<64> := (extu %%3<32> 64);
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: rax<64> := %%12<64>;
20: goto (0x0000b0a0, 0) 


# -- 0x0000b0a0 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000b0a5, 0) 


# -- 0x0000b0a5 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b0a7, 0) 


# -- 0x0000b0a7 48 d3 e2                               shl %cl,%rdx
 0: %%0<8> := (extu rcx<64>{0,5} 8);
 1: %%1<64> := (rdx<64> << (63<64> & rcx<64>));
 2: %%2<1> := (1<8> = %%0<8>);
 3: if (0<8> <> %%0<8>) goto 5 else goto 4
 4: rdx<64> := %%1<64>; goto 17
 5: %%3<1> :=
     (0<64> <> (0x8000000000000000 & (rdx<64> << (extu (%%0<8> - 1<8>) 64))))
     ;
 6: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 7: %%5<1> := \undef;
 8: %%6<1> := (0<64> = %%1<64>);
 9: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
10: %%8<1> :=
     ((%%2<1> & (0<64> <> (0x8000000000000000 & (rdx<64> ^ %%1<64>)))) |
      ! (%%2<1>));
11: cf<1> := %%3<1>;
12: pf<1> := %%4<1>;
13: af<1> := %%5<1>;
14: zf<1> := %%6<1>;
15: sf<1> := %%7<1>;
16: of<1> := %%8<1>; goto 4
17: goto (0x0000b0aa, 0) 


# -- 0x0000b0aa 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000b0ad, 0) 


# -- 0x0000b0ad 48 21 f0                               and %rsi,%rax
 0: %%0<64> := (rax<64> & rsi<64>);
 1: %%1<1> :=
     !
     (((((rax<64>{0} & rsi<64>{0}) ^ (rax<64>{4} & rsi<64>{4})) ^
        ((rax<64>{2} & rsi<64>{2}) ^ (rax<64>{6} & rsi<64>{6}))) ^
       (((rax<64>{1} & rsi<64>{1}) ^ (rax<64>{5} & rsi<64>{5})) ^
        ((rax<64>{3} & rsi<64>{3}) ^ (rax<64>{7} & rsi<64>{7})))));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%0<64>;
11: goto (0x0000b0b0, 0) 


# -- 0x0000b0b0 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000b0b3, 0) 


# -- 0x0000b0b3 74 3f                                  je 0xb0f4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b0f4, 0) 
 2: goto (0x0000b0b5, 0) 


# -- 0x0000b0b5 8b 95 c8 fd ff ff                      mov -0x238(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -568<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b0bb, 0) 


# -- 0x0000b0bb 48 8b 85 98 fd ff ff                   mov -0x268(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -616<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b0c2, 0) 


# -- 0x0000b0c2 89 d6                                  mov %edx,%esi
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b0c4, 0) 


# -- 0x0000b0c4 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b0c7, 0) 


# -- 0x0000b0c7 e8 8c f5 ff ff                         call 0xa658
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b0cc;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a658, 0) #call with return address @ (0x0000b0cc, 0)


# -- 0x0000b0cc 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b0ce, 0) 


# -- 0x0000b0ce 79 24                                  jns 0xb0f4
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b0f4, 0) 
 2: goto (0x0000b0d0, 0) 


# -- 0x0000b0d0 8b 85 c8 fd ff ff                      mov -0x238(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -568<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b0d6, 0) 


# -- 0x0000b0d6 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b0d8, 0) 


# -- 0x0000b0d8 e8 c3 7e ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b0dd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000b0dd, 0)


# -- 0x0000b0dd 8b 95 b0 fd ff ff                      mov -0x250(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b0e3, 0) 


# -- 0x0000b0e3 48 8b 05 76 61 20 00                   mov 0x206176(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b0ea, 0) 


# -- 0x0000b0ea 89 d6                                  mov %edx,%esi
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b0ec, 0) 


# -- 0x0000b0ec 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b0ef, 0) 


# -- 0x0000b0ef e8 5c 7f ff ff                         call 0x3050
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b0f4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003050, 0) #call with return address @ (0x0000b0f4, 0)


# -- 0x0000b0f4 83 85 b0 fd ff ff 01                   addl $0x1,-0x250(%rbp)
 0: %%0<64> := (rbp<64> + -592<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000b0fb, 0) 


# -- 0x0000b0fb 48 8b 05 5e 61 20 00                   mov 0x20615e(%rip),%rax
 0: %%0<64> := @[0x0000000000211260,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b102, 0) 


# -- 0x0000b102 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b105, 0) 


# -- 0x0000b105 8b 85 b0 fd ff ff                      mov -0x250(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -592<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b10b, 0) 


# -- 0x0000b10b 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000b10d, 0) 


# -- 0x0000b10d 0f 87 3f ff ff ff                      ja 0xb052
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000b052, 0) 
 2: goto (0x0000b113, 0) 


# -- 0x0000b113 e9 53 fa ff ff                         jmp 0xab6b
 0: goto (0x0000ab6b, 0) 


# -- 0x0000b118 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b119, 0) 


# -- 0x0000b119 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000b11c, 0) 


# -- 0x0000b11c 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b11d, 0) 


# -- 0x0000b11d 48 83 ec 38                            sub $0x38,%rsp
 0: %%0<64> := (rsp<64> - 56<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b121, 0) 


# -- 0x0000b121 89 7d cc                               mov %edi,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rdi<64>{0,31};
 1: goto (0x0000b124, 0) 


# -- 0x0000b124 48 89 75 c0                            mov %rsi,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rsi<64>;
 1: goto (0x0000b128, 0) 


# -- 0x0000b128 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b131, 0) 


# -- 0x0000b131 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000b135, 0) 


# -- 0x0000b135 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000b137, 0) 


# -- 0x0000b137 c7 45 dc 01 00 00 00                   movl $0x1,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := 1<32>;
 1: goto (0x0000b13e, 0) 


# -- 0x0000b13e 48 8d 55 dc                            lea -0x24(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -36<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b142, 0) 


# -- 0x0000b142 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b145, 0) 


# -- 0x0000b145 41 b8 04 00 00 00                      mov $0x4,%r8d
 0: r8<64> := 4<64>;
 1: goto (0x0000b14b, 0) 


# -- 0x0000b14b 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b14e, 0) 


# -- 0x0000b14e ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x0000b153, 0) 


# -- 0x0000b153 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000b158, 0) 


# -- 0x0000b158 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b15a, 0) 


# -- 0x0000b15a e8 21 7c ff ff                         call 0x2d80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b15f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d80, 0) #call with return address @ (0x0000b15f, 0)


# -- 0x0000b15f 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b162, 0) 


# -- 0x0000b162 75 49                                  jne 0xb1ad
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b1ad, 0) 
 2: goto (0x0000b164, 0) 


# -- 0x0000b164 e8 17 7b ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b169;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b169, 0)


# -- 0x0000b169 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b16b, 0) 


# -- 0x0000b16b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b16d, 0) 


# -- 0x0000b16d e8 5e 83 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b172;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b172, 0)


# -- 0x0000b172 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b175, 0) 


# -- 0x0000b175 48 8d 3d 5d 2e 00 00                   lea 0x2e5d(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b17c, 0) 


# -- 0x0000b17c e8 6f 7e ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b181;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b181, 0)


# -- 0x0000b181 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b183, 0) 


# -- 0x0000b183 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b187, 0) 


# -- 0x0000b187 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b18a, 0) 


# -- 0x0000b18a 48 8d 0d 97 3e 00 00                   lea 0x3e97(%rip),%rcx
 0: rcx<64> := 0x000000000000f028;
 1: goto (0x0000b191, 0) 


# -- 0x0000b191 ba 0b 00 00 00                         mov $0xb,%edx
 0: rdx<64> := 11<64>;
 1: goto (0x0000b196, 0) 


# -- 0x0000b196 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b199, 0) 


# -- 0x0000b199 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b19e, 0) 


# -- 0x0000b19e e8 3d 7d ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b1a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b1a3, 0)


# -- 0x0000b1a3 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000b1a8, 0) 


# -- 0x0000b1a8 e9 eb 00 00 00                         jmp 0xb298
 0: goto (0x0000b298, 0) 


# -- 0x0000b1ad c7 45 e0 01 00 00 00                   movl $0x1,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),4] := 1<32>;
 1: goto (0x0000b1b4, 0) 


# -- 0x0000b1b4 c7 45 e4 0a 00 00 00                   movl $0xa,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := 10<32>;
 1: goto (0x0000b1bb, 0) 


# -- 0x0000b1bb 48 8d 55 e0                            lea -0x20(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b1bf, 0) 


# -- 0x0000b1bf 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b1c2, 0) 


# -- 0x0000b1c2 41 b8 08 00 00 00                      mov $0x8,%r8d
 0: r8<64> := 8<64>;
 1: goto (0x0000b1c8, 0) 


# -- 0x0000b1c8 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b1cb, 0) 


# -- 0x0000b1cb ba 0d 00 00 00                         mov $0xd,%edx
 0: rdx<64> := 13<64>;
 1: goto (0x0000b1d0, 0) 


# -- 0x0000b1d0 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000b1d5, 0) 


# -- 0x0000b1d5 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b1d7, 0) 


# -- 0x0000b1d7 e8 a4 7b ff ff                         call 0x2d80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b1dc;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d80, 0) #call with return address @ (0x0000b1dc, 0)


# -- 0x0000b1dc 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b1df, 0) 


# -- 0x0000b1df 75 46                                  jne 0xb227
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b227, 0) 
 2: goto (0x0000b1e1, 0) 


# -- 0x0000b1e1 e8 9a 7a ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b1e6;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b1e6, 0)


# -- 0x0000b1e6 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b1e8, 0) 


# -- 0x0000b1e8 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b1ea, 0) 


# -- 0x0000b1ea e8 e1 82 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b1ef;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b1ef, 0)


# -- 0x0000b1ef 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b1f2, 0) 


# -- 0x0000b1f2 48 8d 3d e0 2d 00 00                   lea 0x2de0(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b1f9, 0) 


# -- 0x0000b1f9 e8 f2 7d ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b1fe;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b1fe, 0)


# -- 0x0000b1fe 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b200, 0) 


# -- 0x0000b200 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b204, 0) 


# -- 0x0000b204 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b207, 0) 


# -- 0x0000b207 48 8d 0d 4a 3e 00 00                   lea 0x3e4a(%rip),%rcx
 0: rcx<64> := 0x000000000000f058;
 1: goto (0x0000b20e, 0) 


# -- 0x0000b20e ba 0a 00 00 00                         mov $0xa,%edx
 0: rdx<64> := 10<64>;
 1: goto (0x0000b213, 0) 


# -- 0x0000b213 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b216, 0) 


# -- 0x0000b216 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b21b, 0) 


# -- 0x0000b21b e8 c0 7c ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b220;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b220, 0)


# -- 0x0000b220 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000b225, 0) 


# -- 0x0000b225 eb 71                                  jmp 0xb298
 0: goto (0x0000b298, 0) 


# -- 0x0000b227 48 8d 55 dc                            lea -0x24(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -36<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b22b, 0) 


# -- 0x0000b22b 8b 45 cc                               mov -0x34(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -52<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b22e, 0) 


# -- 0x0000b22e 41 b8 04 00 00 00                      mov $0x4,%r8d
 0: r8<64> := 4<64>;
 1: goto (0x0000b234, 0) 


# -- 0x0000b234 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b237, 0) 


# -- 0x0000b237 ba 09 00 00 00                         mov $0x9,%edx
 0: rdx<64> := 9<64>;
 1: goto (0x0000b23c, 0) 


# -- 0x0000b23c be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000b241, 0) 


# -- 0x0000b241 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b243, 0) 


# -- 0x0000b243 e8 38 7b ff ff                         call 0x2d80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b248;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d80, 0) #call with return address @ (0x0000b248, 0)


# -- 0x0000b248 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b24b, 0) 


# -- 0x0000b24b 75 46                                  jne 0xb293
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b293, 0) 
 2: goto (0x0000b24d, 0) 


# -- 0x0000b24d e8 2e 7a ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b252;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b252, 0)


# -- 0x0000b252 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b254, 0) 


# -- 0x0000b254 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b256, 0) 


# -- 0x0000b256 e8 75 82 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b25b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b25b, 0)


# -- 0x0000b25b 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b25e, 0) 


# -- 0x0000b25e 48 8d 3d 74 2d 00 00                   lea 0x2d74(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b265, 0) 


# -- 0x0000b265 e8 86 7d ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b26a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b26a, 0)


# -- 0x0000b26a 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b26c, 0) 


# -- 0x0000b26c 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b270, 0) 


# -- 0x0000b270 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b273, 0) 


# -- 0x0000b273 48 8d 0d 0e 3e 00 00                   lea 0x3e0e(%rip),%rcx
 0: rcx<64> := 0x000000000000f088;
 1: goto (0x0000b27a, 0) 


# -- 0x0000b27a ba 0c 00 00 00                         mov $0xc,%edx
 0: rdx<64> := 12<64>;
 1: goto (0x0000b27f, 0) 


# -- 0x0000b27f 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b282, 0) 


# -- 0x0000b282 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b287, 0) 


# -- 0x0000b287 e8 54 7c ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b28c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b28c, 0)


# -- 0x0000b28c b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000b291, 0) 


# -- 0x0000b291 eb 05                                  jmp 0xb298
 0: goto (0x0000b298, 0) 


# -- 0x0000b293 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b298, 0) 


# -- 0x0000b298 48 8b 4d e8                            mov -0x18(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b29c, 0) 


# -- 0x0000b29c 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000b2a5, 0) 


# -- 0x0000b2a5 74 05                                  je 0xb2ac
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b2ac, 0) 
 2: goto (0x0000b2a7, 0) 


# -- 0x0000b2a7 e8 c4 7b ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b2ac;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000b2ac, 0)


# -- 0x0000b2ac 48 83 c4 38                            add $0x38,%rsp
 0: %%0<64> := (rsp<64> + 56<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b2b0, 0) 


# -- 0x0000b2b0 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000b2b1, 0) 


# -- 0x0000b2b1 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000b2b2, 0) 


# -- 0x0000b2b2 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000b2b3 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b2b4, 0) 


# -- 0x0000b2b4 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000b2b7, 0) 


# -- 0x0000b2b7 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b2b8, 0) 


# -- 0x0000b2b8 48 81 ec a8 00 00 00                   sub $0xa8,%rsp
 0: %%0<64> := (rsp<64> - 168<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b2bf, 0) 


# -- 0x0000b2bf 48 89 bd 58 ff ff ff                   mov %rdi,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := rdi<64>;
 1: goto (0x0000b2c6, 0) 


# -- 0x0000b2c6 48 89 b5 50 ff ff ff                   mov %rsi,-0xb0(%rbp)
 0: @[(rbp<64> + -176<64>),8] := rsi<64>;
 1: goto (0x0000b2cd, 0) 


# -- 0x0000b2cd 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b2d6, 0) 


# -- 0x0000b2d6 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000b2da, 0) 


# -- 0x0000b2da 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000b2dc, 0) 


# -- 0x0000b2dc c7 85 68 ff ff ff ff ff ff ff          movl $0xffffffff,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),4] := -1<32>;
 1: goto (0x0000b2e6, 0) 


# -- 0x0000b2e6 c7 85 6c ff ff ff ff ff ff ff          movl $0xffffffff,-0x94(%rbp)
 0: @[(rbp<64> + -148<64>),4] := -1<32>;
 1: goto (0x0000b2f0, 0) 


# -- 0x0000b2f0 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b2f7, 0) 


# -- 0x0000b2f7 ba 6e 00 00 00                         mov $0x6e,%edx
 0: rdx<64> := 110<64>;
 1: goto (0x0000b2fc, 0) 


# -- 0x0000b2fc be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000b301, 0) 


# -- 0x0000b301 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b304, 0) 


# -- 0x0000b304 e8 67 7c ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b309;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x0000b309, 0)


# -- 0x0000b309 66 c7 85 70 ff ff ff 01 00             movw $0x1,-0x90(%rbp)
 0: @[(rbp<64> + -144<64>),2] := 1<16>;
 1: goto (0x0000b312, 0) 


# -- 0x0000b312 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b319, 0) 


# -- 0x0000b319 48 8d 95 70 ff ff ff                   lea -0x90(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b320, 0) 


# -- 0x0000b320 48 8d 4a 02                            lea 0x2(%rdx),%rcx
 0: %%0<64> := (rdx<64> + 2<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b324, 0) 


# -- 0x0000b324 ba 6c 00 00 00                         mov $0x6c,%edx
 0: rdx<64> := 108<64>;
 1: goto (0x0000b329, 0) 


# -- 0x0000b329 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b32c, 0) 


# -- 0x0000b32c 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b32f, 0) 


# -- 0x0000b32f e8 8c 79 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b334;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000b334, 0)


# -- 0x0000b334 c6 45 dd 00                            movb $0x0,-0x23(%rbp)
 0: @[(rbp<64> + -35<64>),1] := 0<8>;
 1: goto (0x0000b338, 0) 


# -- 0x0000b338 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000b33d, 0) 


# -- 0x0000b33d be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000b342, 0) 


# -- 0x0000b342 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000b347, 0) 


# -- 0x0000b347 e8 24 82 ff ff                         call 0x3570
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b34c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003570, 0) #call with return address @ (0x0000b34c, 0)


# -- 0x0000b34c 89 85 68 ff ff ff                      mov %eax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),4] := rax<64>{0,31};
 1: goto (0x0000b352, 0) 


# -- 0x0000b352 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b358, 0) 


# -- 0x0000b358 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b35a, 0) 


# -- 0x0000b35a 79 47                                  jns 0xb3a3
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b3a3, 0) 
 2: goto (0x0000b35c, 0) 


# -- 0x0000b35c e8 1f 79 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b361;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b361, 0)


# -- 0x0000b361 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b363, 0) 


# -- 0x0000b363 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b365, 0) 


# -- 0x0000b365 e8 66 81 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b36a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b36a, 0)


# -- 0x0000b36a 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b36d, 0) 


# -- 0x0000b36d 48 8d 3d 65 2c 00 00                   lea 0x2c65(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b374, 0) 


# -- 0x0000b374 e8 77 7c ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b379;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b379, 0)


# -- 0x0000b379 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b37b, 0) 


# -- 0x0000b37b 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b382, 0) 


# -- 0x0000b382 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b385, 0) 


# -- 0x0000b385 48 8d 0d 2c 3d 00 00                   lea 0x3d2c(%rip),%rcx
 0: rcx<64> := 0x000000000000f0b8;
 1: goto (0x0000b38c, 0) 


# -- 0x0000b38c ba 0e 00 00 00                         mov $0xe,%edx
 0: rdx<64> := 14<64>;
 1: goto (0x0000b391, 0) 


# -- 0x0000b391 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b394, 0) 


# -- 0x0000b394 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b399, 0) 


# -- 0x0000b399 e8 42 7b ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b39e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b39e, 0)


# -- 0x0000b39e e9 f6 00 00 00                         jmp 0xb499
 0: goto (0x0000b499, 0) 


# -- 0x0000b3a3 48 8d 85 70 ff ff ff                   lea -0x90(%rbp),%rax
 0: %%0<64> := (rbp<64> + -144<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b3aa, 0) 


# -- 0x0000b3aa 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b3ad, 0) 


# -- 0x0000b3ad 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b3b3, 0) 


# -- 0x0000b3b3 ba 6e 00 00 00                         mov $0x6e,%edx
 0: rdx<64> := 110<64>;
 1: goto (0x0000b3b8, 0) 


# -- 0x0000b3b8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b3bb, 0) 


# -- 0x0000b3bb 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b3bd, 0) 


# -- 0x0000b3bd e8 3e 7f ff ff                         call 0x3300
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b3c2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003300, 0) #call with return address @ (0x0000b3c2, 0)


# -- 0x0000b3c2 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b3c4, 0) 


# -- 0x0000b3c4 79 51                                  jns 0xb417
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b417, 0) 
 2: goto (0x0000b3c6, 0) 


# -- 0x0000b3c6 e8 b5 78 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b3cb;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b3cb, 0)


# -- 0x0000b3cb 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b3cd, 0) 


# -- 0x0000b3cd 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b3cf, 0) 


# -- 0x0000b3cf e8 fc 80 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b3d4;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b3d4, 0)


# -- 0x0000b3d4 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b3d7, 0) 


# -- 0x0000b3d7 48 8d 3d fb 2b 00 00                   lea 0x2bfb(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b3de, 0) 


# -- 0x0000b3de e8 0d 7c ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b3e3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b3e3, 0)


# -- 0x0000b3e3 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b3e5, 0) 


# -- 0x0000b3e5 48 8b 95 58 ff ff ff                   mov -0xa8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b3ec, 0) 


# -- 0x0000b3ec 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b3f3, 0) 


# -- 0x0000b3f3 49 89 d9                               mov %rbx,%r9
 0: %%0<64> := rbx<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x0000b3f6, 0) 


# -- 0x0000b3f6 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b3f9, 0) 


# -- 0x0000b3f9 48 8d 0d f8 3c 00 00                   lea 0x3cf8(%rip),%rcx
 0: rcx<64> := 0x000000000000f0f8;
 1: goto (0x0000b400, 0) 


# -- 0x0000b400 ba 0f 00 00 00                         mov $0xf,%edx
 0: rdx<64> := 15<64>;
 1: goto (0x0000b405, 0) 


# -- 0x0000b405 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b408, 0) 


# -- 0x0000b408 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b40d, 0) 


# -- 0x0000b40d e8 ce 7a ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b412;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b412, 0)


# -- 0x0000b412 e9 82 00 00 00                         jmp 0xb499
 0: goto (0x0000b499, 0) 


# -- 0x0000b417 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b41d, 0) 


# -- 0x0000b41d be 0a 00 00 00                         mov $0xa,%esi
 0: rsi<64> := 10<64>;
 1: goto (0x0000b422, 0) 


# -- 0x0000b422 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b424, 0) 


# -- 0x0000b424 e8 17 7e ff ff                         call 0x3240
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b429;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003240, 0) #call with return address @ (0x0000b429, 0)


# -- 0x0000b429 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b42b, 0) 


# -- 0x0000b42b 79 44                                  jns 0xb471
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b471, 0) 
 2: goto (0x0000b42d, 0) 


# -- 0x0000b42d e8 4e 78 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b432;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b432, 0)


# -- 0x0000b432 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b434, 0) 


# -- 0x0000b434 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b436, 0) 


# -- 0x0000b436 e8 95 80 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b43b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b43b, 0)


# -- 0x0000b43b 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b43e, 0) 


# -- 0x0000b43e 48 8d 3d 94 2b 00 00                   lea 0x2b94(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b445, 0) 


# -- 0x0000b445 e8 a6 7b ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b44a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b44a, 0)


# -- 0x0000b44a 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b44c, 0) 


# -- 0x0000b44c 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b453, 0) 


# -- 0x0000b453 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b456, 0) 


# -- 0x0000b456 48 8d 0d db 3c 00 00                   lea 0x3cdb(%rip),%rcx
 0: rcx<64> := 0x000000000000f138;
 1: goto (0x0000b45d, 0) 


# -- 0x0000b45d ba 0f 00 00 00                         mov $0xf,%edx
 0: rdx<64> := 15<64>;
 1: goto (0x0000b462, 0) 


# -- 0x0000b462 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b465, 0) 


# -- 0x0000b465 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b46a, 0) 


# -- 0x0000b46a e8 71 7a ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b46f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b46f, 0)


# -- 0x0000b46f eb 28                                  jmp 0xb499
 0: goto (0x0000b499, 0) 


# -- 0x0000b471 c7 85 6c ff ff ff 00 00 00 00          movl $0x0,-0x94(%rbp)
 0: @[(rbp<64> + -148<64>),4] := 0<32>;
 1: goto (0x0000b47b, 0) 


# -- 0x0000b47b 48 8b 05 e6 5d 20 00                   mov 0x205de6(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b482, 0) 


# -- 0x0000b482 48 8d 8d 68 ff ff ff                   lea -0x98(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -152<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b489, 0) 


# -- 0x0000b489 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000b48e, 0) 


# -- 0x0000b48e 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b491, 0) 


# -- 0x0000b491 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b494, 0) 


# -- 0x0000b494 e8 17 7d ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b499;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000b499, 0)


# -- 0x0000b499 83 bd 6c ff ff ff 00                   cmpl $0x0,-0x94(%rbp)
 0: %%0<32> := @[(rbp<64> + -148<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b4a0, 0) 


# -- 0x0000b4a0 79 17                                  jns 0xb4b9
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b4b9, 0) 
 2: goto (0x0000b4a2, 0) 


# -- 0x0000b4a2 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b4a8, 0) 


# -- 0x0000b4a8 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b4aa, 0) 


# -- 0x0000b4aa 78 0d                                  js 0xb4b9
 0: if sf<1> goto 1 else goto 2
 1: goto (0x0000b4b9, 0) 
 2: goto (0x0000b4ac, 0) 


# -- 0x0000b4ac 8b 85 68 ff ff ff                      mov -0x98(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -152<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b4b2, 0) 


# -- 0x0000b4b2 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b4b4, 0) 


# -- 0x0000b4b4 e8 e7 7a ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b4b9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000b4b9, 0)


# -- 0x0000b4b9 8b 85 6c ff ff ff                      mov -0x94(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -148<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b4bf, 0) 


# -- 0x0000b4bf 48 8b 5d e8                            mov -0x18(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b4c3, 0) 


# -- 0x0000b4c3 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x0000b4cc, 0) 


# -- 0x0000b4cc 74 05                                  je 0xb4d3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b4d3, 0) 
 2: goto (0x0000b4ce, 0) 


# -- 0x0000b4ce e8 9d 79 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b4d3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000b4d3, 0)


# -- 0x0000b4d3 48 81 c4 a8 00 00 00                   add $0xa8,%rsp
 0: %%0<64> := (rsp<64> + 168<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b4da, 0) 


# -- 0x0000b4da 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000b4db, 0) 


# -- 0x0000b4db 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000b4dc, 0) 


# -- 0x0000b4dc c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000b4dd 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b4de, 0) 


# -- 0x0000b4de 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000b4e1, 0) 


# -- 0x0000b4e1 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b4e2, 0) 


# -- 0x0000b4e2 48 81 ec 98 00 00 00                   sub $0x98,%rsp
 0: %%0<64> := (rsp<64> - 152<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b4e9, 0) 


# -- 0x0000b4e9 48 89 bd 78 ff ff ff                   mov %rdi,-0x88(%rbp)
 0: @[(rbp<64> + -136<64>),8] := rdi<64>;
 1: goto (0x0000b4f0, 0) 


# -- 0x0000b4f0 48 89 b5 70 ff ff ff                   mov %rsi,-0x90(%rbp)
 0: @[(rbp<64> + -144<64>),8] := rsi<64>;
 1: goto (0x0000b4f7, 0) 


# -- 0x0000b4f7 48 89 95 68 ff ff ff                   mov %rdx,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rdx<64>;
 1: goto (0x0000b4fe, 0) 


# -- 0x0000b4fe 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b507, 0) 


# -- 0x0000b507 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000b50b, 0) 


# -- 0x0000b50b 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000b50d, 0) 


# -- 0x0000b50d 48 c7 45 90 00 00 00 00                movq $0x0,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),8] := 0<64>;
 1: goto (0x0000b515, 0) 


# -- 0x0000b515 48 c7 45 98 00 00 00 00                movq $0x0,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := 0<64>;
 1: goto (0x0000b51d, 0) 


# -- 0x0000b51d c7 45 84 ff ff ff ff                   movl $0xffffffff,-0x7c(%rbp)
 0: @[(rbp<64> + -124<64>),4] := -1<32>;
 1: goto (0x0000b524, 0) 


# -- 0x0000b524 c7 45 80 ff ff ff ff                   movl $0xffffffff,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),4] := -1<32>;
 1: goto (0x0000b52b, 0) 


# -- 0x0000b52b 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b532, 0) 


# -- 0x0000b532 48 89 45 a0                            mov %rax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),8] := rax<64>;
 1: goto (0x0000b536, 0) 


# -- 0x0000b536 48 83 bd 78 ff ff ff 00                cmpq $0x0,-0x88(%rbp)
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b53e, 0) 


# -- 0x0000b53e 74 0e                                  je 0xb54e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b54e, 0) 
 2: goto (0x0000b540, 0) 


# -- 0x0000b540 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b547, 0) 


# -- 0x0000b547 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b54a, 0) 


# -- 0x0000b54a 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b54c, 0) 


# -- 0x0000b54c 75 0b                                  jne 0xb559
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b559, 0) 
 2: goto (0x0000b54e, 0) 


# -- 0x0000b54e 48 8d 05 1f 3c 00 00                   lea 0x3c1f(%rip),%rax
 0: rax<64> := 0x000000000000f174;
 1: goto (0x0000b555, 0) 


# -- 0x0000b555 48 89 45 a0                            mov %rax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),8] := rax<64>;
 1: goto (0x0000b559, 0) 


# -- 0x0000b559 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b55d, 0) 


# -- 0x0000b55d ba ff ff ff ff                         mov $0xffffffff,%edx
 0: rdx<64> := 0x00000000ffffffff;
 1: goto (0x0000b562, 0) 


# -- 0x0000b562 48 8d 35 17 3c 00 00                   lea 0x3c17(%rip),%rsi
 0: rsi<64> := 0x000000000000f180;
 1: goto (0x0000b569, 0) 


# -- 0x0000b569 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b56c, 0) 


# -- 0x0000b56c e8 8f 7a ff ff                         call 0x3000
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b571;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003000, 0) #call with return address @ (0x0000b571, 0)


# -- 0x0000b571 48 89 45 a8                            mov %rax,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),8] := rax<64>;
 1: goto (0x0000b575, 0) 


# -- 0x0000b575 c7 45 88 00 00 00 00                   movl $0x0,-0x78(%rbp)
 0: @[(rbp<64> + -120<64>),4] := 0<32>;
 1: goto (0x0000b57c, 0) 


# -- 0x0000b57c e9 0e 03 00 00                         jmp 0xb88f
 0: goto (0x0000b88f, 0) 


# -- 0x0000b581 8b 45 88                               mov -0x78(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -120<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b584, 0) 


# -- 0x0000b584 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b586, 0) 


# -- 0x0000b586 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b58e, 0) 


# -- 0x0000b58e 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b592, 0) 


# -- 0x0000b592 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000b595, 0) 


# -- 0x0000b595 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b598, 0) 


# -- 0x0000b598 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b59b, 0) 


# -- 0x0000b59b 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b59d, 0) 


# -- 0x0000b59d 0f 84 e7 02 00 00                      je 0xb88a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b88a, 0) 
 2: goto (0x0000b5a3, 0) 


# -- 0x0000b5a3 48 8d 45 b0                            lea -0x50(%rbp),%rax
 0: %%0<64> := (rbp<64> + -80<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b5a7, 0) 


# -- 0x0000b5a7 ba 30 00 00 00                         mov $0x30,%edx
 0: rdx<64> := 48<64>;
 1: goto (0x0000b5ac, 0) 


# -- 0x0000b5ac be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000b5b1, 0) 


# -- 0x0000b5b1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b5b4, 0) 


# -- 0x0000b5b4 e8 b7 79 ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b5b9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x0000b5b9, 0)


# -- 0x0000b5b9 c7 45 b0 21 00 00 00                   movl $0x21,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),4] := 33<32>;
 1: goto (0x0000b5c0, 0) 


# -- 0x0000b5c0 c7 45 b8 01 00 00 00                   movl $0x1,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),4] := 1<32>;
 1: goto (0x0000b5c7, 0) 


# -- 0x0000b5c7 c7 45 b4 00 00 00 00                   movl $0x0,-0x4c(%rbp)
 0: @[(rbp<64> + -76<64>),4] := 0<32>;
 1: goto (0x0000b5ce, 0) 


# -- 0x0000b5ce c7 45 bc 06 00 00 00                   movl $0x6,-0x44(%rbp)
 0: @[(rbp<64> + -68<64>),4] := 6<32>;
 1: goto (0x0000b5d5, 0) 


# -- 0x0000b5d5 48 83 bd 70 ff ff ff 00                cmpq $0x0,-0x90(%rbp)
 0: %%0<64> := @[(rbp<64> + -144<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b5dd, 0) 


# -- 0x0000b5dd 74 09                                  je 0xb5e8
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b5e8, 0) 
 2: goto (0x0000b5df, 0) 


# -- 0x0000b5df 48 8b 85 70 ff ff ff                   mov -0x90(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b5e6, 0) 


# -- 0x0000b5e6 eb 07                                  jmp 0xb5ef
 0: goto (0x0000b5ef, 0) 


# -- 0x0000b5e8 48 8d 05 95 3b 00 00                   lea 0x3b95(%rip),%rax
 0: rax<64> := 0x000000000000f184;
 1: goto (0x0000b5ef, 0) 


# -- 0x0000b5ef 8b 55 88                               mov -0x78(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -120<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b5f2, 0) 


# -- 0x0000b5f2 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b5f5, 0) 


# -- 0x0000b5f5 48 8d 0c d5 00 00 00 00                lea 0x0(,%rdx,8),%rcx
 0: %%0<64> := (rdx<64> << 3<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b5fd, 0) 


# -- 0x0000b5fd 48 8b 55 a8                            mov -0x58(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b601, 0) 


# -- 0x0000b601 48 01 ca                               add %rcx,%rdx
 0: %%0<64> := (rdx<64> & rcx<64>);
 1: %%1<64> := (rdx<64> + rcx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> | rcx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rdx<64>) & ! (rcx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rdx<64> := %%1<64>;
16: goto (0x0000b604, 0) 


# -- 0x0000b604 48 8b 3a                               mov (%rdx),%rdi
 0: %%0<64> := @[rdx<64>,8];
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b607, 0) 


# -- 0x0000b607 48 8d 4d 90                            lea -0x70(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b60b, 0) 


# -- 0x0000b60b 48 8d 55 b0                            lea -0x50(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -80<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b60f, 0) 


# -- 0x0000b60f 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b612, 0) 


# -- 0x0000b612 e8 89 7e ff ff                         call 0x34a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b617;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034a0, 0) #call with return address @ (0x0000b617, 0)


# -- 0x0000b617 89 45 8c                               mov %eax,-0x74(%rbp)
 0: @[(rbp<64> + -116<64>),4] := rax<64>{0,31};
 1: goto (0x0000b61a, 0) 


# -- 0x0000b61a 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b61e, 0) 


# -- 0x0000b61e 48 89 45 98                            mov %rax,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := rax<64>;
 1: goto (0x0000b622, 0) 


# -- 0x0000b622 83 7d 8c 00                            cmpl $0x0,-0x74(%rbp)
 0: %%0<32> := @[(rbp<64> + -116<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b626, 0) 


# -- 0x0000b626 0f 84 34 02 00 00                      je 0xb860
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b860, 0) 
 2: goto (0x0000b62c, 0) 


# -- 0x0000b62c 8b 45 88                               mov -0x78(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -120<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b62f, 0) 


# -- 0x0000b62f 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b631, 0) 


# -- 0x0000b631 48 83 c0 01                            add $0x1,%rax
 0: %%0<64> := (rax<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000b635, 0) 


# -- 0x0000b635 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b63d, 0) 


# -- 0x0000b63d 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b641, 0) 


# -- 0x0000b641 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000b644, 0) 


# -- 0x0000b644 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b647, 0) 


# -- 0x0000b647 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000b64a, 0) 


# -- 0x0000b64a 0f 85 10 02 00 00                      jne 0xb860
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b860, 0) 
 2: goto (0x0000b650, 0) 


# -- 0x0000b650 48 8b 05 11 5c 20 00                   mov 0x205c11(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b657, 0) 


# -- 0x0000b657 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b65a, 0) 


# -- 0x0000b65a 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b65c, 0) 


# -- 0x0000b65c 0f 85 fe 01 00 00                      jne 0xb860
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b860, 0) 
 2: goto (0x0000b662, 0) 


# -- 0x0000b662 8b 45 8c                               mov -0x74(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -116<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b665, 0) 


# -- 0x0000b665 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b667, 0) 


# -- 0x0000b667 e8 94 78 ff ff                         call 0x2f00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b66c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f00, 0) #call with return address @ (0x0000b66c, 0)


# -- 0x0000b66c 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b66f, 0) 


# -- 0x0000b66f 48 8d 3d 63 29 00 00                   lea 0x2963(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b676, 0) 


# -- 0x0000b676 e8 75 79 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b67b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b67b, 0)


# -- 0x0000b67b 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b67d, 0) 


# -- 0x0000b67d 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b684, 0) 


# -- 0x0000b684 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b687, 0) 


# -- 0x0000b687 48 8d 0d 02 3b 00 00                   lea 0x3b02(%rip),%rcx
 0: rcx<64> := 0x000000000000f190;
 1: goto (0x0000b68e, 0) 


# -- 0x0000b68e ba 0d 00 00 00                         mov $0xd,%edx
 0: rdx<64> := 13<64>;
 1: goto (0x0000b693, 0) 


# -- 0x0000b693 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b696, 0) 


# -- 0x0000b696 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b69b, 0) 


# -- 0x0000b69b e8 40 78 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b6a0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b6a0, 0)


# -- 0x0000b6a0 e9 11 02 00 00                         jmp 0xb8b6
 0: goto (0x0000b8b6, 0) 


# -- 0x0000b6a5 c7 45 80 ff ff ff ff                   movl $0xffffffff,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),4] := -1<32>;
 1: goto (0x0000b6ac, 0) 


# -- 0x0000b6ac 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6b0, 0) 


# -- 0x0000b6b0 8b 50 0c                               mov 0xc(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 12<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b6b3, 0) 


# -- 0x0000b6b3 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6b7, 0) 


# -- 0x0000b6b7 8b 48 08                               mov 0x8(%rax),%ecx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b6ba, 0) 


# -- 0x0000b6ba 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6be, 0) 


# -- 0x0000b6be 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6c1, 0) 


# -- 0x0000b6c1 89 ce                                  mov %ecx,%esi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b6c3, 0) 


# -- 0x0000b6c3 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b6c5, 0) 


# -- 0x0000b6c5 e8 a6 7e ff ff                         call 0x3570
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b6ca;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003570, 0) #call with return address @ (0x0000b6ca, 0)


# -- 0x0000b6ca 89 45 80                               mov %eax,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),4] := rax<64>{0,31};
 1: goto (0x0000b6cd, 0) 


# -- 0x0000b6cd 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6d0, 0) 


# -- 0x0000b6d0 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b6d2, 0) 


# -- 0x0000b6d2 79 47                                  jns 0xb71b
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b71b, 0) 
 2: goto (0x0000b6d4, 0) 


# -- 0x0000b6d4 e8 a7 75 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b6d9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b6d9, 0)


# -- 0x0000b6d9 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6db, 0) 


# -- 0x0000b6db 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b6dd, 0) 


# -- 0x0000b6dd e8 ee 7d ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b6e2;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b6e2, 0)


# -- 0x0000b6e2 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b6e5, 0) 


# -- 0x0000b6e5 48 8d 3d ed 28 00 00                   lea 0x28ed(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b6ec, 0) 


# -- 0x0000b6ec e8 ff 78 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b6f1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b6f1, 0)


# -- 0x0000b6f1 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b6f3, 0) 


# -- 0x0000b6f3 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b6fa, 0) 


# -- 0x0000b6fa 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b6fd, 0) 


# -- 0x0000b6fd 48 8d 0d cc 3a 00 00                   lea 0x3acc(%rip),%rcx
 0: rcx<64> := 0x000000000000f1d0;
 1: goto (0x0000b704, 0) 


# -- 0x0000b704 ba 0e 00 00 00                         mov $0xe,%edx
 0: rdx<64> := 14<64>;
 1: goto (0x0000b709, 0) 


# -- 0x0000b709 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b70c, 0) 


# -- 0x0000b70c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b711, 0) 


# -- 0x0000b711 e8 ca 77 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b716;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b716, 0)


# -- 0x0000b716 e9 9b 01 00 00                         jmp 0xb8b6
 0: goto (0x0000b8b6, 0) 


# -- 0x0000b71b 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b71e, 0) 


# -- 0x0000b71e 48 8b 95 68 ff ff ff                   mov -0x98(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b725, 0) 


# -- 0x0000b725 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b728, 0) 


# -- 0x0000b728 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b72a, 0) 


# -- 0x0000b72a e8 e9 f9 ff ff                         call 0xb118
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b72f;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b118, 0) #call with return address @ (0x0000b72f, 0)


# -- 0x0000b72f 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b732, 0) 


# -- 0x0000b732 75 20                                  jne 0xb754
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b754, 0) 
 2: goto (0x0000b734, 0) 


# -- 0x0000b734 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b73b, 0) 


# -- 0x0000b73b 48 8d 35 ce 3a 00 00                   lea 0x3ace(%rip),%rsi
 0: rsi<64> := 0x000000000000f210;
 1: goto (0x0000b742, 0) 


# -- 0x0000b742 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b745, 0) 


# -- 0x0000b745 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b74a, 0) 


# -- 0x0000b74a e8 a1 76 ff ff                         call 0x2df0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b74f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002df0, 0) #call with return address @ (0x0000b74f, 0)


# -- 0x0000b74f e9 62 01 00 00                         jmp 0xb8b6
 0: goto (0x0000b8b6, 0) 


# -- 0x0000b754 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b758, 0) 


# -- 0x0000b758 8b 50 10                               mov 0x10(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b75b, 0) 


# -- 0x0000b75b 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b75f, 0) 


# -- 0x0000b75f 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b763, 0) 


# -- 0x0000b763 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b766, 0) 


# -- 0x0000b766 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b769, 0) 


# -- 0x0000b769 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b76c, 0) 


# -- 0x0000b76c 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b76e, 0) 


# -- 0x0000b76e e8 8d 7b ff ff                         call 0x3300
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b773;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003300, 0) #call with return address @ (0x0000b773, 0)


# -- 0x0000b773 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b775, 0) 


# -- 0x0000b775 74 65                                  je 0xb7dc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b7dc, 0) 
 2: goto (0x0000b777, 0) 


# -- 0x0000b777 e8 04 75 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b77c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b77c, 0)


# -- 0x0000b77c 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b77e, 0) 


# -- 0x0000b77e 83 f8 62                               cmp $0x62,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 98<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b781, 0) 


# -- 0x0000b781 75 12                                  jne 0xb795
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b795, 0) 
 2: goto (0x0000b783, 0) 


# -- 0x0000b783 48 8b 05 de 5a 20 00                   mov 0x205ade(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b78a, 0) 


# -- 0x0000b78a 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b78d, 0) 


# -- 0x0000b78d 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b78f, 0) 


# -- 0x0000b78f 0f 85 be 00 00 00                      jne 0xb853
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b853, 0) 
 2: goto (0x0000b795, 0) 


# -- 0x0000b795 e8 e6 74 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b79a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b79a, 0)


# -- 0x0000b79a 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b79c, 0) 


# -- 0x0000b79c 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b79e, 0) 


# -- 0x0000b79e e8 2d 7d ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7a3;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b7a3, 0)


# -- 0x0000b7a3 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b7a6, 0) 


# -- 0x0000b7a6 48 8d 3d 2c 28 00 00                   lea 0x282c(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b7ad, 0) 


# -- 0x0000b7ad e8 3e 78 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7b2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b7b2, 0)


# -- 0x0000b7b2 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b7b4, 0) 


# -- 0x0000b7b4 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b7bb, 0) 


# -- 0x0000b7bb 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b7be, 0) 


# -- 0x0000b7be 48 8d 0d 73 3a 00 00                   lea 0x3a73(%rip),%rcx
 0: rcx<64> := 0x000000000000f238;
 1: goto (0x0000b7c5, 0) 


# -- 0x0000b7c5 ba 0f 00 00 00                         mov $0xf,%edx
 0: rdx<64> := 15<64>;
 1: goto (0x0000b7ca, 0) 


# -- 0x0000b7ca 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b7cd, 0) 


# -- 0x0000b7cd b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b7d2, 0) 


# -- 0x0000b7d2 e8 09 77 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7d7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b7d7, 0)


# -- 0x0000b7d7 e9 da 00 00 00                         jmp 0xb8b6
 0: goto (0x0000b8b6, 0) 


# -- 0x0000b7dc 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b7df, 0) 


# -- 0x0000b7df be 0a 00 00 00                         mov $0xa,%esi
 0: rsi<64> := 10<64>;
 1: goto (0x0000b7e4, 0) 


# -- 0x0000b7e4 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b7e6, 0) 


# -- 0x0000b7e6 e8 55 7a ff ff                         call 0x3240
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7eb;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003240, 0) #call with return address @ (0x0000b7eb, 0)


# -- 0x0000b7eb 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b7ed, 0) 


# -- 0x0000b7ed 79 47                                  jns 0xb836
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000b836, 0) 
 2: goto (0x0000b7ef, 0) 


# -- 0x0000b7ef e8 8c 74 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7f4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000b7f4, 0)


# -- 0x0000b7f4 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b7f6, 0) 


# -- 0x0000b7f6 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b7f8, 0) 


# -- 0x0000b7f8 e8 d3 7c ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b7fd;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000b7fd, 0)


# -- 0x0000b7fd 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b800, 0) 


# -- 0x0000b800 48 8d 3d d2 27 00 00                   lea 0x27d2(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000b807, 0) 


# -- 0x0000b807 e8 e4 77 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b80c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000b80c, 0)


# -- 0x0000b80c 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b80e, 0) 


# -- 0x0000b80e 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b815, 0) 


# -- 0x0000b815 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000b818, 0) 


# -- 0x0000b818 48 8d 0d 69 3a 00 00                   lea 0x3a69(%rip),%rcx
 0: rcx<64> := 0x000000000000f288;
 1: goto (0x0000b81f, 0) 


# -- 0x0000b81f ba 0f 00 00 00                         mov $0xf,%edx
 0: rdx<64> := 15<64>;
 1: goto (0x0000b824, 0) 


# -- 0x0000b824 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b827, 0) 


# -- 0x0000b827 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b82c, 0) 


# -- 0x0000b82c e8 af 76 ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b831;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000b831, 0)


# -- 0x0000b831 e9 80 00 00 00                         jmp 0xb8b6
 0: goto (0x0000b8b6, 0) 


# -- 0x0000b836 48 8b 05 2b 5a 20 00                   mov 0x205a2b(%rip),%rax
 0: %%0<64> := @[0x0000000000211268,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b83d, 0) 


# -- 0x0000b83d 48 8d 4d 80                            lea -0x80(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -128<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b841, 0) 


# -- 0x0000b841 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000b846, 0) 


# -- 0x0000b846 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b849, 0) 


# -- 0x0000b849 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b84c, 0) 


# -- 0x0000b84c e8 5f 79 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b851;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000b851, 0)


# -- 0x0000b851 eb 01                                  jmp 0xb854
 0: goto (0x0000b854, 0) 


# -- 0x0000b853 90                                     nop
 0: goto (0x0000b854, 0) 


# -- 0x0000b854 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b858, 0) 


# -- 0x0000b858 48 8b 40 28                            mov 0x28(%rax),%rax
 0: %%0<64> := @[(rax<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b85c, 0) 


# -- 0x0000b85c 48 89 45 90                            mov %rax,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),8] := rax<64>;
 1: goto (0x0000b860, 0) 


# -- 0x0000b860 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b864, 0) 


# -- 0x0000b864 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000b867, 0) 


# -- 0x0000b867 0f 85 38 fe ff ff                      jne 0xb6a5
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b6a5, 0) 
 2: goto (0x0000b86d, 0) 


# -- 0x0000b86d 48 83 7d 98 00                         cmpq $0x0,-0x68(%rbp)
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b872, 0) 


# -- 0x0000b872 74 17                                  je 0xb88b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b88b, 0) 
 2: goto (0x0000b874, 0) 


# -- 0x0000b874 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b878, 0) 


# -- 0x0000b878 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b87b, 0) 


# -- 0x0000b87b e8 e0 7c ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b880;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x0000b880, 0)


# -- 0x0000b880 48 c7 45 98 00 00 00 00                movq $0x0,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := 0<64>;
 1: goto (0x0000b888, 0) 


# -- 0x0000b888 eb 01                                  jmp 0xb88b
 0: goto (0x0000b88b, 0) 


# -- 0x0000b88a 90                                     nop
 0: goto (0x0000b88b, 0) 


# -- 0x0000b88b 83 45 88 01                            addl $0x1,-0x78(%rbp)
 0: %%0<64> := (rbp<64> + -120<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000b88f, 0) 


# -- 0x0000b88f 8b 45 88                               mov -0x78(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -120<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b892, 0) 


# -- 0x0000b892 48 98                                  cdtqe
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b894, 0) 


# -- 0x0000b894 48 8d 14 c5 00 00 00 00                lea 0x0(,%rax,8),%rdx
 0: %%0<64> := (rax<64> << 3<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b89c, 0) 


# -- 0x0000b89c 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8a0, 0) 


# -- 0x0000b8a0 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000b8a3, 0) 


# -- 0x0000b8a3 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8a6, 0) 


# -- 0x0000b8a6 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000b8a9, 0) 


# -- 0x0000b8a9 0f 85 d2 fc ff ff                      jne 0xb581
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b581, 0) 
 2: goto (0x0000b8af, 0) 


# -- 0x0000b8af c7 45 84 00 00 00 00                   movl $0x0,-0x7c(%rbp)
 0: @[(rbp<64> + -124<64>),4] := 0<32>;
 1: goto (0x0000b8b6, 0) 


# -- 0x0000b8b6 83 7d 84 ff                            cmpl $0xffffffff,-0x7c(%rbp)
 0: %%0<32> := @[(rbp<64> + -124<64>),4];
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b8ba, 0) 


# -- 0x0000b8ba 75 11                                  jne 0xb8cd
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b8cd, 0) 
 2: goto (0x0000b8bc, 0) 


# -- 0x0000b8bc 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8bf, 0) 


# -- 0x0000b8bf 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b8c1, 0) 


# -- 0x0000b8c1 78 0a                                  js 0xb8cd
 0: if sf<1> goto 1 else goto 2
 1: goto (0x0000b8cd, 0) 
 2: goto (0x0000b8c3, 0) 


# -- 0x0000b8c3 8b 45 80                               mov -0x80(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -128<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8c6, 0) 


# -- 0x0000b8c6 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b8c8, 0) 


# -- 0x0000b8c8 e8 d3 76 ff ff                         call 0x2fa0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b8cd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fa0, 0) #call with return address @ (0x0000b8cd, 0)


# -- 0x0000b8cd 48 83 7d 98 00                         cmpq $0x0,-0x68(%rbp)
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b8d2, 0) 


# -- 0x0000b8d2 74 0c                                  je 0xb8e0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b8e0, 0) 
 2: goto (0x0000b8d4, 0) 


# -- 0x0000b8d4 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8d8, 0) 


# -- 0x0000b8d8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b8db, 0) 


# -- 0x0000b8db e8 80 7c ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b8e0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x0000b8e0, 0)


# -- 0x0000b8e0 8b 45 84                               mov -0x7c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -124<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b8e3, 0) 


# -- 0x0000b8e3 48 8b 5d e8                            mov -0x18(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000b8e7, 0) 


# -- 0x0000b8e7 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x0000b8f0, 0) 


# -- 0x0000b8f0 74 05                                  je 0xb8f7
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b8f7, 0) 
 2: goto (0x0000b8f2, 0) 


# -- 0x0000b8f2 e8 79 75 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b8f7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000b8f7, 0)


# -- 0x0000b8f7 48 81 c4 98 00 00 00                   add $0x98,%rsp
 0: %%0<64> := (rsp<64> + 152<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b8fe, 0) 


# -- 0x0000b8fe 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000b8ff, 0) 


# -- 0x0000b8ff 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000b900, 0) 


# -- 0x0000b900 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000b901 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b902, 0) 


# -- 0x0000b902 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000b905, 0) 


# -- 0x0000b905 48 81 ec e0 00 00 00                   sub $0xe0,%rsp
 0: %%0<64> := (rsp<64> - 224<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000b90c, 0) 


# -- 0x0000b90c 48 89 bd 48 ff ff ff                   mov %rdi,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),8] := rdi<64>;
 1: goto (0x0000b913, 0) 


# -- 0x0000b913 48 89 b5 40 ff ff ff                   mov %rsi,-0xc0(%rbp)
 0: @[(rbp<64> + -192<64>),8] := rsi<64>;
 1: goto (0x0000b91a, 0) 


# -- 0x0000b91a 48 89 95 38 ff ff ff                   mov %rdx,-0xc8(%rbp)
 0: @[(rbp<64> + -200<64>),8] := rdx<64>;
 1: goto (0x0000b921, 0) 


# -- 0x0000b921 48 89 8d 30 ff ff ff                   mov %rcx,-0xd0(%rbp)
 0: @[(rbp<64> + -208<64>),8] := rcx<64>;
 1: goto (0x0000b928, 0) 


# -- 0x0000b928 44 89 85 2c ff ff ff                   mov %r8d,-0xd4(%rbp)
 0: @[(rbp<64> + -212<64>),4] := r8<64>{0,31};
 1: goto (0x0000b92f, 0) 


# -- 0x0000b92f 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b938, 0) 


# -- 0x0000b938 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000b93c, 0) 


# -- 0x0000b93c 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000b93e, 0) 


# -- 0x0000b93e 48 83 bd 30 ff ff ff 00                cmpq $0x0,-0xd0(%rbp)
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b946, 0) 


# -- 0x0000b946 74 6b                                  je 0xb9b3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000b9b3, 0) 
 2: goto (0x0000b948, 0) 


# -- 0x0000b948 48 c7 85 58 ff ff ff 00 00 00 00       movq $0x0,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := 0<64>;
 1: goto (0x0000b953, 0) 


# -- 0x0000b953 48 8d 95 58 ff ff ff                   lea -0xa8(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -168<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b95a, 0) 


# -- 0x0000b95a 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b961, 0) 


# -- 0x0000b961 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b964, 0) 


# -- 0x0000b964 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b967, 0) 


# -- 0x0000b967 e8 47 f9 ff ff                         call 0xb2b3
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b96c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b2b3, 0) #call with return address @ (0x0000b96c, 0)


# -- 0x0000b96c 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b96f, 0) 


# -- 0x0000b96f 75 42                                  jne 0xb9b3
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b9b3, 0) 
 2: goto (0x0000b971, 0) 


# -- 0x0000b971 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b978, 0) 


# -- 0x0000b978 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b97c, 0) 


# -- 0x0000b97c 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b97f, 0) 


# -- 0x0000b97f 48 8d 15 4c 39 00 00                   lea 0x394c(%rip),%rdx
 0: rdx<64> := 0x000000000000f2d2;
 1: goto (0x0000b986, 0) 


# -- 0x0000b986 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000b98b, 0) 


# -- 0x0000b98b bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000b990, 0) 


# -- 0x0000b990 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000b995, 0) 


# -- 0x0000b995 e8 06 79 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b99a;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000b99a, 0)


# -- 0x0000b99a 48 8d 85 58 ff ff ff                   lea -0xa8(%rbp),%rax
 0: %%0<64> := (rbp<64> + -168<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b9a1, 0) 


# -- 0x0000b9a1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b9a4, 0) 


# -- 0x0000b9a4 e8 77 7a ff ff                         call 0x3420
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b9a9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003420, 0) #call with return address @ (0x0000b9a9, 0)


# -- 0x0000b9a9 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000b9ae, 0) 


# -- 0x0000b9ae e8 9d 7a ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b9b3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000b9b3, 0)


# -- 0x0000b9b3 8b 85 2c ff ff ff                      mov -0xd4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -212<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000b9b9, 0) 


# -- 0x0000b9b9 83 e0 08                               and $0x8,%eax
 0: %%0<32> := (8<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{3});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000b9bc, 0) 


# -- 0x0000b9bc 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000b9be, 0) 


# -- 0x0000b9be 75 0a                                  jne 0xb9ca
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000b9ca, 0) 
 2: goto (0x0000b9c0, 0) 


# -- 0x0000b9c0 48 83 bd 30 ff ff ff 00                cmpq $0x0,-0xd0(%rbp)
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000b9c8, 0) 


# -- 0x0000b9c8 75 72                                  jne 0xba3c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ba3c, 0) 
 2: goto (0x0000b9ca, 0) 


# -- 0x0000b9ca 48 c7 85 58 ff ff ff 00 00 00 00       movq $0x0,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := 0<64>;
 1: goto (0x0000b9d5, 0) 


# -- 0x0000b9d5 48 8d 95 58 ff ff ff                   lea -0xa8(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -168<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000b9dc, 0) 


# -- 0x0000b9dc 48 8b 8d 38 ff ff ff                   mov -0xc8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000b9e3, 0) 


# -- 0x0000b9e3 48 8b 85 40 ff ff ff                   mov -0xc0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -192<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000b9ea, 0) 


# -- 0x0000b9ea 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000b9ed, 0) 


# -- 0x0000b9ed 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000b9f0, 0) 


# -- 0x0000b9f0 e8 e8 fa ff ff                         call 0xb4dd
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000b9f5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b4dd, 0) #call with return address @ (0x0000b9f5, 0)


# -- 0x0000b9f5 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000b9f8, 0) 


# -- 0x0000b9f8 75 42                                  jne 0xba3c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ba3c, 0) 
 2: goto (0x0000b9fa, 0) 


# -- 0x0000b9fa 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba01, 0) 


# -- 0x0000ba01 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba05, 0) 


# -- 0x0000ba05 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ba08, 0) 


# -- 0x0000ba08 48 8d 15 c3 38 00 00                   lea 0x38c3(%rip),%rdx
 0: rdx<64> := 0x000000000000f2d2;
 1: goto (0x0000ba0f, 0) 


# -- 0x0000ba0f be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000ba14, 0) 


# -- 0x0000ba14 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000ba19, 0) 


# -- 0x0000ba19 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ba1e, 0) 


# -- 0x0000ba1e e8 7d 78 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ba23;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000ba23, 0)


# -- 0x0000ba23 48 8d 85 58 ff ff ff                   lea -0xa8(%rbp),%rax
 0: %%0<64> := (rbp<64> + -168<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba2a, 0) 


# -- 0x0000ba2a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ba2d, 0) 


# -- 0x0000ba2d e8 ee 79 ff ff                         call 0x3420
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ba32;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003420, 0) #call with return address @ (0x0000ba32, 0)


# -- 0x0000ba32 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000ba37, 0) 


# -- 0x0000ba37 e8 14 7a ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ba3c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000ba3c, 0)


# -- 0x0000ba3c 48 8d 0d 1f e7 ff ff                   lea -0x18e1(%rip),%rcx
 0: rcx<64> := 0x000000000000a162;
 1: goto (0x0000ba43, 0) 


# -- 0x0000ba43 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000ba48, 0) 


# -- 0x0000ba48 48 8b 05 91 55 20 00                   mov 0x205591(%rip),%rax
 0: %%0<64> := @[0x0000000000210fe0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba4f, 0) 


# -- 0x0000ba4f 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ba52, 0) 


# -- 0x0000ba52 48 8b 05 7f 55 20 00                   mov 0x20557f(%rip),%rax
 0: %%0<64> := @[0x0000000000210fd8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba59, 0) 


# -- 0x0000ba59 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ba5c, 0) 


# -- 0x0000ba5c e8 df 76 ff ff                         call 0x3140
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ba61;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003140, 0) #call with return address @ (0x0000ba61, 0)


# -- 0x0000ba61 48 89 05 18 59 20 00                   mov %rax,0x205918(%rip)
 0: @[0x0000000000211380,8] := rax<64>;
 1: goto (0x0000ba68, 0) 


# -- 0x0000ba68 48 8d 05 ac a3 ff ff                   lea -0x5c54(%rip),%rax
 0: rax<64> := 0x0000000000005e1b;
 1: goto (0x0000ba6f, 0) 


# -- 0x0000ba6f 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000ba76, 0) 


# -- 0x0000ba76 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba7d, 0) 


# -- 0x0000ba7d 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000ba81, 0) 


# -- 0x0000ba81 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ba84, 0) 


# -- 0x0000ba84 e8 a7 76 ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ba89;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000ba89, 0)


# -- 0x0000ba89 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ba90, 0) 


# -- 0x0000ba90 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000ba94, 0) 


# -- 0x0000ba94 be 0f 00 00 00                         mov $0xf,%esi
 0: rsi<64> := 15<64>;
 1: goto (0x0000ba99, 0) 


# -- 0x0000ba99 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ba9c, 0) 


# -- 0x0000ba9c e8 5f 7a ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000baa1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000baa1, 0)


# -- 0x0000baa1 c7 45 e8 00 00 00 10                   movl $0x10000000,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := 0x10000000;
 1: goto (0x0000baa8, 0) 


# -- 0x0000baa8 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000baaf, 0) 


# -- 0x0000baaf ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000bab4, 0) 


# -- 0x0000bab4 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bab7, 0) 


# -- 0x0000bab7 bf 11 00 00 00                         mov $0x11,%edi
 0: rdi<64> := 17<64>;
 1: goto (0x0000babc, 0) 


# -- 0x0000babc e8 af 72 ff ff                         call 0x2d70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bac1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d70, 0) #call with return address @ (0x0000bac1, 0)


# -- 0x0000bac1 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000bac4, 0) 


# -- 0x0000bac4 75 0c                                  jne 0xbad2
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bad2, 0) 
 2: goto (0x0000bac6, 0) 


# -- 0x0000bac6 48 8d 3d 21 38 00 00                   lea 0x3821(%rip),%rdi
 0: rdi<64> := 0x000000000000f2ee;
 1: goto (0x0000bacd, 0) 


# -- 0x0000bacd e8 66 1b 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bad2;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bad2, 0)


# -- 0x0000bad2 48 8d 05 87 a3 ff ff                   lea -0x5c79(%rip),%rax
 0: rax<64> := 0x0000000000005e60;
 1: goto (0x0000bad9, 0) 


# -- 0x0000bad9 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000bae0, 0) 


# -- 0x0000bae0 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bae7, 0) 


# -- 0x0000bae7 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000baeb, 0) 


# -- 0x0000baeb 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000baee, 0) 


# -- 0x0000baee e8 3d 76 ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000baf3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000baf3, 0)


# -- 0x0000baf3 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bafa, 0) 


# -- 0x0000bafa 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000bafe, 0) 


# -- 0x0000bafe be 11 00 00 00                         mov $0x11,%esi
 0: rsi<64> := 17<64>;
 1: goto (0x0000bb03, 0) 


# -- 0x0000bb03 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bb06, 0) 


# -- 0x0000bb06 e8 f5 79 ff ff                         call 0x3500
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb0b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003500, 0) #call with return address @ (0x0000bb0b, 0)


# -- 0x0000bb0b c7 45 e8 00 00 00 10                   movl $0x10000000,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := 0x10000000;
 1: goto (0x0000bb12, 0) 


# -- 0x0000bb12 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bb19, 0) 


# -- 0x0000bb19 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000bb1e, 0) 


# -- 0x0000bb1e 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bb21, 0) 


# -- 0x0000bb21 bf 0f 00 00 00                         mov $0xf,%edi
 0: rdi<64> := 15<64>;
 1: goto (0x0000bb26, 0) 


# -- 0x0000bb26 e8 45 72 ff ff                         call 0x2d70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb2b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d70, 0) #call with return address @ (0x0000bb2b, 0)


# -- 0x0000bb2b 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000bb2e, 0) 


# -- 0x0000bb2e 75 0c                                  jne 0xbb3c
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bb3c, 0) 
 2: goto (0x0000bb30, 0) 


# -- 0x0000bb30 48 8d 3d b7 37 00 00                   lea 0x37b7(%rip),%rdi
 0: rdi<64> := 0x000000000000f2ee;
 1: goto (0x0000bb37, 0) 


# -- 0x0000bb37 e8 fc 1a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb3c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bb3c, 0)


# -- 0x0000bb3c 48 8d 05 31 a3 ff ff                   lea -0x5ccf(%rip),%rax
 0: rax<64> := 0x0000000000005e74;
 1: goto (0x0000bb43, 0) 


# -- 0x0000bb43 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000bb4a, 0) 


# -- 0x0000bb4a 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bb51, 0) 


# -- 0x0000bb51 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000bb55, 0) 


# -- 0x0000bb55 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bb58, 0) 


# -- 0x0000bb58 e8 d3 75 ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb5d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000bb5d, 0)


# -- 0x0000bb5d c7 45 e8 00 00 00 10                   movl $0x10000000,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := 0x10000000;
 1: goto (0x0000bb64, 0) 


# -- 0x0000bb64 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bb6b, 0) 


# -- 0x0000bb6b ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000bb70, 0) 


# -- 0x0000bb70 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bb73, 0) 


# -- 0x0000bb73 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000bb78, 0) 


# -- 0x0000bb78 e8 f3 71 ff ff                         call 0x2d70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb7d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d70, 0) #call with return address @ (0x0000bb7d, 0)


# -- 0x0000bb7d 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000bb80, 0) 


# -- 0x0000bb80 75 0c                                  jne 0xbb8e
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bb8e, 0) 
 2: goto (0x0000bb82, 0) 


# -- 0x0000bb82 48 8d 3d 65 37 00 00                   lea 0x3765(%rip),%rdi
 0: rdi<64> := 0x000000000000f2ee;
 1: goto (0x0000bb89, 0) 


# -- 0x0000bb89 e8 aa 1a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bb8e;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bb8e, 0)


# -- 0x0000bb8e 48 8d 05 f3 a2 ff ff                   lea -0x5d0d(%rip),%rax
 0: rax<64> := 0x0000000000005e88;
 1: goto (0x0000bb95, 0) 


# -- 0x0000bb95 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000bb9c, 0) 


# -- 0x0000bb9c 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bba3, 0) 


# -- 0x0000bba3 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000bba7, 0) 


# -- 0x0000bba7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bbaa, 0) 


# -- 0x0000bbaa e8 81 75 ff ff                         call 0x3130
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bbaf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003130, 0) #call with return address @ (0x0000bbaf, 0)


# -- 0x0000bbaf c7 45 e8 00 00 00 10                   movl $0x10000000,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := 0x10000000;
 1: goto (0x0000bbb6, 0) 


# -- 0x0000bbb6 48 8d 85 60 ff ff ff                   lea -0xa0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bbbd, 0) 


# -- 0x0000bbbd ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000bbc2, 0) 


# -- 0x0000bbc2 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bbc5, 0) 


# -- 0x0000bbc5 bf 0a 00 00 00                         mov $0xa,%edi
 0: rdi<64> := 10<64>;
 1: goto (0x0000bbca, 0) 


# -- 0x0000bbca e8 a1 71 ff ff                         call 0x2d70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bbcf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d70, 0) #call with return address @ (0x0000bbcf, 0)


# -- 0x0000bbcf 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000bbd2, 0) 


# -- 0x0000bbd2 75 0c                                  jne 0xbbe0
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bbe0, 0) 
 2: goto (0x0000bbd4, 0) 


# -- 0x0000bbd4 48 8d 3d 13 37 00 00                   lea 0x3713(%rip),%rdi
 0: rdi<64> := 0x000000000000f2ee;
 1: goto (0x0000bbdb, 0) 


# -- 0x0000bbdb e8 58 1a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bbe0;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bbe0, 0)


# -- 0x0000bbe0 90                                     nop
 0: goto (0x0000bbe1, 0) 


# -- 0x0000bbe1 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bbe5, 0) 


# -- 0x0000bbe5 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x0000bbee, 0) 


# -- 0x0000bbee 74 05                                  je 0xbbf5
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bbf5, 0) 
 2: goto (0x0000bbf0, 0) 


# -- 0x0000bbf0 e8 7b 72 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bbf5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000bbf5, 0)


# -- 0x0000bbf5 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000bbf6, 0) 


# -- 0x0000bbf6 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000bbf7 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000bbf8, 0) 


# -- 0x0000bbf8 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000bbfb, 0) 


# -- 0x0000bbfb 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000bbff, 0) 


# -- 0x0000bbff be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000bc04, 0) 


# -- 0x0000bc04 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000bc09, 0) 


# -- 0x0000bc09 e8 62 76 ff ff                         call 0x3270
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc0e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003270, 0) #call with return address @ (0x0000bc0e, 0)


# -- 0x0000bc0e 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bc10, 0) 


# -- 0x0000bc10 79 0c                                  jns 0xbc1e
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000bc1e, 0) 
 2: goto (0x0000bc12, 0) 


# -- 0x0000bc12 48 8d 3d e3 36 00 00                   lea 0x36e3(%rip),%rdi
 0: rdi<64> := 0x000000000000f2fc;
 1: goto (0x0000bc19, 0) 


# -- 0x0000bc19 e8 1a 1a 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc1e;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bc1e, 0)


# -- 0x0000bc1e 0f b6 05 5b 56 20 00                   movzbl 0x20565b(%rip),%eax
 0: %%0<64> := (extu @[0x0000000000211280,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bc25, 0) 


# -- 0x0000bc25 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bc27, 0) 


# -- 0x0000bc27 75 18                                  jne 0xbc41
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bc41, 0) 
 2: goto (0x0000bc29, 0) 


# -- 0x0000bc29 ba ff 00 00 00                         mov $0xff,%edx
 0: rdx<64> := 255<64>;
 1: goto (0x0000bc2e, 0) 


# -- 0x0000bc2e 48 8d 35 ce 36 00 00                   lea 0x36ce(%rip),%rsi
 0: rsi<64> := 0x000000000000f303;
 1: goto (0x0000bc35, 0) 


# -- 0x0000bc35 48 8d 3d 44 56 20 00                   lea 0x205644(%rip),%rdi
 0: rdi<64> := 0x0000000000211280;
 1: goto (0x0000bc3c, 0) 


# -- 0x0000bc3c e8 7f 70 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc41;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000bc41, 0)


# -- 0x0000bc41 48 8d 35 d3 36 00 00                   lea 0x36d3(%rip),%rsi
 0: rsi<64> := 0x000000000000f31b;
 1: goto (0x0000bc48, 0) 


# -- 0x0000bc48 48 8d 3d 31 56 20 00                   lea 0x205631(%rip),%rdi
 0: rdi<64> := 0x0000000000211280;
 1: goto (0x0000bc4f, 0) 


# -- 0x0000bc4f e8 0c 75 ff ff                         call 0x3160
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc54;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003160, 0) #call with return address @ (0x0000bc54, 0)


# -- 0x0000bc54 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000bc58, 0) 


# -- 0x0000bc58 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bc5d, 0) 


# -- 0x0000bc5d 74 2d                                  je 0xbc8c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bc8c, 0) 
 2: goto (0x0000bc5f, 0) 


# -- 0x0000bc5f e8 6c 71 ff ff                         call 0x2dd0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc64;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002dd0, 0) #call with return address @ (0x0000bc64, 0)


# -- 0x0000bc64 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000bc66, 0) 


# -- 0x0000bc66 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bc6a, 0) 


# -- 0x0000bc6a 48 8d 35 ac 36 00 00                   lea 0x36ac(%rip),%rsi
 0: rsi<64> := 0x000000000000f31d;
 1: goto (0x0000bc71, 0) 


# -- 0x0000bc71 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bc74, 0) 


# -- 0x0000bc74 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000bc79, 0) 


# -- 0x0000bc79 e8 92 74 ff ff                         call 0x3110
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc7e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003110, 0) #call with return address @ (0x0000bc7e, 0)


# -- 0x0000bc7e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bc82, 0) 


# -- 0x0000bc82 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bc85, 0) 


# -- 0x0000bc85 e8 86 71 ff ff                         call 0x2e10
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc8a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e10, 0) #call with return address @ (0x0000bc8a, 0)


# -- 0x0000bc8a eb 2c                                  jmp 0xbcb8
 0: goto (0x0000bcb8, 0) 


# -- 0x0000bc8c 48 8d 3d 8e 36 00 00                   lea 0x368e(%rip),%rdi
 0: rdi<64> := 0x000000000000f321;
 1: goto (0x0000bc93, 0) 


# -- 0x0000bc93 e8 38 77 ff ff                         call 0x33d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bc98;
 2: rsp<64> := %%0<64>;
 3: goto (0x000033d0, 0) #call with return address @ (0x0000bc98, 0)


# -- 0x0000bc98 48 8b 05 21 55 20 00                   mov 0x205521(%rip),%rax
 0: %%0<64> := @[0x00000000002111c0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bc9f, 0) 


# -- 0x0000bc9f 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000bca2, 0) 


# -- 0x0000bca2 ba 15 00 00 00                         mov $0x15,%edx
 0: rdx<64> := 21<64>;
 1: goto (0x0000bca7, 0) 


# -- 0x0000bca7 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000bcac, 0) 


# -- 0x0000bcac 48 8d 3d 74 36 00 00                   lea 0x3674(%rip),%rdi
 0: rdi<64> := 0x000000000000f327;
 1: goto (0x0000bcb3, 0) 


# -- 0x0000bcb3 e8 a8 77 ff ff                         call 0x3460
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bcb8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003460, 0) #call with return address @ (0x0000bcb8, 0)


# -- 0x0000bcb8 90                                     nop
 0: goto (0x0000bcb9, 0) 


# -- 0x0000bcb9 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000bcba, 0) 


# -- 0x0000bcba c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000bcbb 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000bcbc, 0) 


# -- 0x0000bcbc 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000bcbf, 0) 


# -- 0x0000bcbf 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000bcc3, 0) 


# -- 0x0000bcc3 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x0000bcc7, 0) 


# -- 0x0000bcc7 48 89 75 d0                            mov %rsi,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rsi<64>;
 1: goto (0x0000bccb, 0) 


# -- 0x0000bccb 48 83 7d d0 00                         cmpq $0x0,-0x30(%rbp)
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bcd0, 0) 


# -- 0x0000bcd0 74 5d                                  je 0xbd2f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bd2f, 0) 
 2: goto (0x0000bcd2, 0) 


# -- 0x0000bcd2 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bcd6, 0) 


# -- 0x0000bcd6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bcd9, 0) 


# -- 0x0000bcd9 e8 c2 74 ff ff                         call 0x31a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bcde;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031a0, 0) #call with return address @ (0x0000bcde, 0)


# -- 0x0000bcde 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000bce2, 0) 


# -- 0x0000bce2 48 83 7d e8 00                         cmpq $0x0,-0x18(%rbp)
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bce7, 0) 


# -- 0x0000bce7 75 28                                  jne 0xbd11
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bd11, 0) 
 2: goto (0x0000bce9, 0) 


# -- 0x0000bce9 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bced, 0) 


# -- 0x0000bced 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bcf0, 0) 


# -- 0x0000bcf0 48 8d 3d 46 36 00 00                   lea 0x3646(%rip),%rdi
 0: rdi<64> := 0x000000000000f33d;
 1: goto (0x0000bcf7, 0) 


# -- 0x0000bcf7 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000bcfc, 0) 


# -- 0x0000bcfc e8 ef 73 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd01;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000bd01, 0)


# -- 0x0000bd01 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x0000bd05, 0) 


# -- 0x0000bd05 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd09, 0) 


# -- 0x0000bd09 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bd0c, 0) 


# -- 0x0000bd0c e8 27 19 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd11;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bd11, 0)


# -- 0x0000bd11 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd15, 0) 


# -- 0x0000bd15 8b 40 10                               mov 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd18, 0) 


# -- 0x0000bd18 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bd1a, 0) 


# -- 0x0000bd1a e8 51 76 ff ff                         call 0x3370
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd1f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003370, 0) #call with return address @ (0x0000bd1f, 0)


# -- 0x0000bd1f 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bd21, 0) 


# -- 0x0000bd21 79 0c                                  jns 0xbd2f
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000bd2f, 0) 
 2: goto (0x0000bd23, 0) 


# -- 0x0000bd23 48 8d 3d 2a 36 00 00                   lea 0x362a(%rip),%rdi
 0: rdi<64> := 0x000000000000f354;
 1: goto (0x0000bd2a, 0) 


# -- 0x0000bd2a e8 09 19 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd2f;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bd2f, 0)


# -- 0x0000bd2f 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bd34, 0) 


# -- 0x0000bd34 74 6c                                  je 0xbda2
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bda2, 0) 
 2: goto (0x0000bd36, 0) 


# -- 0x0000bd36 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd3a, 0) 


# -- 0x0000bd3a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bd3d, 0) 


# -- 0x0000bd3d e8 9e 73 ff ff                         call 0x30e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd42;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030e0, 0) #call with return address @ (0x0000bd42, 0)


# -- 0x0000bd42 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000bd46, 0) 


# -- 0x0000bd46 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bd4b, 0) 


# -- 0x0000bd4b 75 28                                  jne 0xbd75
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bd75, 0) 
 2: goto (0x0000bd4d, 0) 


# -- 0x0000bd4d 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd51, 0) 


# -- 0x0000bd51 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bd54, 0) 


# -- 0x0000bd54 48 8d 3d 0f 36 00 00                   lea 0x360f(%rip),%rdi
 0: rdi<64> := 0x000000000000f36a;
 1: goto (0x0000bd5b, 0) 


# -- 0x0000bd5b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000bd60, 0) 


# -- 0x0000bd60 e8 8b 73 ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd65;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000bd65, 0)


# -- 0x0000bd65 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x0000bd69, 0) 


# -- 0x0000bd69 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd6d, 0) 


# -- 0x0000bd6d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bd70, 0) 


# -- 0x0000bd70 e8 c3 18 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd75;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bd75, 0)


# -- 0x0000bd75 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000bd7a, 0) 


# -- 0x0000bd7a bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000bd7f, 0) 


# -- 0x0000bd7f e8 2c 72 ff ff                         call 0x2fb0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd84;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002fb0, 0) #call with return address @ (0x0000bd84, 0)


# -- 0x0000bd84 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd88, 0) 


# -- 0x0000bd88 8b 40 10                               mov 0x10(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 16<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bd8b, 0) 


# -- 0x0000bd8b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bd8d, 0) 


# -- 0x0000bd8d e8 ee 76 ff ff                         call 0x3480
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bd92;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003480, 0) #call with return address @ (0x0000bd92, 0)


# -- 0x0000bd92 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bd94, 0) 


# -- 0x0000bd94 79 0c                                  jns 0xbda2
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000bda2, 0) 
 2: goto (0x0000bd96, 0) 


# -- 0x0000bd96 48 8d 3d e3 35 00 00                   lea 0x35e3(%rip),%rdi
 0: rdi<64> := 0x000000000000f380;
 1: goto (0x0000bd9d, 0) 


# -- 0x0000bd9d e8 96 18 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bda2;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000bda2, 0)


# -- 0x0000bda2 90                                     nop
 0: goto (0x0000bda3, 0) 


# -- 0x0000bda3 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000bda4, 0) 


# -- 0x0000bda4 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000bda5 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000bda6, 0) 


# -- 0x0000bda6 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000bda9, 0) 


# -- 0x0000bda9 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000bdad, 0) 


# -- 0x0000bdad 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000bdb1, 0) 


# -- 0x0000bdb1 89 75 e4                               mov %esi,-0x1c(%rbp)
 0: @[(rbp<64> + -28<64>),4] := rsi<64>{0,31};
 1: goto (0x0000bdb4, 0) 


# -- 0x0000bdb4 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x0000bdb8, 0) 


# -- 0x0000bdb8 48 89 4d d0                            mov %rcx,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rcx<64>;
 1: goto (0x0000bdbc, 0) 


# -- 0x0000bdbc c7 45 fc 07 00 00 00                   movl $0x7,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 7<32>;
 1: goto (0x0000bdc3, 0) 


# -- 0x0000bdc3 8b 45 e4                               mov -0x1c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -28<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bdc6, 0) 


# -- 0x0000bdc6 83 f8 10                               cmp $0x10,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 16<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdc9, 0) 


# -- 0x0000bdc9 74 32                                  je 0xbdfd
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bdfd, 0) 
 2: goto (0x0000bdcb, 0) 


# -- 0x0000bdcb 83 f8 10                               cmp $0x10,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 16<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdce, 0) 


# -- 0x0000bdce 7f 11                                  jg 0xbde1
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000bde1, 0) 
 2: goto (0x0000bdd0, 0) 


# -- 0x0000bdd0 83 f8 04                               cmp $0x4,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 4<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdd3, 0) 


# -- 0x0000bdd3 74 1f                                  je 0xbdf4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bdf4, 0) 
 2: goto (0x0000bdd5, 0) 


# -- 0x0000bdd5 83 f8 08                               cmp $0x8,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 8<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdd8, 0) 


# -- 0x0000bdd8 74 1a                                  je 0xbdf4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bdf4, 0) 
 2: goto (0x0000bdda, 0) 


# -- 0x0000bdda 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bddd, 0) 


# -- 0x0000bddd 74 15                                  je 0xbdf4
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bdf4, 0) 
 2: goto (0x0000bddf, 0) 


# -- 0x0000bddf eb 37                                  jmp 0xbe18
 0: goto (0x0000be18, 0) 


# -- 0x0000bde1 83 f8 40                               cmp $0x40,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 64<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bde4, 0) 


# -- 0x0000bde4 74 20                                  je 0xbe06
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000be06, 0) 
 2: goto (0x0000bde6, 0) 


# -- 0x0000bde6 3d 80 00 00 00                         cmp $0x80,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 128<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdeb, 0) 


# -- 0x0000bdeb 74 22                                  je 0xbe0f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000be0f, 0) 
 2: goto (0x0000bded, 0) 


# -- 0x0000bded 83 f8 20                               cmp $0x20,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 32<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bdf0, 0) 


# -- 0x0000bdf0 74 14                                  je 0xbe06
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000be06, 0) 
 2: goto (0x0000bdf2, 0) 


# -- 0x0000bdf2 eb 24                                  jmp 0xbe18
 0: goto (0x0000be18, 0) 


# -- 0x0000bdf4 c7 45 fc 03 00 00 00                   movl $0x3,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 3<32>;
 1: goto (0x0000bdfb, 0) 


# -- 0x0000bdfb eb 22                                  jmp 0xbe1f
 0: goto (0x0000be1f, 0) 


# -- 0x0000bdfd c7 45 fc 04 00 00 00                   movl $0x4,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 4<32>;
 1: goto (0x0000be04, 0) 


# -- 0x0000be04 eb 19                                  jmp 0xbe1f
 0: goto (0x0000be1f, 0) 


# -- 0x0000be06 c7 45 fc 06 00 00 00                   movl $0x6,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 6<32>;
 1: goto (0x0000be0d, 0) 


# -- 0x0000be0d eb 10                                  jmp 0xbe1f
 0: goto (0x0000be1f, 0) 


# -- 0x0000be0f c7 45 fc 07 00 00 00                   movl $0x7,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 7<32>;
 1: goto (0x0000be16, 0) 


# -- 0x0000be16 eb 07                                  jmp 0xbe1f
 0: goto (0x0000be1f, 0) 


# -- 0x0000be18 c7 45 fc 03 00 00 00                   movl $0x3,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 3<32>;
 1: goto (0x0000be1f, 0) 


# -- 0x0000be1f 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000be23, 0) 


# -- 0x0000be23 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000be26, 0) 


# -- 0x0000be26 48 8d 35 69 35 00 00                   lea 0x3569(%rip),%rsi
 0: rsi<64> := 0x000000000000f396;
 1: goto (0x0000be2d, 0) 


# -- 0x0000be2d 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000be2f, 0) 


# -- 0x0000be2f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000be34, 0) 


# -- 0x0000be34 e8 f7 73 ff ff                         call 0x3230
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000be39;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003230, 0) #call with return address @ (0x0000be39, 0)


# -- 0x0000be39 90                                     nop
 0: goto (0x0000be3a, 0) 


# -- 0x0000be3a c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000be3b, 0) 


# -- 0x0000be3b c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000be3c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000be3d, 0) 


# -- 0x0000be3d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000be40, 0) 


# -- 0x0000be40 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000be41, 0) 


# -- 0x0000be41 48 81 ec 98 00 00 00                   sub $0x98,%rsp
 0: %%0<64> := (rsp<64> - 152<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000be48, 0) 


# -- 0x0000be48 89 bd 6c ff ff ff                      mov %edi,-0x94(%rbp)
 0: @[(rbp<64> + -148<64>),4] := rdi<64>{0,31};
 1: goto (0x0000be4e, 0) 


# -- 0x0000be4e 48 89 b5 60 ff ff ff                   mov %rsi,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rsi<64>;
 1: goto (0x0000be55, 0) 


# -- 0x0000be55 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000be5e, 0) 


# -- 0x0000be5e 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000be62, 0) 


# -- 0x0000be62 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000be64, 0) 


# -- 0x0000be64 48 c7 45 80 00 00 00 00                movq $0x0,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),8] := 0<64>;
 1: goto (0x0000be6c, 0) 


# -- 0x0000be6c 48 8d 45 90                            lea -0x70(%rbp),%rax
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000be70, 0) 


# -- 0x0000be70 ba 50 00 00 00                         mov $0x50,%edx
 0: rdx<64> := 80<64>;
 1: goto (0x0000be75, 0) 


# -- 0x0000be75 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000be7a, 0) 


# -- 0x0000be7a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000be7d, 0) 


# -- 0x0000be7d e8 ee 70 ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000be82;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x0000be82, 0)


# -- 0x0000be82 ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x0000be87, 0) 


# -- 0x0000be87 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000be8c, 0) 


# -- 0x0000be8c bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000be91, 0) 


# -- 0x0000be91 e8 ca 70 ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000be96;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x0000be96, 0)


# -- 0x0000be96 48 89 05 cb 53 20 00                   mov %rax,0x2053cb(%rip)
 0: @[0x0000000000211268,8] := rax<64>;
 1: goto (0x0000be9d, 0) 


# -- 0x0000be9d ba 04 00 00 00                         mov $0x4,%edx
 0: rdx<64> := 4<64>;
 1: goto (0x0000bea2, 0) 


# -- 0x0000bea2 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000bea7, 0) 


# -- 0x0000bea7 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000beac, 0) 


# -- 0x0000beac e8 af 70 ff ff                         call 0x2f60
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000beb1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f60, 0) #call with return address @ (0x0000beb1, 0)


# -- 0x0000beb1 48 89 05 a8 53 20 00                   mov %rax,0x2053a8(%rip)
 0: @[0x0000000000211260,8] := rax<64>;
 1: goto (0x0000beb8, 0) 


# -- 0x0000beb8 48 8d 3d da 34 00 00                   lea 0x34da(%rip),%rdi
 0: rdi<64> := 0x000000000000f399;
 1: goto (0x0000bebf, 0) 


# -- 0x0000bebf e8 b9 17 00 00                         call 0xd67d
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bec4;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d67d, 0) #call with return address @ (0x0000bec4, 0)


# -- 0x0000bec4 48 8d 3d c5 1e 00 00                   lea 0x1ec5(%rip),%rdi
 0: rdi<64> := 0x000000000000dd90;
 1: goto (0x0000becb, 0) 


# -- 0x0000becb e8 60 75 ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bed0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000bed0, 0)


# -- 0x0000bed0 48 89 05 99 53 20 00                   mov %rax,0x205399(%rip)
 0: @[0x0000000000211270,8] := rax<64>;
 1: goto (0x0000bed7, 0) 


# -- 0x0000bed7 48 8d 55 90                            lea -0x70(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000bedb, 0) 


# -- 0x0000bedb 48 8b 8d 60 ff ff ff                   mov -0xa0(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -160<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000bee2, 0) 


# -- 0x0000bee2 8b 85 6c ff ff ff                      mov -0x94(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -148<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bee8, 0) 


# -- 0x0000bee8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000beeb, 0) 


# -- 0x0000beeb 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000beed, 0) 


# -- 0x0000beed e8 a0 7d ff ff                         call 0x3c92
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bef2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003c92, 0) #call with return address @ (0x0000bef2, 0)


# -- 0x0000bef2 48 89 85 78 ff ff ff                   mov %rax,-0x88(%rbp)
 0: @[(rbp<64> + -136<64>),8] := rax<64>;
 1: goto (0x0000bef9, 0) 


# -- 0x0000bef9 c7 45 dc 04 00 00 00                   movl $0x4,-0x24(%rbp)
 0: @[(rbp<64> + -36<64>),4] := 4<32>;
 1: goto (0x0000bf00, 0) 


# -- 0x0000bf00 48 8b 05 69 53 20 00                   mov 0x205369(%rip),%rax
 0: %%0<64> := @[0x0000000000211270,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf07, 0) 


# -- 0x0000bf07 48 8d 55 80                            lea -0x80(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -128<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000bf0b, 0) 


# -- 0x0000bf0b 48 8d 75 90                            lea -0x70(%rbp),%rsi
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bf0f, 0) 


# -- 0x0000bf0f 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000bf12, 0) 


# -- 0x0000bf12 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000bf17, 0) 


# -- 0x0000bf17 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bf1a, 0) 


# -- 0x0000bf1a e8 05 87 ff ff                         call 0x4624
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bf1f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00004624, 0) #call with return address @ (0x0000bf1f, 0)


# -- 0x0000bf1f 48 89 45 88                            mov %rax,-0x78(%rbp)
 0: @[(rbp<64> + -120<64>),8] := rax<64>;
 1: goto (0x0000bf23, 0) 


# -- 0x0000bf23 8b 55 d8                               mov -0x28(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000bf26, 0) 


# -- 0x0000bf26 8b 05 b4 52 20 00                      mov 0x2052b4(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e0,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf2c, 0) 


# -- 0x0000bf2c 09 d0                                  or %edx,%eax
 0: %%0<32> := (rax<64>{0,31} | rdx<64>{0,31});
 1: %%1<1> :=
     !
     (((((rax<64>{0} | rdx<64>{0}) ^ (rax<64>{4} | rdx<64>{4})) ^
        ((rax<64>{2} | rdx<64>{2}) ^ (rax<64>{6} | rdx<64>{6}))) ^
       (((rax<64>{1} | rdx<64>{1}) ^ (rax<64>{5} | rdx<64>{5})) ^
        ((rax<64>{3} | rdx<64>{3}) ^ (rax<64>{7} | rdx<64>{7})))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x0000bf2e, 0) 


# -- 0x0000bf2e 89 05 ac 52 20 00                      mov %eax,0x2052ac(%rip)
 0: @[0x00000000002111e0,4] := rax<64>{0,31};
 1: goto (0x0000bf34, 0) 


# -- 0x0000bf34 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf3b, 0) 


# -- 0x0000bf3b 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000bf3e, 0) 


# -- 0x0000bf3e 74 1b                                  je 0xbf5b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bf5b, 0) 
 2: goto (0x0000bf40, 0) 


# -- 0x0000bf40 48 8d 8d 78 ff ff ff                   lea -0x88(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -136<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000bf47, 0) 


# -- 0x0000bf47 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf4b, 0) 


# -- 0x0000bf4b ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000bf50, 0) 


# -- 0x0000bf50 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000bf53, 0) 


# -- 0x0000bf53 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000bf56, 0) 


# -- 0x0000bf56 e8 55 72 ff ff                         call 0x31b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bf5b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000031b0, 0) #call with return address @ (0x0000bf5b, 0)


# -- 0x0000bf5b 48 83 7d 88 00                         cmpq $0x0,-0x78(%rbp)
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000bf60, 0) 


# -- 0x0000bf60 74 0b                                  je 0xbf6d
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bf6d, 0) 
 2: goto (0x0000bf62, 0) 


# -- 0x0000bf62 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf66, 0) 


# -- 0x0000bf66 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf69, 0) 


# -- 0x0000bf69 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bf6b, 0) 


# -- 0x0000bf6b 75 62                                  jne 0xbfcf
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bfcf, 0) 
 2: goto (0x0000bf6d, 0) 


# -- 0x0000bf6d 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf71, 0) 


# -- 0x0000bf71 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000bf74, 0) 


# -- 0x0000bf74 74 59                                  je 0xbfcf
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bfcf, 0) 
 2: goto (0x0000bf76, 0) 


# -- 0x0000bf76 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf7a, 0) 


# -- 0x0000bf7a 8b 18                                  mov (%rax),%ebx
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rbx<64> := %%0<64>;
 2: goto (0x0000bf7c, 0) 


# -- 0x0000bf7c 48 8d 3d 56 20 00 00                   lea 0x2056(%rip),%rdi
 0: rdi<64> := 0x000000000000dfd9;
 1: goto (0x0000bf83, 0) 


# -- 0x0000bf83 e8 68 70 ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bf88;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000bf88, 0)


# -- 0x0000bf88 39 c3                                  cmp %eax,%ebx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rbx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000bf8a, 0) 


# -- 0x0000bf8a 75 0b                                  jne 0xbf97
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000bf97, 0) 
 2: goto (0x0000bf8c, 0) 


# -- 0x0000bf8c 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf90, 0) 


# -- 0x0000bf90 8b 40 04                               mov 0x4(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf93, 0) 


# -- 0x0000bf93 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000bf95, 0) 


# -- 0x0000bf95 74 38                                  je 0xbfcf
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bfcf, 0) 
 2: goto (0x0000bf97, 0) 


# -- 0x0000bf97 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bf9b, 0) 


# -- 0x0000bf9b 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000bf9e, 0) 


# -- 0x0000bf9e 74 0a                                  je 0xbfaa
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bfaa, 0) 
 2: goto (0x0000bfa0, 0) 


# -- 0x0000bfa0 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bfa4, 0) 


# -- 0x0000bfa4 48 8b 40 08                            mov 0x8(%rax),%rax
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bfa8, 0) 


# -- 0x0000bfa8 eb 07                                  jmp 0xbfb1
 0: goto (0x0000bfb1, 0) 


# -- 0x0000bfaa 48 8d 05 f3 33 00 00                   lea 0x33f3(%rip),%rax
 0: rax<64> := 0x000000000000f3a4;
 1: goto (0x0000bfb1, 0) 


# -- 0x0000bfb1 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000bfb4, 0) 


# -- 0x0000bfb4 48 8d 15 fd 33 00 00                   lea 0x33fd(%rip),%rdx
 0: rdx<64> := 0x000000000000f3b8;
 1: goto (0x0000bfbb, 0) 


# -- 0x0000bfbb be 10 00 00 00                         mov $0x10,%esi
 0: rsi<64> := 16<64>;
 1: goto (0x0000bfc0, 0) 


# -- 0x0000bfc0 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000bfc5, 0) 


# -- 0x0000bfc5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000bfca, 0) 


# -- 0x0000bfca e8 d1 72 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bfcf;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000bfcf, 0)


# -- 0x0000bfcf 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bfd6, 0) 


# -- 0x0000bfd6 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000bfd9, 0) 


# -- 0x0000bfd9 74 1b                                  je 0xbff6
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000bff6, 0) 
 2: goto (0x0000bfdb, 0) 


# -- 0x0000bfdb 48 8d 15 f6 33 00 00                   lea 0x33f6(%rip),%rdx
 0: rdx<64> := 0x000000000000f3d8;
 1: goto (0x0000bfe2, 0) 


# -- 0x0000bfe2 be 10 00 00 00                         mov $0x10,%esi
 0: rsi<64> := 16<64>;
 1: goto (0x0000bfe7, 0) 


# -- 0x0000bfe7 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000bfec, 0) 


# -- 0x0000bfec b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000bff1, 0) 


# -- 0x0000bff1 e8 aa 72 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000bff6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000bff6, 0)


# -- 0x0000bff6 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000bffd, 0) 


# -- 0x0000bffd 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c000, 0) 


# -- 0x0000c000 75 40                                  jne 0xc042
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c042, 0) 
 2: goto (0x0000c002, 0) 


# -- 0x0000c002 48 83 7d 88 00                         cmpq $0x0,-0x78(%rbp)
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c007, 0) 


# -- 0x0000c007 74 0b                                  je 0xc014
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c014, 0) 
 2: goto (0x0000c009, 0) 


# -- 0x0000c009 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c00d, 0) 


# -- 0x0000c00d 8b 40 08                               mov 0x8(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c010, 0) 


# -- 0x0000c010 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c012, 0) 


# -- 0x0000c012 75 2e                                  jne 0xc042
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c042, 0) 
 2: goto (0x0000c014, 0) 


# -- 0x0000c014 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c018, 0) 


# -- 0x0000c018 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c01b, 0) 


# -- 0x0000c01b 74 1b                                  je 0xc038
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c038, 0) 
 2: goto (0x0000c01d, 0) 


# -- 0x0000c01d 48 8d 15 04 34 00 00                   lea 0x3404(%rip),%rdx
 0: rdx<64> := 0x000000000000f428;
 1: goto (0x0000c024, 0) 


# -- 0x0000c024 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000c029, 0) 


# -- 0x0000c029 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000c02e, 0) 


# -- 0x0000c02e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c033, 0) 


# -- 0x0000c033 e8 68 72 ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c038;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000c038, 0)


# -- 0x0000c038 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000c03d, 0) 


# -- 0x0000c03d e8 0e 74 ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c042;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000c042, 0)


# -- 0x0000c042 8b 05 9c 51 20 00                      mov 0x20519c(%rip),%eax
 0: %%0<64> := (extu @[0x00000000002111e4,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c048, 0) 


# -- 0x0000c048 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c04a, 0) 


# -- 0x0000c04a 75 0a                                  jne 0xc056
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c056, 0) 
 2: goto (0x0000c04c, 0) 


# -- 0x0000c04c b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c051, 0) 


# -- 0x0000c051 e8 a1 fb ff ff                         call 0xbbf7
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c056;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000bbf7, 0) #call with return address @ (0x0000c056, 0)


# -- 0x0000c056 8b 45 dc                               mov -0x24(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -36<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c059, 0) 


# -- 0x0000c059 41 b8 00 00 00 00                      mov $0x0,%r8d
 0: r8<64> := 0<64>;
 1: goto (0x0000c05f, 0) 


# -- 0x0000c05f b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x0000c064, 0) 


# -- 0x0000c064 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c066, 0) 


# -- 0x0000c066 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000c06b, 0) 


# -- 0x0000c06b 48 8d 3d 15 dc ff ff                   lea -0x23eb(%rip),%rdi
 0: rdi<64> := 0x0000000000009c87;
 1: goto (0x0000c072, 0) 


# -- 0x0000c072 e8 09 6f ff ff                         call 0x2f80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c077;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f80, 0) #call with return address @ (0x0000c077, 0)


# -- 0x0000c077 48 89 05 0a 53 20 00                   mov %rax,0x20530a(%rip)
 0: @[0x0000000000211388,8] := rax<64>;
 1: goto (0x0000c07e, 0) 


# -- 0x0000c07e 8b 7d d8                               mov -0x28(%rbp),%edi
 0: %%0<64> := (extu @[(rbp<64> + -40<64>),4] 64);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c081, 0) 


# -- 0x0000c081 48 8b 4d b0                            mov -0x50(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c085, 0) 


# -- 0x0000c085 48 8b 55 a8                            mov -0x58(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c089, 0) 


# -- 0x0000c089 48 8b 75 a0                            mov -0x60(%rbp),%rsi
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c08d, 0) 


# -- 0x0000c08d 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c091, 0) 


# -- 0x0000c091 41 89 f8                               mov %edi,%r8d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r8<64> := %%0<64>;
 2: goto (0x0000c094, 0) 


# -- 0x0000c094 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c097, 0) 


# -- 0x0000c097 e8 65 f8 ff ff                         call 0xb901
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c09c;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000b901, 0) #call with return address @ (0x0000c09c, 0)


# -- 0x0000c09c 48 8b 55 98                            mov -0x68(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c0a0, 0) 


# -- 0x0000c0a0 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c0a4, 0) 


# -- 0x0000c0a4 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c0a7, 0) 


# -- 0x0000c0a7 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c0aa, 0) 


# -- 0x0000c0aa e8 0c fc ff ff                         call 0xbcbb
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c0af;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000bcbb, 0) #call with return address @ (0x0000c0af, 0)


# -- 0x0000c0af 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c0b3, 0) 


# -- 0x0000c0b3 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c0b6, 0) 


# -- 0x0000c0b6 74 23                                  je 0xc0db
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c0db, 0) 
 2: goto (0x0000c0b8, 0) 


# -- 0x0000c0b8 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c0bc, 0) 


# -- 0x0000c0bc 48 8d 35 86 33 00 00                   lea 0x3386(%rip),%rsi
 0: rsi<64> := 0x000000000000f449;
 1: goto (0x0000c0c3, 0) 


# -- 0x0000c0c3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c0c6, 0) 


# -- 0x0000c0c6 e8 f5 6f ff ff                         call 0x30c0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c0cb;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030c0, 0) #call with return address @ (0x0000c0cb, 0)


# -- 0x0000c0cb 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c0cd, 0) 


# -- 0x0000c0cd 75 0c                                  jne 0xc0db
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c0db, 0) 
 2: goto (0x0000c0cf, 0) 


# -- 0x0000c0cf 48 8d 3d 75 33 00 00                   lea 0x3375(%rip),%rdi
 0: rdi<64> := 0x000000000000f44b;
 1: goto (0x0000c0d6, 0) 


# -- 0x0000c0d6 e8 5d 15 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c0db;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000c0db, 0)


# -- 0x0000c0db 48 8d 55 90                            lea -0x70(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c0df, 0) 


# -- 0x0000c0df 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c0e3, 0) 


# -- 0x0000c0e3 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c0e6, 0) 


# -- 0x0000c0e6 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c0e9, 0) 


# -- 0x0000c0e9 e8 b2 e8 ff ff                         call 0xa9a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c0ee;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000a9a0, 0) #call with return address @ (0x0000c0ee, 0)


# -- 0x0000c0ee 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0ef, 0) 


# -- 0x0000c0ef 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000c0f2, 0) 


# -- 0x0000c0f2 41 56                                  push %r14
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r14<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0f4, 0) 


# -- 0x0000c0f4 41 55                                  push %r13
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r13<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0f6, 0) 


# -- 0x0000c0f6 41 54                                  push %r12
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r12<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0f8, 0) 


# -- 0x0000c0f8 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0f9, 0) 


# -- 0x0000c0f9 48 81 ec d0 00 00 00                   sub $0xd0,%rsp
 0: %%0<64> := (rsp<64> - 208<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000c100, 0) 


# -- 0x0000c100 48 89 bd 38 ff ff ff                   mov %rdi,-0xc8(%rbp)
 0: @[(rbp<64> + -200<64>),8] := rdi<64>;
 1: goto (0x0000c107, 0) 


# -- 0x0000c107 48 89 b5 30 ff ff ff                   mov %rsi,-0xd0(%rbp)
 0: @[(rbp<64> + -208<64>),8] := rsi<64>;
 1: goto (0x0000c10e, 0) 


# -- 0x0000c10e 48 89 95 28 ff ff ff                   mov %rdx,-0xd8(%rbp)
 0: @[(rbp<64> + -216<64>),8] := rdx<64>;
 1: goto (0x0000c115, 0) 


# -- 0x0000c115 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c11e, 0) 


# -- 0x0000c11e 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000c122, 0) 


# -- 0x0000c122 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000c124, 0) 


# -- 0x0000c124 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000c127, 0) 


# -- 0x0000c127 49 89 c4                               mov %rax,%r12
 0: %%0<64> := rax<64>;
 1: r12<64> := %%0<64>;
 2: goto (0x0000c12a, 0) 


# -- 0x0000c12a 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c131, 0) 


# -- 0x0000c131 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c134, 0) 


# -- 0x0000c134 e8 17 6d ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c139;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000c139, 0)


# -- 0x0000c139 48 83 c0 01                            add $0x1,%rax
 0: %%0<64> := (rax<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c13d, 0) 


# -- 0x0000c13d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c140, 0) 


# -- 0x0000c140 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000c144, 0) 


# -- 0x0000c144 48 89 95 70 ff ff ff                   mov %rdx,-0x90(%rbp)
 0: @[(rbp<64> + -144<64>),8] := rdx<64>;
 1: goto (0x0000c14b, 0) 


# -- 0x0000c14b 48 89 85 10 ff ff ff                   mov %rax,-0xf0(%rbp)
 0: @[(rbp<64> + -240<64>),8] := rax<64>;
 1: goto (0x0000c152, 0) 


# -- 0x0000c152 48 c7 85 18 ff ff ff 00 00 00 00       movq $0x0,-0xe8(%rbp)
 0: @[(rbp<64> + -232<64>),8] := 0<64>;
 1: goto (0x0000c15d, 0) 


# -- 0x0000c15d 49 89 c5                               mov %rax,%r13
 0: %%0<64> := rax<64>;
 1: r13<64> := %%0<64>;
 2: goto (0x0000c160, 0) 


# -- 0x0000c160 41 be 00 00 00 00                      mov $0x0,%r14d
 0: r14<64> := 0<64>;
 1: goto (0x0000c166, 0) 


# -- 0x0000c166 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x0000c16b, 0) 


# -- 0x0000c16b 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000c16f, 0) 


# -- 0x0000c16f 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000c172, 0) 


# -- 0x0000c172 bb 10 00 00 00                         mov $0x10,%ebx
 0: rbx<64> := 16<64>;
 1: goto (0x0000c177, 0) 


# -- 0x0000c177 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000c17c, 0) 


# -- 0x0000c17c 48 f7 f3                               div %rbx
 0: %%0<128> := (extu rbx<64> 128);
 1: %%1<128> := (rdx<64> :: rax<64>);
 2: if (0<64> = rbx<64>) goto 4 else goto 5
 3: goto (0x0000c17f, 0) 
 4: @assert (0<1>); goto 3
 5: %%2<64> := (%%1<128> /u %%0<128>){0,63};
 6: %%3<64> := (%%1<128> %u %%0<128>){0,63};
 7: rax<64> := %%2<64>;
 8: rdx<64> := %%3<64>; goto 3


# -- 0x0000c17f 48 6b c0 10                            imul $0x10,%rax,%rax
 0: %%0<128> := (16<128> * (exts rax<64> 128));
 1: %%1<1> := ((exts %%0<128>{0,63} 128) <> %%0<128>);
 2: %%2<64> := %%0<128>{0,63};
 3: cf<1> := %%1<1>;
 4: of<1> := %%1<1>;
 5: rax<64> := %%2<64>;
 6: goto (0x0000c183, 0) 


# -- 0x0000c183 48 29 c4                               sub %rax,%rsp
 0: %%0<64> := ! (rsp<64>);
 1: %%1<64> := (rsp<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rsp<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rsp<64> := %%1<64>;
17: goto (0x0000c186, 0) 


# -- 0x0000c186 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000c189, 0) 


# -- 0x0000c189 48 83 c0 00                            add $0x0,%rax
 0: %%0<64> := rax<64>;
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c18d, 0) 


# -- 0x0000c18d 48 89 85 78 ff ff ff                   mov %rax,-0x88(%rbp)
 0: @[(rbp<64> + -136<64>),8] := rax<64>;
 1: goto (0x0000c194, 0) 


# -- 0x0000c194 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c19b, 0) 


# -- 0x0000c19b 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c19e, 0) 


# -- 0x0000c19e 66 83 f8 02                            cmp $0x2,%ax
 0: %%0<16> := rax<64>{0,15};
 1: %%1<16> := (%%0<16> - 2<16>);
 2: %%2<1> := (0x8000 = (0x8000 & (! (%%0<16>) & %%1<16>)));
 3: %%3<1> :=
     !
     ((((%%1<16>{0} ^ %%1<16>{4}) ^ (%%1<16>{2} ^ %%1<16>{6})) ^
       ((%%1<16>{1} ^ %%1<16>{5}) ^ (%%1<16>{3} ^ %%1<16>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<16> = %%1<16>);
 6: %%6<1> := (0<16> <> (0x8000 & %%1<16>));
 7: %%7<1> := (0x8000 = (0x8000 & (%%0<16> & ! (%%1<16>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c1a2, 0) 


# -- 0x0000c1a2 75 07                                  jne 0xc1ab
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c1ab, 0) 
 2: goto (0x0000c1a4, 0) 


# -- 0x0000c1a4 b8 04 00 00 00                         mov $0x4,%eax
 0: rax<64> := 4<64>;
 1: goto (0x0000c1a9, 0) 


# -- 0x0000c1a9 eb 05                                  jmp 0xc1b0
 0: goto (0x0000c1b0, 0) 


# -- 0x0000c1ab b8 10 00 00 00                         mov $0x10,%eax
 0: rax<64> := 16<64>;
 1: goto (0x0000c1b0, 0) 


# -- 0x0000c1b0 89 85 50 ff ff ff                      mov %eax,-0xb0(%rbp)
 0: @[(rbp<64> + -176<64>),4] := rax<64>{0,31};
 1: goto (0x0000c1b6, 0) 


# -- 0x0000c1b6 48 c7 45 c0 00 00 00 00                movq $0x0,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := 0<64>;
 1: goto (0x0000c1be, 0) 


# -- 0x0000c1be 48 c7 45 c8 00 00 00 00                movq $0x0,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := 0<64>;
 1: goto (0x0000c1c6, 0) 


# -- 0x0000c1c6 c6 45 ca ff                            movb $0xff,-0x36(%rbp)
 0: @[(rbp<64> + -54<64>),1] := -1<8>;
 1: goto (0x0000c1ca, 0) 


# -- 0x0000c1ca c6 45 cb ff                            movb $0xff,-0x35(%rbp)
 0: @[(rbp<64> + -53<64>),1] := -1<8>;
 1: goto (0x0000c1ce, 0) 


# -- 0x0000c1ce 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c1d5, 0) 


# -- 0x0000c1d5 48 8b 95 38 ff ff ff                   mov -0xc8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c1dc, 0) 


# -- 0x0000c1dc 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c1df, 0) 


# -- 0x0000c1df 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c1e2, 0) 


# -- 0x0000c1e2 e8 39 6b ff ff                         call 0x2d20
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c1e7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d20, 0) #call with return address @ (0x0000c1e7, 0)


# -- 0x0000c1e7 48 8d 45 90                            lea -0x70(%rbp),%rax
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c1eb, 0) 


# -- 0x0000c1eb ba 30 00 00 00                         mov $0x30,%edx
 0: rdx<64> := 48<64>;
 1: goto (0x0000c1f0, 0) 


# -- 0x0000c1f0 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000c1f5, 0) 


# -- 0x0000c1f5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c1f8, 0) 


# -- 0x0000c1f8 e8 73 6d ff ff                         call 0x2f70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c1fd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f70, 0) #call with return address @ (0x0000c1fd, 0)


# -- 0x0000c1fd c7 45 94 00 00 00 00                   movl $0x0,-0x6c(%rbp)
 0: @[(rbp<64> + -108<64>),4] := 0<32>;
 1: goto (0x0000c204, 0) 


# -- 0x0000c204 c7 45 90 04 00 00 00                   movl $0x4,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),4] := 4<32>;
 1: goto (0x0000c20b, 0) 


# -- 0x0000c20b 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c212, 0) 


# -- 0x0000c212 be 2f 00 00 00                         mov $0x2f,%esi
 0: rsi<64> := 47<64>;
 1: goto (0x0000c217, 0) 


# -- 0x0000c217 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c21a, 0) 


# -- 0x0000c21a e8 a1 6c ff ff                         call 0x2ec0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c21f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ec0, 0) #call with return address @ (0x0000c21f, 0)


# -- 0x0000c21f 48 89 45 80                            mov %rax,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),8] := rax<64>;
 1: goto (0x0000c223, 0) 


# -- 0x0000c223 48 83 7d 80 00                         cmpq $0x0,-0x80(%rbp)
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c228, 0) 


# -- 0x0000c228 74 2a                                  je 0xc254
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c254, 0) 
 2: goto (0x0000c22a, 0) 


# -- 0x0000c22a 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c22e, 0) 


# -- 0x0000c22e c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x0000c231, 0) 


# -- 0x0000c231 48 83 45 80 01                         addq $0x1,-0x80(%rbp)
 0: %%0<64> := (rbp<64> + -128<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c236, 0) 


# -- 0x0000c236 48 8b 45 80                            mov -0x80(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c23a, 0) 


# -- 0x0000c23a ba 0a 00 00 00                         mov $0xa,%edx
 0: rdx<64> := 10<64>;
 1: goto (0x0000c23f, 0) 


# -- 0x0000c23f be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000c244, 0) 


# -- 0x0000c244 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c247, 0) 


# -- 0x0000c247 e8 24 6f ff ff                         call 0x3170
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c24c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003170, 0) #call with return address @ (0x0000c24c, 0)


# -- 0x0000c24c 89 85 48 ff ff ff                      mov %eax,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),4] := rax<64>{0,31};
 1: goto (0x0000c252, 0) 


# -- 0x0000c252 eb 0f                                  jmp 0xc263
 0: goto (0x0000c263, 0) 


# -- 0x0000c254 8b 85 50 ff ff ff                      mov -0xb0(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -176<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c25a, 0) 


# -- 0x0000c25a c1 e0 03                               shl $0x3,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> << 3<32>);
 2: %%2<1> := (0<32> <> (0x80000000 & (%%0<32> << 2<32>)));
 3: %%3<1> :=
     !
     (((rax<64>{1} ^ rax<64>{3}) ^ (rax<64>{2} ^ (rax<64>{0} ^ rax<64>{4}))))
     ;
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<64> := (extu %%1<32> 64);
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%4<1>;
14: rax<64> := %%7<64>;
15: goto (0x0000c25d, 0) 


# -- 0x0000c25d 89 85 48 ff ff ff                      mov %eax,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),4] := rax<64>{0,31};
 1: goto (0x0000c263, 0) 


# -- 0x0000c263 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c26a, 0) 


# -- 0x0000c26a 48 8d 8d 58 ff ff ff                   lea -0xa8(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -168<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c271, 0) 


# -- 0x0000c271 48 8d 55 90                            lea -0x70(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -112<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c275, 0) 


# -- 0x0000c275 be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000c27a, 0) 


# -- 0x0000c27a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c27d, 0) 


# -- 0x0000c27d e8 1e 72 ff ff                         call 0x34a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c282;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034a0, 0) #call with return address @ (0x0000c282, 0)


# -- 0x0000c282 89 85 54 ff ff ff                      mov %eax,-0xac(%rbp)
 0: @[(rbp<64> + -172<64>),4] := rax<64>{0,31};
 1: goto (0x0000c288, 0) 


# -- 0x0000c288 83 bd 54 ff ff ff 00                   cmpl $0x0,-0xac(%rbp)
 0: %%0<32> := @[(rbp<64> + -172<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c28f, 0) 


# -- 0x0000c28f 74 4b                                  je 0xc2dc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c2dc, 0) 
 2: goto (0x0000c291, 0) 


# -- 0x0000c291 8b 85 54 ff ff ff                      mov -0xac(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -172<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c297, 0) 


# -- 0x0000c297 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c299, 0) 


# -- 0x0000c299 e8 62 6c ff ff                         call 0x2f00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c29e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f00, 0) #call with return address @ (0x0000c29e, 0)


# -- 0x0000c29e 48 89 c3                               mov %rax,%rbx
 0: %%0<64> := rax<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000c2a1, 0) 


# -- 0x0000c2a1 48 8d 3d 48 32 00 00                   lea 0x3248(%rip),%rdi
 0: rdi<64> := 0x000000000000f4f0;
 1: goto (0x0000c2a8, 0) 


# -- 0x0000c2a8 e8 43 6d ff ff                         call 0x2ff0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c2ad;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ff0, 0) #call with return address @ (0x0000c2ad, 0)


# -- 0x0000c2ad 89 c6                                  mov %eax,%esi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c2af, 0) 


# -- 0x0000c2af 48 8b 85 28 ff ff ff                   mov -0xd8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -216<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c2b6, 0) 


# -- 0x0000c2b6 49 89 d8                               mov %rbx,%r8
 0: %%0<64> := rbx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000c2b9, 0) 


# -- 0x0000c2b9 48 8d 0d 48 32 00 00                   lea 0x3248(%rip),%rcx
 0: rcx<64> := 0x000000000000f508;
 1: goto (0x0000c2c0, 0) 


# -- 0x0000c2c0 ba 0d 00 00 00                         mov $0xd,%edx
 0: rdx<64> := 13<64>;
 1: goto (0x0000c2c5, 0) 


# -- 0x0000c2c5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c2c8, 0) 


# -- 0x0000c2c8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c2cd, 0) 


# -- 0x0000c2cd e8 0e 6c ff ff                         call 0x2ee0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c2d2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ee0, 0) #call with return address @ (0x0000c2d2, 0)


# -- 0x0000c2d2 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c2d7, 0) 


# -- 0x0000c2d7 e9 39 02 00 00                         jmp 0xc515
 0: goto (0x0000c515, 0) 


# -- 0x0000c2dc 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c2e3, 0) 


# -- 0x0000c2e3 48 89 45 88                            mov %rax,-0x78(%rbp)
 0: @[(rbp<64> + -120<64>),8] := rax<64>;
 1: goto (0x0000c2e7, 0) 


# -- 0x0000c2e7 e9 08 02 00 00                         jmp 0xc4f4
 0: goto (0x0000c4f4, 0) 


# -- 0x0000c2ec 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c2f3, 0) 


# -- 0x0000c2f3 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c2f6, 0) 


# -- 0x0000c2f6 66 83 f8 02                            cmp $0x2,%ax
 0: %%0<16> := rax<64>{0,15};
 1: %%1<16> := (%%0<16> - 2<16>);
 2: %%2<1> := (0x8000 = (0x8000 & (! (%%0<16>) & %%1<16>)));
 3: %%3<1> :=
     !
     ((((%%1<16>{0} ^ %%1<16>{4}) ^ (%%1<16>{2} ^ %%1<16>{6})) ^
       ((%%1<16>{1} ^ %%1<16>{5}) ^ (%%1<16>{3} ^ %%1<16>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<16> = %%1<16>);
 6: %%6<1> := (0<16> <> (0x8000 & %%1<16>));
 7: %%7<1> := (0x8000 = (0x8000 & (%%0<16> & ! (%%1<16>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c2fa, 0) 


# -- 0x0000c2fa 74 2f                                  je 0xc32b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c32b, 0) 
 2: goto (0x0000c2fc, 0) 


# -- 0x0000c2fc 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c303, 0) 


# -- 0x0000c303 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c306, 0) 


# -- 0x0000c306 66 83 f8 0a                            cmp $0xa,%ax
 0: %%0<16> := rax<64>{0,15};
 1: %%1<16> := (%%0<16> - 10<16>);
 2: %%2<1> := (0x8000 = (0x8000 & (! (%%0<16>) & %%1<16>)));
 3: %%3<1> :=
     !
     ((((%%1<16>{0} ^ %%1<16>{4}) ^ (%%1<16>{2} ^ %%1<16>{6})) ^
       ((%%1<16>{1} ^ %%1<16>{5}) ^ (%%1<16>{3} ^ %%1<16>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<16> = %%1<16>);
 6: %%6<1> := (0<16> <> (0x8000 & %%1<16>));
 7: %%7<1> := (0x8000 = (0x8000 & (%%0<16> & ! (%%1<16>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c30a, 0) 


# -- 0x0000c30a 74 1f                                  je 0xc32b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c32b, 0) 
 2: goto (0x0000c30c, 0) 


# -- 0x0000c30c 48 8d 0d 1d 33 00 00                   lea 0x331d(%rip),%rcx
 0: rcx<64> := 0x000000000000f630;
 1: goto (0x0000c313, 0) 


# -- 0x0000c313 ba 3e 00 00 00                         mov $0x3e,%edx
 0: rdx<64> := 62<64>;
 1: goto (0x0000c318, 0) 


# -- 0x0000c318 48 8d 35 0a 32 00 00                   lea 0x320a(%rip),%rsi
 0: rsi<64> := 0x000000000000f529;
 1: goto (0x0000c31f, 0) 


# -- 0x0000c31f 48 8d 3d 12 32 00 00                   lea 0x3212(%rip),%rdi
 0: rdi<64> := 0x000000000000f538;
 1: goto (0x0000c326, 0) 


# -- 0x0000c326 e8 15 6c ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c32b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x0000c32b, 0)


# -- 0x0000c32b c6 85 47 ff ff ff 00                   movb $0x0,-0xb9(%rbp)
 0: @[(rbp<64> + -185<64>),1] := 0<8>;
 1: goto (0x0000c332, 0) 


# -- 0x0000c332 8b 85 48 ff ff ff                      mov -0xb8(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -184<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c338, 0) 


# -- 0x0000c338 89 85 4c ff ff ff                      mov %eax,-0xb4(%rbp)
 0: @[(rbp<64> + -180<64>),4] := rax<64>{0,31};
 1: goto (0x0000c33e, 0) 


# -- 0x0000c33e 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c345, 0) 


# -- 0x0000c345 8b 50 04                               mov 0x4(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 4<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c348, 0) 


# -- 0x0000c348 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c34f, 0) 


# -- 0x0000c34f 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c352, 0) 


# -- 0x0000c352 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c355, 0) 


# -- 0x0000c355 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000c357, 0) 


# -- 0x0000c357 75 77                                  jne 0xc3d0
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c3d0, 0) 
 2: goto (0x0000c359, 0) 


# -- 0x0000c359 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c360, 0) 


# -- 0x0000c360 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c363, 0) 


# -- 0x0000c363 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c366, 0) 


# -- 0x0000c366 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c369, 0) 


# -- 0x0000c369 74 0a                                  je 0xc375
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c375, 0) 
 2: goto (0x0000c36b, 0) 


# -- 0x0000c36b 83 f8 0a                               cmp $0xa,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 10<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c36e, 0) 


# -- 0x0000c36e 74 32                                  je 0xc3a2
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c3a2, 0) 
 2: goto (0x0000c370, 0) 


# -- 0x0000c370 e9 e0 00 00 00                         jmp 0xc455
 0: goto (0x0000c455, 0) 


# -- 0x0000c375 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c37c, 0) 


# -- 0x0000c37c 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c380, 0) 


# -- 0x0000c380 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000c387, 0) 


# -- 0x0000c387 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c38e, 0) 


# -- 0x0000c38e 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c392, 0) 


# -- 0x0000c392 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c396, 0) 


# -- 0x0000c396 48 89 85 68 ff ff ff                   mov %rax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rax<64>;
 1: goto (0x0000c39d, 0) 


# -- 0x0000c39d e9 b3 00 00 00                         jmp 0xc455
 0: goto (0x0000c455, 0) 


# -- 0x0000c3a2 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3a9, 0) 


# -- 0x0000c3a9 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c3ad, 0) 


# -- 0x0000c3ad 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000c3b4, 0) 


# -- 0x0000c3b4 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3bb, 0) 


# -- 0x0000c3bb 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3bf, 0) 


# -- 0x0000c3bf 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c3c3, 0) 


# -- 0x0000c3c3 48 89 85 68 ff ff ff                   mov %rax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rax<64>;
 1: goto (0x0000c3ca, 0) 


# -- 0x0000c3ca 90                                     nop
 0: goto (0x0000c3cb, 0) 


# -- 0x0000c3cb e9 85 00 00 00                         jmp 0xc455
 0: goto (0x0000c455, 0) 


# -- 0x0000c3d0 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3d7, 0) 


# -- 0x0000c3d7 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3da, 0) 


# -- 0x0000c3da 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3dd, 0) 


# -- 0x0000c3dd 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c3e0, 0) 


# -- 0x0000c3e0 74 07                                  je 0xc3e9
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c3e9, 0) 
 2: goto (0x0000c3e2, 0) 


# -- 0x0000c3e2 83 f8 0a                               cmp $0xa,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 10<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c3e5, 0) 


# -- 0x0000c3e5 74 3c                                  je 0xc423
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c423, 0) 
 2: goto (0x0000c3e7, 0) 


# -- 0x0000c3e7 eb 6c                                  jmp 0xc455
 0: goto (0x0000c455, 0) 


# -- 0x0000c3e9 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3f0, 0) 


# -- 0x0000c3f0 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c3f4, 0) 


# -- 0x0000c3f4 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3f6, 0) 


# -- 0x0000c3f6 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x0000c3f9, 0) 


# -- 0x0000c3f9 48 8d 45 c0                            lea -0x40(%rbp),%rax
 0: %%0<64> := (rbp<64> + -64<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c3fd, 0) 


# -- 0x0000c3fd 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000c404, 0) 


# -- 0x0000c404 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c40b, 0) 


# -- 0x0000c40b 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c40f, 0) 


# -- 0x0000c40f 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c413, 0) 


# -- 0x0000c413 48 89 85 68 ff ff ff                   mov %rax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rax<64>;
 1: goto (0x0000c41a, 0) 


# -- 0x0000c41a 83 85 4c ff ff ff 60                   addl $0x60,-0xb4(%rbp)
 0: %%0<64> := (rbp<64> + -180<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 96<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c421, 0) 


# -- 0x0000c421 eb 32                                  jmp 0xc455
 0: goto (0x0000c455, 0) 


# -- 0x0000c423 48 8b 85 30 ff ff ff                   mov -0xd0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -208<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c42a, 0) 


# -- 0x0000c42a 48 83 c0 08                            add $0x8,%rax
 0: %%0<64> := (rax<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c42e, 0) 


# -- 0x0000c42e 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000c435, 0) 


# -- 0x0000c435 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c43c, 0) 


# -- 0x0000c43c 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c440, 0) 


# -- 0x0000c440 48 83 c0 04                            add $0x4,%rax
 0: %%0<64> := (rax<64> + 4<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000c444, 0) 


# -- 0x0000c444 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c446, 0) 


# -- 0x0000c446 89 45 cc                               mov %eax,-0x34(%rbp)
 0: @[(rbp<64> + -52<64>),4] := rax<64>{0,31};
 1: goto (0x0000c449, 0) 


# -- 0x0000c449 48 8d 45 c0                            lea -0x40(%rbp),%rax
 0: %%0<64> := (rbp<64> + -64<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c44d, 0) 


# -- 0x0000c44d 48 89 85 68 ff ff ff                   mov %rax,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := rax<64>;
 1: goto (0x0000c454, 0) 


# -- 0x0000c454 90                                     nop
 0: goto (0x0000c455, 0) 


# -- 0x0000c455 eb 2f                                  jmp 0xc486
 0: goto (0x0000c486, 0) 


# -- 0x0000c457 48 8b 85 60 ff ff ff                   mov -0xa0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -160<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c45e, 0) 


# -- 0x0000c45e 0f b6 10                               movzbl (%rax),%edx
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c461, 0) 


# -- 0x0000c461 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c468, 0) 


# -- 0x0000c468 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c46b, 0) 


# -- 0x0000c46b 38 c2                                  cmp %al,%dl
 0: %%0<8> := rax<64>{0,7};
 1: %%1<8> := rdx<64>{0,7};
 2: %%2<8> := ! (%%1<8>);
 3: %%3<8> := (%%1<8> - %%0<8>);
 4: %%4<8> := (%%2<8> & %%0<8>);
 5: %%5<8> := ! (%%3<8>);
 6: %%6<1> :=
     (-128<8> =
      (-128<8> & (((%%2<8> | %%0<8>) & %%3<8>) | (%%4<8> & %%5<8>))));
 7: %%7<1> :=
     !
     ((((%%3<8>{0} ^ %%3<8>{4}) ^ (%%3<8>{2} ^ %%3<8>{6})) ^
       ((%%3<8>{1} ^ %%3<8>{5}) ^ (%%3<8>{3} ^ %%3<8>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<8> = %%3<8>);
10: %%10<1> := (0<8> <> (-128<8> & %%3<8>));
11: %%11<1> :=
     (-128<8> =
      (-128<8> & (((%%1<8> & ! (%%0<8>)) & %%5<8>) | (%%4<8> & %%3<8>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000c46d, 0) 


# -- 0x0000c46d 75 6f                                  jne 0xc4de
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c4de, 0) 
 2: goto (0x0000c46f, 0) 


# -- 0x0000c46f 48 83 85 60 ff ff ff 01                addq $0x1,-0xa0(%rbp)
 0: %%0<64> := (rbp<64> + -160<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c477, 0) 


# -- 0x0000c477 48 83 85 68 ff ff ff 01                addq $0x1,-0x98(%rbp)
 0: %%0<64> := (rbp<64> + -152<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c47f, 0) 


# -- 0x0000c47f 83 ad 4c ff ff ff 08                   subl $0x8,-0xb4(%rbp)
 0: %%0<64> := (rbp<64> + -180<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> - 8<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c486, 0) 


# -- 0x0000c486 83 bd 4c ff ff ff 07                   cmpl $0x7,-0xb4(%rbp)
 0: %%0<32> := @[(rbp<64> + -180<64>),4];
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c48d, 0) 


# -- 0x0000c48d 7f c8                                  jg 0xc457
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000c457, 0) 
 2: goto (0x0000c48f, 0) 


# -- 0x0000c48f 83 bd 4c ff ff ff 00                   cmpl $0x0,-0xb4(%rbp)
 0: %%0<32> := @[(rbp<64> + -180<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c496, 0) 


# -- 0x0000c496 74 33                                  je 0xc4cb
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c4cb, 0) 
 2: goto (0x0000c498, 0) 


# -- 0x0000c498 8b 85 4c ff ff ff                      mov -0xb4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -180<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c49e, 0) 


# -- 0x0000c49e 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c4a0, 0) 


# -- 0x0000c4a0 e8 94 00 00 00                         call 0xc539
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c4a5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c539, 0) #call with return address @ (0x0000c4a5, 0)


# -- 0x0000c4a5 88 85 47 ff ff ff                      mov %al,-0xb9(%rbp)
 0: @[(rbp<64> + -185<64>),1] := rax<64>{0,7};
 1: goto (0x0000c4ab, 0) 


# -- 0x0000c4ab 48 8b 85 60 ff ff ff                   mov -0xa0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -160<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4b2, 0) 


# -- 0x0000c4b2 0f b6 10                               movzbl (%rax),%edx
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c4b5, 0) 


# -- 0x0000c4b5 48 8b 85 68 ff ff ff                   mov -0x98(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4bc, 0) 


# -- 0x0000c4bc 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4bf, 0) 


# -- 0x0000c4bf 31 d0                                  xor %edx,%eax
 0: %%0<32> := (rax<64>{0,31} ^ rdx<64>{0,31});
 1: %%1<1> :=
     !
     (((((rax<64>{0} ^ rdx<64>{0}) ^ (rax<64>{4} ^ rdx<64>{4})) ^
        ((rax<64>{2} ^ rdx<64>{2}) ^ (rax<64>{6} ^ rdx<64>{6}))) ^
       (((rax<64>{1} ^ rdx<64>{1}) ^ (rax<64>{5} ^ rdx<64>{5})) ^
        ((rax<64>{3} ^ rdx<64>{3}) ^ (rax<64>{7} ^ rdx<64>{7})))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x0000c4c1, 0) 


# -- 0x0000c4c1 22 85 47 ff ff ff                      and -0xb9(%rbp),%al
 0: %%0<8> := @[(rbp<64> + -185<64>),1];
 1: %%1<8> := (rax<64>{0,7} & %%0<8>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} & %%0<8>{0}) ^ (rax<64>{4} & %%0<8>{4})) ^
        ((rax<64>{2} & %%0<8>{2}) ^ (rax<64>{6} & %%0<8>{6}))) ^
       (((rax<64>{1} & %%0<8>{1}) ^ (rax<64>{5} & %%0<8>{5})) ^
        ((rax<64>{3} & %%0<8>{3}) ^ (rax<64>{7} & %%0<8>{7})))));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%1<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{0, 7} := %%1<8>;
12: goto (0x0000c4c7, 0) 


# -- 0x0000c4c7 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c4c9, 0) 


# -- 0x0000c4c9 75 16                                  jne 0xc4e1
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c4e1, 0) 
 2: goto (0x0000c4cb, 0) 


# -- 0x0000c4cb 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4cf, 0) 


# -- 0x0000c4cf 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c4d2, 0) 


# -- 0x0000c4d2 e8 89 70 ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c4d7;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x0000c4d7, 0)


# -- 0x0000c4d7 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x0000c4dc, 0) 


# -- 0x0000c4dc eb 37                                  jmp 0xc515
 0: goto (0x0000c515, 0) 


# -- 0x0000c4de 90                                     nop
 0: goto (0x0000c4df, 0) 


# -- 0x0000c4df eb 01                                  jmp 0xc4e2
 0: goto (0x0000c4e2, 0) 


# -- 0x0000c4e1 90                                     nop
 0: goto (0x0000c4e2, 0) 


# -- 0x0000c4e2 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4e9, 0) 


# -- 0x0000c4e9 48 8b 40 28                            mov 0x28(%rax),%rax
 0: %%0<64> := @[(rax<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4ed, 0) 


# -- 0x0000c4ed 48 89 85 58 ff ff ff                   mov %rax,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := rax<64>;
 1: goto (0x0000c4f4, 0) 


# -- 0x0000c4f4 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c4fb, 0) 


# -- 0x0000c4fb 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c4fe, 0) 


# -- 0x0000c4fe 0f 85 e8 fd ff ff                      jne 0xc2ec
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c2ec, 0) 
 2: goto (0x0000c504, 0) 


# -- 0x0000c504 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c508, 0) 


# -- 0x0000c508 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c50b, 0) 


# -- 0x0000c50b e8 50 70 ff ff                         call 0x3560
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c510;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003560, 0) #call with return address @ (0x0000c510, 0)


# -- 0x0000c510 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c515, 0) 


# -- 0x0000c515 4c 89 e4                               mov %r12,%rsp
 0: %%0<64> := r12<64>;
 1: rsp<64> := %%0<64>;
 2: goto (0x0000c518, 0) 


# -- 0x0000c518 48 8b 5d d8                            mov -0x28(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000c51c, 0) 


# -- 0x0000c51c 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x0000c525, 0) 


# -- 0x0000c525 74 05                                  je 0xc52c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c52c, 0) 
 2: goto (0x0000c527, 0) 


# -- 0x0000c527 e8 44 69 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c52c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000c52c, 0)


# -- 0x0000c52c 48 8d 65 e0                            lea -0x20(%rbp),%rsp
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rsp<64> := %%0<64>;
 2: goto (0x0000c530, 0) 


# -- 0x0000c530 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000c531, 0) 


# -- 0x0000c531 41 5c                                  pop %r12
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r12<64> := %%1<64>;
 4: goto (0x0000c533, 0) 


# -- 0x0000c533 41 5d                                  pop %r13
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r13<64> := %%1<64>;
 4: goto (0x0000c535, 0) 


# -- 0x0000c535 41 5e                                  pop %r14
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r14<64> := %%1<64>;
 4: goto (0x0000c537, 0) 


# -- 0x0000c537 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000c538, 0) 


# -- 0x0000c538 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000c539 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c53a, 0) 


# -- 0x0000c53a 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000c53d, 0) 


# -- 0x0000c53d 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x0000c540, 0) 


# -- 0x0000c540 83 7d ec 07                            cmpl $0x7,-0x14(%rbp)
 0: %%0<32> := @[(rbp<64> + -20<64>),4];
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c544, 0) 


# -- 0x0000c544 7e 07                                  jle 0xc54d
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000c54d, 0) 
 2: goto (0x0000c546, 0) 


# -- 0x0000c546 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000c54b, 0) 


# -- 0x0000c54b eb 3b                                  jmp 0xc588
 0: goto (0x0000c588, 0) 


# -- 0x0000c54d c6 45 fb 00                            movb $0x0,-0x5(%rbp)
 0: @[(rbp<64> + -5<64>),1] := 0<8>;
 1: goto (0x0000c551, 0) 


# -- 0x0000c551 c7 45 fc 07 00 00 00                   movl $0x7,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := 7<32>;
 1: goto (0x0000c558, 0) 


# -- 0x0000c558 eb 1d                                  jmp 0xc577
 0: goto (0x0000c577, 0) 


# -- 0x0000c55a 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c55d, 0) 


# -- 0x0000c55d ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000c562, 0) 


# -- 0x0000c562 89 c1                                  mov %eax,%ecx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c564, 0) 


# -- 0x0000c564 d3 e2                                  shl %cl,%edx
 0: %%0<8> := (extu rcx<64>{0,4} 8);
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<1> := (1<8> = %%0<8>);
 3: %%3<32> := (%%1<32> << (extu rcx<64>{0,4} 32));
 4: %%4<64> := (extu %%3<32> 64);
 5: if (0<8> <> %%0<8>) goto 7 else goto 6
 6: rdx<64> := %%4<64>; goto 19
 7: %%5<1> :=
     (0<32> <> (0x80000000 & (%%1<32> << (extu (%%0<8> - 1<8>) 32))));
 8: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 9: %%7<1> := \undef;
10: %%8<1> := (0<32> = %%3<32>);
11: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
12: %%10<1> :=
     ((%%2<1> & (0<32> <> (0x80000000 & (%%1<32> ^ %%3<32>)))) | ! (%%2<1>));
13: cf<1> := %%5<1>;
14: pf<1> := %%6<1>;
15: af<1> := %%7<1>;
16: zf<1> := %%8<1>;
17: sf<1> := %%9<1>;
18: of<1> := %%10<1>; goto 6
19: goto (0x0000c566, 0) 


# -- 0x0000c566 89 d0                                  mov %edx,%eax
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c568, 0) 


# -- 0x0000c568 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c56a, 0) 


# -- 0x0000c56a 0f b6 45 fb                            movzbl -0x5(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -5<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c56e, 0) 


# -- 0x0000c56e 09 d0                                  or %edx,%eax
 0: %%0<32> := (rax<64>{0,31} | rdx<64>{0,31});
 1: %%1<1> :=
     !
     (((((rax<64>{0} | rdx<64>{0}) ^ (rax<64>{4} | rdx<64>{4})) ^
        ((rax<64>{2} | rdx<64>{2}) ^ (rax<64>{6} | rdx<64>{6}))) ^
       (((rax<64>{1} | rdx<64>{1}) ^ (rax<64>{5} | rdx<64>{5})) ^
        ((rax<64>{3} | rdx<64>{3}) ^ (rax<64>{7} | rdx<64>{7})))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: %%4<64> := (extu %%0<32> 64);
 5: cf<1> := 0<1>;
 6: pf<1> := %%1<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%2<1>;
 9: sf<1> := %%3<1>;
10: of<1> := 0<1>;
11: rax<64> := %%4<64>;
12: goto (0x0000c570, 0) 


# -- 0x0000c570 88 45 fb                               mov %al,-0x5(%rbp)
 0: @[(rbp<64> + -5<64>),1] := rax<64>{0,7};
 1: goto (0x0000c573, 0) 


# -- 0x0000c573 83 6d fc 01                            subl $0x1,-0x4(%rbp)
 0: %%0<64> := (rbp<64> + -4<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> - 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c577, 0) 


# -- 0x0000c577 8b 55 fc                               mov -0x4(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c57a, 0) 


# -- 0x0000c57a 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c57d, 0) 


# -- 0x0000c57d 01 d0                                  add %edx,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := (%%0<32> & %%1<32>);
 3: %%3<32> := (%%0<32> + %%1<32>);
 4: %%4<32> := ! (%%3<32>);
 5: %%5<1> :=
     (0x80000000 =
      (0x80000000 & (((%%0<32> | %%1<32>) & %%4<32>) | (%%2<32> & %%3<32>))))
     ;
 6: %%6<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<32> = %%3<32>);
 9: %%9<1> := (0<32> <> (0x80000000 & %%3<32>));
10: %%10<1> :=
     (0x80000000 =
      (0x80000000 &
       ((%%2<32> & %%4<32>) | ((! (%%0<32>) & ! (%%1<32>)) & %%3<32>))));
11: %%11<64> := (extu %%3<32> 64);
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: rax<64> := %%11<64>;
19: goto (0x0000c57f, 0) 


# -- 0x0000c57f 83 f8 07                               cmp $0x7,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 7<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c582, 0) 


# -- 0x0000c582 7f d6                                  jg 0xc55a
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000c55a, 0) 
 2: goto (0x0000c584, 0) 


# -- 0x0000c584 0f b6 45 fb                            movzbl -0x5(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -5<64>),1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c588, 0) 


# -- 0x0000c588 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000c589, 0) 


# -- 0x0000c589 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000c58a 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c58b, 0) 


# -- 0x0000c58b 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000c58e, 0) 


# -- 0x0000c58e 48 81 ec 40 01 00 00                   sub $0x140,%rsp
 0: %%0<64> := (rsp<64> - 320<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000c595, 0) 


# -- 0x0000c595 48 89 bd c8 fe ff ff                   mov %rdi,-0x138(%rbp)
 0: @[(rbp<64> + -312<64>),8] := rdi<64>;
 1: goto (0x0000c59c, 0) 


# -- 0x0000c59c 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5a5, 0) 


# -- 0x0000c5a5 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000c5a9, 0) 


# -- 0x0000c5a9 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000c5ab, 0) 


# -- 0x0000c5ab 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5b2, 0) 


# -- 0x0000c5b2 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5b9, 0) 


# -- 0x0000c5b9 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5bd, 0) 


# -- 0x0000c5bd 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c5c0, 0) 


# -- 0x0000c5c0 75 25                                  jne 0xc5e7
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c5e7, 0) 
 2: goto (0x0000c5c2, 0) 


# -- 0x0000c5c2 48 8d 15 af 2f 00 00                   lea 0x2faf(%rip),%rdx
 0: rdx<64> := 0x000000000000f578;
 1: goto (0x0000c5c9, 0) 


# -- 0x0000c5c9 be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000c5ce, 0) 


# -- 0x0000c5ce bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000c5d3, 0) 


# -- 0x0000c5d3 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c5d8, 0) 


# -- 0x0000c5d8 e8 c3 6c ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c5dd;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000c5dd, 0)


# -- 0x0000c5dd b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x0000c5e2, 0) 


# -- 0x0000c5e2 e9 e6 01 00 00                         jmp 0xc7cd
 0: goto (0x0000c7cd, 0) 


# -- 0x0000c5e7 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5ee, 0) 


# -- 0x0000c5ee 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5f5, 0) 


# -- 0x0000c5f5 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c5f9, 0) 


# -- 0x0000c5f9 48 8d 35 a0 2f 00 00                   lea 0x2fa0(%rip),%rsi
 0: rsi<64> := 0x000000000000f5a0;
 1: goto (0x0000c600, 0) 


# -- 0x0000c600 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c603, 0) 


# -- 0x0000c603 e8 58 6b ff ff                         call 0x3160
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c608;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003160, 0) #call with return address @ (0x0000c608, 0)


# -- 0x0000c608 48 89 85 e8 fe ff ff                   mov %rax,-0x118(%rbp)
 0: @[(rbp<64> + -280<64>),8] := rax<64>;
 1: goto (0x0000c60f, 0) 


# -- 0x0000c60f 48 83 bd e8 fe ff ff 00                cmpq $0x0,-0x118(%rbp)
 0: %%0<64> := @[(rbp<64> + -280<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c617, 0) 


# -- 0x0000c617 0f 85 78 01 00 00                      jne 0xc795
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c795, 0) 
 2: goto (0x0000c61d, 0) 


# -- 0x0000c61d e8 5e 66 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c622;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000c622, 0)


# -- 0x0000c622 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c624, 0) 


# -- 0x0000c624 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c626, 0) 


# -- 0x0000c626 e8 a5 6e ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c62b;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000c62b, 0)


# -- 0x0000c62b 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c62e, 0) 


# -- 0x0000c62e 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c635, 0) 


# -- 0x0000c635 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c63c, 0) 


# -- 0x0000c63c 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c640, 0) 


# -- 0x0000c640 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000c643, 0) 


# -- 0x0000c643 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c646, 0) 


# -- 0x0000c646 48 8d 15 5b 2f 00 00                   lea 0x2f5b(%rip),%rdx
 0: rdx<64> := 0x000000000000f5a8;
 1: goto (0x0000c64d, 0) 


# -- 0x0000c64d be 20 00 00 00                         mov $0x20,%esi
 0: rsi<64> := 32<64>;
 1: goto (0x0000c652, 0) 


# -- 0x0000c652 bf 00 00 00 00                         mov $0x0,%edi
 0: rdi<64> := 0<64>;
 1: goto (0x0000c657, 0) 


# -- 0x0000c657 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c65c, 0) 


# -- 0x0000c65c e8 3f 6c ff ff                         call 0x32a0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c661;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032a0, 0) #call with return address @ (0x0000c661, 0)


# -- 0x0000c661 b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x0000c666, 0) 


# -- 0x0000c666 e9 62 01 00 00                         jmp 0xc7cd
 0: goto (0x0000c7cd, 0) 


# -- 0x0000c66b 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c672, 0) 


# -- 0x0000c672 be 23 00 00 00                         mov $0x23,%esi
 0: rsi<64> := 35<64>;
 1: goto (0x0000c677, 0) 


# -- 0x0000c677 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c67a, 0) 


# -- 0x0000c67a e8 41 68 ff ff                         call 0x2ec0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c67f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ec0, 0) #call with return address @ (0x0000c67f, 0)


# -- 0x0000c67f 48 89 85 d8 fe ff ff                   mov %rax,-0x128(%rbp)
 0: @[(rbp<64> + -296<64>),8] := rax<64>;
 1: goto (0x0000c686, 0) 


# -- 0x0000c686 48 83 bd d8 fe ff ff 00                cmpq $0x0,-0x128(%rbp)
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c68e, 0) 


# -- 0x0000c68e 74 0a                                  je 0xc69a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c69a, 0) 
 2: goto (0x0000c690, 0) 


# -- 0x0000c690 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c697, 0) 


# -- 0x0000c697 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x0000c69a, 0) 


# -- 0x0000c69a 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6a1, 0) 


# -- 0x0000c6a1 48 89 85 d8 fe ff ff                   mov %rax,-0x128(%rbp)
 0: @[(rbp<64> + -296<64>),8] := rax<64>;
 1: goto (0x0000c6a8, 0) 


# -- 0x0000c6a8 eb 08                                  jmp 0xc6b2
 0: goto (0x0000c6b2, 0) 


# -- 0x0000c6aa 48 83 85 d8 fe ff ff 01                addq $0x1,-0x128(%rbp)
 0: %%0<64> := (rbp<64> + -296<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c6b2, 0) 


# -- 0x0000c6b2 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6b9, 0) 


# -- 0x0000c6b9 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6bc, 0) 


# -- 0x0000c6bc 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c6be, 0) 


# -- 0x0000c6be 74 2b                                  je 0xc6eb
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c6eb, 0) 
 2: goto (0x0000c6c0, 0) 


# -- 0x0000c6c0 e8 8b 6e ff ff                         call 0x3550
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c6c5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003550, 0) #call with return address @ (0x0000c6c5, 0)


# -- 0x0000c6c5 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c6c8, 0) 


# -- 0x0000c6c8 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6cf, 0) 


# -- 0x0000c6cf 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6d2, 0) 


# -- 0x0000c6d2 48 0f be c0                            movsbq %al,%rax
 0: %%0<64> := (exts rax<64>{0,7} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6d6, 0) 


# -- 0x0000c6d6 48 01 c0                               add %rax,%rax
 0: %%0<64> := (rax<64> + rax<64>);
 1: %%1<64> := (rax<64> & ! (%%0<64>));
 2: %%2<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 & (%%1<64> | (rax<64> & %%0<64>))));
 3: %%3<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%0<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 7: %%7<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 & (%%1<64> | (! (rax<64>) & %%0<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: rax<64> := %%0<64>;
15: goto (0x0000c6d9, 0) 


# -- 0x0000c6d9 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000c6dc, 0) 


# -- 0x0000c6dc 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6df, 0) 


# -- 0x0000c6df 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6e2, 0) 


# -- 0x0000c6e2 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000c6e7, 0) 


# -- 0x0000c6e7 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c6e9, 0) 


# -- 0x0000c6e9 75 bf                                  jne 0xc6aa
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c6aa, 0) 
 2: goto (0x0000c6eb, 0) 


# -- 0x0000c6eb 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6f2, 0) 


# -- 0x0000c6f2 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c6f5, 0) 


# -- 0x0000c6f5 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c6f7, 0) 


# -- 0x0000c6f7 75 05                                  jne 0xc6fe
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c6fe, 0) 
 2: goto (0x0000c6f9, 0) 


# -- 0x0000c6f9 e9 97 00 00 00                         jmp 0xc795
 0: goto (0x0000c795, 0) 


# -- 0x0000c6fe 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c705, 0) 


# -- 0x0000c705 48 89 85 e0 fe ff ff                   mov %rax,-0x120(%rbp)
 0: @[(rbp<64> + -288<64>),8] := rax<64>;
 1: goto (0x0000c70c, 0) 


# -- 0x0000c70c eb 08                                  jmp 0xc716
 0: goto (0x0000c716, 0) 


# -- 0x0000c70e 48 83 85 e0 fe ff ff 01                addq $0x1,-0x120(%rbp)
 0: %%0<64> := (rbp<64> + -288<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000c716, 0) 


# -- 0x0000c716 48 8b 85 e0 fe ff ff                   mov -0x120(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c71d, 0) 


# -- 0x0000c71d 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c720, 0) 


# -- 0x0000c720 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c722, 0) 


# -- 0x0000c722 74 2b                                  je 0xc74f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c74f, 0) 
 2: goto (0x0000c724, 0) 


# -- 0x0000c724 e8 27 6e ff ff                         call 0x3550
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c729;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003550, 0) #call with return address @ (0x0000c729, 0)


# -- 0x0000c729 48 8b 10                               mov (%rax),%rdx
 0: %%0<64> := @[rax<64>,8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c72c, 0) 


# -- 0x0000c72c 48 8b 85 e0 fe ff ff                   mov -0x120(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c733, 0) 


# -- 0x0000c733 0f b6 00                               movzbl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,1] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c736, 0) 


# -- 0x0000c736 48 0f be c0                            movsbq %al,%rax
 0: %%0<64> := (exts rax<64>{0,7} 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c73a, 0) 


# -- 0x0000c73a 48 01 c0                               add %rax,%rax
 0: %%0<64> := (rax<64> + rax<64>);
 1: %%1<64> := (rax<64> & ! (%%0<64>));
 2: %%2<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 & (%%1<64> | (rax<64> & %%0<64>))));
 3: %%3<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%0<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 7: %%7<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 & (%%1<64> | (! (rax<64>) & %%0<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: rax<64> := %%0<64>;
15: goto (0x0000c73d, 0) 


# -- 0x0000c73d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000c740, 0) 


# -- 0x0000c740 0f b7 00                               movzwl (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,2] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c743, 0) 


# -- 0x0000c743 0f b7 c0                               movzwl %ax,%eax
 0: %%0<64> := (0x000000000000ffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c746, 0) 


# -- 0x0000c746 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000c74b, 0) 


# -- 0x0000c74b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c74d, 0) 


# -- 0x0000c74d 74 bf                                  je 0xc70e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c70e, 0) 
 2: goto (0x0000c74f, 0) 


# -- 0x0000c74f 48 8b 85 e0 fe ff ff                   mov -0x120(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -288<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c756, 0) 


# -- 0x0000c756 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x0000c759, 0) 


# -- 0x0000c759 48 8b 85 c8 fe ff ff                   mov -0x138(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -312<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c760, 0) 


# -- 0x0000c760 48 8d 48 10                            lea 0x10(%rax),%rcx
 0: %%0<64> := (rax<64> + 16<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c764, 0) 


# -- 0x0000c764 48 8b 85 d8 fe ff ff                   mov -0x128(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -296<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c76b, 0) 


# -- 0x0000c76b ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000c770, 0) 


# -- 0x0000c770 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000c773, 0) 


# -- 0x0000c773 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c776, 0) 


# -- 0x0000c776 e8 73 f9 ff ff                         call 0xc0ee
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c77b;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c0ee, 0) #call with return address @ (0x0000c77b, 0)


# -- 0x0000c77b 84 c0                                  test %al,%al
 0: %%0<8> := rax<64>{0,7};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<8> = %%0<8>);
 3: %%3<1> := (0<8> <> (-128<8> & %%0<8>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c77d, 0) 


# -- 0x0000c77d 74 16                                  je 0xc795
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c795, 0) 
 2: goto (0x0000c77f, 0) 


# -- 0x0000c77f 48 8b 85 e8 fe ff ff                   mov -0x118(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -280<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c786, 0) 


# -- 0x0000c786 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c789, 0) 


# -- 0x0000c789 e8 82 66 ff ff                         call 0x2e10
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c78e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e10, 0) #call with return address @ (0x0000c78e, 0)


# -- 0x0000c78e b8 01 00 00 00                         mov $0x1,%eax
 0: rax<64> := 1<64>;
 1: goto (0x0000c793, 0) 


# -- 0x0000c793 eb 38                                  jmp 0xc7cd
 0: goto (0x0000c7cd, 0) 


# -- 0x0000c795 48 8b 95 e8 fe ff ff                   mov -0x118(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -280<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c79c, 0) 


# -- 0x0000c79c 48 8d 85 f0 fe ff ff                   lea -0x110(%rbp),%rax
 0: %%0<64> := (rbp<64> + -272<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c7a3, 0) 


# -- 0x0000c7a3 be 00 01 00 00                         mov $0x100,%esi
 0: rsi<64> := 256<64>;
 1: goto (0x0000c7a8, 0) 


# -- 0x0000c7a8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c7ab, 0) 


# -- 0x0000c7ab e8 80 68 ff ff                         call 0x3030
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c7b0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003030, 0) #call with return address @ (0x0000c7b0, 0)


# -- 0x0000c7b0 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c7b3, 0) 


# -- 0x0000c7b3 0f 85 b2 fe ff ff                      jne 0xc66b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c66b, 0) 
 2: goto (0x0000c7b9, 0) 


# -- 0x0000c7b9 48 8b 85 e8 fe ff ff                   mov -0x118(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -280<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c7c0, 0) 


# -- 0x0000c7c0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c7c3, 0) 


# -- 0x0000c7c3 e8 48 66 ff ff                         call 0x2e10
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c7c8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e10, 0) #call with return address @ (0x0000c7c8, 0)


# -- 0x0000c7c8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c7cd, 0) 


# -- 0x0000c7cd 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000c7d1, 0) 


# -- 0x0000c7d1 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000c7da, 0) 


# -- 0x0000c7da 74 05                                  je 0xc7e1
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c7e1, 0) 
 2: goto (0x0000c7dc, 0) 


# -- 0x0000c7dc e8 8f 66 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c7e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000c7e1, 0)


# -- 0x0000c7e1 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000c7e2, 0) 


# -- 0x0000c7e2 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000c7e3 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c7e4, 0) 


# -- 0x0000c7e4 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000c7e7, 0) 


# -- 0x0000c7e7 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000c7eb, 0) 


# -- 0x0000c7eb 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000c7ef, 0) 


# -- 0x0000c7ef 48 c7 45 f8 00 00 00 00                movq $0x0,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := 0<64>;
 1: goto (0x0000c7f7, 0) 


# -- 0x0000c7f7 be 68 00 00 00                         mov $0x68,%esi
 0: rsi<64> := 104<64>;
 1: goto (0x0000c7fc, 0) 


# -- 0x0000c7fc bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000c801, 0) 


# -- 0x0000c801 e8 7a 6b ff ff                         call 0x3380
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c806;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003380, 0) #call with return address @ (0x0000c806, 0)


# -- 0x0000c806 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000c80a, 0) 


# -- 0x0000c80a 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000c80f, 0) 


# -- 0x0000c80f 75 0a                                  jne 0xc81b
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000c81b, 0) 
 2: goto (0x0000c811, 0) 


# -- 0x0000c811 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c816, 0) 


# -- 0x0000c816 e9 8a 01 00 00                         jmp 0xc9a5
 0: goto (0x0000c9a5, 0) 


# -- 0x0000c81b 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c81f, 0) 


# -- 0x0000c81f 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c822, 0) 


# -- 0x0000c822 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c825, 0) 


# -- 0x0000c825 74 19                                  je 0xc840
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c840, 0) 
 2: goto (0x0000c827, 0) 


# -- 0x0000c827 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c82b, 0) 


# -- 0x0000c82b 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c82e, 0) 


# -- 0x0000c82e 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c831, 0) 


# -- 0x0000c831 e8 fa 6b ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c836;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c836, 0)


# -- 0x0000c836 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c839, 0) 


# -- 0x0000c839 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c83d, 0) 


# -- 0x0000c83d 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x0000c840, 0) 


# -- 0x0000c840 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c844, 0) 


# -- 0x0000c844 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c848, 0) 


# -- 0x0000c848 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c84c, 0) 


# -- 0x0000c84c 48 89 50 08                            mov %rdx,0x8(%rax)
 0: @[(rax<64> + 8<64>),8] := rdx<64>;
 1: goto (0x0000c850, 0) 


# -- 0x0000c850 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c854, 0) 


# -- 0x0000c854 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c858, 0) 


# -- 0x0000c858 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c85b, 0) 


# -- 0x0000c85b 74 1b                                  je 0xc878
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c878, 0) 
 2: goto (0x0000c85d, 0) 


# -- 0x0000c85d 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c861, 0) 


# -- 0x0000c861 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c865, 0) 


# -- 0x0000c865 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c868, 0) 


# -- 0x0000c868 e8 c3 6b ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c86d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c86d, 0)


# -- 0x0000c86d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c870, 0) 


# -- 0x0000c870 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c874, 0) 


# -- 0x0000c874 48 89 50 10                            mov %rdx,0x10(%rax)
 0: @[(rax<64> + 16<64>),8] := rdx<64>;
 1: goto (0x0000c878, 0) 


# -- 0x0000c878 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c87c, 0) 


# -- 0x0000c87c 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c880, 0) 


# -- 0x0000c880 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c883, 0) 


# -- 0x0000c883 74 1b                                  je 0xc8a0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c8a0, 0) 
 2: goto (0x0000c885, 0) 


# -- 0x0000c885 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c889, 0) 


# -- 0x0000c889 48 8b 40 18                            mov 0x18(%rax),%rax
 0: %%0<64> := @[(rax<64> + 24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c88d, 0) 


# -- 0x0000c88d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c890, 0) 


# -- 0x0000c890 e8 9b 6b ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c895;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c895, 0)


# -- 0x0000c895 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c898, 0) 


# -- 0x0000c898 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c89c, 0) 


# -- 0x0000c89c 48 89 50 18                            mov %rdx,0x18(%rax)
 0: @[(rax<64> + 24<64>),8] := rdx<64>;
 1: goto (0x0000c8a0, 0) 


# -- 0x0000c8a0 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8a4, 0) 


# -- 0x0000c8a4 8b 50 20                               mov 0x20(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c8a7, 0) 


# -- 0x0000c8a7 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8ab, 0) 


# -- 0x0000c8ab 89 50 20                               mov %edx,0x20(%rax)
 0: @[(rax<64> + 32<64>),4] := rdx<64>{0,31};
 1: goto (0x0000c8ae, 0) 


# -- 0x0000c8ae 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8b2, 0) 


# -- 0x0000c8b2 8b 50 24                               mov 0x24(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 36<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c8b5, 0) 


# -- 0x0000c8b5 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8b9, 0) 


# -- 0x0000c8b9 89 50 24                               mov %edx,0x24(%rax)
 0: @[(rax<64> + 36<64>),4] := rdx<64>{0,31};
 1: goto (0x0000c8bc, 0) 


# -- 0x0000c8bc 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8c0, 0) 


# -- 0x0000c8c0 0f b6 50 28                            movzbl 0x28(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 40<64>),1] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c8c4, 0) 


# -- 0x0000c8c4 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8c8, 0) 


# -- 0x0000c8c8 88 50 28                               mov %dl,0x28(%rax)
 0: @[(rax<64> + 40<64>),1] := rdx<64>{0,7};
 1: goto (0x0000c8cb, 0) 


# -- 0x0000c8cb 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8cf, 0) 


# -- 0x0000c8cf 48 8b 40 30                            mov 0x30(%rax),%rax
 0: %%0<64> := @[(rax<64> + 48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8d3, 0) 


# -- 0x0000c8d3 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c8d6, 0) 


# -- 0x0000c8d6 74 1b                                  je 0xc8f3
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c8f3, 0) 
 2: goto (0x0000c8d8, 0) 


# -- 0x0000c8d8 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8dc, 0) 


# -- 0x0000c8dc 48 8b 40 30                            mov 0x30(%rax),%rax
 0: %%0<64> := @[(rax<64> + 48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8e0, 0) 


# -- 0x0000c8e0 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c8e3, 0) 


# -- 0x0000c8e3 e8 48 6b ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c8e8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c8e8, 0)


# -- 0x0000c8e8 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c8eb, 0) 


# -- 0x0000c8eb 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8ef, 0) 


# -- 0x0000c8ef 48 89 50 30                            mov %rdx,0x30(%rax)
 0: @[(rax<64> + 48<64>),8] := rdx<64>;
 1: goto (0x0000c8f3, 0) 


# -- 0x0000c8f3 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8f7, 0) 


# -- 0x0000c8f7 48 8b 40 38                            mov 0x38(%rax),%rax
 0: %%0<64> := @[(rax<64> + 56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c8fb, 0) 


# -- 0x0000c8fb 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c8fe, 0) 


# -- 0x0000c8fe 74 1b                                  je 0xc91b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c91b, 0) 
 2: goto (0x0000c900, 0) 


# -- 0x0000c900 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c904, 0) 


# -- 0x0000c904 48 8b 40 38                            mov 0x38(%rax),%rax
 0: %%0<64> := @[(rax<64> + 56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c908, 0) 


# -- 0x0000c908 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c90b, 0) 


# -- 0x0000c90b e8 20 6b ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c910;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c910, 0)


# -- 0x0000c910 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c913, 0) 


# -- 0x0000c913 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c917, 0) 


# -- 0x0000c917 48 89 50 38                            mov %rdx,0x38(%rax)
 0: @[(rax<64> + 56<64>),8] := rdx<64>;
 1: goto (0x0000c91b, 0) 


# -- 0x0000c91b 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c91f, 0) 


# -- 0x0000c91f 48 8b 40 50                            mov 0x50(%rax),%rax
 0: %%0<64> := @[(rax<64> + 80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c923, 0) 


# -- 0x0000c923 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c926, 0) 


# -- 0x0000c926 74 1b                                  je 0xc943
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c943, 0) 
 2: goto (0x0000c928, 0) 


# -- 0x0000c928 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c92c, 0) 


# -- 0x0000c92c 48 8b 40 50                            mov 0x50(%rax),%rax
 0: %%0<64> := @[(rax<64> + 80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c930, 0) 


# -- 0x0000c930 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c933, 0) 


# -- 0x0000c933 e8 f8 6a ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c938;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c938, 0)


# -- 0x0000c938 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c93b, 0) 


# -- 0x0000c93b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c93f, 0) 


# -- 0x0000c93f 48 89 50 50                            mov %rdx,0x50(%rax)
 0: @[(rax<64> + 80<64>),8] := rdx<64>;
 1: goto (0x0000c943, 0) 


# -- 0x0000c943 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c947, 0) 


# -- 0x0000c947 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c94b, 0) 


# -- 0x0000c94b 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c94e, 0) 


# -- 0x0000c94e 74 1b                                  je 0xc96b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c96b, 0) 
 2: goto (0x0000c950, 0) 


# -- 0x0000c950 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c954, 0) 


# -- 0x0000c954 48 8b 40 40                            mov 0x40(%rax),%rax
 0: %%0<64> := @[(rax<64> + 64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c958, 0) 


# -- 0x0000c958 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c95b, 0) 


# -- 0x0000c95b e8 d0 6a ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c960;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c960, 0)


# -- 0x0000c960 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c963, 0) 


# -- 0x0000c963 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c967, 0) 


# -- 0x0000c967 48 89 50 40                            mov %rdx,0x40(%rax)
 0: @[(rax<64> + 64<64>),8] := rdx<64>;
 1: goto (0x0000c96b, 0) 


# -- 0x0000c96b 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c96f, 0) 


# -- 0x0000c96f 48 8b 40 58                            mov 0x58(%rax),%rax
 0: %%0<64> := @[(rax<64> + 88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c973, 0) 


# -- 0x0000c973 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c976, 0) 


# -- 0x0000c976 74 1b                                  je 0xc993
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000c993, 0) 
 2: goto (0x0000c978, 0) 


# -- 0x0000c978 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c97c, 0) 


# -- 0x0000c97c 48 8b 40 58                            mov 0x58(%rax),%rax
 0: %%0<64> := @[(rax<64> + 88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c980, 0) 


# -- 0x0000c980 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c983, 0) 


# -- 0x0000c983 e8 a8 6a ff ff                         call 0x3430
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c988;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003430, 0) #call with return address @ (0x0000c988, 0)


# -- 0x0000c988 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c98b, 0) 


# -- 0x0000c98b 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c98f, 0) 


# -- 0x0000c98f 48 89 50 58                            mov %rdx,0x58(%rax)
 0: @[(rax<64> + 88<64>),8] := rdx<64>;
 1: goto (0x0000c993, 0) 


# -- 0x0000c993 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c997, 0) 


# -- 0x0000c997 8b 50 48                               mov 0x48(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 72<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c99a, 0) 


# -- 0x0000c99a 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c99e, 0) 


# -- 0x0000c99e 89 50 48                               mov %edx,0x48(%rax)
 0: @[(rax<64> + 72<64>),4] := rdx<64>{0,31};
 1: goto (0x0000c9a1, 0) 


# -- 0x0000c9a1 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c9a5, 0) 


# -- 0x0000c9a5 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000c9a6, 0) 


# -- 0x0000c9a6 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000c9a7 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000c9a8, 0) 


# -- 0x0000c9a8 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000c9ab, 0) 


# -- 0x0000c9ab 48 81 ec d0 00 00 00                   sub $0xd0,%rsp
 0: %%0<64> := (rsp<64> - 208<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000c9b2, 0) 


# -- 0x0000c9b2 89 bd 3c ff ff ff                      mov %edi,-0xc4(%rbp)
 0: @[(rbp<64> + -196<64>),4] := rdi<64>{0,31};
 1: goto (0x0000c9b8, 0) 


# -- 0x0000c9b8 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c9c1, 0) 


# -- 0x0000c9c1 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000c9c5, 0) 


# -- 0x0000c9c5 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000c9c7, 0) 


# -- 0x0000c9c7 48 8d 95 50 ff ff ff                   lea -0xb0(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000c9ce, 0) 


# -- 0x0000c9ce 8b 85 3c ff ff ff                      mov -0xc4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -196<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000c9d4, 0) 


# -- 0x0000c9d4 be 72 12 08 80                         mov $0x80081272,%esi
 0: rsi<64> := 0x0000000080081272;
 1: goto (0x0000c9d9, 0) 


# -- 0x0000c9d9 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000c9db, 0) 


# -- 0x0000c9db b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000c9e0, 0) 


# -- 0x0000c9e0 e8 ab 65 ff ff                         call 0x2f90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000c9e5;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f90, 0) #call with return address @ (0x0000c9e5, 0)


# -- 0x0000c9e5 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000c9e7, 0) 


# -- 0x0000c9e7 75 18                                  jne 0xca01
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ca01, 0) 
 2: goto (0x0000c9e9, 0) 


# -- 0x0000c9e9 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c9f0, 0) 


# -- 0x0000c9f0 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000c9f3, 0) 


# -- 0x0000c9f3 74 0c                                  je 0xca01
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000ca01, 0) 
 2: goto (0x0000c9f5, 0) 


# -- 0x0000c9f5 48 8b 85 50 ff ff ff                   mov -0xb0(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -176<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000c9fc, 0) 


# -- 0x0000c9fc e9 87 00 00 00                         jmp 0xca88
 0: goto (0x0000ca88, 0) 


# -- 0x0000ca01 48 c7 45 90 00 00 00 00                movq $0x0,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),8] := 0<64>;
 1: goto (0x0000ca09, 0) 


# -- 0x0000ca09 48 8d 95 60 ff ff ff                   lea -0xa0(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -160<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ca10, 0) 


# -- 0x0000ca10 8b 85 3c ff ff ff                      mov -0xc4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -196<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca16, 0) 


# -- 0x0000ca16 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ca19, 0) 


# -- 0x0000ca19 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ca1b, 0) 


# -- 0x0000ca1b e8 90 0e 00 00                         call 0xd8b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ca20;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d8b0, 0) #call with return address @ (0x0000ca20, 0)


# -- 0x0000ca20 89 85 4c ff ff ff                      mov %eax,-0xb4(%rbp)
 0: @[(rbp<64> + -180<64>),4] := rax<64>{0,31};
 1: goto (0x0000ca26, 0) 


# -- 0x0000ca26 83 bd 4c ff ff ff 00                   cmpl $0x0,-0xb4(%rbp)
 0: %%0<32> := @[(rbp<64> + -180<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000ca2d, 0) 


# -- 0x0000ca2d 75 21                                  jne 0xca50
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000ca50, 0) 
 2: goto (0x0000ca2f, 0) 


# -- 0x0000ca2f 8b 85 78 ff ff ff                      mov -0x88(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -136<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca35, 0) 


# -- 0x0000ca35 25 00 f0 00 00                         and $0xf000,%eax
 0: %%0<32> := (0x0000f000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000ca3a, 0) 


# -- 0x0000ca3a 3d 00 80 00 00                         cmp $0x8000,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 0x00008000);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000ca3f, 0) 


# -- 0x0000ca3f 74 09                                  je 0xca4a
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000ca4a, 0) 
 2: goto (0x0000ca41, 0) 


# -- 0x0000ca41 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca45, 0) 


# -- 0x0000ca45 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000ca48, 0) 


# -- 0x0000ca48 7e 06                                  jle 0xca50
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000ca50, 0) 
 2: goto (0x0000ca4a, 0) 


# -- 0x0000ca4a 48 8b 45 90                            mov -0x70(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -112<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca4e, 0) 


# -- 0x0000ca4e eb 38                                  jmp 0xca88
 0: goto (0x0000ca88, 0) 


# -- 0x0000ca50 8b 85 3c ff ff ff                      mov -0xc4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -196<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca56, 0) 


# -- 0x0000ca56 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x0000ca5b, 0) 


# -- 0x0000ca5b be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000ca60, 0) 


# -- 0x0000ca60 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ca62, 0) 


# -- 0x0000ca62 e8 09 6a ff ff                         call 0x3470
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ca67;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003470, 0) #call with return address @ (0x0000ca67, 0)


# -- 0x0000ca67 48 89 85 58 ff ff ff                   mov %rax,-0xa8(%rbp)
 0: @[(rbp<64> + -168<64>),8] := rax<64>;
 1: goto (0x0000ca6e, 0) 


# -- 0x0000ca6e 48 83 bd 58 ff ff ff 00                cmpq $0x0,-0xa8(%rbp)
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000ca76, 0) 


# -- 0x0000ca76 7e 09                                  jle 0xca81
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000ca81, 0) 
 2: goto (0x0000ca78, 0) 


# -- 0x0000ca78 48 8b 85 58 ff ff ff                   mov -0xa8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -168<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ca7f, 0) 


# -- 0x0000ca7f eb 07                                  jmp 0xca88
 0: goto (0x0000ca88, 0) 


# -- 0x0000ca81 48 c7 c0 ff ff ff ff                   mov $0xffffffffffffffff,%rax
 0: rax<64> := -1<64>;
 1: goto (0x0000ca88, 0) 


# -- 0x0000ca88 48 8b 4d f8                            mov -0x8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ca8c, 0) 


# -- 0x0000ca8c 64 48 33 0c 25 28 00 00 00             xor %fs:0x28,%rcx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rcx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rcx<64>{0} ^ %%0<64>{0}) ^ (rcx<64>{4} ^ %%0<64>{4})) ^
        ((rcx<64>{2} ^ %%0<64>{2}) ^ (rcx<64>{6} ^ %%0<64>{6}))) ^
       (((rcx<64>{1} ^ %%0<64>{1}) ^ (rcx<64>{5} ^ %%0<64>{5})) ^
        ((rcx<64>{3} ^ %%0<64>{3}) ^ (rcx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rcx<64> := %%1<64>;
12: goto (0x0000ca95, 0) 


# -- 0x0000ca95 74 05                                  je 0xca9c
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000ca9c, 0) 
 2: goto (0x0000ca97, 0) 


# -- 0x0000ca97 e8 d4 63 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ca9c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000ca9c, 0)


# -- 0x0000ca9c c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000ca9d, 0) 


# -- 0x0000ca9d c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000ca9e 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000ca9f, 0) 


# -- 0x0000ca9f 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000caa2, 0) 


# -- 0x0000caa2 48 83 ec 60                            sub $0x60,%rsp
 0: %%0<64> := (rsp<64> - 96<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000caa6, 0) 


# -- 0x0000caa6 48 89 7d a8                            mov %rdi,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),8] := rdi<64>;
 1: goto (0x0000caaa, 0) 


# -- 0x0000caaa 48 89 75 a0                            mov %rsi,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),8] := rsi<64>;
 1: goto (0x0000caae, 0) 


# -- 0x0000caae 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cab2, 0) 


# -- 0x0000cab2 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cab9, 0) 


# -- 0x0000cab9 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cabc, 0) 


# -- 0x0000cabc 83 e0 01                               and $0x1,%eax
 0: %%0<1> := ! (rax<64>{0});
 1: %%1<1> := ! (rax<64>{0});
 2: %%2<64> := (1<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000cabf, 0) 


# -- 0x0000cabf 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000cac1, 0) 


# -- 0x0000cac1 74 1f                                  je 0xcae2
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000cae2, 0) 
 2: goto (0x0000cac3, 0) 


# -- 0x0000cac3 48 8d 0d 76 2b 00 00                   lea 0x2b76(%rip),%rcx
 0: rcx<64> := 0x000000000000f640;
 1: goto (0x0000caca, 0) 


# -- 0x0000caca ba 0a 01 00 00                         mov $0x10a,%edx
 0: rdx<64> := 266<64>;
 1: goto (0x0000cacf, 0) 


# -- 0x0000cacf 48 8d 35 53 2a 00 00                   lea 0x2a53(%rip),%rsi
 0: rsi<64> := 0x000000000000f529;
 1: goto (0x0000cad6, 0) 


# -- 0x0000cad6 48 8d 3d f3 2a 00 00                   lea 0x2af3(%rip),%rdi
 0: rdi<64> := 0x000000000000f5d0;
 1: goto (0x0000cadd, 0) 


# -- 0x0000cadd e8 5e 64 ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cae2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x0000cae2, 0)


# -- 0x0000cae2 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cae6, 0) 


# -- 0x0000cae6 48 8b 50 10                            mov 0x10(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000caea, 0) 


# -- 0x0000caea 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000caee, 0) 


# -- 0x0000caee 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000caf1, 0) 


# -- 0x0000caf1 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000caf3, 0) 


# -- 0x0000caf3 48 01 c2                               add %rax,%rdx
 0: %%0<64> := (rdx<64> & rax<64>);
 1: %%1<64> := (rdx<64> + rax<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> | rax<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rdx<64>) & ! (rax<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rdx<64> := %%1<64>;
16: goto (0x0000caf6, 0) 


# -- 0x0000caf6 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cafa, 0) 


# -- 0x0000cafa 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cafd, 0) 


# -- 0x0000cafd 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000cb00, 0) 


# -- 0x0000cb00 76 1f                                  jbe 0xcb21
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000cb21, 0) 
 2: goto (0x0000cb02, 0) 


# -- 0x0000cb02 48 8d 0d 37 2b 00 00                   lea 0x2b37(%rip),%rcx
 0: rcx<64> := 0x000000000000f640;
 1: goto (0x0000cb09, 0) 


# -- 0x0000cb09 ba 0b 01 00 00                         mov $0x10b,%edx
 0: rdx<64> := 267<64>;
 1: goto (0x0000cb0e, 0) 


# -- 0x0000cb0e 48 8d 35 14 2a 00 00                   lea 0x2a14(%rip),%rsi
 0: rsi<64> := 0x000000000000f529;
 1: goto (0x0000cb15, 0) 


# -- 0x0000cb15 48 8d 3d dc 2a 00 00                   lea 0x2adc(%rip),%rdi
 0: rdi<64> := 0x000000000000f5f8;
 1: goto (0x0000cb1c, 0) 


# -- 0x0000cb1c e8 1f 64 ff ff                         call 0x2f40
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cb21;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002f40, 0) #call with return address @ (0x0000cb21, 0)


# -- 0x0000cb21 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb25, 0) 


# -- 0x0000cb25 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb2c, 0) 


# -- 0x0000cb2c 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb2f, 0) 


# -- 0x0000cb2f 83 e0 04                               and $0x4,%eax
 0: %%0<32> := (4<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{2});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000cb32, 0) 


# -- 0x0000cb32 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000cb34, 0) 


# -- 0x0000cb34 74 0a                                  je 0xcb40
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000cb40, 0) 
 2: goto (0x0000cb36, 0) 


# -- 0x0000cb36 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000cb3b, 0) 


# -- 0x0000cb3b e9 d5 01 00 00                         jmp 0xcd15
 0: goto (0x0000cd15, 0) 


# -- 0x0000cb40 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb44, 0) 


# -- 0x0000cb44 48 8b 80 e0 00 00 00                   mov 0xe0(%rax),%rax
 0: %%0<64> := @[(rax<64> + 224<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb4b, 0) 


# -- 0x0000cb4b 8b 40 20                               mov 0x20(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb4e, 0) 


# -- 0x0000cb4e 25 00 20 00 00                         and $0x2000,%eax
 0: %%0<32> := (0x00002000 & rax<64>{0,31});
 1: %%1<1> := (0<32> = %%0<32>);
 2: %%2<64> := (extu %%0<32> 64);
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000cb53, 0) 


# -- 0x0000cb53 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000cb55, 0) 


# -- 0x0000cb55 74 78                                  je 0xcbcf
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000cbcf, 0) 
 2: goto (0x0000cb57, 0) 


# -- 0x0000cb57 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb5b, 0) 


# -- 0x0000cb5b 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb5f, 0) 


# -- 0x0000cb5f 48 05 ff 0f 00 00                      add $0xfff,%rax
 0: %%0<64> := (rax<64> + 4095<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000cb65, 0) 


# -- 0x0000cb65 48 25 00 f0 ff ff                      and $0xfffffffffffff000,%rax
 0: %%0<64> := (-4096<64> & rax<64>);
 1: %%1<1> := (0<64> = %%0<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%0<64>;
10: goto (0x0000cb6b, 0) 


# -- 0x0000cb6b 48 89 45 b8                            mov %rax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rax<64>;
 1: goto (0x0000cb6f, 0) 


# -- 0x0000cb6f 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb73, 0) 


# -- 0x0000cb73 48 8b 50 10                            mov 0x10(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cb77, 0) 


# -- 0x0000cb77 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb7b, 0) 


# -- 0x0000cb7b 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb7e, 0) 


# -- 0x0000cb7e 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb80, 0) 


# -- 0x0000cb80 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000cb83, 0) 


# -- 0x0000cb83 48 25 00 f0 ff ff                      and $0xfffffffffffff000,%rax
 0: %%0<64> := (-4096<64> & rax<64>);
 1: %%1<1> := (0<64> = %%0<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := -1<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%0<64>;
10: goto (0x0000cb89, 0) 


# -- 0x0000cb89 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000cb8d, 0) 


# -- 0x0000cb8d eb 2c                                  jmp 0xcbbb
 0: goto (0x0000cbbb, 0) 


# -- 0x0000cb8f 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb93, 0) 


# -- 0x0000cb93 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb96, 0) 


# -- 0x0000cb96 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000cb99, 0) 


# -- 0x0000cb99 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cb9d, 0) 


# -- 0x0000cb9d 48 8b 80 90 00 00 00                   mov 0x90(%rax),%rax
 0: %%0<64> := @[(rax<64> + 144<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cba4, 0) 


# -- 0x0000cba4 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cba8, 0) 


# -- 0x0000cba8 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000cbab, 0) 


# -- 0x0000cbab 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cbae, 0) 


# -- 0x0000cbae e8 91 03 00 00                         call 0xcf44
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cbb3;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf44, 0) #call with return address @ (0x0000cbb3, 0)


# -- 0x0000cbb3 48 81 45 b8 00 10 00 00                addq $0x1000,-0x48(%rbp)
 0: %%0<64> := (rbp<64> + -72<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 4096<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000cbbb, 0) 


# -- 0x0000cbbb 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbbf, 0) 


# -- 0x0000cbbf 48 3b 45 d8                            cmp -0x28(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -40<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: goto (0x0000cbc3, 0) 


# -- 0x0000cbc3 7c ca                                  jl 0xcb8f
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x0000cb8f, 0) 
 2: goto (0x0000cbc5, 0) 


# -- 0x0000cbc5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000cbca, 0) 


# -- 0x0000cbca e9 46 01 00 00                         jmp 0xcd15
 0: goto (0x0000cd15, 0) 


# -- 0x0000cbcf 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbd3, 0) 


# -- 0x0000cbd3 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbda, 0) 


# -- 0x0000cbda 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbdd, 0) 


# -- 0x0000cbdd 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cbe1, 0) 


# -- 0x0000cbe1 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbe4, 0) 


# -- 0x0000cbe4 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x0000cbe8, 0) 


# -- 0x0000cbe8 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x0000cbec, 0) 


# -- 0x0000cbec c7 45 b4 01 00 00 00                   movl $0x1,-0x4c(%rbp)
 0: @[(rbp<64> + -76<64>),4] := 1<32>;
 1: goto (0x0000cbf3, 0) 


# -- 0x0000cbf3 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbf7, 0) 


# -- 0x0000cbf7 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cbfe, 0) 


# -- 0x0000cbfe 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc01, 0) 


# -- 0x0000cc01 8b 45 b4                               mov -0x4c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -76<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc04, 0) 


# -- 0x0000cc04 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000cc06, 0) 


# -- 0x0000cc06 76 2c                                  jbe 0xcc34
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000cc34, 0) 
 2: goto (0x0000cc08, 0) 


# -- 0x0000cc08 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc0c, 0) 


# -- 0x0000cc0c 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc13, 0) 


# -- 0x0000cc13 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc16, 0) 


# -- 0x0000cc16 8b 55 b4                               mov -0x4c(%rbp),%edx
 0: %%0<64> := (extu @[(rbp<64> + -76<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc19, 0) 


# -- 0x0000cc19 48 63 d2                               movslq %edx,%rdx
 0: %%0<64> := (exts rdx<64>{0,31} 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc1c, 0) 


# -- 0x0000cc1c 48 c1 e2 04                            shl $0x4,%rdx
 0: %%0<64> := (rdx<64> << 4<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rdx<64> << 3<64>)));
 2: %%2<1> := ! (((rdx<64>{0} ^ rdx<64>{2}) ^ (rdx<64>{1} ^ rdx<64>{3})));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: cf<1> := %%1<1>;
 7: pf<1> := %%2<1>;
 8: af<1> := %%3<1>;
 9: zf<1> := %%4<1>;
10: sf<1> := %%5<1>;
11: of<1> := %%3<1>;
12: rdx<64> := %%0<64>;
13: goto (0x0000cc20, 0) 


# -- 0x0000cc20 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000cc23, 0) 


# -- 0x0000cc23 48 8b 50 08                            mov 0x8(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc27, 0) 


# -- 0x0000cc27 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc2a, 0) 


# -- 0x0000cc2a 48 89 45 f0                            mov %rax,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),8] := rax<64>;
 1: goto (0x0000cc2e, 0) 


# -- 0x0000cc2e 48 89 55 f8                            mov %rdx,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdx<64>;
 1: goto (0x0000cc32, 0) 


# -- 0x0000cc32 eb 12                                  jmp 0xcc46
 0: goto (0x0000cc46, 0) 


# -- 0x0000cc34 c7 45 f0 ff ff ff ff                   movl $0xffffffff,-0x10(%rbp)
 0: @[(rbp<64> + -16<64>),4] := -1<32>;
 1: goto (0x0000cc3b, 0) 


# -- 0x0000cc3b 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc3f, 0) 


# -- 0x0000cc3f 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc42, 0) 


# -- 0x0000cc42 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000cc46, 0) 


# -- 0x0000cc46 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc4a, 0) 


# -- 0x0000cc4a 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc4d, 0) 


# -- 0x0000cc4d 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc51, 0) 


# -- 0x0000cc51 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc55, 0) 


# -- 0x0000cc55 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000cc58, 0) 


# -- 0x0000cc58 77 69                                  ja 0xccc3
 0: if ! ((cf<1> | zf<1>)) goto 1 else goto 2
 1: goto (0x0000ccc3, 0) 
 2: goto (0x0000cc5a, 0) 


# -- 0x0000cc5a 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc5e, 0) 


# -- 0x0000cc5e 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc62, 0) 


# -- 0x0000cc62 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000cc65, 0) 


# -- 0x0000cc65 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc69, 0) 


# -- 0x0000cc69 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc6c, 0) 


# -- 0x0000cc6c 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc6e, 0) 


# -- 0x0000cc6e 48 39 c2                               cmp %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000cc71, 0) 


# -- 0x0000cc71 7c 50                                  jl 0xccc3
 0: if (sf<1> ^ of<1>) goto 1 else goto 2
 1: goto (0x0000ccc3, 0) 
 2: goto (0x0000cc73, 0) 


# -- 0x0000cc73 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc77, 0) 


# -- 0x0000cc77 48 8b 40 10                            mov 0x10(%rax),%rax
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc7b, 0) 


# -- 0x0000cc7b 48 8b 55 e8                            mov -0x18(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc7f, 0) 


# -- 0x0000cc7f 48 29 d0                               sub %rdx,%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := (rax<64> - rdx<64>);
 2: %%2<64> := (%%0<64> & rdx<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdx<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (rdx<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rax<64> := %%1<64>;
17: goto (0x0000cc82, 0) 


# -- 0x0000cc82 48 89 45 c0                            mov %rax,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rax<64>;
 1: goto (0x0000cc86, 0) 


# -- 0x0000cc86 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc8a, 0) 


# -- 0x0000cc8a 48 2b 45 c0                            sub -0x40(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -64<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x0000cc8e, 0) 


# -- 0x0000cc8e 48 89 45 c8                            mov %rax,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rax<64>;
 1: goto (0x0000cc92, 0) 


# -- 0x0000cc92 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cc96, 0) 


# -- 0x0000cc96 48 2b 45 c0                            sub -0x40(%rbp),%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := @[(rbp<64> + -64<64>),8];
 2: %%2<64> := (rax<64> - %%1<64>);
 3: %%3<64> := (%%0<64> & %%1<64>);
 4: %%4<64> := ! (%%2<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | %%1<64>) & %%2<64>) | (%%3<64> & %%4<64>))));
 6: %%6<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%2<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (%%1<64>)) & %%4<64>) | (%%3<64> & %%2<64>))));
11: cf<1> := %%5<1>;
12: pf<1> := %%6<1>;
13: af<1> := %%7<1>;
14: zf<1> := %%8<1>;
15: sf<1> := %%9<1>;
16: of<1> := %%10<1>;
17: rax<64> := %%2<64>;
18: goto (0x0000cc9a, 0) 


# -- 0x0000cc9a 48 8b 55 a8                            mov -0x58(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cc9e, 0) 


# -- 0x0000cc9e 8b 52 18                               mov 0x18(%rdx),%edx
 0: %%0<64> := (extu @[(rdx<64> + 24<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cca1, 0) 


# -- 0x0000cca1 89 d2                                  mov %edx,%edx
 0: %%0<64> := (0x00000000ffffffff & rdx<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cca3, 0) 


# -- 0x0000cca3 48 39 d0                               cmp %rdx,%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := (rax<64> - rdx<64>);
 2: %%2<64> := (%%0<64> & rdx<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdx<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (rdx<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000cca6, 0) 


# -- 0x0000cca6 48 0f 4f c2                            cmovg %rdx,%rax
 0: %%0<64> := ! ((zf<1> | (sf<1> ^ of<1>))) ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccaa, 0) 


# -- 0x0000ccaa 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x0000ccae, 0) 


# -- 0x0000ccae 8b 45 e0                               mov -0x20(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -32<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccb1, 0) 


# -- 0x0000ccb1 48 8b 55 d0                            mov -0x30(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ccb5, 0) 


# -- 0x0000ccb5 48 8b 4d c0                            mov -0x40(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ccb9, 0) 


# -- 0x0000ccb9 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ccbc, 0) 


# -- 0x0000ccbc 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ccbe, 0) 


# -- 0x0000ccbe e8 68 a1 ff ff                         call 0x6e2b
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ccc3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00006e2b, 0) #call with return address @ (0x0000ccc3, 0)


# -- 0x0000ccc3 48 8b 45 f0                            mov -0x10(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -16<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccc7, 0) 


# -- 0x0000ccc7 48 8b 55 f8                            mov -0x8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cccb, 0) 


# -- 0x0000cccb 48 89 45 e0                            mov %rax,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rax<64>;
 1: goto (0x0000cccf, 0) 


# -- 0x0000cccf 48 89 55 e8                            mov %rdx,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdx<64>;
 1: goto (0x0000ccd3, 0) 


# -- 0x0000ccd3 83 45 b4 01                            addl $0x1,-0x4c(%rbp)
 0: %%0<64> := (rbp<64> + -76<64>);
 1: %%1<32> := @[%%0<64>,4];
 2: %%2<32> := (%%1<32> + 1<32>);
 3: %%3<1> := (0x80000000 = (0x80000000 & (%%1<32> & ! (%%2<32>))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (! (%%1<32>) & %%2<32>)));
 9: @[%%0<64>,4] := %%2<32>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000ccd7, 0) 


# -- 0x0000ccd7 48 8b 45 a0                            mov -0x60(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -96<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccdb, 0) 


# -- 0x0000ccdb 48 8b 80 98 00 00 00                   mov 0x98(%rax),%rax
 0: %%0<64> := @[(rax<64> + 152<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cce2, 0) 


# -- 0x0000cce2 8b 50 08                               mov 0x8(%rax),%edx
 0: %%0<64> := (extu @[(rax<64> + 8<64>),4] 64);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cce5, 0) 


# -- 0x0000cce5 8b 45 b4                               mov -0x4c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -76<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cce8, 0) 


# -- 0x0000cce8 39 c2                                  cmp %eax,%edx
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := rdx<64>{0,31};
 2: %%2<32> := ! (%%1<32>);
 3: %%3<32> := (%%1<32> - %%0<32>);
 4: %%4<32> := (%%2<32> & %%0<32>);
 5: %%5<32> := ! (%%3<32>);
 6: %%6<1> :=
     (0x80000000 =
      (0x80000000 & (((%%2<32> | %%0<32>) & %%3<32>) | (%%4<32> & %%5<32>))))
     ;
 7: %%7<1> :=
     !
     ((((%%3<32>{0} ^ %%3<32>{4}) ^ (%%3<32>{2} ^ %%3<32>{6})) ^
       ((%%3<32>{1} ^ %%3<32>{5}) ^ (%%3<32>{3} ^ %%3<32>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<32> = %%3<32>);
10: %%10<1> := (0<32> <> (0x80000000 & %%3<32>));
11: %%11<1> :=
     (0x80000000 =
      (0x80000000 &
       (((%%1<32> & ! (%%0<32>)) & %%5<32>) | (%%4<32> & %%3<32>))));
12: cf<1> := %%6<1>;
13: pf<1> := %%7<1>;
14: af<1> := %%8<1>;
15: zf<1> := %%9<1>;
16: sf<1> := %%10<1>;
17: of<1> := %%11<1>;
18: goto (0x0000ccea, 0) 


# -- 0x0000ccea 76 24                                  jbe 0xcd10
 0: if (cf<1> | zf<1>) goto 1 else goto 2
 1: goto (0x0000cd10, 0) 
 2: goto (0x0000ccec, 0) 


# -- 0x0000ccec 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccf0, 0) 


# -- 0x0000ccf0 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ccf3, 0) 


# -- 0x0000ccf3 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccf7, 0) 


# -- 0x0000ccf7 48 8b 50 10                            mov 0x10(%rax),%rdx
 0: %%0<64> := @[(rax<64> + 16<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ccfb, 0) 


# -- 0x0000ccfb 48 8b 45 a8                            mov -0x58(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ccff, 0) 


# -- 0x0000ccff 8b 40 18                               mov 0x18(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 24<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd02, 0) 


# -- 0x0000cd02 89 c0                                  mov %eax,%eax
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd04, 0) 


# -- 0x0000cd04 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000cd07, 0) 


# -- 0x0000cd07 48 39 c1                               cmp %rax,%rcx
 0: %%0<64> := ! (rcx<64>);
 1: %%1<64> := (rcx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rcx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000cd0a, 0) 


# -- 0x0000cd0a 0f 82 e3 fe ff ff                      jb 0xcbf3
 0: if cf<1> goto 1 else goto 2
 1: goto (0x0000cbf3, 0) 
 2: goto (0x0000cd10, 0) 


# -- 0x0000cd10 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000cd15, 0) 


# -- 0x0000cd15 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000cd16, 0) 


# -- 0x0000cd16 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000cd17 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd18, 0) 


# -- 0x0000cd18 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000cd1b, 0) 


# -- 0x0000cd1b 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000cd1f, 0) 


# -- 0x0000cd1f 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000cd23, 0) 


# -- 0x0000cd23 48 8d 05 f6 44 20 00                   lea 0x2044f6(%rip),%rax
 0: rax<64> := 0x0000000000211220;
 1: goto (0x0000cd2a, 0) 


# -- 0x0000cd2a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cd2d, 0) 


# -- 0x0000cd2d e8 fe 67 ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cd32;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x0000cd32, 0)


# -- 0x0000cd32 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd36, 0) 


# -- 0x0000cd36 8b 40 60                               mov 0x60(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd39, 0) 


# -- 0x0000cd39 8d 50 01                               lea 0x1(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + 1<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cd3c, 0) 


# -- 0x0000cd3c 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd40, 0) 


# -- 0x0000cd40 89 50 60                               mov %edx,0x60(%rax)
 0: @[(rax<64> + 96<64>),4] := rdx<64>{0,31};
 1: goto (0x0000cd43, 0) 


# -- 0x0000cd43 48 8d 05 d6 44 20 00                   lea 0x2044d6(%rip),%rax
 0: rax<64> := 0x0000000000211220;
 1: goto (0x0000cd4a, 0) 


# -- 0x0000cd4a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cd4d, 0) 


# -- 0x0000cd4d e8 ae 64 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cd52;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x0000cd52, 0)


# -- 0x0000cd52 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd56, 0) 


# -- 0x0000cd56 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000cd57, 0) 


# -- 0x0000cd57 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000cd58 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cd59, 0) 


# -- 0x0000cd59 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000cd5c, 0) 


# -- 0x0000cd5c 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000cd60, 0) 


# -- 0x0000cd60 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000cd64, 0) 


# -- 0x0000cd64 48 8d 05 b5 44 20 00                   lea 0x2044b5(%rip),%rax
 0: rax<64> := 0x0000000000211220;
 1: goto (0x0000cd6b, 0) 


# -- 0x0000cd6b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cd6e, 0) 


# -- 0x0000cd6e e8 bd 67 ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cd73;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x0000cd73, 0)


# -- 0x0000cd73 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd77, 0) 


# -- 0x0000cd77 8b 40 60                               mov 0x60(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd7a, 0) 


# -- 0x0000cd7a 8d 50 ff                               lea -0x1(%rax),%edx
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + -1<64>));
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cd7d, 0) 


# -- 0x0000cd7d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd81, 0) 


# -- 0x0000cd81 89 50 60                               mov %edx,0x60(%rax)
 0: @[(rax<64> + 96<64>),4] := rdx<64>{0,31};
 1: goto (0x0000cd84, 0) 


# -- 0x0000cd84 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd88, 0) 


# -- 0x0000cd88 8b 40 60                               mov 0x60(%rax),%eax
 0: %%0<64> := (extu @[(rax<64> + 96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd8b, 0) 


# -- 0x0000cd8b 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000cd8d, 0) 


# -- 0x0000cd8d 75 14                                  jne 0xcda3
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000cda3, 0) 
 2: goto (0x0000cd8f, 0) 


# -- 0x0000cd8f 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cd93, 0) 


# -- 0x0000cd93 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cd96, 0) 


# -- 0x0000cd96 e8 65 5f ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cd9b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x0000cd9b, 0)


# -- 0x0000cd9b 48 c7 45 f8 00 00 00 00                movq $0x0,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := 0<64>;
 1: goto (0x0000cda3, 0) 


# -- 0x0000cda3 48 8d 05 76 44 20 00                   lea 0x204476(%rip),%rax
 0: rax<64> := 0x0000000000211220;
 1: goto (0x0000cdaa, 0) 


# -- 0x0000cdaa 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cdad, 0) 


# -- 0x0000cdad e8 4e 64 ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cdb2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x0000cdb2, 0)


# -- 0x0000cdb2 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cdb6, 0) 


# -- 0x0000cdb6 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000cdb7, 0) 


# -- 0x0000cdb7 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000cdb8 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cdb9, 0) 


# -- 0x0000cdb9 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000cdbc, 0) 


# -- 0x0000cdbc 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000cdc0, 0) 


# -- 0x0000cdc0 48 89 7d d8                            mov %rdi,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdi<64>;
 1: goto (0x0000cdc4, 0) 


# -- 0x0000cdc4 89 75 d4                               mov %esi,-0x2c(%rbp)
 0: @[(rbp<64> + -44<64>),4] := rsi<64>{0,31};
 1: goto (0x0000cdc7, 0) 


# -- 0x0000cdc7 48 89 55 c8                            mov %rdx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdx<64>;
 1: goto (0x0000cdcb, 0) 


# -- 0x0000cdcb 48 89 4d c0                            mov %rcx,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rcx<64>;
 1: goto (0x0000cdcf, 0) 


# -- 0x0000cdcf 4c 89 45 b8                            mov %r8,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := r8<64>;
 1: goto (0x0000cdd3, 0) 


# -- 0x0000cdd3 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cddc, 0) 


# -- 0x0000cddc 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000cde0, 0) 


# -- 0x0000cde0 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000cde2, 0) 


# -- 0x0000cde2 83 7d d4 09                            cmpl $0x9,-0x2c(%rbp)
 0: %%0<32> := @[(rbp<64> + -44<64>),4];
 1: %%1<32> := (%%0<32> - 9<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000cde6, 0) 


# -- 0x0000cde6 7f 0c                                  jg 0xcdf4
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000cdf4, 0) 
 2: goto (0x0000cde8, 0) 


# -- 0x0000cde8 48 8d 3d 59 28 00 00                   lea 0x2859(%rip),%rdi
 0: rdi<64> := 0x000000000000f648;
 1: goto (0x0000cdef, 0) 


# -- 0x0000cdef e8 44 08 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cdf4;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000cdf4, 0)


# -- 0x0000cdf4 48 81 7d c8 ff ff 3f 00                cmpq $0x3fffff,-0x38(%rbp)
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: %%1<64> := (%%0<64> - 0x00000000003fffff);
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000cdfc, 0) 


# -- 0x0000cdfc 7f 7c                                  jg 0xce7a
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000ce7a, 0) 
 2: goto (0x0000cdfe, 0) 


# -- 0x0000cdfe 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce02, 0) 


# -- 0x0000ce02 48 8d 90 ff 0f 00 00                   lea 0xfff(%rax),%rdx
 0: %%0<64> := (rax<64> + 4095<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce09, 0) 


# -- 0x0000ce09 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000ce0c, 0) 


# -- 0x0000ce0c 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce10, 0) 


# -- 0x0000ce10 48 c1 f8 0c                            sar $0xc,%rax
 0: %%0<64> := (rax<64> >>s 12<64>);
 1: %%1<1> := rax<64>{11};
 2: %%2<1> :=
     !
     ((((rax<64>{12} ^ rax<64>{16}) ^ (rax<64>{14} ^ rax<64>{18})) ^
       ((rax<64>{13} ^ rax<64>{17}) ^ (rax<64>{15} ^ rax<64>{19}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000ce14, 0) 


# -- 0x0000ce14 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce17, 0) 


# -- 0x0000ce17 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce1a, 0) 


# -- 0x0000ce1a 48 c1 f8 3f                            sar $0x3f,%rax
 0: %%0<64> := (rax<64> >>s 63<64>);
 1: %%1<1> := rax<64>{62};
 2: %%2<1> := ! (rax<64>{63});
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000ce1e, 0) 


# -- 0x0000ce1e 48 c1 e8 36                            shr $0x36,%rax
 0: %%0<64> := (rax<64> >>u 54<64>);
 1: %%1<1> := rax<64>{53};
 2: %%2<1> :=
     !
     ((((rax<64>{54} ^ rax<64>{58}) ^ (rax<64>{56} ^ rax<64>{60})) ^
       ((rax<64>{55} ^ rax<64>{59}) ^ (rax<64>{57} ^ rax<64>{61}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000ce22, 0) 


# -- 0x0000ce22 48 01 c2                               add %rax,%rdx
 0: %%0<64> := (rdx<64> & rax<64>);
 1: %%1<64> := (rdx<64> + rax<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> | rax<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rdx<64>) & ! (rax<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rdx<64> := %%1<64>;
16: goto (0x0000ce25, 0) 


# -- 0x0000ce25 81 e2 ff 03 00 00                      and $0x3ff,%edx
 0: %%0<1> :=
     !
     ((((rdx<64>{0} ^ rdx<64>{4}) ^ (rdx<64>{2} ^ rdx<64>{6})) ^
       ((rdx<64>{1} ^ rdx<64>{5}) ^ (rdx<64>{3} ^ rdx<64>{7}))));
 1: %%1<1> := (0<10> = rdx<64>{0,9});
 2: %%2<64> := (1023<64> & rdx<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rdx<64> := %%2<64>;
10: goto (0x0000ce2b, 0) 


# -- 0x0000ce2b 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000ce2e, 0) 


# -- 0x0000ce2e 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce31, 0) 


# -- 0x0000ce31 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce34, 0) 


# -- 0x0000ce34 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce37, 0) 


# -- 0x0000ce37 48 63 f0                               movslq %eax,%rsi
 0: %%0<64> := (exts rax<64>{0,31} 64);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ce3a, 0) 


# -- 0x0000ce3a 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce3e, 0) 


# -- 0x0000ce3e 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ce41, 0) 


# -- 0x0000ce41 48 8d 15 2c 28 00 00                   lea 0x282c(%rip),%rdx
 0: rdx<64> := 0x000000000000f674;
 1: goto (0x0000ce48, 0) 


# -- 0x0000ce48 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000ce4b, 0) 


# -- 0x0000ce4b b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ce50, 0) 


# -- 0x0000ce50 e8 9b 60 ff ff                         call 0x2ef0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ce55;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ef0, 0) #call with return address @ (0x0000ce55, 0)


# -- 0x0000ce55 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce59, 0) 


# -- 0x0000ce59 48 8d 90 ff ff 3f 00                   lea 0x3fffff(%rax),%rdx
 0: %%0<64> := (rax<64> + 0x00000000003fffff);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce60, 0) 


# -- 0x0000ce60 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000ce63, 0) 


# -- 0x0000ce63 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce67, 0) 


# -- 0x0000ce67 48 c1 f8 16                            sar $0x16,%rax
 0: %%0<64> := (rax<64> >>s 22<64>);
 1: %%1<1> := rax<64>{21};
 2: %%2<1> :=
     !
     ((((rax<64>{22} ^ rax<64>{26}) ^ (rax<64>{24} ^ rax<64>{28})) ^
       ((rax<64>{23} ^ rax<64>{27}) ^ (rax<64>{25} ^ rax<64>{29}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000ce6b, 0) 


# -- 0x0000ce6b 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce6e, 0) 


# -- 0x0000ce6e 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce72, 0) 


# -- 0x0000ce72 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x0000ce75, 0) 


# -- 0x0000ce75 e9 b3 00 00 00                         jmp 0xcf2d
 0: goto (0x0000cf2d, 0) 


# -- 0x0000ce7a 48 8b 45 c8                            mov -0x38(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce7e, 0) 


# -- 0x0000ce7e 48 8d 90 ff 03 00 00                   lea 0x3ff(%rax),%rdx
 0: %%0<64> := (rax<64> + 1023<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ce85, 0) 


# -- 0x0000ce85 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000ce88, 0) 


# -- 0x0000ce88 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce8c, 0) 


# -- 0x0000ce8c 48 c1 f8 0a                            sar $0xa,%rax
 0: %%0<64> := (rax<64> >>s 10<64>);
 1: %%1<1> := rax<64>{9};
 2: %%2<1> :=
     !
     ((((rax<64>{10} ^ rax<64>{14}) ^ (rax<64>{12} ^ rax<64>{16})) ^
       ((rax<64>{11} ^ rax<64>{15}) ^ (rax<64>{13} ^ rax<64>{17}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000ce90, 0) 


# -- 0x0000ce90 49 89 c1                               mov %rax,%r9
 0: %%0<64> := rax<64>;
 1: r9<64> := %%0<64>;
 2: goto (0x0000ce93, 0) 


# -- 0x0000ce93 8b 45 d4                               mov -0x2c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -44<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce96, 0) 


# -- 0x0000ce96 8d 70 f7                               lea -0x9(%rax),%esi
 0: %%0<64> := (0x00000000ffffffff & (rax<64> + -9<64>));
 1: rsi<64> := %%0<64>;
 2: goto (0x0000ce99, 0) 


# -- 0x0000ce99 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000ce9d, 0) 


# -- 0x0000ce9d 48 8d 78 09                            lea 0x9(%rax),%rdi
 0: %%0<64> := (rax<64> + 9<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cea1, 0) 


# -- 0x0000cea1 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cea5, 0) 


# -- 0x0000cea5 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cea9, 0) 


# -- 0x0000cea9 49 89 d0                               mov %rdx,%r8
 0: %%0<64> := rdx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000ceac, 0) 


# -- 0x0000ceac 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ceaf, 0) 


# -- 0x0000ceaf 4c 89 ca                               mov %r9,%rdx
 0: %%0<64> := r9<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ceb2, 0) 


# -- 0x0000ceb2 e8 01 ff ff ff                         call 0xcdb8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000ceb7;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cdb8, 0) #call with return address @ (0x0000ceb7, 0)


# -- 0x0000ceb7 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cebb, 0) 


# -- 0x0000cebb 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cebe, 0) 


# -- 0x0000cebe 48 99                                  cqto
 0: %%0<64> := (rax<64> >>s 63<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cec0, 0) 


# -- 0x0000cec0 48 c1 ea 36                            shr $0x36,%rdx
 0: %%0<64> := (rdx<64> >>u 54<64>);
 1: %%1<1> := rdx<64>{53};
 2: %%2<1> :=
     !
     ((((rdx<64>{54} ^ rdx<64>{58}) ^ (rdx<64>{56} ^ rdx<64>{60})) ^
       ((rdx<64>{55} ^ rdx<64>{59}) ^ (rdx<64>{57} ^ rdx<64>{61}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rdx<64> := %%0<64>;
12: goto (0x0000cec4, 0) 


# -- 0x0000cec4 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000cec7, 0) 


# -- 0x0000cec7 25 ff 03 00 00                         and $0x3ff,%eax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<10> = rax<64>{0,9});
 2: %%2<64> := (1023<64> & rax<64>);
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := 0<1>;
 8: of<1> := 0<1>;
 9: rax<64> := %%2<64>;
10: goto (0x0000cecc, 0) 


# -- 0x0000cecc 48 29 d0                               sub %rdx,%rax
 0: %%0<64> := ! (rax<64>);
 1: %%1<64> := (rax<64> - rdx<64>);
 2: %%2<64> := (%%0<64> & rdx<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rdx<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> & ! (rdx<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rax<64> := %%1<64>;
17: goto (0x0000cecf, 0) 


# -- 0x0000cecf 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000ced2, 0) 


# -- 0x0000ced2 48 8d 45 ee                            lea -0x12(%rbp),%rax
 0: %%0<64> := (rbp<64> + -18<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000ced6, 0) 


# -- 0x0000ced6 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000ced9, 0) 


# -- 0x0000ced9 48 8d 15 9f 27 00 00                   lea 0x279f(%rip),%rdx
 0: rdx<64> := 0x000000000000f67f;
 1: goto (0x0000cee0, 0) 


# -- 0x0000cee0 be 0a 00 00 00                         mov $0xa,%esi
 0: rsi<64> := 10<64>;
 1: goto (0x0000cee5, 0) 


# -- 0x0000cee5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cee8, 0) 


# -- 0x0000cee8 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000ceed, 0) 


# -- 0x0000ceed e8 fe 5f ff ff                         call 0x2ef0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cef2;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ef0, 0) #call with return address @ (0x0000cef2, 0)


# -- 0x0000cef2 48 8d 4d ee                            lea -0x12(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -18<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000cef6, 0) 


# -- 0x0000cef6 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cefa, 0) 


# -- 0x0000cefa ba 09 00 00 00                         mov $0x9,%edx
 0: rdx<64> := 9<64>;
 1: goto (0x0000ceff, 0) 


# -- 0x0000ceff 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000cf02, 0) 


# -- 0x0000cf02 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cf05, 0) 


# -- 0x0000cf05 e8 76 62 ff ff                         call 0x3180
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cf0a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003180, 0) #call with return address @ (0x0000cf0a, 0)


# -- 0x0000cf0a 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf0e, 0) 


# -- 0x0000cf0e 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf11, 0) 


# -- 0x0000cf11 48 8d 90 ff 03 00 00                   lea 0x3ff(%rax),%rdx
 0: %%0<64> := (rax<64> + 1023<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cf18, 0) 


# -- 0x0000cf18 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000cf1b, 0) 


# -- 0x0000cf1b 48 0f 48 c2                            cmovs %rdx,%rax
 0: %%0<64> := sf<1> ? rdx<64> : rax<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf1f, 0) 


# -- 0x0000cf1f 48 c1 f8 0a                            sar $0xa,%rax
 0: %%0<64> := (rax<64> >>s 10<64>);
 1: %%1<1> := rax<64>{9};
 2: %%2<1> :=
     !
     ((((rax<64>{10} ^ rax<64>{14}) ^ (rax<64>{12} ^ rax<64>{16})) ^
       ((rax<64>{11} ^ rax<64>{15}) ^ (rax<64>{13} ^ rax<64>{17}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000cf23, 0) 


# -- 0x0000cf23 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cf26, 0) 


# -- 0x0000cf26 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf2a, 0) 


# -- 0x0000cf2a 48 89 10                               mov %rdx,(%rax)
 0: @[rax<64>,8] := rdx<64>;
 1: goto (0x0000cf2d, 0) 


# -- 0x0000cf2d 90                                     nop
 0: goto (0x0000cf2e, 0) 


# -- 0x0000cf2e 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf32, 0) 


# -- 0x0000cf32 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x0000cf3b, 0) 


# -- 0x0000cf3b 74 05                                  je 0xcf42
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000cf42, 0) 
 2: goto (0x0000cf3d, 0) 


# -- 0x0000cf3d e8 2e 5f ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cf42;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000cf42, 0)


# -- 0x0000cf42 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000cf43, 0) 


# -- 0x0000cf43 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000cf44 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf45, 0) 


# -- 0x0000cf45 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000cf48, 0) 


# -- 0x0000cf48 41 56                                  push %r14
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r14<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf4a, 0) 


# -- 0x0000cf4a 41 55                                  push %r13
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r13<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf4c, 0) 


# -- 0x0000cf4c 41 54                                  push %r12
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r12<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf4e, 0) 


# -- 0x0000cf4e 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cf4f, 0) 


# -- 0x0000cf4f 48 83 ec 50                            sub $0x50,%rsp
 0: %%0<64> := (rsp<64> - 80<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000cf53, 0) 


# -- 0x0000cf53 48 89 7d b8                            mov %rdi,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rdi<64>;
 1: goto (0x0000cf57, 0) 


# -- 0x0000cf57 48 89 75 b0                            mov %rsi,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rsi<64>;
 1: goto (0x0000cf5b, 0) 


# -- 0x0000cf5b 48 89 55 a8                            mov %rdx,-0x58(%rbp)
 0: @[(rbp<64> + -88<64>),8] := rdx<64>;
 1: goto (0x0000cf5f, 0) 


# -- 0x0000cf5f 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf68, 0) 


# -- 0x0000cf68 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000cf6c, 0) 


# -- 0x0000cf6c 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000cf6e, 0) 


# -- 0x0000cf6e 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf71, 0) 


# -- 0x0000cf71 49 89 c4                               mov %rax,%r12
 0: %%0<64> := rax<64>;
 1: r12<64> := %%0<64>;
 2: goto (0x0000cf74, 0) 


# -- 0x0000cf74 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cf78, 0) 


# -- 0x0000cf78 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cf7b, 0) 


# -- 0x0000cf7b e8 d0 5e ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cf80;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000cf80, 0)


# -- 0x0000cf80 48 05 00 01 00 00                      add $0x100,%rax
 0: %%0<64> := (rax<64> + 256<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000cf86, 0) 


# -- 0x0000cf86 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cf89, 0) 


# -- 0x0000cf89 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000cf8d, 0) 


# -- 0x0000cf8d 48 89 55 c8                            mov %rdx,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rdx<64>;
 1: goto (0x0000cf91, 0) 


# -- 0x0000cf91 48 89 45 90                            mov %rax,-0x70(%rbp)
 0: @[(rbp<64> + -112<64>),8] := rax<64>;
 1: goto (0x0000cf95, 0) 


# -- 0x0000cf95 48 c7 45 98 00 00 00 00                movq $0x0,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := 0<64>;
 1: goto (0x0000cf9d, 0) 


# -- 0x0000cf9d 49 89 c5                               mov %rax,%r13
 0: %%0<64> := rax<64>;
 1: r13<64> := %%0<64>;
 2: goto (0x0000cfa0, 0) 


# -- 0x0000cfa0 41 be 00 00 00 00                      mov $0x0,%r14d
 0: r14<64> := 0<64>;
 1: goto (0x0000cfa6, 0) 


# -- 0x0000cfa6 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x0000cfab, 0) 


# -- 0x0000cfab 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000cfaf, 0) 


# -- 0x0000cfaf 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000cfb2, 0) 


# -- 0x0000cfb2 bb 10 00 00 00                         mov $0x10,%ebx
 0: rbx<64> := 16<64>;
 1: goto (0x0000cfb7, 0) 


# -- 0x0000cfb7 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000cfbc, 0) 


# -- 0x0000cfbc 48 f7 f3                               div %rbx
 0: %%0<128> := (extu rbx<64> 128);
 1: %%1<128> := (rdx<64> :: rax<64>);
 2: if (0<64> = rbx<64>) goto 4 else goto 5
 3: goto (0x0000cfbf, 0) 
 4: @assert (0<1>); goto 3
 5: %%2<64> := (%%1<128> /u %%0<128>){0,63};
 6: %%3<64> := (%%1<128> %u %%0<128>){0,63};
 7: rax<64> := %%2<64>;
 8: rdx<64> := %%3<64>; goto 3


# -- 0x0000cfbf 48 6b c0 10                            imul $0x10,%rax,%rax
 0: %%0<128> := (16<128> * (exts rax<64> 128));
 1: %%1<1> := ((exts %%0<128>{0,63} 128) <> %%0<128>);
 2: %%2<64> := %%0<128>{0,63};
 3: cf<1> := %%1<1>;
 4: of<1> := %%1<1>;
 5: rax<64> := %%2<64>;
 6: goto (0x0000cfc3, 0) 


# -- 0x0000cfc3 48 29 c4                               sub %rax,%rsp
 0: %%0<64> := ! (rsp<64>);
 1: %%1<64> := (rsp<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rsp<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rsp<64> := %%1<64>;
17: goto (0x0000cfc6, 0) 


# -- 0x0000cfc6 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000cfc9, 0) 


# -- 0x0000cfc9 48 83 c0 00                            add $0x0,%rax
 0: %%0<64> := rax<64>;
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000cfcd, 0) 


# -- 0x0000cfcd 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x0000cfd1, 0) 


# -- 0x0000cfd1 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cfd5, 0) 


# -- 0x0000cfd5 48 8b 55 b8                            mov -0x48(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000cfd9, 0) 


# -- 0x0000cfd9 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000cfdc, 0) 


# -- 0x0000cfdc 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cfdf, 0) 


# -- 0x0000cfdf e8 3c 5d ff ff                         call 0x2d20
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cfe4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d20, 0) #call with return address @ (0x0000cfe4, 0)


# -- 0x0000cfe4 48 8b 5d d0                            mov -0x30(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000cfe8, 0) 


# -- 0x0000cfe8 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000cfec, 0) 


# -- 0x0000cfec 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cfef, 0) 


# -- 0x0000cfef e8 5c 5e ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000cff4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000cff4, 0)


# -- 0x0000cff4 48 8d 3c 03                            lea (%rbx,%rax,1),%rdi
 0: %%0<64> := (rbx<64> + rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000cff8, 0) 


# -- 0x0000cff8 48 8d 4d c0                            lea -0x40(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -64<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000cffc, 0) 


# -- 0x0000cffc 48 8b 55 a8                            mov -0x58(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -88<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d000, 0) 


# -- 0x0000d000 48 8b 45 b0                            mov -0x50(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -80<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d004, 0) 


# -- 0x0000d004 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000d007, 0) 


# -- 0x0000d007 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d00a, 0) 


# -- 0x0000d00a 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d00d, 0) 


# -- 0x0000d00d be 00 01 00 00                         mov $0x100,%esi
 0: rsi<64> := 256<64>;
 1: goto (0x0000d012, 0) 


# -- 0x0000d012 e8 a1 fd ff ff                         call 0xcdb8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d017;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cdb8, 0) #call with return address @ (0x0000d017, 0)


# -- 0x0000d017 48 8b 45 d0                            mov -0x30(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d01b, 0) 


# -- 0x0000d01b 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d01e, 0) 


# -- 0x0000d01e e8 7d 5c ff ff                         call 0x2ca0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d023;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ca0, 0) #call with return address @ (0x0000d023, 0)


# -- 0x0000d023 4c 89 e4                               mov %r12,%rsp
 0: %%0<64> := r12<64>;
 1: rsp<64> := %%0<64>;
 2: goto (0x0000d026, 0) 


# -- 0x0000d026 90                                     nop
 0: goto (0x0000d027, 0) 


# -- 0x0000d027 48 8b 45 d8                            mov -0x28(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d02b, 0) 


# -- 0x0000d02b 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x0000d034, 0) 


# -- 0x0000d034 74 05                                  je 0xd03b
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d03b, 0) 
 2: goto (0x0000d036, 0) 


# -- 0x0000d036 e8 35 5e ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d03b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000d03b, 0)


# -- 0x0000d03b 48 8d 65 e0                            lea -0x20(%rbp),%rsp
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rsp<64> := %%0<64>;
 2: goto (0x0000d03f, 0) 


# -- 0x0000d03f 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000d040, 0) 


# -- 0x0000d040 41 5c                                  pop %r12
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r12<64> := %%1<64>;
 4: goto (0x0000d042, 0) 


# -- 0x0000d042 41 5d                                  pop %r13
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r13<64> := %%1<64>;
 4: goto (0x0000d044, 0) 


# -- 0x0000d044 41 5e                                  pop %r14
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r14<64> := %%1<64>;
 4: goto (0x0000d046, 0) 


# -- 0x0000d046 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d047, 0) 


# -- 0x0000d047 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d048 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d049, 0) 


# -- 0x0000d049 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d04c, 0) 


# -- 0x0000d04c 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d050, 0) 


# -- 0x0000d050 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000d054, 0) 


# -- 0x0000d054 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d058, 0) 


# -- 0x0000d058 48 83 c0 01                            add $0x1,%rax
 0: %%0<64> := (rax<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000d05c, 0) 


# -- 0x0000d05c 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000d060, 0) 


# -- 0x0000d060 eb 41                                  jmp 0xd0a3
 0: goto (0x0000d0a3, 0) 


# -- 0x0000d062 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d066, 0) 


# -- 0x0000d066 c6 00 00                               movb $0x0,(%rax)
 0: @[rax<64>,1] := 0<8>;
 1: goto (0x0000d069, 0) 


# -- 0x0000d069 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d06d, 0) 


# -- 0x0000d06d be c0 01 00 00                         mov $0x1c0,%esi
 0: rsi<64> := 448<64>;
 1: goto (0x0000d072, 0) 


# -- 0x0000d072 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d075, 0) 


# -- 0x0000d075 e8 b6 5c ff ff                         call 0x2d30
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d07a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d30, 0) #call with return address @ (0x0000d07a, 0)


# -- 0x0000d07a 83 f8 ff                               cmp $0xffffffff,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000d07d, 0) 


# -- 0x0000d07d 75 18                                  jne 0xd097
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d097, 0) 
 2: goto (0x0000d07f, 0) 


# -- 0x0000d07f e8 fc 5b ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d084;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d084, 0)


# -- 0x0000d084 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d086, 0) 


# -- 0x0000d086 83 f8 11                               cmp $0x11,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 17<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d089, 0) 


# -- 0x0000d089 74 0c                                  je 0xd097
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d097, 0) 
 2: goto (0x0000d08b, 0) 


# -- 0x0000d08b 48 8d 3d f8 25 00 00                   lea 0x25f8(%rip),%rdi
 0: rdi<64> := 0x000000000000f68a;
 1: goto (0x0000d092, 0) 


# -- 0x0000d092 e8 a1 05 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d097;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000d097, 0)


# -- 0x0000d097 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d09b, 0) 


# -- 0x0000d09b c6 00 2f                               movb $0x2f,(%rax)
 0: @[rax<64>,1] := 47<8>;
 1: goto (0x0000d09e, 0) 


# -- 0x0000d09e 48 83 45 f8 01                         addq $0x1,-0x8(%rbp)
 0: %%0<64> := (rbp<64> + -8<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 1<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000d0a3, 0) 


# -- 0x0000d0a3 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d0a7, 0) 


# -- 0x0000d0a7 be 2f 00 00 00                         mov $0x2f,%esi
 0: rsi<64> := 47<64>;
 1: goto (0x0000d0ac, 0) 


# -- 0x0000d0ac 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d0af, 0) 


# -- 0x0000d0af e8 0c 5e ff ff                         call 0x2ec0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d0b4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ec0, 0) #call with return address @ (0x0000d0b4, 0)


# -- 0x0000d0b4 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000d0b8, 0) 


# -- 0x0000d0b8 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d0bd, 0) 


# -- 0x0000d0bd 75 a3                                  jne 0xd062
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d062, 0) 
 2: goto (0x0000d0bf, 0) 


# -- 0x0000d0bf 90                                     nop
 0: goto (0x0000d0c0, 0) 


# -- 0x0000d0c0 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d0c1, 0) 


# -- 0x0000d0c1 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d0c2 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0c3, 0) 


# -- 0x0000d0c3 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d0c6, 0) 


# -- 0x0000d0c6 41 56                                  push %r14
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r14<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0c8, 0) 


# -- 0x0000d0c8 41 55                                  push %r13
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r13<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0ca, 0) 


# -- 0x0000d0ca 41 54                                  push %r12
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r12<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0cc, 0) 


# -- 0x0000d0cc 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d0cd, 0) 


# -- 0x0000d0cd 48 83 c4 80                            add $0xffffffffffffff80,%rsp
 0: %%0<64> := (rsp<64> + -128<64>);
 1: %%1<64> := ! (%%0<64>);
 2: %%2<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 & (%%1<64> | (rsp<64> & %%0<64>))));
 3: %%3<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%0<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & %%1<64>)));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: rsp<64> := %%0<64>;
15: goto (0x0000d0d1, 0) 


# -- 0x0000d0d1 48 89 7d 98                            mov %rdi,-0x68(%rbp)
 0: @[(rbp<64> + -104<64>),8] := rdi<64>;
 1: goto (0x0000d0d5, 0) 


# -- 0x0000d0d5 89 75 94                               mov %esi,-0x6c(%rbp)
 0: @[(rbp<64> + -108<64>),4] := rsi<64>{0,31};
 1: goto (0x0000d0d8, 0) 


# -- 0x0000d0d8 48 89 55 88                            mov %rdx,-0x78(%rbp)
 0: @[(rbp<64> + -120<64>),8] := rdx<64>;
 1: goto (0x0000d0dc, 0) 


# -- 0x0000d0dc 48 89 4d 80                            mov %rcx,-0x80(%rbp)
 0: @[(rbp<64> + -128<64>),8] := rcx<64>;
 1: goto (0x0000d0e0, 0) 


# -- 0x0000d0e0 4c 89 85 78 ff ff ff                   mov %r8,-0x88(%rbp)
 0: @[(rbp<64> + -136<64>),8] := r8<64>;
 1: goto (0x0000d0e7, 0) 


# -- 0x0000d0e7 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d0f0, 0) 


# -- 0x0000d0f0 48 89 45 d8                            mov %rax,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rax<64>;
 1: goto (0x0000d0f4, 0) 


# -- 0x0000d0f4 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000d0f6, 0) 


# -- 0x0000d0f6 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d0f9, 0) 


# -- 0x0000d0f9 49 89 c4                               mov %rax,%r12
 0: %%0<64> := rax<64>;
 1: r12<64> := %%0<64>;
 2: goto (0x0000d0fc, 0) 


# -- 0x0000d0fc 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d100, 0) 


# -- 0x0000d100 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d103, 0) 


# -- 0x0000d103 e8 48 5d ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d108;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d108, 0)


# -- 0x0000d108 48 05 00 01 00 00                      add $0x100,%rax
 0: %%0<64> := (rax<64> + 256<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000d10e, 0) 


# -- 0x0000d10e 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d111, 0) 


# -- 0x0000d111 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000d115, 0) 


# -- 0x0000d115 48 89 55 b0                            mov %rdx,-0x50(%rbp)
 0: @[(rbp<64> + -80<64>),8] := rdx<64>;
 1: goto (0x0000d119, 0) 


# -- 0x0000d119 48 89 85 60 ff ff ff                   mov %rax,-0xa0(%rbp)
 0: @[(rbp<64> + -160<64>),8] := rax<64>;
 1: goto (0x0000d120, 0) 


# -- 0x0000d120 48 c7 85 68 ff ff ff 00 00 00 00       movq $0x0,-0x98(%rbp)
 0: @[(rbp<64> + -152<64>),8] := 0<64>;
 1: goto (0x0000d12b, 0) 


# -- 0x0000d12b 49 89 c5                               mov %rax,%r13
 0: %%0<64> := rax<64>;
 1: r13<64> := %%0<64>;
 2: goto (0x0000d12e, 0) 


# -- 0x0000d12e 41 be 00 00 00 00                      mov $0x0,%r14d
 0: r14<64> := 0<64>;
 1: goto (0x0000d134, 0) 


# -- 0x0000d134 ba 10 00 00 00                         mov $0x10,%edx
 0: rdx<64> := 16<64>;
 1: goto (0x0000d139, 0) 


# -- 0x0000d139 48 83 ea 01                            sub $0x1,%rdx
 0: %%0<64> := (rdx<64> - 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rdx<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rdx<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rdx<64> := %%0<64>;
14: goto (0x0000d13d, 0) 


# -- 0x0000d13d 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000d140, 0) 


# -- 0x0000d140 bb 10 00 00 00                         mov $0x10,%ebx
 0: rbx<64> := 16<64>;
 1: goto (0x0000d145, 0) 


# -- 0x0000d145 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000d14a, 0) 


# -- 0x0000d14a 48 f7 f3                               div %rbx
 0: %%0<128> := (extu rbx<64> 128);
 1: %%1<128> := (rdx<64> :: rax<64>);
 2: if (0<64> = rbx<64>) goto 4 else goto 5
 3: goto (0x0000d14d, 0) 
 4: @assert (0<1>); goto 3
 5: %%2<64> := (%%1<128> /u %%0<128>){0,63};
 6: %%3<64> := (%%1<128> %u %%0<128>){0,63};
 7: rax<64> := %%2<64>;
 8: rdx<64> := %%3<64>; goto 3


# -- 0x0000d14d 48 6b c0 10                            imul $0x10,%rax,%rax
 0: %%0<128> := (16<128> * (exts rax<64> 128));
 1: %%1<1> := ((exts %%0<128>{0,63} 128) <> %%0<128>);
 2: %%2<64> := %%0<128>{0,63};
 3: cf<1> := %%1<1>;
 4: of<1> := %%1<1>;
 5: rax<64> := %%2<64>;
 6: goto (0x0000d151, 0) 


# -- 0x0000d151 48 29 c4                               sub %rax,%rsp
 0: %%0<64> := ! (rsp<64>);
 1: %%1<64> := (rsp<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rsp<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rsp<64> := %%1<64>;
17: goto (0x0000d154, 0) 


# -- 0x0000d154 48 89 e0                               mov %rsp,%rax
 0: %%0<64> := rsp<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d157, 0) 


# -- 0x0000d157 48 83 c0 00                            add $0x0,%rax
 0: %%0<64> := rax<64>;
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rax<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rax<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rax<64> := %%0<64>;
14: goto (0x0000d15b, 0) 


# -- 0x0000d15b 48 89 45 b8                            mov %rax,-0x48(%rbp)
 0: @[(rbp<64> + -72<64>),8] := rax<64>;
 1: goto (0x0000d15f, 0) 


# -- 0x0000d15f 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d163, 0) 


# -- 0x0000d163 48 8b 55 98                            mov -0x68(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d167, 0) 


# -- 0x0000d167 48 89 d6                               mov %rdx,%rsi
 0: %%0<64> := rdx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d16a, 0) 


# -- 0x0000d16a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d16d, 0) 


# -- 0x0000d16d e8 ae 5b ff ff                         call 0x2d20
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d172;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d20, 0) #call with return address @ (0x0000d172, 0)


# -- 0x0000d172 48 8b 5d b8                            mov -0x48(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d176, 0) 


# -- 0x0000d176 48 8b 45 98                            mov -0x68(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -104<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d17a, 0) 


# -- 0x0000d17a 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d17d, 0) 


# -- 0x0000d17d e8 ce 5c ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d182;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d182, 0)


# -- 0x0000d182 48 8d 3c 03                            lea (%rbx,%rax,1),%rdi
 0: %%0<64> := (rbx<64> + rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d186, 0) 


# -- 0x0000d186 48 8d 4d a8                            lea -0x58(%rbp),%rcx
 0: %%0<64> := (rbp<64> + -88<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d18a, 0) 


# -- 0x0000d18a 48 8b 55 80                            mov -0x80(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -128<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d18e, 0) 


# -- 0x0000d18e 48 8b 45 88                            mov -0x78(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -120<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d192, 0) 


# -- 0x0000d192 49 89 c8                               mov %rcx,%r8
 0: %%0<64> := rcx<64>;
 1: r8<64> := %%0<64>;
 2: goto (0x0000d195, 0) 


# -- 0x0000d195 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d198, 0) 


# -- 0x0000d198 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d19b, 0) 


# -- 0x0000d19b be 00 01 00 00                         mov $0x100,%esi
 0: rsi<64> := 256<64>;
 1: goto (0x0000d1a0, 0) 


# -- 0x0000d1a0 e8 13 fc ff ff                         call 0xcdb8
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d1a5;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000cdb8, 0) #call with return address @ (0x0000d1a5, 0)


# -- 0x0000d1a5 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d1ac, 0) 


# -- 0x0000d1ac 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d1af, 0) 


# -- 0x0000d1af e8 7c 63 ff ff                         call 0x3530
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d1b4;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003530, 0) #call with return address @ (0x0000d1b4, 0)


# -- 0x0000d1b4 8b 4d 94                               mov -0x6c(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -108<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d1b7, 0) 


# -- 0x0000d1b7 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d1bb, 0) 


# -- 0x0000d1bb ba 80 01 00 00                         mov $0x180,%edx
 0: rdx<64> := 384<64>;
 1: goto (0x0000d1c0, 0) 


# -- 0x0000d1c0 89 ce                                  mov %ecx,%esi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d1c2, 0) 


# -- 0x0000d1c2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d1c5, 0) 


# -- 0x0000d1c5 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d1ca, 0) 


# -- 0x0000d1ca e8 41 61 ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d1cf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x0000d1cf, 0)


# -- 0x0000d1cf 89 45 a0                               mov %eax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),4] := rax<64>{0,31};
 1: goto (0x0000d1d2, 0) 


# -- 0x0000d1d2 83 7d a0 00                            cmpl $0x0,-0x60(%rbp)
 0: %%0<32> := @[(rbp<64> + -96<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d1d6, 0) 


# -- 0x0000d1d6 0f 89 1a 01 00 00                      jns 0xd2f6
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000d2f6, 0) 
 2: goto (0x0000d1dc, 0) 


# -- 0x0000d1dc e8 9f 5a ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d1e1;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d1e1, 0)


# -- 0x0000d1e1 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d1e3, 0) 


# -- 0x0000d1e3 83 f8 02                               cmp $0x2,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 2<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d1e6, 0) 


# -- 0x0000d1e6 0f 85 0a 01 00 00                      jne 0xd2f6
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d2f6, 0) 
 2: goto (0x0000d1ec, 0) 


# -- 0x0000d1ec 8b 45 94                               mov -0x6c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -108<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d1ef, 0) 


# -- 0x0000d1ef 83 e0 02                               and $0x2,%eax
 0: %%0<32> := (2<32> & rax<64>{0,31});
 1: %%1<1> := ! (rax<64>{1});
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<64> := (extu %%0<32> 64);
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := 0<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%3<64>;
11: goto (0x0000d1f2, 0) 


# -- 0x0000d1f2 85 c0                                  test %eax,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 2: %%2<1> := (0<32> = %%0<32>);
 3: %%3<1> := (0<32> <> (0x80000000 & %%0<32>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: goto (0x0000d1f4, 0) 


# -- 0x0000d1f4 74 3c                                  je 0xd232
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d232, 0) 
 2: goto (0x0000d1f6, 0) 


# -- 0x0000d1f6 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d1fa, 0) 


# -- 0x0000d1fa 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d1fd, 0) 


# -- 0x0000d1fd e8 46 fe ff ff                         call 0xd048
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d202;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d048, 0) #call with return address @ (0x0000d202, 0)


# -- 0x0000d202 48 8b 45 b8                            mov -0x48(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -72<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d206, 0) 


# -- 0x0000d206 ba 80 01 00 00                         mov $0x180,%edx
 0: rdx<64> := 384<64>;
 1: goto (0x0000d20b, 0) 


# -- 0x0000d20b be 42 00 00 00                         mov $0x42,%esi
 0: rsi<64> := 66<64>;
 1: goto (0x0000d210, 0) 


# -- 0x0000d210 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d213, 0) 


# -- 0x0000d213 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d218, 0) 


# -- 0x0000d218 e8 f3 60 ff ff                         call 0x3310
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d21d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003310, 0) #call with return address @ (0x0000d21d, 0)


# -- 0x0000d21d 89 45 a0                               mov %eax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),4] := rax<64>{0,31};
 1: goto (0x0000d220, 0) 


# -- 0x0000d220 83 7d a0 00                            cmpl $0x0,-0x60(%rbp)
 0: %%0<32> := @[(rbp<64> + -96<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d224, 0) 


# -- 0x0000d224 79 73                                  jns 0xd299
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000d299, 0) 
 2: goto (0x0000d226, 0) 


# -- 0x0000d226 48 8d 3d 73 24 00 00                   lea 0x2473(%rip),%rdi
 0: rdi<64> := 0x000000000000f6a0;
 1: goto (0x0000d22d, 0) 


# -- 0x0000d22d e8 06 04 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d232;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000d232, 0)


# -- 0x0000d232 48 8d 3d 88 24 00 00                   lea 0x2488(%rip),%rdi
 0: rdi<64> := 0x000000000000f6c1;
 1: goto (0x0000d239, 0) 


# -- 0x0000d239 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d23e, 0) 


# -- 0x0000d23e e8 ad 5e ff ff                         call 0x30f0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d243;
 2: rsp<64> := %%0<64>;
 3: goto (0x000030f0, 0) #call with return address @ (0x0000d243, 0)


# -- 0x0000d243 48 89 45 c0                            mov %rax,-0x40(%rbp)
 0: @[(rbp<64> + -64<64>),8] := rax<64>;
 1: goto (0x0000d247, 0) 


# -- 0x0000d247 bf 4d 00 00 00                         mov $0x4d,%edi
 0: rdi<64> := 77<64>;
 1: goto (0x0000d24c, 0) 


# -- 0x0000d24c e8 ff 5e ff ff                         call 0x3150
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d251;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003150, 0) #call with return address @ (0x0000d251, 0)


# -- 0x0000d251 89 45 a4                               mov %eax,-0x5c(%rbp)
 0: @[(rbp<64> + -92<64>),4] := rax<64>{0,31};
 1: goto (0x0000d254, 0) 


# -- 0x0000d254 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d258, 0) 


# -- 0x0000d258 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d25b, 0) 


# -- 0x0000d25b e8 c0 5d ff ff                         call 0x3020
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d260;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003020, 0) #call with return address @ (0x0000d260, 0)


# -- 0x0000d260 89 45 a0                               mov %eax,-0x60(%rbp)
 0: @[(rbp<64> + -96<64>),4] := rax<64>{0,31};
 1: goto (0x0000d263, 0) 


# -- 0x0000d263 8b 45 a4                               mov -0x5c(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -92<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d266, 0) 


# -- 0x0000d266 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d268, 0) 


# -- 0x0000d268 e8 e3 5e ff ff                         call 0x3150
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d26d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003150, 0) #call with return address @ (0x0000d26d, 0)


# -- 0x0000d26d 83 7d a0 00                            cmpl $0x0,-0x60(%rbp)
 0: %%0<32> := @[(rbp<64> + -96<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d271, 0) 


# -- 0x0000d271 7e 1a                                  jle 0xd28d
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000d28d, 0) 
 2: goto (0x0000d273, 0) 


# -- 0x0000d273 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d277, 0) 


# -- 0x0000d277 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d27a, 0) 


# -- 0x0000d27a e8 21 5a ff ff                         call 0x2ca0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d27f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002ca0, 0) #call with return address @ (0x0000d27f, 0)


# -- 0x0000d27f 48 8b 45 c0                            mov -0x40(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -64<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d283, 0) 


# -- 0x0000d283 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d286, 0) 


# -- 0x0000d286 e8 75 5a ff ff                         call 0x2d00
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d28b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d00, 0) #call with return address @ (0x0000d28b, 0)


# -- 0x0000d28b eb 0c                                  jmp 0xd299
 0: goto (0x0000d299, 0) 


# -- 0x0000d28d 48 8d 3d 0c 24 00 00                   lea 0x240c(%rip),%rdi
 0: rdi<64> := 0x000000000000f6a0;
 1: goto (0x0000d294, 0) 


# -- 0x0000d294 e8 9f 03 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d299;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000d299, 0)


# -- 0x0000d299 48 8d 05 2e 24 00 00                   lea 0x242e(%rip),%rax
 0: rax<64> := 0x000000000000f6ce;
 1: goto (0x0000d2a0, 0) 


# -- 0x0000d2a0 48 89 45 c8                            mov %rax,-0x38(%rbp)
 0: @[(rbp<64> + -56<64>),8] := rax<64>;
 1: goto (0x0000d2a4, 0) 


# -- 0x0000d2a4 8b 45 a0                               mov -0x60(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d2a7, 0) 


# -- 0x0000d2a7 ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000d2ac, 0) 


# -- 0x0000d2ac be ff 0f 00 00                         mov $0xfff,%esi
 0: rsi<64> := 4095<64>;
 1: goto (0x0000d2b1, 0) 


# -- 0x0000d2b1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d2b3, 0) 


# -- 0x0000d2b3 e8 b8 61 ff ff                         call 0x3470
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d2b8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003470, 0) #call with return address @ (0x0000d2b8, 0)


# -- 0x0000d2b8 48 85 c0                               test %rax,%rax
 0: %%0<1> :=
     !
     ((((rax<64>{0} ^ rax<64>{4}) ^ (rax<64>{2} ^ rax<64>{6})) ^
       ((rax<64>{1} ^ rax<64>{5}) ^ (rax<64>{3} ^ rax<64>{7}))));
 1: %%1<1> := (0<64> = rax<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rax<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000d2bb, 0) 


# -- 0x0000d2bb 79 0c                                  jns 0xd2c9
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000d2c9, 0) 
 2: goto (0x0000d2bd, 0) 


# -- 0x0000d2bd 48 8d 3d 0c 24 00 00                   lea 0x240c(%rip),%rdi
 0: rdi<64> := 0x000000000000f6d0;
 1: goto (0x0000d2c4, 0) 


# -- 0x0000d2c4 e8 6f 03 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d2c9;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000d2c9, 0)


# -- 0x0000d2c9 48 8b 4d c8                            mov -0x38(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -56<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d2cd, 0) 


# -- 0x0000d2cd 8b 45 a0                               mov -0x60(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d2d0, 0) 


# -- 0x0000d2d0 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000d2d5, 0) 


# -- 0x0000d2d5 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d2d8, 0) 


# -- 0x0000d2d8 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d2da, 0) 


# -- 0x0000d2da e8 d1 5a ff ff                         call 0x2db0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d2df;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002db0, 0) #call with return address @ (0x0000d2df, 0)


# -- 0x0000d2df 48 89 45 d0                            mov %rax,-0x30(%rbp)
 0: @[(rbp<64> + -48<64>),8] := rax<64>;
 1: goto (0x0000d2e3, 0) 


# -- 0x0000d2e3 48 83 7d d0 00                         cmpq $0x0,-0x30(%rbp)
 0: %%0<64> := @[(rbp<64> + -48<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d2e8, 0) 


# -- 0x0000d2e8 7f 0c                                  jg 0xd2f6
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000d2f6, 0) 
 2: goto (0x0000d2ea, 0) 


# -- 0x0000d2ea 48 8d 3d ff 23 00 00                   lea 0x23ff(%rip),%rdi
 0: rdi<64> := 0x000000000000f6f0;
 1: goto (0x0000d2f1, 0) 


# -- 0x0000d2f1 e8 42 03 00 00                         call 0xd638
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d2f6;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d638, 0) #call with return address @ (0x0000d2f6, 0)


# -- 0x0000d2f6 48 8b 85 78 ff ff ff                   mov -0x88(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -136<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d2fd, 0) 


# -- 0x0000d2fd 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d300, 0) 


# -- 0x0000d300 e8 fb 5e ff ff                         call 0x3200
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d305;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003200, 0) #call with return address @ (0x0000d305, 0)


# -- 0x0000d305 8b 45 a0                               mov -0x60(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -96<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d308, 0) 


# -- 0x0000d308 4c 89 e4                               mov %r12,%rsp
 0: %%0<64> := r12<64>;
 1: rsp<64> := %%0<64>;
 2: goto (0x0000d30b, 0) 


# -- 0x0000d30b 48 8b 5d d8                            mov -0x28(%rbp),%rbx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d30f, 0) 


# -- 0x0000d30f 64 48 33 1c 25 28 00 00 00             xor %fs:0x28,%rbx
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rbx<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rbx<64>{0} ^ %%0<64>{0}) ^ (rbx<64>{4} ^ %%0<64>{4})) ^
        ((rbx<64>{2} ^ %%0<64>{2}) ^ (rbx<64>{6} ^ %%0<64>{6}))) ^
       (((rbx<64>{1} ^ %%0<64>{1}) ^ (rbx<64>{5} ^ %%0<64>{5})) ^
        ((rbx<64>{3} ^ %%0<64>{3}) ^ (rbx<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rbx<64> := %%1<64>;
12: goto (0x0000d318, 0) 


# -- 0x0000d318 74 05                                  je 0xd31f
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d31f, 0) 
 2: goto (0x0000d31a, 0) 


# -- 0x0000d31a e8 51 5b ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d31f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000d31f, 0)


# -- 0x0000d31f 48 8d 65 e0                            lea -0x20(%rbp),%rsp
 0: %%0<64> := (rbp<64> + -32<64>);
 1: rsp<64> := %%0<64>;
 2: goto (0x0000d323, 0) 


# -- 0x0000d323 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000d324, 0) 


# -- 0x0000d324 41 5c                                  pop %r12
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r12<64> := %%1<64>;
 4: goto (0x0000d326, 0) 


# -- 0x0000d326 41 5d                                  pop %r13
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r13<64> := %%1<64>;
 4: goto (0x0000d328, 0) 


# -- 0x0000d328 41 5e                                  pop %r14
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r14<64> := %%1<64>;
 4: goto (0x0000d32a, 0) 


# -- 0x0000d32a 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d32b, 0) 


# -- 0x0000d32b c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d32c 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d32d, 0) 


# -- 0x0000d32d 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d330, 0) 


# -- 0x0000d330 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d334, 0) 


# -- 0x0000d334 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x0000d337, 0) 


# -- 0x0000d337 89 75 e8                               mov %esi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),4] := rsi<64>{0,31};
 1: goto (0x0000d33a, 0) 


# -- 0x0000d33a 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d33d, 0) 


# -- 0x0000d33d ba 00 00 00 00                         mov $0x0,%edx
 0: rdx<64> := 0<64>;
 1: goto (0x0000d342, 0) 


# -- 0x0000d342 be 03 00 00 00                         mov $0x3,%esi
 0: rsi<64> := 3<64>;
 1: goto (0x0000d347, 0) 


# -- 0x0000d347 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d349, 0) 


# -- 0x0000d349 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d34e, 0) 


# -- 0x0000d34e e8 3d 5a ff ff                         call 0x2d90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d353;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d90, 0) #call with return address @ (0x0000d353, 0)


# -- 0x0000d353 89 45 fc                               mov %eax,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rax<64>{0,31};
 1: goto (0x0000d356, 0) 


# -- 0x0000d356 83 7d fc ff                            cmpl $0xffffffff,-0x4(%rbp)
 0: %%0<32> := @[(rbp<64> + -4<64>),4];
 1: %%1<32> := ! (%%0<32>);
 2: %%2<32> := (%%0<32> - -1<32>);
 3: %%3<1> :=
     (0x80000000 = (0x80000000 & (%%2<32> | (%%1<32> & ! (%%2<32>)))));
 4: %%4<1> :=
     !
     ((((%%2<32>{0} ^ %%2<32>{4}) ^ (%%2<32>{2} ^ %%2<32>{6})) ^
       ((%%2<32>{1} ^ %%2<32>{5}) ^ (%%2<32>{3} ^ %%2<32>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<32> = %%2<32>);
 7: %%7<1> := (0<32> <> (0x80000000 & %%2<32>));
 8: %%8<1> := (0x80000000 = (0x80000000 & (%%1<32> & %%2<32>)));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: goto (0x0000d35a, 0) 


# -- 0x0000d35a 75 07                                  jne 0xd363
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d363, 0) 
 2: goto (0x0000d35c, 0) 


# -- 0x0000d35c b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000d361, 0) 


# -- 0x0000d361 eb 2a                                  jmp 0xd38d
 0: goto (0x0000d38d, 0) 


# -- 0x0000d363 83 7d e8 00                            cmpl $0x0,-0x18(%rbp)
 0: %%0<32> := @[(rbp<64> + -24<64>),4];
 1: %%1<32> := %%0<32>;
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d367, 0) 


# -- 0x0000d367 74 08                                  je 0xd371
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d371, 0) 
 2: goto (0x0000d369, 0) 


# -- 0x0000d369 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d36c, 0) 


# -- 0x0000d36c 80 cc 08                               or $0x8,%ah
 0: %%0<8> := rax<64>{8,15};
 1: %%1<8> := (8<8> | %%0<8>);
 2: %%2<1> :=
     !
     ((((rax<64>{8} ^ rax<64>{12}) ^ (rax<64>{10} ^ rax<64>{14})) ^
       ((rax<64>{9} ^ rax<64>{13}) ^ ! (rax<64>{15}))));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%0<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{8, 15} := %%1<8>;
12: goto (0x0000d36f, 0) 


# -- 0x0000d36f eb 06                                  jmp 0xd377
 0: goto (0x0000d377, 0) 


# -- 0x0000d371 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d374, 0) 


# -- 0x0000d374 80 e4 f7                               and $0xf7,%ah
 0: %%0<8> := rax<64>{8,15};
 1: %%1<8> := (-9<8> & %%0<8>);
 2: %%2<1> :=
     !
     ((((rax<64>{8} ^ rax<64>{12}) ^ (rax<64>{10} ^ rax<64>{14})) ^
       ((rax<64>{9} ^ rax<64>{13}) ^ rax<64>{15})));
 3: %%3<1> := (0<8> = %%1<8>);
 4: %%4<1> := (0<8> <> (-128<8> & %%0<8>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64>{8, 15} := %%1<8>;
12: goto (0x0000d377, 0) 


# -- 0x0000d377 8b 4d ec                               mov -0x14(%rbp),%ecx
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d37a, 0) 


# -- 0x0000d37a 89 c2                                  mov %eax,%edx
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d37c, 0) 


# -- 0x0000d37c be 04 00 00 00                         mov $0x4,%esi
 0: rsi<64> := 4<64>;
 1: goto (0x0000d381, 0) 


# -- 0x0000d381 89 cf                                  mov %ecx,%edi
 0: %%0<64> := (0x00000000ffffffff & rcx<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d383, 0) 


# -- 0x0000d383 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d388, 0) 


# -- 0x0000d388 e8 03 5a ff ff                         call 0x2d90
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d38d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d90, 0) #call with return address @ (0x0000d38d, 0)


# -- 0x0000d38d c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d38e, 0) 


# -- 0x0000d38e c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d38f 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d390, 0) 


# -- 0x0000d390 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d393, 0) 


# -- 0x0000d393 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d397, 0) 


# -- 0x0000d397 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x0000d39a, 0) 


# -- 0x0000d39a 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d3a3, 0) 


# -- 0x0000d3a3 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000d3a7, 0) 


# -- 0x0000d3a7 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000d3a9, 0) 


# -- 0x0000d3a9 c7 45 f4 01 00 00 00                   movl $0x1,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := 1<32>;
 1: goto (0x0000d3b0, 0) 


# -- 0x0000d3b0 c7 45 f4 01 00 00 00                   movl $0x1,-0xc(%rbp)
 0: @[(rbp<64> + -12<64>),4] := 1<32>;
 1: goto (0x0000d3b7, 0) 


# -- 0x0000d3b7 48 8d 55 f4                            lea -0xc(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -12<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d3bb, 0) 


# -- 0x0000d3bb 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d3be, 0) 


# -- 0x0000d3be 41 b8 04 00 00 00                      mov $0x4,%r8d
 0: r8<64> := 4<64>;
 1: goto (0x0000d3c4, 0) 


# -- 0x0000d3c4 48 89 d1                               mov %rdx,%rcx
 0: %%0<64> := rdx<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d3c7, 0) 


# -- 0x0000d3c7 ba 01 00 00 00                         mov $0x1,%edx
 0: rdx<64> := 1<64>;
 1: goto (0x0000d3cc, 0) 


# -- 0x0000d3cc be 06 00 00 00                         mov $0x6,%esi
 0: rsi<64> := 6<64>;
 1: goto (0x0000d3d1, 0) 


# -- 0x0000d3d1 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d3d3, 0) 


# -- 0x0000d3d3 e8 a8 59 ff ff                         call 0x2d80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d3d8;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002d80, 0) #call with return address @ (0x0000d3d8, 0)


# -- 0x0000d3d8 90                                     nop
 0: goto (0x0000d3d9, 0) 


# -- 0x0000d3d9 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d3dd, 0) 


# -- 0x0000d3dd 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x0000d3e6, 0) 


# -- 0x0000d3e6 74 05                                  je 0xd3ed
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d3ed, 0) 
 2: goto (0x0000d3e8, 0) 


# -- 0x0000d3e8 e8 83 5a ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d3ed;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000d3ed, 0)


# -- 0x0000d3ed c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d3ee, 0) 


# -- 0x0000d3ee c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d3ef 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3f0, 0) 


# -- 0x0000d3f0 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d3f3, 0) 


# -- 0x0000d3f3 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3f4, 0) 


# -- 0x0000d3f4 48 81 ec c8 00 00 00                   sub $0xc8,%rsp
 0: %%0<64> := (rsp<64> - 200<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d3fb, 0) 


# -- 0x0000d3fb 48 89 bd 38 ff ff ff                   mov %rdi,-0xc8(%rbp)
 0: @[(rbp<64> + -200<64>),8] := rdi<64>;
 1: goto (0x0000d402, 0) 


# -- 0x0000d402 64 48 8b 04 25 28 00 00 00             mov %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d40b, 0) 


# -- 0x0000d40b 48 89 45 e8                            mov %rax,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rax<64>;
 1: goto (0x0000d40f, 0) 


# -- 0x0000d40f 31 c0                                  xor %eax,%eax
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rax<64> := 0<64>;
 7: goto (0x0000d411, 0) 


# -- 0x0000d411 48 8b 8d 38 ff ff ff                   mov -0xc8(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d418, 0) 


# -- 0x0000d418 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d41f, 0) 


# -- 0x0000d41f ba 96 00 00 00                         mov $0x96,%edx
 0: rdx<64> := 150<64>;
 1: goto (0x0000d424, 0) 


# -- 0x0000d424 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d427, 0) 


# -- 0x0000d427 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d42a, 0) 


# -- 0x0000d42a e8 91 58 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d42f;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000d42f, 0)


# -- 0x0000d42f 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d436, 0) 


# -- 0x0000d436 48 8d 35 f3 22 00 00                   lea 0x22f3(%rip),%rsi
 0: rsi<64> := 0x000000000000f730;
 1: goto (0x0000d43d, 0) 


# -- 0x0000d43d 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d440, 0) 


# -- 0x0000d440 e8 db 60 ff ff                         call 0x3520
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d445;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003520, 0) #call with return address @ (0x0000d445, 0)


# -- 0x0000d445 48 89 85 48 ff ff ff                   mov %rax,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),8] := rax<64>;
 1: goto (0x0000d44c, 0) 


# -- 0x0000d44c 48 83 bd 48 ff ff ff 00                cmpq $0x0,-0xb8(%rbp)
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d454, 0) 


# -- 0x0000d454 0f 84 b8 00 00 00                      je 0xd512
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d512, 0) 
 2: goto (0x0000d45a, 0) 


# -- 0x0000d45a 48 8b 95 48 ff ff ff                   mov -0xb8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d461, 0) 


# -- 0x0000d461 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d468, 0) 


# -- 0x0000d468 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000d46b, 0) 


# -- 0x0000d46b 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d46e, 0) 


# -- 0x0000d46e ba 96 00 00 00                         mov $0x96,%edx
 0: rdx<64> := 150<64>;
 1: goto (0x0000d473, 0) 


# -- 0x0000d473 48 89 d3                               mov %rdx,%rbx
 0: %%0<64> := rdx<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d476, 0) 


# -- 0x0000d476 48 29 c3                               sub %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rbx<64> := %%1<64>;
17: goto (0x0000d479, 0) 


# -- 0x0000d479 e8 02 58 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d47e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d47e, 0)


# -- 0x0000d47e 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d480, 0) 


# -- 0x0000d480 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d482, 0) 


# -- 0x0000d482 e8 49 60 ff ff                         call 0x34d0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d487;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034d0, 0) #call with return address @ (0x0000d487, 0)


# -- 0x0000d487 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d48a, 0) 


# -- 0x0000d48a 48 8b 95 48 ff ff ff                   mov -0xb8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d491, 0) 


# -- 0x0000d491 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d498, 0) 


# -- 0x0000d498 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000d49b, 0) 


# -- 0x0000d49b 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d49e, 0) 


# -- 0x0000d49e 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d4a1, 0) 


# -- 0x0000d4a1 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d4a8, 0) 


# -- 0x0000d4a8 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000d4ab, 0) 


# -- 0x0000d4ab 48 89 da                               mov %rbx,%rdx
 0: %%0<64> := rbx<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d4ae, 0) 


# -- 0x0000d4ae 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d4b1, 0) 


# -- 0x0000d4b1 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d4b4, 0) 


# -- 0x0000d4b4 e8 07 58 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d4b9;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000d4b9, 0)


# -- 0x0000d4b9 48 83 85 48 ff ff ff 02                addq $0x2,-0xb8(%rbp)
 0: %%0<64> := (rbp<64> + -184<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 2<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000d4c1, 0) 


# -- 0x0000d4c1 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d4c8, 0) 


# -- 0x0000d4c8 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d4cb, 0) 


# -- 0x0000d4cb e8 80 59 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d4d0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d4d0, 0)


# -- 0x0000d4d0 ba 96 00 00 00                         mov $0x96,%edx
 0: rdx<64> := 150<64>;
 1: goto (0x0000d4d5, 0) 


# -- 0x0000d4d5 48 89 d3                               mov %rdx,%rbx
 0: %%0<64> := rdx<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d4d8, 0) 


# -- 0x0000d4d8 48 29 c3                               sub %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rbx<64> := %%1<64>;
17: goto (0x0000d4db, 0) 


# -- 0x0000d4db 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d4e2, 0) 


# -- 0x0000d4e2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d4e5, 0) 


# -- 0x0000d4e5 e8 66 59 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d4ea;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d4ea, 0)


# -- 0x0000d4ea 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d4ed, 0) 


# -- 0x0000d4ed 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d4f4, 0) 


# -- 0x0000d4f4 48 8d 0c 10                            lea (%rax,%rdx,1),%rcx
 0: %%0<64> := (rax<64> + rdx<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d4f8, 0) 


# -- 0x0000d4f8 48 8b 85 48 ff ff ff                   mov -0xb8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d4ff, 0) 


# -- 0x0000d4ff 48 89 da                               mov %rbx,%rdx
 0: %%0<64> := rbx<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d502, 0) 


# -- 0x0000d502 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d505, 0) 


# -- 0x0000d505 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d508, 0) 


# -- 0x0000d508 e8 b3 57 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d50d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000d50d, 0)


# -- 0x0000d50d e9 de 00 00 00                         jmp 0xd5f0
 0: goto (0x0000d5f0, 0) 


# -- 0x0000d512 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d519, 0) 


# -- 0x0000d519 48 8d 35 13 22 00 00                   lea 0x2213(%rip),%rsi
 0: rsi<64> := 0x000000000000f733;
 1: goto (0x0000d520, 0) 


# -- 0x0000d520 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d523, 0) 


# -- 0x0000d523 e8 f8 5f ff ff                         call 0x3520
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d528;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003520, 0) #call with return address @ (0x0000d528, 0)


# -- 0x0000d528 48 89 85 48 ff ff ff                   mov %rax,-0xb8(%rbp)
 0: @[(rbp<64> + -184<64>),8] := rax<64>;
 1: goto (0x0000d52f, 0) 


# -- 0x0000d52f 48 83 bd 48 ff ff ff 00                cmpq $0x0,-0xb8(%rbp)
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d537, 0) 


# -- 0x0000d537 0f 84 b3 00 00 00                      je 0xd5f0
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d5f0, 0) 
 2: goto (0x0000d53d, 0) 


# -- 0x0000d53d 48 8b 95 48 ff ff ff                   mov -0xb8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d544, 0) 


# -- 0x0000d544 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d54b, 0) 


# -- 0x0000d54b 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000d54e, 0) 


# -- 0x0000d54e 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d551, 0) 


# -- 0x0000d551 ba 96 00 00 00                         mov $0x96,%edx
 0: rdx<64> := 150<64>;
 1: goto (0x0000d556, 0) 


# -- 0x0000d556 48 89 d3                               mov %rdx,%rbx
 0: %%0<64> := rdx<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d559, 0) 


# -- 0x0000d559 48 29 c3                               sub %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rbx<64> := %%1<64>;
17: goto (0x0000d55c, 0) 


# -- 0x0000d55c e8 5f 58 ff ff                         call 0x2dc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d561;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002dc0, 0) #call with return address @ (0x0000d561, 0)


# -- 0x0000d561 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d563, 0) 


# -- 0x0000d563 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d565, 0) 


# -- 0x0000d565 e8 a6 5e ff ff                         call 0x3410
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d56a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003410, 0) #call with return address @ (0x0000d56a, 0)


# -- 0x0000d56a 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d56d, 0) 


# -- 0x0000d56d 48 8b 95 48 ff ff ff                   mov -0xb8(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d574, 0) 


# -- 0x0000d574 48 8b 85 38 ff ff ff                   mov -0xc8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -200<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d57b, 0) 


# -- 0x0000d57b 48 29 c2                               sub %rax,%rdx
 0: %%0<64> := ! (rdx<64>);
 1: %%1<64> := (rdx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rdx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rdx<64> := %%1<64>;
17: goto (0x0000d57e, 0) 


# -- 0x0000d57e 48 89 d0                               mov %rdx,%rax
 0: %%0<64> := rdx<64>;
 1: rax<64> := %%0<64>;
 2: goto (0x0000d581, 0) 


# -- 0x0000d581 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d584, 0) 


# -- 0x0000d584 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d58b, 0) 


# -- 0x0000d58b 48 01 d0                               add %rdx,%rax
 0: %%0<64> := (rax<64> & rdx<64>);
 1: %%1<64> := (rax<64> + rdx<64>);
 2: %%2<64> := ! (%%1<64>);
 3: %%3<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rax<64> | rdx<64>) & %%2<64>) | (%%0<64> & %%1<64>))));
 4: %%4<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%1<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 8: %%8<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%0<64> & %%2<64>) | ((! (rax<64>) & ! (rdx<64>)) & %%1<64>))));
 9: cf<1> := %%3<1>;
10: pf<1> := %%4<1>;
11: af<1> := %%5<1>;
12: zf<1> := %%6<1>;
13: sf<1> := %%7<1>;
14: of<1> := %%8<1>;
15: rax<64> := %%1<64>;
16: goto (0x0000d58e, 0) 


# -- 0x0000d58e 48 89 da                               mov %rbx,%rdx
 0: %%0<64> := rbx<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d591, 0) 


# -- 0x0000d591 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d594, 0) 


# -- 0x0000d594 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d597, 0) 


# -- 0x0000d597 e8 24 57 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d59c;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000d59c, 0)


# -- 0x0000d59c 48 83 85 48 ff ff ff 02                addq $0x2,-0xb8(%rbp)
 0: %%0<64> := (rbp<64> + -184<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> + 2<64>);
 3: %%3<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%1<64> & ! (%%2<64>))));
 4: %%4<1> :=
     !
     ((((%%2<64>{0} ^ %%2<64>{4}) ^ (%%2<64>{2} ^ %%2<64>{6})) ^
       ((%%2<64>{1} ^ %%2<64>{5}) ^ (%%2<64>{3} ^ %%2<64>{7}))));
 5: %%5<1> := \undef;
 6: %%6<1> := (0<64> = %%2<64>);
 7: %%7<1> := (0<64> <> (0x8000000000000000 & %%2<64>));
 8: %%8<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%1<64>) & %%2<64>)));
 9: @[%%0<64>,8] := %%2<64>;
10: cf<1> := %%3<1>;
11: pf<1> := %%4<1>;
12: af<1> := %%5<1>;
13: zf<1> := %%6<1>;
14: sf<1> := %%7<1>;
15: of<1> := %%8<1>;
16: goto (0x0000d5a4, 0) 


# -- 0x0000d5a4 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5ab, 0) 


# -- 0x0000d5ab 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d5ae, 0) 


# -- 0x0000d5ae e8 9d 58 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d5b3;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d5b3, 0)


# -- 0x0000d5b3 ba 96 00 00 00                         mov $0x96,%edx
 0: rdx<64> := 150<64>;
 1: goto (0x0000d5b8, 0) 


# -- 0x0000d5b8 48 89 d3                               mov %rdx,%rbx
 0: %%0<64> := rdx<64>;
 1: rbx<64> := %%0<64>;
 2: goto (0x0000d5bb, 0) 


# -- 0x0000d5bb 48 29 c3                               sub %rax,%rbx
 0: %%0<64> := ! (rbx<64>);
 1: %%1<64> := (rbx<64> - rax<64>);
 2: %%2<64> := (%%0<64> & rax<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rax<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbx<64> & ! (rax<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rbx<64> := %%1<64>;
17: goto (0x0000d5be, 0) 


# -- 0x0000d5be 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5c5, 0) 


# -- 0x0000d5c5 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d5c8, 0) 


# -- 0x0000d5c8 e8 83 58 ff ff                         call 0x2e50
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d5cd;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e50, 0) #call with return address @ (0x0000d5cd, 0)


# -- 0x0000d5cd 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d5d0, 0) 


# -- 0x0000d5d0 48 8d 85 50 ff ff ff                   lea -0xb0(%rbp),%rax
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5d7, 0) 


# -- 0x0000d5d7 48 8d 0c 10                            lea (%rax,%rdx,1),%rcx
 0: %%0<64> := (rax<64> + rdx<64>);
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d5db, 0) 


# -- 0x0000d5db 48 8b 85 48 ff ff ff                   mov -0xb8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -184<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5e2, 0) 


# -- 0x0000d5e2 48 89 da                               mov %rbx,%rdx
 0: %%0<64> := rbx<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d5e5, 0) 


# -- 0x0000d5e5 48 89 c6                               mov %rax,%rsi
 0: %%0<64> := rax<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d5e8, 0) 


# -- 0x0000d5e8 48 89 cf                               mov %rcx,%rdi
 0: %%0<64> := rcx<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d5eb, 0) 


# -- 0x0000d5eb e8 d0 56 ff ff                         call 0x2cc0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d5f0;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002cc0, 0) #call with return address @ (0x0000d5f0, 0)


# -- 0x0000d5f0 c6 45 e5 00                            movb $0x0,-0x1b(%rbp)
 0: @[(rbp<64> + -27<64>),1] := 0<8>;
 1: goto (0x0000d5f4, 0) 


# -- 0x0000d5f4 48 8b 05 fd 39 20 00                   mov 0x2039fd(%rip),%rax
 0: %%0<64> := @[0x0000000000210ff8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5fb, 0) 


# -- 0x0000d5fb 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d5fe, 0) 


# -- 0x0000d5fe 48 8d 95 50 ff ff ff                   lea -0xb0(%rbp),%rdx
 0: %%0<64> := (rbp<64> + -176<64>);
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d605, 0) 


# -- 0x0000d605 48 8d 35 2a 21 00 00                   lea 0x212a(%rip),%rsi
 0: rsi<64> := 0x000000000000f736;
 1: goto (0x0000d60c, 0) 


# -- 0x0000d60c 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d60f, 0) 


# -- 0x0000d60f b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d614, 0) 


# -- 0x0000d614 e8 f7 5a ff ff                         call 0x3110
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d619;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003110, 0) #call with return address @ (0x0000d619, 0)


# -- 0x0000d619 90                                     nop
 0: goto (0x0000d61a, 0) 


# -- 0x0000d61a 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d61e, 0) 


# -- 0x0000d61e 64 48 33 04 25 28 00 00 00             xor %fs:0x28,%rax
 0: %%0<64> := @[(fs_base<64> + 40<64>),8];
 1: %%1<64> := (rax<64> ^ %%0<64>);
 2: %%2<1> :=
     !
     (((((rax<64>{0} ^ %%0<64>{0}) ^ (rax<64>{4} ^ %%0<64>{4})) ^
        ((rax<64>{2} ^ %%0<64>{2}) ^ (rax<64>{6} ^ %%0<64>{6}))) ^
       (((rax<64>{1} ^ %%0<64>{1}) ^ (rax<64>{5} ^ %%0<64>{5})) ^
        ((rax<64>{3} ^ %%0<64>{3}) ^ (rax<64>{7} ^ %%0<64>{7})))));
 3: %%3<1> := (0<64> = %%1<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 5: cf<1> := 0<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := 0<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := 0<1>;
11: rax<64> := %%1<64>;
12: goto (0x0000d627, 0) 


# -- 0x0000d627 74 05                                  je 0xd62e
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d62e, 0) 
 2: goto (0x0000d629, 0) 


# -- 0x0000d629 e8 42 58 ff ff                         call 0x2e70
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d62e;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002e70, 0) #call with return address @ (0x0000d62e, 0)


# -- 0x0000d62e 48 81 c4 c8 00 00 00                   add $0xc8,%rsp
 0: %%0<64> := (rsp<64> + 200<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d635, 0) 


# -- 0x0000d635 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000d636, 0) 


# -- 0x0000d636 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d637, 0) 


# -- 0x0000d637 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d638 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d639, 0) 


# -- 0x0000d639 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d63c, 0) 


# -- 0x0000d63c 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d640, 0) 


# -- 0x0000d640 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000d644, 0) 


# -- 0x0000d644 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d648, 0) 


# -- 0x0000d648 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d64b, 0) 


# -- 0x0000d64b e8 9f fd ff ff                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d650;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x0000d650, 0)


# -- 0x0000d650 48 8b 05 a1 39 20 00                   mov 0x2039a1(%rip),%rax
 0: %%0<64> := @[0x0000000000210ff8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d657, 0) 


# -- 0x0000d657 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d65a, 0) 


# -- 0x0000d65a 48 89 c1                               mov %rax,%rcx
 0: %%0<64> := rax<64>;
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d65d, 0) 


# -- 0x0000d65d ba 09 00 00 00                         mov $0x9,%edx
 0: rdx<64> := 9<64>;
 1: goto (0x0000d662, 0) 


# -- 0x0000d662 be 01 00 00 00                         mov $0x1,%esi
 0: rsi<64> := 1<64>;
 1: goto (0x0000d667, 0) 


# -- 0x0000d667 48 8d 3d d3 20 00 00                   lea 0x20d3(%rip),%rdi
 0: rdi<64> := 0x000000000000f741;
 1: goto (0x0000d66e, 0) 


# -- 0x0000d66e e8 ed 5d ff ff                         call 0x3460
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d673;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003460, 0) #call with return address @ (0x0000d673, 0)


# -- 0x0000d673 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000d678, 0) 


# -- 0x0000d678 e8 d3 5d ff ff                         call 0x3450
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d67d;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003450, 0) #call with return address @ (0x0000d67d, 0)


# -- 0x0000d67d 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d67e, 0) 


# -- 0x0000d67e 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d681, 0) 


# -- 0x0000d681 48 83 ec 10                            sub $0x10,%rsp
 0: %%0<64> := (rsp<64> - 16<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d685, 0) 


# -- 0x0000d685 48 89 7d f8                            mov %rdi,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rdi<64>;
 1: goto (0x0000d689, 0) 


# -- 0x0000d689 48 8b 05 30 39 20 00                   mov 0x203930(%rip),%rax
 0: %%0<64> := @[0x0000000000210fc0,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d690, 0) 


# -- 0x0000d690 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d693, 0) 


# -- 0x0000d693 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x0000d698, 0) 


# -- 0x0000d698 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x0000d69d, 0) 


# -- 0x0000d69d be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000d6a2, 0) 


# -- 0x0000d6a2 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d6a5, 0) 


# -- 0x0000d6a5 e8 36 5c ff ff                         call 0x32e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d6aa;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032e0, 0) #call with return address @ (0x0000d6aa, 0)


# -- 0x0000d6aa 48 8b 05 47 39 20 00                   mov 0x203947(%rip),%rax
 0: %%0<64> := @[0x0000000000210ff8,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6b1, 0) 


# -- 0x0000d6b1 48 8b 00                               mov (%rax),%rax
 0: %%0<64> := @[rax<64>,8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6b4, 0) 


# -- 0x0000d6b4 b9 00 00 00 00                         mov $0x0,%ecx
 0: rcx<64> := 0<64>;
 1: goto (0x0000d6b9, 0) 


# -- 0x0000d6b9 ba 02 00 00 00                         mov $0x2,%edx
 0: rdx<64> := 2<64>;
 1: goto (0x0000d6be, 0) 


# -- 0x0000d6be be 00 00 00 00                         mov $0x0,%esi
 0: rsi<64> := 0<64>;
 1: goto (0x0000d6c3, 0) 


# -- 0x0000d6c3 48 89 c7                               mov %rax,%rdi
 0: %%0<64> := rax<64>;
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d6c6, 0) 


# -- 0x0000d6c6 e8 15 5c ff ff                         call 0x32e0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d6cb;
 2: rsp<64> := %%0<64>;
 3: goto (0x000032e0, 0) #call with return address @ (0x0000d6cb, 0)


# -- 0x0000d6cb 90                                     nop
 0: goto (0x0000d6cc, 0) 


# -- 0x0000d6cc c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d6cd, 0) 


# -- 0x0000d6cd c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d6ce 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d6cf, 0) 


# -- 0x0000d6cf 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d6d2, 0) 


# -- 0x0000d6d2 48 83 ec 20                            sub $0x20,%rsp
 0: %%0<64> := (rsp<64> - 32<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d6d6, 0) 


# -- 0x0000d6d6 48 89 7d e8                            mov %rdi,-0x18(%rbp)
 0: @[(rbp<64> + -24<64>),8] := rdi<64>;
 1: goto (0x0000d6da, 0) 


# -- 0x0000d6da 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6de, 0) 


# -- 0x0000d6de 89 45 f8                               mov %eax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),4] := rax<64>{0,31};
 1: goto (0x0000d6e1, 0) 


# -- 0x0000d6e1 48 8b 45 e8                            mov -0x18(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -24<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6e5, 0) 


# -- 0x0000d6e5 48 c1 e8 20                            shr $0x20,%rax
 0: %%0<64> := (rax<64> >>u 32<64>);
 1: %%1<1> := rax<64>{31};
 2: %%2<1> :=
     !
     ((((rax<64>{32} ^ rax<64>{36}) ^ (rax<64>{34} ^ rax<64>{38})) ^
       ((rax<64>{33} ^ rax<64>{37}) ^ (rax<64>{35} ^ rax<64>{39}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000d6e9, 0) 


# -- 0x0000d6e9 89 45 fc                               mov %eax,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rax<64>{0,31};
 1: goto (0x0000d6ec, 0) 


# -- 0x0000d6ec 8b 45 f8                               mov -0x8(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6ef, 0) 


# -- 0x0000d6ef 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d6f1, 0) 


# -- 0x0000d6f1 e8 ba 5d ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d6f6;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000d6f6, 0)


# -- 0x0000d6f6 89 45 f8                               mov %eax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),4] := rax<64>{0,31};
 1: goto (0x0000d6f9, 0) 


# -- 0x0000d6f9 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d6fc, 0) 


# -- 0x0000d6fc 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d6fe, 0) 


# -- 0x0000d6fe e8 ad 5d ff ff                         call 0x34b0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d703;
 2: rsp<64> := %%0<64>;
 3: goto (0x000034b0, 0) #call with return address @ (0x0000d703, 0)


# -- 0x0000d703 89 45 fc                               mov %eax,-0x4(%rbp)
 0: @[(rbp<64> + -4<64>),4] := rax<64>{0,31};
 1: goto (0x0000d706, 0) 


# -- 0x0000d706 8b 45 f8                               mov -0x8(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -8<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d709, 0) 


# -- 0x0000d709 48 c1 e0 20                            shl $0x20,%rax
 0: %%0<64> := (rax<64> << 32<64>);
 1: %%1<1> := (0<64> <> (0x8000000000000000 & (rax<64> << 31<64>)));
 2: %%2<1> := \undef;
 3: %%3<1> := (0<64> = %%0<64>);
 4: %%4<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 5: cf<1> := %%1<1>;
 6: pf<1> := -1<1>;
 7: af<1> := %%2<1>;
 8: zf<1> := %%3<1>;
 9: sf<1> := %%4<1>;
10: of<1> := %%2<1>;
11: rax<64> := %%0<64>;
12: goto (0x0000d70d, 0) 


# -- 0x0000d70d 48 89 c2                               mov %rax,%rdx
 0: %%0<64> := rax<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d710, 0) 


# -- 0x0000d710 8b 45 fc                               mov -0x4(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -4<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d713, 0) 


# -- 0x0000d713 48 09 d0                               or %rdx,%rax
 0: %%0<64> := (rax<64> | rdx<64>);
 1: %%1<1> :=
     !
     (((((rax<64>{0} | rdx<64>{0}) ^ (rax<64>{4} | rdx<64>{4})) ^
        ((rax<64>{2} | rdx<64>{2}) ^ (rax<64>{6} | rdx<64>{6}))) ^
       (((rax<64>{1} | rdx<64>{1}) ^ (rax<64>{5} | rdx<64>{5})) ^
        ((rax<64>{3} | rdx<64>{3}) ^ (rax<64>{7} | rdx<64>{7})))));
 2: %%2<1> := (0<64> = %%0<64>);
 3: %%3<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 4: cf<1> := 0<1>;
 5: pf<1> := %%1<1>;
 6: af<1> := 0<1>;
 7: zf<1> := %%2<1>;
 8: sf<1> := %%3<1>;
 9: of<1> := 0<1>;
10: rax<64> := %%0<64>;
11: goto (0x0000d716, 0) 


# -- 0x0000d716 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d717, 0) 


# -- 0x0000d717 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d718 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d719, 0) 


# -- 0x0000d719 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d71c, 0) 


# -- 0x0000d71c 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d720, 0) 


# -- 0x0000d720 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x0000d723, 0) 


# -- 0x0000d723 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000d727, 0) 


# -- 0x0000d727 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x0000d72b, 0) 


# -- 0x0000d72b eb 6a                                  jmp 0xd797
 0: goto (0x0000d797, 0) 


# -- 0x0000d72d 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d731, 0) 


# -- 0x0000d731 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d735, 0) 


# -- 0x0000d735 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d738, 0) 


# -- 0x0000d738 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d73b, 0) 


# -- 0x0000d73b 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d73d, 0) 


# -- 0x0000d73d e8 ce 58 ff ff                         call 0x3010
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d742;
 2: rsp<64> := %%0<64>;
 3: goto (0x00003010, 0) #call with return address @ (0x0000d742, 0)


# -- 0x0000d742 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000d746, 0) 


# -- 0x0000d746 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d74b, 0) 


# -- 0x0000d74b 7e 12                                  jle 0xd75f
 0: if (zf<1> | (sf<1> ^ of<1>)) goto 1 else goto 2
 1: goto (0x0000d75f, 0) 
 2: goto (0x0000d74d, 0) 


# -- 0x0000d74d 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d751, 0) 


# -- 0x0000d751 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x0000d755, 0) 


# -- 0x0000d755 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d759, 0) 


# -- 0x0000d759 48 01 45 e0                            add %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000d75d, 0) 


# -- 0x0000d75d eb 38                                  jmp 0xd797
 0: goto (0x0000d797, 0) 


# -- 0x0000d75f 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d764, 0) 


# -- 0x0000d764 79 1f                                  jns 0xd785
 0: if ! (sf<1>) goto 1 else goto 2
 1: goto (0x0000d785, 0) 
 2: goto (0x0000d766, 0) 


# -- 0x0000d766 e8 15 55 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d76b;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d76b, 0)


# -- 0x0000d76b 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d76d, 0) 


# -- 0x0000d76d 83 f8 0b                               cmp $0xb,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 11<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d770, 0) 


# -- 0x0000d770 74 25                                  je 0xd797
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d797, 0) 
 2: goto (0x0000d772, 0) 


# -- 0x0000d772 48 8d 3d d2 1f 00 00                   lea 0x1fd2(%rip),%rdi
 0: rdi<64> := 0x000000000000f74b;
 1: goto (0x0000d779, 0) 


# -- 0x0000d779 e8 71 fc ff ff                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d77e;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x0000d77e, 0)


# -- 0x0000d77e b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000d783, 0) 


# -- 0x0000d783 eb 1e                                  jmp 0xd7a3
 0: goto (0x0000d7a3, 0) 


# -- 0x0000d785 e8 f6 54 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d78a;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d78a, 0)


# -- 0x0000d78a c7 00 68 00 00 00                      movl $0x68,(%rax)
 0: @[rax<64>,4] := 104<32>;
 1: goto (0x0000d790, 0) 


# -- 0x0000d790 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000d795, 0) 


# -- 0x0000d795 eb 0c                                  jmp 0xd7a3
 0: goto (0x0000d7a3, 0) 


# -- 0x0000d797 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d79c, 0) 


# -- 0x0000d79c 75 8f                                  jne 0xd72d
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d72d, 0) 
 2: goto (0x0000d79e, 0) 


# -- 0x0000d79e b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d7a3, 0) 


# -- 0x0000d7a3 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d7a4, 0) 


# -- 0x0000d7a4 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d7a5 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d7a6, 0) 


# -- 0x0000d7a6 48 89 e5                               mov %rsp,%rbp
 0: %%0<64> := rsp<64>;
 1: rbp<64> := %%0<64>;
 2: goto (0x0000d7a9, 0) 


# -- 0x0000d7a9 48 83 ec 30                            sub $0x30,%rsp
 0: %%0<64> := (rsp<64> - 48<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d7ad, 0) 


# -- 0x0000d7ad 89 7d ec                               mov %edi,-0x14(%rbp)
 0: @[(rbp<64> + -20<64>),4] := rdi<64>{0,31};
 1: goto (0x0000d7b0, 0) 


# -- 0x0000d7b0 48 89 75 e0                            mov %rsi,-0x20(%rbp)
 0: @[(rbp<64> + -32<64>),8] := rsi<64>;
 1: goto (0x0000d7b4, 0) 


# -- 0x0000d7b4 48 89 55 d8                            mov %rdx,-0x28(%rbp)
 0: @[(rbp<64> + -40<64>),8] := rdx<64>;
 1: goto (0x0000d7b8, 0) 


# -- 0x0000d7b8 eb 53                                  jmp 0xd80d
 0: goto (0x0000d80d, 0) 


# -- 0x0000d7ba 48 8b 55 d8                            mov -0x28(%rbp),%rdx
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d7be, 0) 


# -- 0x0000d7be 48 8b 4d e0                            mov -0x20(%rbp),%rcx
 0: %%0<64> := @[(rbp<64> + -32<64>),8];
 1: rcx<64> := %%0<64>;
 2: goto (0x0000d7c2, 0) 


# -- 0x0000d7c2 8b 45 ec                               mov -0x14(%rbp),%eax
 0: %%0<64> := (extu @[(rbp<64> + -20<64>),4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d7c5, 0) 


# -- 0x0000d7c5 48 89 ce                               mov %rcx,%rsi
 0: %%0<64> := rcx<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d7c8, 0) 


# -- 0x0000d7c8 89 c7                                  mov %eax,%edi
 0: %%0<64> := (0x00000000ffffffff & rax<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d7ca, 0) 


# -- 0x0000d7ca e8 e1 55 ff ff                         call 0x2db0
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d7cf;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002db0, 0) #call with return address @ (0x0000d7cf, 0)


# -- 0x0000d7cf 48 89 45 f8                            mov %rax,-0x8(%rbp)
 0: @[(rbp<64> + -8<64>),8] := rax<64>;
 1: goto (0x0000d7d3, 0) 


# -- 0x0000d7d3 48 83 7d f8 00                         cmpq $0x0,-0x8(%rbp)
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d7d8, 0) 


# -- 0x0000d7d8 7f 1f                                  jg 0xd7f9
 0: if ! ((zf<1> | (sf<1> ^ of<1>))) goto 1 else goto 2
 1: goto (0x0000d7f9, 0) 
 2: goto (0x0000d7da, 0) 


# -- 0x0000d7da e8 a1 54 ff ff                         call 0x2c80
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d7df;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c80, 0) #call with return address @ (0x0000d7df, 0)


# -- 0x0000d7df 8b 00                                  mov (%rax),%eax
 0: %%0<64> := (extu @[rax<64>,4] 64);
 1: rax<64> := %%0<64>;
 2: goto (0x0000d7e1, 0) 


# -- 0x0000d7e1 83 f8 0b                               cmp $0xb,%eax
 0: %%0<32> := rax<64>{0,31};
 1: %%1<32> := (%%0<32> - 11<32>);
 2: %%2<1> := (0x80000000 = (0x80000000 & (! (%%0<32>) & %%1<32>)));
 3: %%3<1> :=
     !
     ((((%%1<32>{0} ^ %%1<32>{4}) ^ (%%1<32>{2} ^ %%1<32>{6})) ^
       ((%%1<32>{1} ^ %%1<32>{5}) ^ (%%1<32>{3} ^ %%1<32>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<32> = %%1<32>);
 6: %%6<1> := (0<32> <> (0x80000000 & %%1<32>));
 7: %%7<1> := (0x80000000 = (0x80000000 & (%%0<32> & ! (%%1<32>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d7e4, 0) 


# -- 0x0000d7e4 74 16                                  je 0xd7fc
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d7fc, 0) 
 2: goto (0x0000d7e6, 0) 


# -- 0x0000d7e6 48 8d 3d 6e 1f 00 00                   lea 0x1f6e(%rip),%rdi
 0: rdi<64> := 0x000000000000f75b;
 1: goto (0x0000d7ed, 0) 


# -- 0x0000d7ed e8 fd fb ff ff                         call 0xd3ef
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d7f2;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d3ef, 0) #call with return address @ (0x0000d7f2, 0)


# -- 0x0000d7f2 b8 ff ff ff ff                         mov $0xffffffff,%eax
 0: rax<64> := 0x00000000ffffffff;
 1: goto (0x0000d7f7, 0) 


# -- 0x0000d7f7 eb 20                                  jmp 0xd819
 0: goto (0x0000d819, 0) 


# -- 0x0000d7f9 90                                     nop
 0: goto (0x0000d7fa, 0) 


# -- 0x0000d7fa eb 01                                  jmp 0xd7fd
 0: goto (0x0000d7fd, 0) 


# -- 0x0000d7fc 90                                     nop
 0: goto (0x0000d7fd, 0) 


# -- 0x0000d7fd 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d801, 0) 


# -- 0x0000d801 48 29 45 d8                            sub %rax,-0x28(%rbp)
 0: %%0<64> := (rbp<64> + -40<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := ! (%%1<64>);
 3: %%3<64> := (%%1<64> - rax<64>);
 4: %%4<64> := (%%2<64> & rax<64>);
 5: %%5<64> := ! (%%3<64>);
 6: %%6<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%2<64> | rax<64>) & %%3<64>) | (%%4<64> & %%5<64>))));
 7: %%7<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 8: %%8<1> := \undef;
 9: %%9<1> := (0<64> = %%3<64>);
10: %%10<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
11: %%11<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> & ! (rax<64>)) & %%5<64>) | (%%4<64> & %%3<64>))));
12: @[%%0<64>,8] := %%3<64>;
13: cf<1> := %%6<1>;
14: pf<1> := %%7<1>;
15: af<1> := %%8<1>;
16: zf<1> := %%9<1>;
17: sf<1> := %%10<1>;
18: of<1> := %%11<1>;
19: goto (0x0000d805, 0) 


# -- 0x0000d805 48 8b 45 f8                            mov -0x8(%rbp),%rax
 0: %%0<64> := @[(rbp<64> + -8<64>),8];
 1: rax<64> := %%0<64>;
 2: goto (0x0000d809, 0) 


# -- 0x0000d809 48 01 45 e0                            add %rax,-0x20(%rbp)
 0: %%0<64> := (rbp<64> + -32<64>);
 1: %%1<64> := @[%%0<64>,8];
 2: %%2<64> := (%%1<64> & rax<64>);
 3: %%3<64> := (%%1<64> + rax<64>);
 4: %%4<64> := ! (%%3<64>);
 5: %%5<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%1<64> | rax<64>) & %%4<64>) | (%%2<64> & %%3<64>))));
 6: %%6<1> :=
     !
     ((((%%3<64>{0} ^ %%3<64>{4}) ^ (%%3<64>{2} ^ %%3<64>{6})) ^
       ((%%3<64>{1} ^ %%3<64>{5}) ^ (%%3<64>{3} ^ %%3<64>{7}))));
 7: %%7<1> := \undef;
 8: %%8<1> := (0<64> = %%3<64>);
 9: %%9<1> := (0<64> <> (0x8000000000000000 & %%3<64>));
10: %%10<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       ((%%2<64> & %%4<64>) | ((! (%%1<64>) & ! (rax<64>)) & %%3<64>))));
11: @[%%0<64>,8] := %%3<64>;
12: cf<1> := %%5<1>;
13: pf<1> := %%6<1>;
14: af<1> := %%7<1>;
15: zf<1> := %%8<1>;
16: sf<1> := %%9<1>;
17: of<1> := %%10<1>;
18: goto (0x0000d80d, 0) 


# -- 0x0000d80d 48 83 7d d8 00                         cmpq $0x0,-0x28(%rbp)
 0: %%0<64> := @[(rbp<64> + -40<64>),8];
 1: %%1<64> := %%0<64>;
 2: %%2<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (%%0<64>) & %%1<64>)));
 3: %%3<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 4: %%4<1> := \undef;
 5: %%5<1> := (0<64> = %%1<64>);
 6: %%6<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 7: %%7<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (%%0<64> & ! (%%1<64>))));
 8: cf<1> := %%2<1>;
 9: pf<1> := %%3<1>;
10: af<1> := %%4<1>;
11: zf<1> := %%5<1>;
12: sf<1> := %%6<1>;
13: of<1> := %%7<1>;
14: goto (0x0000d812, 0) 


# -- 0x0000d812 75 a6                                  jne 0xd7ba
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d7ba, 0) 
 2: goto (0x0000d814, 0) 


# -- 0x0000d814 b8 00 00 00 00                         mov $0x0,%eax
 0: rax<64> := 0<64>;
 1: goto (0x0000d819, 0) 


# -- 0x0000d819 c9                                     leave
 0: %%0<64> := (rbp<64> + 8<64>);
 1: %%1<64> := @[rbp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d81a, 0) 


# -- 0x0000d81a c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d81b 0f 1f 44 00 00                         nop
 0: goto (0x0000d820, 0) 


# -- 0x0000d820 41 57                                  push %r15
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r15<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d822, 0) 


# -- 0x0000d822 41 56                                  push %r14
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r14<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d824, 0) 


# -- 0x0000d824 49 89 d7                               mov %rdx,%r15
 0: %%0<64> := rdx<64>;
 1: r15<64> := %%0<64>;
 2: goto (0x0000d827, 0) 


# -- 0x0000d827 41 55                                  push %r13
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r13<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d829, 0) 


# -- 0x0000d829 41 54                                  push %r12
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := r12<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d82b, 0) 


# -- 0x0000d82b 4c 8d 25 a6 30 20 00                   lea 0x2030a6(%rip),%r12
 0: r12<64> := 0x00000000002108d8;
 1: goto (0x0000d832, 0) 


# -- 0x0000d832 55                                     push %rbp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbp<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d833, 0) 


# -- 0x0000d833 48 8d 2d a6 30 20 00                   lea 0x2030a6(%rip),%rbp
 0: rbp<64> := 0x00000000002108e0;
 1: goto (0x0000d83a, 0) 


# -- 0x0000d83a 53                                     push %rbx
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := rbx<64>;
 2: rsp<64> := %%0<64>;
 3: goto (0x0000d83b, 0) 


# -- 0x0000d83b 41 89 fd                               mov %edi,%r13d
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: r13<64> := %%0<64>;
 2: goto (0x0000d83e, 0) 


# -- 0x0000d83e 49 89 f6                               mov %rsi,%r14
 0: %%0<64> := rsi<64>;
 1: r14<64> := %%0<64>;
 2: goto (0x0000d841, 0) 


# -- 0x0000d841 4c 29 e5                               sub %r12,%rbp
 0: %%0<64> := ! (rbp<64>);
 1: %%1<64> := (rbp<64> - r12<64>);
 2: %%2<64> := (%%0<64> & r12<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | r12<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbp<64> & ! (r12<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: rbp<64> := %%1<64>;
17: goto (0x0000d844, 0) 


# -- 0x0000d844 48 83 ec 08                            sub $0x8,%rsp
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d848, 0) 


# -- 0x0000d848 48 c1 fd 03                            sar $0x3,%rbp
 0: %%0<64> := (rbp<64> >>s 3<64>);
 1: %%1<1> := rbp<64>{2};
 2: %%2<1> :=
     !
     ((((rbp<64>{3} ^ rbp<64>{7}) ^ (rbp<64>{5} ^ rbp<64>{9})) ^
       ((rbp<64>{4} ^ rbp<64>{8}) ^ (rbp<64>{6} ^ rbp<64>{10}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: cf<1> := %%1<1>;
 6: pf<1> := %%2<1>;
 7: af<1> := %%3<1>;
 8: zf<1> := %%4<1>;
 9: sf<1> := 0<1>;
10: of<1> := %%3<1>;
11: rbp<64> := %%0<64>;
12: goto (0x0000d84c, 0) 


# -- 0x0000d84c e8 b7 53 ff ff                         call 0x2c08
 0: %%0<64> := (rsp<64> - 8<64>);
 1: @[%%0<64>,8] := 0x000000000000d851;
 2: rsp<64> := %%0<64>;
 3: goto (0x00002c08, 0) #call with return address @ (0x0000d851, 0)


# -- 0x0000d851 48 85 ed                               test %rbp,%rbp
 0: %%0<1> :=
     !
     ((((rbp<64>{0} ^ rbp<64>{4}) ^ (rbp<64>{2} ^ rbp<64>{6})) ^
       ((rbp<64>{1} ^ rbp<64>{5}) ^ (rbp<64>{3} ^ rbp<64>{7}))));
 1: %%1<1> := (0<64> = rbp<64>);
 2: %%2<1> := (0<64> <> (0x8000000000000000 & rbp<64>));
 3: cf<1> := 0<1>;
 4: pf<1> := %%0<1>;
 5: af<1> := 0<1>;
 6: zf<1> := %%1<1>;
 7: sf<1> := %%2<1>;
 8: of<1> := 0<1>;
 9: goto (0x0000d854, 0) 


# -- 0x0000d854 74 20                                  je 0xd876
 0: if zf<1> goto 1 else goto 2
 1: goto (0x0000d876, 0) 
 2: goto (0x0000d856, 0) 


# -- 0x0000d856 31 db                                  xor %ebx,%ebx
 0: cf<1> := 0<1>;
 1: pf<1> := -1<1>;
 2: af<1> := 0<1>;
 3: zf<1> := -1<1>;
 4: sf<1> := 0<1>;
 5: of<1> := 0<1>;
 6: rbx<64> := 0<64>;
 7: goto (0x0000d858, 0) 


# -- 0x0000d858 0f 1f 84 00 00 00 00 00                nop
 0: goto (0x0000d860, 0) 


# -- 0x0000d860 4c 89 fa                               mov %r15,%rdx
 0: %%0<64> := r15<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d863, 0) 


# -- 0x0000d863 4c 89 f6                               mov %r14,%rsi
 0: %%0<64> := r14<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d866, 0) 


# -- 0x0000d866 44 89 ef                               mov %r13d,%edi
 0: %%0<64> := (0x00000000ffffffff & r13<64>);
 1: rdi<64> := %%0<64>;
 2: goto (0x0000d869, 0) 


# -- 0x0000d869 41 ff 14 dc                            call *(%r12,%rbx,8)
 0: %%0<64> := (rsp<64> - 8<64>);
 1: %%1<64> := @[(r12<64> + (rbx<64> << 3<64>)),8];
 2: @[%%0<64>,8] := 0x000000000000d86d;
 3: rsp<64> := %%0<64>;
 4: goto %%1<64> #call with return address @ (0x0000d86d, 0)


# -- 0x0000d86d 48 83 c3 01                            add $0x1,%rbx
 0: %%0<64> := (rbx<64> + 1<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rbx<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rbx<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rbx<64> := %%0<64>;
14: goto (0x0000d871, 0) 


# -- 0x0000d871 48 39 dd                               cmp %rbx,%rbp
 0: %%0<64> := ! (rbp<64>);
 1: %%1<64> := (rbp<64> - rbx<64>);
 2: %%2<64> := (%%0<64> & rbx<64>);
 3: %%3<64> := ! (%%1<64>);
 4: %%4<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((%%0<64> | rbx<64>) & %%1<64>) | (%%2<64> & %%3<64>))));
 5: %%5<1> :=
     !
     ((((%%1<64>{0} ^ %%1<64>{4}) ^ (%%1<64>{2} ^ %%1<64>{6})) ^
       ((%%1<64>{1} ^ %%1<64>{5}) ^ (%%1<64>{3} ^ %%1<64>{7}))));
 6: %%6<1> := \undef;
 7: %%7<1> := (0<64> = %%1<64>);
 8: %%8<1> := (0<64> <> (0x8000000000000000 & %%1<64>));
 9: %%9<1> :=
     (0x8000000000000000 =
      (0x8000000000000000 &
       (((rbp<64> & ! (rbx<64>)) & %%3<64>) | (%%2<64> & %%1<64>))));
10: cf<1> := %%4<1>;
11: pf<1> := %%5<1>;
12: af<1> := %%6<1>;
13: zf<1> := %%7<1>;
14: sf<1> := %%8<1>;
15: of<1> := %%9<1>;
16: goto (0x0000d874, 0) 


# -- 0x0000d874 75 ea                                  jne 0xd860
 0: if ! (zf<1>) goto 1 else goto 2
 1: goto (0x0000d860, 0) 
 2: goto (0x0000d876, 0) 


# -- 0x0000d876 48 83 c4 08                            add $0x8,%rsp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (rsp<64> & ! (%%0<64>))));
 2: %%2<1> :=
     !
     ((((%%0<64>{0} ^ %%0<64>{4}) ^ (%%0<64>{2} ^ %%0<64>{6})) ^
       ((%%0<64>{1} ^ %%0<64>{5}) ^ (%%0<64>{3} ^ %%0<64>{7}))));
 3: %%3<1> := \undef;
 4: %%4<1> := (0<64> = %%0<64>);
 5: %%5<1> := (0<64> <> (0x8000000000000000 & %%0<64>));
 6: %%6<1> :=
     (0x8000000000000000 = (0x8000000000000000 & (! (rsp<64>) & %%0<64>)));
 7: cf<1> := %%1<1>;
 8: pf<1> := %%2<1>;
 9: af<1> := %%3<1>;
10: zf<1> := %%4<1>;
11: sf<1> := %%5<1>;
12: of<1> := %%6<1>;
13: rsp<64> := %%0<64>;
14: goto (0x0000d87a, 0) 


# -- 0x0000d87a 5b                                     pop %rbx
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rbx<64> := %%0<64>;
 3: rsp<64> := %%1<64>;
 4: goto (0x0000d87b, 0) 


# -- 0x0000d87b 5d                                     pop %rbp
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: rbp<64> := %%1<64>;
 4: goto (0x0000d87c, 0) 


# -- 0x0000d87c 41 5c                                  pop %r12
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r12<64> := %%1<64>;
 4: goto (0x0000d87e, 0) 


# -- 0x0000d87e 41 5d                                  pop %r13
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r13<64> := %%1<64>;
 4: goto (0x0000d880, 0) 


# -- 0x0000d880 41 5e                                  pop %r14
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r14<64> := %%1<64>;
 4: goto (0x0000d882, 0) 


# -- 0x0000d882 41 5f                                  pop %r15
 0: %%0<64> := (rsp<64> + 8<64>);
 1: %%1<64> := @[rsp<64>,8];
 2: rsp<64> := %%0<64>;
 3: r15<64> := %%1<64>;
 4: goto (0x0000d884, 0) 


# -- 0x0000d884 c3                                     ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d885 90                                     nop
 0: goto (0x0000d886, 0) 


# -- 0x0000d886 66 2e 0f 1f 84 00 00 00 00 00          nop
 0: goto (0x0000d890, 0) 


# -- 0x0000d890 f3 c3                                  ret
 0: %%0<64> := @[rsp<64>,8];
 1: %%1<64> := (rsp<64> + 8<64>);
 2: rsp<64> := %%1<64>;
 3: goto %%0<64> #return


# -- 0x0000d892 66 2e 0f 1f 84 00 00 00 00 00          nop
 0: goto (0x0000d89c, 0) 


# -- 0x0000d89c 0f 1f 40 00                            nop
 0: goto (0x0000d8a0, 0) 


# -- 0x0000d8a0 48 89 f2                               mov %rsi,%rdx
 0: %%0<64> := rsi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d8a3, 0) 


# -- 0x0000d8a3 48 89 fe                               mov %rdi,%rsi
 0: %%0<64> := rdi<64>;
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d8a6, 0) 


# -- 0x0000d8a6 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000d8ab, 0) 


# -- 0x0000d8ab e9 70 55 ff ff                         jmp 0x2e20
 0: goto (0x00002e20, 0) 


# -- 0x0000d8b0 48 89 f2                               mov %rsi,%rdx
 0: %%0<64> := rsi<64>;
 1: rdx<64> := %%0<64>;
 2: goto (0x0000d8b3, 0) 


# -- 0x0000d8b3 89 fe                                  mov %edi,%esi
 0: %%0<64> := (0x00000000ffffffff & rdi<64>);
 1: rsi<64> := %%0<64>;
 2: goto (0x0000d8b5, 0) 


# -- 0x0000d8b5 bf 01 00 00 00                         mov $0x1,%edi
 0: rdi<64> := 1<64>;
 1: goto (0x0000d8ba, 0) 


# -- 0x0000d8ba e9 f1 57 ff ff                         jmp 0x30b0
 0: goto (0x000030b0, 0) 


# -- 0x0000d8bf                                        unsupported
 0: OK


